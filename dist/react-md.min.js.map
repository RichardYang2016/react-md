{"version":3,"file":"react-md.min.js","sources":["../node_modules/fbjs/lib/emptyFunction.js","../node_modules/fbjs/lib/invariant.js","../node_modules/object-assign/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/prop-types/index.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/chain-function/index.js","../node_modules/warning/browser.js","../node_modules/react-transition-group/utils/ChildMapping.js","../node_modules/react-transition-group/TransitionGroup.js","../node_modules/dom-helpers/class/hasClass.js","../node_modules/dom-helpers/class/addClass.js","../node_modules/dom-helpers/class/removeClass.js","../node_modules/dom-helpers/util/inDOM.js","../node_modules/dom-helpers/util/requestAnimationFrame.js","../node_modules/dom-helpers/transition/properties.js","../node_modules/react-transition-group/utils/PropTypes.js","../node_modules/react-transition-group/CSSTransitionGroupChild.js","../node_modules/react-transition-group/CSSTransitionGroup.js","../node_modules/classnames/index.js","../src/js/utils/getField.js","../src/js/utils/omit.js","../src/js/utils/Positioning/getTextWidth.js","../src/js/constants/keyCodes.js","../src/js/Helpers/HorizontalAnchors.js","../src/js/Helpers/VerticalAnchors.js","../src/js/Helpers/anchorShape.js","../src/js/Helpers/fixedToShape.js","../src/js/Helpers/Positions.js","../src/js/utils/themeColors.js","../src/js/utils/getCollapserStyles.js","../src/js/utils/isFormPartRole.js","../src/js/utils/EventUtils/handleKeyboardAccessibility.js","../src/js/utils/closest.js","../src/js/Helpers/positionShape.js","../node_modules/react-prop-types/lib/deprecated.js","../src/js/Helpers/AccessibleFakeButton.js","../src/js/utils/StringUtils/getDisplayName.js","../src/js/utils/Positioning/getPagePosition.js","../src/js/utils/Positioning/calcPageOffset.js","../src/js/utils/EventUtils/isValidClick.js","../src/js/utils/EventUtils/touches.js","../src/js/utils/EventUtils/captureNextEvent.js","../src/js/utils/NumberUtils/calculateHypotenuse.js","../src/js/constants/CSSTransitionGroupTick.js","../src/js/Inks/Ink.js","../src/js/Inks/InkContainer.js","../src/js/Inks/inkContextTypes.js","../src/js/Inks/injectInk.js","../src/js/Helpers/AccessibleFakeInkedButton.js","../node_modules/react-motion/lib/mapToZero.js","../node_modules/react-motion/lib/stripStyle.js","../node_modules/react-motion/lib/stepper.js","../node_modules/raf/index.js","../node_modules/performance-now/lib/performance-now.js","../node_modules/raf/node_modules/performance-now/lib/performance-now.js","../node_modules/react-motion/lib/shouldStopAnimation.js","../node_modules/react-motion/lib/Motion.js","../node_modules/react-motion/lib/StaggeredMotion.js","../node_modules/react-motion/lib/mergeDiff.js","../node_modules/react-motion/lib/TransitionMotion.js","../node_modules/react-motion/lib/presets.js","../node_modules/react-motion/lib/spring.js","../node_modules/react-motion/lib/reorderKeys.js","../node_modules/react-motion/lib/react-motion.js","../src/js/Helpers/Collapse.js","../src/js/FontIcons/FontIcon.js","../src/js/FontIcons/getDeprecatedIcon.js","../src/js/Lists/TileAddon.js","../src/js/Lists/ListItemText.js","../src/js/Subheaders/Subheader.js","../src/js/Lists/List.js","../node_modules/react-prop-types/lib/isRequiredForA11y.js","../src/js/utils/EventUtils/handleWindowClickListeners.js","../src/js/utils/Positioning/getSelectedTextPosition.js","../src/js/utils/getSelectedText.js","../src/js/utils/Positioning/getScroll.js","../src/js/utils/Positioning/getScreenSize.js","../src/js/utils/Positioning/viewport.js","../src/js/utils/Positioning/isOutOfBounds.js","../node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","../src/js/Helpers/ResizeObserver.js","../src/js/Helpers/Layover.js","../src/js/Menus/Menu.js","../src/js/Lists/ListItem.js","../src/js/utils/isValued.js","../src/js/utils/StringUtils/addSuffix.js","../src/js/TextFields/FloatingLabel.js","../src/js/TextFields/Message.js","../src/js/TextFields/TextFieldMessage.js","../src/js/TextFields/PasswordButton.js","../src/js/TextFields/TextArea.js","../src/js/TextFields/InputField.js","../src/js/Dividers/Divider.js","../src/js/TextFields/TextFieldDivider.js","../src/js/TextFields/TextField.js","../src/js/Autocompletes/Autocomplete.js","../src/js/utils/fuzzyFilter.js","../src/js/utils/caseInsensitiveFilter.js","../src/js/utils/findIgnoreCase.js","../src/js/Avatars/Avatar.js","../src/js/Badges/Badge.js","../src/js/Helpers/Portal.js","../src/js/utils/NumberUtils/isBetween.js","../src/js/Papers/Paper.js","../src/js/BottomNavigations/BottomNav.js","../src/js/BottomNavigations/BottomNavigation.js","../src/js/Buttons/getBtnStyles.js","../src/js/Helpers/IconSeparator.js","../src/js/Tooltips/Tooltip.js","../src/js/Tooltips/TooltipContainer.js","../src/js/Tooltips/injectTooltip.js","../src/js/Buttons/Button.js","../src/js/Cards/contextTypes.js","../src/js/Cards/Card.js","../src/js/Cards/CardExpander.js","../src/js/Cards/CardActions.js","../src/js/Cards/CardTitleBlock.js","../src/js/Cards/CardTitle.js","../src/js/Cards/CardText.js","../src/js/Chips/Chip.js","../src/js/DataTables/contextTypes.js","../src/js/DataTables/DataTable.js","../src/js/DataTables/headerContextTypes.js","../src/js/DataTables/TableHeader.js","../src/js/DataTables/TableBody.js","../src/js/DataTables/rowContextTypes.js","../src/js/SelectionControls/SwitchThumb.js","../src/js/SelectionControls/SwitchTrack.js","../src/js/SelectionControls/SelectionControl.js","../src/js/utils/StringUtils/capitalizeFirst.js","../src/js/DataTables/findTable.js","../src/js/DataTables/TableCheckbox.js","../src/js/DataTables/TableRow.js","../src/js/DataTables/TableColumn.js","../src/js/SelectFields/SelectFieldInput.js","../src/js/SelectFields/SelectFieldToggle.js","../src/js/SelectFields/SelectField.js","../src/js/DataTables/TableFooter.js","../src/js/DataTables/TablePagination.js","../src/js/Helpers/FocusContainer.js","../src/js/utils/EventUtils/isValidFocusKeypress.js","../src/js/Dialogs/DialogTitle.js","../src/js/Dialogs/DialogFooter.js","../src/js/Dialogs/Dialog.js","../src/js/DataTables/EditDialog.js","../src/js/DataTables/findFixedTo.js","../src/js/DataTables/EditDialogColumn.js","../src/js/DataTables/withTableFixes.js","../src/js/DataTables/SelectFieldColumn.js","../src/js/utils/mapToListParts.js","../src/js/Menus/DropdownMenu.js","../src/js/Menus/MenuButton.js","../src/js/DataTables/MenuButtonColumn.js","../src/js/DataTables/DropdownMenuColumn.js","../src/js/DataTables/TableCardHeader.js","../src/js/utils/toggleScroll.js","../src/js/Dialogs/DialogContainer.js","../src/js/Drawers/Overlay.js","../src/js/Drawers/DrawerTypes.js","../src/js/Drawers/isType.js","../src/js/Drawers/Drawer.js","../src/js/constants/media.js","../src/js/ExpansionPanels/PanelContent.js","../src/js/ExpansionPanels/ExpansionPanel.js","../src/js/ExpansionPanels/ExpansionList.js","../src/js/FileInputs/FileInput.js","../src/js/FileInputs/FileUpload.js","../src/js/utils/bem.js","../src/js/Grids/Grid.js","../src/js/Grids/Cell.js","../src/js/Grids/GridList.js","../src/js/Lists/ListItemControl.js","../src/js/Media/Media.js","../src/js/Media/MediaOverlay.js","../src/js/Toolbars/ToolbarTitle.js","../src/js/Toolbars/Toolbar.js","../src/js/NavigationDrawers/JumpToContentLink.js","../src/js/NavigationDrawers/CloseButton.js","../src/js/NavigationDrawers/MiniListItem.js","../src/js/NavigationDrawers/NavigationDrawer.js","../src/js/utils/dates/isValidDate.js","../src/js/utils/dates/getLastDay.js","../src/js/utils/dates/addMonth.js","../src/js/utils/dates/getDaysInMonth.js","../src/js/utils/dates/addDate.js","../src/js/utils/dates/addDay.js","../src/js/utils/dates/addYear.js","../src/js/utils/dates/isSameMonth.js","../src/js/utils/dates/isSameYear.js","../src/js/utils/dates/isSameDay.js","../src/js/utils/DateUtils/DateTimeFormat.js","../src/js/Pickers/PickerControl.js","../src/js/Pickers/DatePickerHeader.js","../src/js/utils/dates/stripTime.js","../src/js/utils/dates/toDayOfWeek.js","../src/js/Pickers/CalendarDate.js","../src/js/Pickers/CalendarMonth.js","../src/js/utils/dates/isMonthBefore.js","../src/js/Pickers/CalendarHeader.js","../src/js/Pickers/DatePickerCalendar.js","../src/js/Pickers/Year.js","../src/js/Pickers/YearPicker.js","../src/js/Pickers/DatePicker.js","../src/js/Pickers/DatePickerContainer.js","../src/js/utils/DateUtils/formatTime.js","../src/js/utils/NumberUtils/calcTimeFromPoint.js","../src/js/Pickers/ClockTime.js","../src/js/Pickers/ClockHand.js","../src/js/Pickers/ClockFace.js","../src/js/utils/DateUtils/addHours.js","../src/js/Pickers/TimePeriods.js","../src/js/Pickers/TimePickerHeader.js","../src/js/Pickers/TimePicker.js","../src/js/Pickers/TimePickerContainer.js","../src/js/utils/DateUtils/extractTimeParts.js","../src/js/Progress/CircularProgress.js","../src/js/Progress/LinearProgress.js","../src/js/SelectionControls/SelectionControlGroup.js","../src/js/utils/NumberUtils/minMaxLoop.js","../src/js/SelectionControls/Checkbox.js","../src/js/SelectionControls/Radio.js","../src/js/SelectionControls/Switch.js","../src/js/utils/NumberUtils/calculateValueDistance.js","../src/js/Sliders/SliderLabel.js","../src/js/utils/NumberUtils/updateUnit.js","../src/js/Sliders/TrackFill.js","../src/js/Sliders/Thumb.js","../src/js/Sliders/ThumbMask.js","../src/js/Sliders/DiscreteValue.js","../src/js/Sliders/Track.js","../src/js/Sliders/Slider.js","../src/js/Snackbars/isInvalidAnimate.js","../src/js/Snackbars/Snackbar.js","../src/js/Snackbars/SnackbarContainer.js","../src/js/SVGIcons/SVGIcon.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_global.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_core.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_ctx.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_a-function.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_is-object.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_an-object.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_fails.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_descriptors.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_dom-create.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_ie8-dom-define.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_to-primitive.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_object-dp.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_property-desc.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_hide.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_has.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_export.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_array-includes.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_cof.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_iobject.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_defined.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_to-iobject.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_to-integer.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_to-length.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_to-absolute-index.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_shared.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_uid.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_shared-key.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_object-keys-internal.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_enum-bug-keys.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_object-keys.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gops.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_object-pie.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_to-object.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_object-assign.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.assign.js","../node_modules/babel-runtime/node_modules/core-js/library/fn/object/assign.js","../node_modules/babel-runtime/core-js/object/assign.js","../node_modules/babel-runtime/helpers/extends.js","../node_modules/babel-runtime/helpers/objectWithoutProperties.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gpo.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_object-sap.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.get-prototype-of.js","../node_modules/babel-runtime/node_modules/core-js/library/fn/object/get-prototype-of.js","../node_modules/babel-runtime/core-js/object/get-prototype-of.js","../node_modules/babel-runtime/helpers/classCallCheck.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.define-property.js","../node_modules/babel-runtime/node_modules/core-js/library/fn/object/define-property.js","../node_modules/babel-runtime/core-js/object/define-property.js","../node_modules/babel-runtime/helpers/createClass.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_string-at.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_redefine.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_object-dps.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_html.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_object-create.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_wks.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_set-to-string-tag.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_iter-create.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_iter-define.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.iterator.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_iter-step.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.iterator.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/web.dom.iterable.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_wks-ext.js","../node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/iterator.js","../node_modules/babel-runtime/core-js/symbol/iterator.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_meta.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_wks-define.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_is-array.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gopn.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gopn-ext.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gopd.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/es6.symbol.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_enum-keys.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/es7.symbol.async-iterator.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/es7.symbol.observable.js","../node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/index.js","../node_modules/babel-runtime/core-js/symbol.js","../node_modules/babel-runtime/helpers/typeof.js","../node_modules/babel-runtime/helpers/possibleConstructorReturn.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_set-proto.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.set-prototype-of.js","../node_modules/babel-runtime/node_modules/core-js/library/fn/object/set-prototype-of.js","../node_modules/babel-runtime/core-js/object/set-prototype-of.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.create.js","../node_modules/babel-runtime/node_modules/core-js/library/fn/object/create.js","../node_modules/babel-runtime/core-js/object/create.js","../node_modules/babel-runtime/helpers/inherits.js","../node_modules/dom-helpers/events/on.js","../node_modules/dom-helpers/events/off.js","../node_modules/react-swipeable-views-core/lib/checkIndexBounds.js","../node_modules/react-swipeable-views-core/lib/constant.js","../node_modules/react-swipeable-views-core/lib/computeIndex.js","../node_modules/react-swipeable-views-core/lib/getDisplaySameSlide.js","../node_modules/react-swipeable-views-core/lib/mod.js","../node_modules/react-swipeable-views-core/lib/index.js","../node_modules/react-swipeable-views/lib/SwipeableViews.js","../node_modules/react-swipeable-views/lib/index.js","../src/js/Tabs/TabPanel.js","../src/js/Tabs/TabsContainer.js","../src/js/Tabs/TabIndicator.js","../src/js/Tabs/MenuTab.js","../src/js/Tabs/TabOverflowButton.js","../src/js/Tabs/Tabs.js","../src/js/Tabs/Tab.js","../src/js/Tooltips/Tooltipped.js","../src/js/Version.js"],"sourcesContent":["\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    invariant(\n      false,\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","\r\nmodule.exports = function chain(){\r\n  var len = arguments.length\r\n  var args = [];\r\n\r\n  for (var i = 0; i < len; i++)\r\n    args[i] = arguments[i]\r\n\r\n  args = args.filter(function(fn){ return fn != null })\r\n\r\n  if (args.length === 0) return undefined\r\n  if (args.length === 1) return args[0]\r\n\r\n  return args.reduce(function(current, next){\r\n    return function chainedFunction() {\r\n      current.apply(this, arguments);\r\n      next.apply(this, arguments);\r\n    };\r\n  })\r\n}\r\n","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n        '`warning(condition, format, ...args)` requires a warning ' +\n        'message argument'\n      );\n    }\n\n    if (format.length < 10 || (/^[s\\W]*$/).test(format)) {\n      throw new Error(\n        'The warning format should be able to uniquely identify this ' +\n        'warning. Please, use a more descriptive format than: ' + format\n      );\n    }\n\n    if (!condition) {\n      var argIndex = 0;\n      var message = 'Warning: ' +\n        format.replace(/%s/g, function() {\n          return args[argIndex++];\n        });\n      if (typeof console !== 'undefined') {\n        console.error(message);\n      }\n      try {\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch(x) {}\n    }\n  };\n}\n\nmodule.exports = warning;\n","'use strict';\n\nexports.__esModule = true;\nexports.getChildMapping = getChildMapping;\nexports.mergeChildMappings = mergeChildMappings;\n\nvar _react = require('react');\n\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\nfunction getChildMapping(children) {\n  if (!children) {\n    return children;\n  }\n  var result = {};\n  _react.Children.map(children, function (child) {\n    return child;\n  }).forEach(function (child) {\n    result[child.key] = child;\n  });\n  return result;\n}\n\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\nfunction mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    if (next.hasOwnProperty(key)) {\n      return next[key];\n    }\n\n    return prev[key];\n  }\n\n  // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n  var nextKeysPending = {};\n\n  var pendingKeys = [];\n  for (var prevKey in prev) {\n    if (next.hasOwnProperty(prevKey)) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i = void 0;\n  var childMapping = {};\n  for (var nextKey in next) {\n    if (nextKeysPending.hasOwnProperty(nextKey)) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n    childMapping[nextKey] = getValueForKey(nextKey);\n  }\n\n  // Finally, add the keys which didn't appear before any key in `next`\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _chainFunction = require('chain-function');\n\nvar _chainFunction2 = _interopRequireDefault(_chainFunction);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _ChildMapping = require('./utils/ChildMapping');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar propTypes = {\n  component: _propTypes2.default.any,\n  childFactory: _propTypes2.default.func,\n  children: _propTypes2.default.node\n};\n\nvar defaultProps = {\n  component: 'span',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n\nvar TransitionGroup = function (_React$Component) {\n  _inherits(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    _classCallCheck(this, TransitionGroup);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));\n\n    _this.performAppear = function (key, component) {\n      _this.currentlyTransitioningKeys[key] = true;\n\n      if (component.componentWillAppear) {\n        component.componentWillAppear(_this._handleDoneAppearing.bind(_this, key, component));\n      } else {\n        _this._handleDoneAppearing(key, component);\n      }\n    };\n\n    _this._handleDoneAppearing = function (key, component) {\n      if (component.componentDidAppear) {\n        component.componentDidAppear();\n      }\n\n      delete _this.currentlyTransitioningKeys[key];\n\n      var currentChildMapping = (0, _ChildMapping.getChildMapping)(_this.props.children);\n\n      if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {\n        // This was removed before it had fully appeared. Remove it.\n        _this.performLeave(key, component);\n      }\n    };\n\n    _this.performEnter = function (key, component) {\n      _this.currentlyTransitioningKeys[key] = true;\n\n      if (component.componentWillEnter) {\n        component.componentWillEnter(_this._handleDoneEntering.bind(_this, key, component));\n      } else {\n        _this._handleDoneEntering(key, component);\n      }\n    };\n\n    _this._handleDoneEntering = function (key, component) {\n      if (component.componentDidEnter) {\n        component.componentDidEnter();\n      }\n\n      delete _this.currentlyTransitioningKeys[key];\n\n      var currentChildMapping = (0, _ChildMapping.getChildMapping)(_this.props.children);\n\n      if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {\n        // This was removed before it had fully entered. Remove it.\n        _this.performLeave(key, component);\n      }\n    };\n\n    _this.performLeave = function (key, component) {\n      _this.currentlyTransitioningKeys[key] = true;\n\n      if (component.componentWillLeave) {\n        component.componentWillLeave(_this._handleDoneLeaving.bind(_this, key, component));\n      } else {\n        // Note that this is somewhat dangerous b/c it calls setState()\n        // again, effectively mutating the component before all the work\n        // is done.\n        _this._handleDoneLeaving(key, component);\n      }\n    };\n\n    _this._handleDoneLeaving = function (key, component) {\n      if (component.componentDidLeave) {\n        component.componentDidLeave();\n      }\n\n      delete _this.currentlyTransitioningKeys[key];\n\n      var currentChildMapping = (0, _ChildMapping.getChildMapping)(_this.props.children);\n\n      if (currentChildMapping && currentChildMapping.hasOwnProperty(key)) {\n        // This entered again before it fully left. Add it again.\n        _this.keysToEnter.push(key);\n      } else {\n        _this.setState(function (state) {\n          var newChildren = _extends({}, state.children);\n          delete newChildren[key];\n          return { children: newChildren };\n        });\n      }\n    };\n\n    _this.childRefs = Object.create(null);\n\n    _this.state = {\n      children: (0, _ChildMapping.getChildMapping)(props.children)\n    };\n    return _this;\n  }\n\n  TransitionGroup.prototype.componentWillMount = function componentWillMount() {\n    this.currentlyTransitioningKeys = {};\n    this.keysToEnter = [];\n    this.keysToLeave = [];\n  };\n\n  TransitionGroup.prototype.componentDidMount = function componentDidMount() {\n    var initialChildMapping = this.state.children;\n    for (var key in initialChildMapping) {\n      if (initialChildMapping[key]) {\n        this.performAppear(key, this.childRefs[key]);\n      }\n    }\n  };\n\n  TransitionGroup.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var nextChildMapping = (0, _ChildMapping.getChildMapping)(nextProps.children);\n    var prevChildMapping = this.state.children;\n\n    this.setState({\n      children: (0, _ChildMapping.mergeChildMappings)(prevChildMapping, nextChildMapping)\n    });\n\n    for (var key in nextChildMapping) {\n      var hasPrev = prevChildMapping && prevChildMapping.hasOwnProperty(key);\n      if (nextChildMapping[key] && !hasPrev && !this.currentlyTransitioningKeys[key]) {\n        this.keysToEnter.push(key);\n      }\n    }\n\n    for (var _key in prevChildMapping) {\n      var hasNext = nextChildMapping && nextChildMapping.hasOwnProperty(_key);\n      if (prevChildMapping[_key] && !hasNext && !this.currentlyTransitioningKeys[_key]) {\n        this.keysToLeave.push(_key);\n      }\n    }\n\n    // If we want to someday check for reordering, we could do it here.\n  };\n\n  TransitionGroup.prototype.componentDidUpdate = function componentDidUpdate() {\n    var _this2 = this;\n\n    var keysToEnter = this.keysToEnter;\n    this.keysToEnter = [];\n    keysToEnter.forEach(function (key) {\n      return _this2.performEnter(key, _this2.childRefs[key]);\n    });\n\n    var keysToLeave = this.keysToLeave;\n    this.keysToLeave = [];\n    keysToLeave.forEach(function (key) {\n      return _this2.performLeave(key, _this2.childRefs[key]);\n    });\n  };\n\n  TransitionGroup.prototype.render = function render() {\n    var _this3 = this;\n\n    // TODO: we could get rid of the need for the wrapper node\n    // by cloning a single child\n    var childrenToRender = [];\n\n    var _loop = function _loop(key) {\n      var child = _this3.state.children[key];\n      if (child) {\n        var isCallbackRef = typeof child.ref !== 'string';\n        var factoryChild = _this3.props.childFactory(child);\n        var ref = function ref(r) {\n          _this3.childRefs[key] = r;\n        };\n\n        process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(isCallbackRef, 'string refs are not supported on children of TransitionGroup and will be ignored. ' + 'Please use a callback ref instead: https://facebook.github.io/react/docs/refs-and-the-dom.html#the-ref-callback-attribute') : void 0;\n\n        // Always chaining the refs leads to problems when the childFactory\n        // wraps the child. The child ref callback gets called twice with the\n        // wrapper and the child. So we only need to chain the ref if the\n        // factoryChild is not different from child.\n        if (factoryChild === child && isCallbackRef) {\n          ref = (0, _chainFunction2.default)(child.ref, ref);\n        }\n\n        // You may need to apply reactive updates to a child as it is leaving.\n        // The normal React way to do it won't work since the child will have\n        // already been removed. In case you need this behavior you can provide\n        // a childFactory function to wrap every child, even the ones that are\n        // leaving.\n        childrenToRender.push(_react2.default.cloneElement(factoryChild, {\n          key: key,\n          ref: ref\n        }));\n      }\n    };\n\n    for (var key in this.state.children) {\n      _loop(key);\n    }\n\n    // Do not forward TransitionGroup props to primitive DOM nodes\n    var props = _extends({}, this.props);\n    delete props.transitionLeave;\n    delete props.transitionName;\n    delete props.transitionAppear;\n    delete props.transitionEnter;\n    delete props.childFactory;\n    delete props.transitionLeaveTimeout;\n    delete props.transitionEnterTimeout;\n    delete props.transitionAppearTimeout;\n    delete props.component;\n\n    return _react2.default.createElement(this.props.component, props, childrenToRender);\n  };\n\n  return TransitionGroup;\n}(_react2.default.Component);\n\nTransitionGroup.displayName = 'TransitionGroup';\n\n\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? propTypes : {};\nTransitionGroup.defaultProps = defaultProps;\n\nexports.default = TransitionGroup;\nmodule.exports = exports['default'];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = hasClass;\nfunction hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);else return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}\nmodule.exports = exports[\"default\"];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addClass;\n\nvar _hasClass = require('./hasClass');\n\nvar _hasClass2 = _interopRequireDefault(_hasClass);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!(0, _hasClass2.default)(element, className)) if (typeof element.className === 'string') element.className = element.className + ' ' + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + ' ' + className);\n}\nmodule.exports = exports['default'];","'use strict';\n\nfunction replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp('(^|\\\\s)' + classToRemove + '(?:\\\\s|$)', 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n\nmodule.exports = function removeClass(element, className) {\n  if (element.classList) element.classList.remove(className);else if (typeof element.className === 'string') element.className = replaceClassName(element.className, className);else element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _inDOM = require('./inDOM');\n\nvar _inDOM2 = _interopRequireDefault(_inDOM);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar vendors = ['', 'webkit', 'moz', 'o', 'ms'];\nvar cancel = 'clearTimeout';\nvar raf = fallback;\nvar compatRaf = void 0;\n\nvar getKey = function getKey(vendor, k) {\n  return vendor + (!vendor ? k : k[0].toUpperCase() + k.substr(1)) + 'AnimationFrame';\n};\n\nif (_inDOM2.default) {\n  vendors.some(function (vendor) {\n    var rafKey = getKey(vendor, 'request');\n\n    if (rafKey in window) {\n      cancel = getKey(vendor, 'cancel');\n      return raf = function raf(cb) {\n        return window[rafKey](cb);\n      };\n    }\n  });\n}\n\n/* https://github.com/component/raf */\nvar prev = new Date().getTime();\nfunction fallback(fn) {\n  var curr = new Date().getTime(),\n      ms = Math.max(0, 16 - (curr - prev)),\n      req = setTimeout(fn, ms);\n\n  prev = curr;\n  return req;\n}\n\ncompatRaf = function compatRaf(cb) {\n  return raf(cb);\n};\ncompatRaf.cancel = function (id) {\n  window[cancel] && typeof window[cancel] === 'function' && window[cancel](id);\n};\nexports.default = compatRaf;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.animationEnd = exports.animationDelay = exports.animationTiming = exports.animationDuration = exports.animationName = exports.transitionEnd = exports.transitionDuration = exports.transitionDelay = exports.transitionTiming = exports.transitionProperty = exports.transform = undefined;\n\nvar _inDOM = require('../util/inDOM');\n\nvar _inDOM2 = _interopRequireDefault(_inDOM);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar transform = 'transform';\nvar prefix = void 0,\n    transitionEnd = void 0,\n    animationEnd = void 0;\nvar transitionProperty = void 0,\n    transitionDuration = void 0,\n    transitionTiming = void 0,\n    transitionDelay = void 0;\nvar animationName = void 0,\n    animationDuration = void 0,\n    animationTiming = void 0,\n    animationDelay = void 0;\n\nif (_inDOM2.default) {\n  var _getTransitionPropert = getTransitionProperties();\n\n  prefix = _getTransitionPropert.prefix;\n  exports.transitionEnd = transitionEnd = _getTransitionPropert.transitionEnd;\n  exports.animationEnd = animationEnd = _getTransitionPropert.animationEnd;\n\n\n  exports.transform = transform = prefix + '-' + transform;\n  exports.transitionProperty = transitionProperty = prefix + '-transition-property';\n  exports.transitionDuration = transitionDuration = prefix + '-transition-duration';\n  exports.transitionDelay = transitionDelay = prefix + '-transition-delay';\n  exports.transitionTiming = transitionTiming = prefix + '-transition-timing-function';\n\n  exports.animationName = animationName = prefix + '-animation-name';\n  exports.animationDuration = animationDuration = prefix + '-animation-duration';\n  exports.animationTiming = animationTiming = prefix + '-animation-delay';\n  exports.animationDelay = animationDelay = prefix + '-animation-timing-function';\n}\n\nexports.transform = transform;\nexports.transitionProperty = transitionProperty;\nexports.transitionTiming = transitionTiming;\nexports.transitionDelay = transitionDelay;\nexports.transitionDuration = transitionDuration;\nexports.transitionEnd = transitionEnd;\nexports.animationName = animationName;\nexports.animationDuration = animationDuration;\nexports.animationTiming = animationTiming;\nexports.animationDelay = animationDelay;\nexports.animationEnd = animationEnd;\nexports.default = {\n  transform: transform,\n  end: transitionEnd,\n  property: transitionProperty,\n  timing: transitionTiming,\n  delay: transitionDelay,\n  duration: transitionDuration\n};\n\n\nfunction getTransitionProperties() {\n  var style = document.createElement('div').style;\n\n  var vendorMap = {\n    O: function O(e) {\n      return 'o' + e.toLowerCase();\n    },\n    Moz: function Moz(e) {\n      return e.toLowerCase();\n    },\n    Webkit: function Webkit(e) {\n      return 'webkit' + e;\n    },\n    ms: function ms(e) {\n      return 'MS' + e;\n    }\n  };\n\n  var vendors = Object.keys(vendorMap);\n\n  var transitionEnd = void 0,\n      animationEnd = void 0;\n  var prefix = '';\n\n  for (var i = 0; i < vendors.length; i++) {\n    var vendor = vendors[i];\n\n    if (vendor + 'TransitionProperty' in style) {\n      prefix = '-' + vendor.toLowerCase();\n      transitionEnd = vendorMap[vendor]('TransitionEnd');\n      animationEnd = vendorMap[vendor]('AnimationEnd');\n      break;\n    }\n  }\n\n  if (!transitionEnd && 'transitionProperty' in style) transitionEnd = 'transitionend';\n\n  if (!animationEnd && 'animationName' in style) animationEnd = 'animationend';\n\n  style = null;\n\n  return { animationEnd: animationEnd, transitionEnd: transitionEnd, prefix: prefix };\n}","'use strict';\n\nexports.__esModule = true;\nexports.nameShape = undefined;\nexports.transitionTimeout = transitionTimeout;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction transitionTimeout(transitionType) {\n  var timeoutPropName = 'transition' + transitionType + 'Timeout';\n  var enabledPropName = 'transition' + transitionType;\n\n  return function (props) {\n    // If the transition is enabled\n    if (props[enabledPropName]) {\n      // If no timeout duration is provided\n      if (props[timeoutPropName] == null) {\n        return new Error(timeoutPropName + ' wasn\\'t supplied to CSSTransitionGroup: ' + 'this can cause unreliable animations and won\\'t be supported in ' + 'a future version of React. See ' + 'https://fb.me/react-animation-transition-group-timeout for more ' + 'information.');\n\n        // If the duration isn't a number\n      } else if (typeof props[timeoutPropName] !== 'number') {\n        return new Error(timeoutPropName + ' must be a number (in milliseconds)');\n      }\n    }\n\n    return null;\n  };\n}\n\nvar nameShape = exports.nameShape = _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.shape({\n  enter: _propTypes2.default.string,\n  leave: _propTypes2.default.string,\n  active: _propTypes2.default.string\n}), _propTypes2.default.shape({\n  enter: _propTypes2.default.string,\n  enterActive: _propTypes2.default.string,\n  leave: _propTypes2.default.string,\n  leaveActive: _propTypes2.default.string,\n  appear: _propTypes2.default.string,\n  appearActive: _propTypes2.default.string\n})]);","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _addClass = require('dom-helpers/class/addClass');\n\nvar _addClass2 = _interopRequireDefault(_addClass);\n\nvar _removeClass = require('dom-helpers/class/removeClass');\n\nvar _removeClass2 = _interopRequireDefault(_removeClass);\n\nvar _requestAnimationFrame = require('dom-helpers/util/requestAnimationFrame');\n\nvar _requestAnimationFrame2 = _interopRequireDefault(_requestAnimationFrame);\n\nvar _properties = require('dom-helpers/transition/properties');\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactDom = require('react-dom');\n\nvar _PropTypes = require('./utils/PropTypes');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar events = [];\nif (_properties.transitionEnd) events.push(_properties.transitionEnd);\nif (_properties.animationEnd) events.push(_properties.animationEnd);\n\nfunction addEndListener(node, listener) {\n  if (events.length) {\n    events.forEach(function (e) {\n      return node.addEventListener(e, listener, false);\n    });\n  } else {\n    setTimeout(listener, 0);\n  }\n\n  return function () {\n    if (!events.length) return;\n    events.forEach(function (e) {\n      return node.removeEventListener(e, listener, false);\n    });\n  };\n}\n\nvar propTypes = {\n  children: _propTypes2.default.node,\n  name: _PropTypes.nameShape.isRequired,\n\n  // Once we require timeouts to be specified, we can remove the\n  // boolean flags (appear etc.) and just accept a number\n  // or a bool for the timeout flags (appearTimeout etc.)\n  appear: _propTypes2.default.bool,\n  enter: _propTypes2.default.bool,\n  leave: _propTypes2.default.bool,\n  appearTimeout: _propTypes2.default.number,\n  enterTimeout: _propTypes2.default.number,\n  leaveTimeout: _propTypes2.default.number\n};\n\nvar CSSTransitionGroupChild = function (_React$Component) {\n  _inherits(CSSTransitionGroupChild, _React$Component);\n\n  function CSSTransitionGroupChild() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, CSSTransitionGroupChild);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.componentWillAppear = function (done) {\n      if (_this.props.appear) {\n        _this.transition('appear', done, _this.props.appearTimeout);\n      } else {\n        done();\n      }\n    }, _this.componentWillEnter = function (done) {\n      if (_this.props.enter) {\n        _this.transition('enter', done, _this.props.enterTimeout);\n      } else {\n        done();\n      }\n    }, _this.componentWillLeave = function (done) {\n      if (_this.props.leave) {\n        _this.transition('leave', done, _this.props.leaveTimeout);\n      } else {\n        done();\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  CSSTransitionGroupChild.prototype.componentWillMount = function componentWillMount() {\n    this.classNameAndNodeQueue = [];\n    this.transitionTimeouts = [];\n  };\n\n  CSSTransitionGroupChild.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.unmounted = true;\n\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n    this.transitionTimeouts.forEach(function (timeout) {\n      clearTimeout(timeout);\n    });\n\n    this.classNameAndNodeQueue.length = 0;\n  };\n\n  CSSTransitionGroupChild.prototype.transition = function transition(animationType, finishCallback, timeout) {\n    var node = (0, _reactDom.findDOMNode)(this);\n\n    if (!node) {\n      if (finishCallback) {\n        finishCallback();\n      }\n      return;\n    }\n\n    var className = this.props.name[animationType] || this.props.name + '-' + animationType;\n    var activeClassName = this.props.name[animationType + 'Active'] || className + '-active';\n    var timer = null;\n    var removeListeners = void 0;\n\n    (0, _addClass2.default)(node, className);\n\n    // Need to do this to actually trigger a transition.\n    this.queueClassAndNode(activeClassName, node);\n\n    // Clean-up the animation after the specified delay\n    var finish = function finish(e) {\n      if (e && e.target !== node) {\n        return;\n      }\n\n      clearTimeout(timer);\n      if (removeListeners) removeListeners();\n\n      (0, _removeClass2.default)(node, className);\n      (0, _removeClass2.default)(node, activeClassName);\n\n      if (removeListeners) removeListeners();\n\n      // Usually this optional callback is used for informing an owner of\n      // a leave animation and telling it to remove the child.\n      if (finishCallback) {\n        finishCallback();\n      }\n    };\n\n    if (timeout) {\n      timer = setTimeout(finish, timeout);\n      this.transitionTimeouts.push(timer);\n    } else if (_properties.transitionEnd) {\n      removeListeners = addEndListener(node, finish);\n    }\n  };\n\n  CSSTransitionGroupChild.prototype.queueClassAndNode = function queueClassAndNode(className, node) {\n    var _this2 = this;\n\n    this.classNameAndNodeQueue.push({\n      className: className,\n      node: node\n    });\n\n    if (!this.rafHandle) {\n      this.rafHandle = (0, _requestAnimationFrame2.default)(function () {\n        return _this2.flushClassNameAndNodeQueue();\n      });\n    }\n  };\n\n  CSSTransitionGroupChild.prototype.flushClassNameAndNodeQueue = function flushClassNameAndNodeQueue() {\n    if (!this.unmounted) {\n      this.classNameAndNodeQueue.forEach(function (obj) {\n        // This is for to force a repaint,\n        // which is necessary in order to transition styles when adding a class name.\n        /* eslint-disable no-unused-expressions */\n        obj.node.scrollTop;\n        /* eslint-enable no-unused-expressions */\n        (0, _addClass2.default)(obj.node, obj.className);\n      });\n    }\n    this.classNameAndNodeQueue.length = 0;\n    this.rafHandle = null;\n  };\n\n  CSSTransitionGroupChild.prototype.render = function render() {\n    var props = _extends({}, this.props);\n    delete props.name;\n    delete props.appear;\n    delete props.enter;\n    delete props.leave;\n    delete props.appearTimeout;\n    delete props.enterTimeout;\n    delete props.leaveTimeout;\n    delete props.children;\n    return _react2.default.cloneElement(_react2.default.Children.only(this.props.children), props);\n  };\n\n  return CSSTransitionGroupChild;\n}(_react2.default.Component);\n\nCSSTransitionGroupChild.displayName = 'CSSTransitionGroupChild';\n\n\nCSSTransitionGroupChild.propTypes = process.env.NODE_ENV !== \"production\" ? propTypes : {};\n\nexports.default = CSSTransitionGroupChild;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _TransitionGroup = require('./TransitionGroup');\n\nvar _TransitionGroup2 = _interopRequireDefault(_TransitionGroup);\n\nvar _CSSTransitionGroupChild = require('./CSSTransitionGroupChild');\n\nvar _CSSTransitionGroupChild2 = _interopRequireDefault(_CSSTransitionGroupChild);\n\nvar _PropTypes = require('./utils/PropTypes');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar propTypes = {\n  transitionName: _PropTypes.nameShape.isRequired,\n\n  transitionAppear: _propTypes2.default.bool,\n  transitionEnter: _propTypes2.default.bool,\n  transitionLeave: _propTypes2.default.bool,\n  transitionAppearTimeout: (0, _PropTypes.transitionTimeout)('Appear'),\n  transitionEnterTimeout: (0, _PropTypes.transitionTimeout)('Enter'),\n  transitionLeaveTimeout: (0, _PropTypes.transitionTimeout)('Leave')\n};\n\nvar defaultProps = {\n  transitionAppear: false,\n  transitionEnter: true,\n  transitionLeave: true\n};\n\nvar CSSTransitionGroup = function (_React$Component) {\n  _inherits(CSSTransitionGroup, _React$Component);\n\n  function CSSTransitionGroup() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, CSSTransitionGroup);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this._wrapChild = function (child) {\n      return _react2.default.createElement(_CSSTransitionGroupChild2.default, {\n        name: _this.props.transitionName,\n        appear: _this.props.transitionAppear,\n        enter: _this.props.transitionEnter,\n        leave: _this.props.transitionLeave,\n        appearTimeout: _this.props.transitionAppearTimeout,\n        enterTimeout: _this.props.transitionEnterTimeout,\n        leaveTimeout: _this.props.transitionLeaveTimeout\n      }, child);\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  // We need to provide this childFactory so that\n  // ReactCSSTransitionGroupChild can receive updates to name, enter, and\n  // leave while it is leaving.\n\n\n  CSSTransitionGroup.prototype.render = function render() {\n    return _react2.default.createElement(_TransitionGroup2.default, _extends({}, this.props, { childFactory: this._wrapChild }));\n  };\n\n  return CSSTransitionGroup;\n}(_react2.default.Component);\n\nCSSTransitionGroup.displayName = 'CSSTransitionGroup';\n\n\nCSSTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? propTypes : {};\nCSSTransitionGroup.defaultProps = defaultProps;\n\nexports.default = CSSTransitionGroup;\nmodule.exports = exports['default'];","/*!\n  Copyright (c) 2016 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tclasses.push(classNames.apply(null, arg));\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","/** @module utils/getField */\r\n\r\n/**\r\n * Gets the current field for a component that can the field\r\n * as either uncontrolled or controlled.\r\n *\r\n * @param {Object} props - the props object.\r\n * @param {Object} state = the state object.\r\n * @param {string=} field - the field to extract a value from. Defaults to 'value'.\r\n *\r\n * @return the field's value.\r\n */\r\nexport default function getField(props, state, field = 'value') {\r\n  return typeof props[field] !== 'undefined' ? props[field] : state[field];\r\n}\r\n","/** @module utils/omit */\r\n\r\n/**\r\n * This should hopefully be very similar to lodash's omit function. It will\r\n * take an object and return a new object without any of the given keys.\r\n *\r\n * @param {Object} obj - The object to omit keys from.\r\n * @param {Array.<String>} keys - a list of keys to remove.\r\n */\r\nexport default function omit(obj, keys) {\r\n  if (!obj) {\r\n    return {};\r\n  } else if (!keys || !keys.length) {\r\n    return obj;\r\n  }\r\n\r\n  return Object.keys(obj).filter(key => keys.indexOf(key) === -1).reduce((newProps, key) => {\r\n    newProps[key] = obj[key];\r\n\r\n    return newProps;\r\n  }, {});\r\n}\r\n","/** @module utils/Positioning/getTextWidth */\r\n\r\nlet cachedCanvas;\r\n\r\n/**\r\n * A utility function to measure the width (in px) of any text. It will require a canvas\r\n * and an element to use to determine the current fonts to apply since different fonts will\r\n * have different widths.\r\n *\r\n * This isn't fully accurate since some browsers handle the calculations a bit differently so\r\n * they are off by a 0-3px\r\n *\r\n * @param {String} text - The text to measure the width\r\n * @param {HTMLElement} el - The element to use to determine the current font for the text.\r\n * @param {HTMLElement=} canvas - An optional canvas to use for doing the calculations. If this\r\n *    is omitted, it will just use the locally created canvas to do the calculations.\r\n * @return {number} this will either return null if there is a problem calculating the width or\r\n *    the length (in px) of the text.\r\n */\r\nexport default function getTextWidth(text, el, canvas) {\r\n  if (!el) {\r\n    return null;\r\n  }\r\n\r\n  if (!canvas) {\r\n    if (!cachedCanvas) {\r\n      cachedCanvas = document.createElement('canvas');\r\n    }\r\n\r\n    canvas = cachedCanvas;\r\n  }\r\n\r\n  const context = canvas.getContext('2d');\r\n  if (!context) { // context doesn't exist in testing without complicated mocks\r\n    return null;\r\n  }\r\n\r\n  const styles = window.getComputedStyle(el);\r\n  let font = styles.font;\r\n  // Some browsers do not actually supply the font style since they are on an older version of CSSProperties,\r\n  // so the font string needs to be made manually.\r\n  if (!font) {\r\n    // font-style font-variant font-weight font-size/line-height font-family\r\n    const sizing = `${styles.fontSize} / ${styles.lineHeight} ${styles.fontFamily}`;\r\n    font = `${styles.fontStyle} ${styles.fontVariant} ${styles.fontWeight} ${sizing}`;\r\n  }\r\n\r\n  context.font = font;\r\n  return context.measureText(text).width;\r\n}\r\n","export const LEFT_MOUSE = 0;\r\nexport const RIGHT_MOUSE = 2;\r\n\r\nexport const TAB = 9;\r\nexport const ENTER = 13;\r\nexport const ESC = 27;\r\nexport const SPACE = 32;\r\nexport const PAGE_UP = 33;\r\nexport const PAGE_DOWN = 34;\r\nexport const END = 35;\r\nexport const HOME = 36;\r\nexport const LEFT = 37;\r\nexport const UP = 38;\r\nexport const RIGHT = 39;\r\nexport const DOWN = 40;\r\n\r\nexport const ZERO = 48;\r\nexport const NINE = 57;\r\nexport const KEYPAD_ZERO = 96;\r\nexport const KEYPAD_NINE = 105;\r\n","/** @module Helpers/HorizontalAnchors */\r\n\r\n/**\r\n * An enum for all the different types of horizontal anchors on a layover.\r\n *\r\n * @readonly\r\n * @enum {string}\r\n */\r\nconst HorizontalAnchors = {\r\n  /**\r\n   * Positions the layover to the outside left on the toggle component\r\n   * so that it does not overlap.\r\n   */\r\n  LEFT: 'left',\r\n\r\n  /**\r\n   * Positions the layover to the inner left of the toggle component so\r\n   * that it will overlap.\r\n   */\r\n  INNER_LEFT: 'inner left',\r\n\r\n  /**\r\n   * Positions the layover so that it overlaps the toggle component\r\n   * by positioning itself in the cetner of the toggle component's width.\r\n   */\r\n  CENTER: 'center',\r\n\r\n  /**\r\n   * Positions the layover to the outside right on the toggle component\r\n   * so that it does not overlap.\r\n   */\r\n  RIGHT: 'right',\r\n\r\n  /**\r\n   * Positions the layover to the outside right on the toggle component\r\n   * so that it will overlap.\r\n   */\r\n  INNER_RIGHT: 'inner right',\r\n};\r\n\r\nexport default HorizontalAnchors;\r\n","/** @module Helpers/VerticalAnchors */\r\n\r\n/**\r\n * An enum for all the different types of horizontal anchors on a layover.\r\n *\r\n * @readonly\r\n * @enum {string}\r\n */\r\nconst VerticalAnchors = {\r\n  /**\r\n   * Positions the layover to be placed over the toggle component so that\r\n   * it will never overlay the toggle component.\r\n   */\r\n  TOP: 'top',\r\n\r\n  /**\r\n   * Positions the layover so that it will be centered over the toggle component\r\n   * based on the layover's height.\r\n   */\r\n  CENTER: 'center',\r\n\r\n  /**\r\n   * Positions the layover so that it will overlap the toggle component by\r\n   * fixing to the top of the toggle.\r\n   */\r\n  OVERLAP: 'overlap',\r\n\r\n  /**\r\n   * Positions the layover to be placed below the toggle component so that\r\n   * it will never overlay the toggle component.\r\n   */\r\n  BOTTOM: 'bottom',\r\n};\r\n\r\nexport default VerticalAnchors;\r\n","import PropTypes from 'prop-types';\r\nimport HorizontalAnchors from './HorizontalAnchors';\r\nimport VerticalAnchors from './VerticalAnchors';\r\n\r\nexport default PropTypes.shape({\r\n  x: PropTypes.oneOf([\r\n    HorizontalAnchors.LEFT,\r\n    HorizontalAnchors.INNER_LEFT,\r\n    HorizontalAnchors.CENTER,\r\n    HorizontalAnchors.RIGHT,\r\n    HorizontalAnchors.INNER_RIGHT,\r\n  ]).isRequired,\r\n  y: PropTypes.oneOf([\r\n    VerticalAnchors.TOP,\r\n    VerticalAnchors.CENTER,\r\n    VerticalAnchors.OVERLAP,\r\n    VerticalAnchors.BOTTOM,\r\n  ]).isRequired,\r\n});\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default PropTypes.oneOfType([\r\n  PropTypes.object,\r\n  PropTypes.shape({\r\n    x: PropTypes.object,\r\n    y: PropTypes.object,\r\n  }),\r\n]);\r\n","/** @module Helpers/Positions */\r\n\r\n/**\r\n * An enum for all the animation positions for a layover appearing.\r\n *\r\n * @readonly\r\n * @enum {string}\r\n */\r\nconst Positions = {\r\n  /**\r\n   * The layover will appear by transitioning from the top left and expand\r\n   * down right.\r\n   */\r\n  TOP_LEFT: 'tl',\r\n\r\n  /**\r\n   * The layover will appear by transitioning from the top right and expand\r\n   * down left.\r\n   */\r\n  TOP_RIGHT: 'tr',\r\n\r\n  /**\r\n   * The layover will appear by transitioning from the bottom left and expand\r\n   * top right.\r\n   */\r\n  BOTTOM_LEFT: 'bl',\r\n\r\n  /**\r\n   * The layover will appear by transitioning from the bottom right and expand\r\n   * top left.\r\n   */\r\n  BOTTOM_RIGHT: 'br',\r\n\r\n  /**\r\n   * The layover will appear by just transitioning downwards from the bottom\r\n   * of the toggle component.\r\n   */\r\n  BELOW: 'below',\r\n};\r\n\r\nexport default Positions;\r\n","/** @module utils/themeColors */\r\nimport cn from 'classnames';\r\n\r\n/**\r\n * This is a utility function to apply the different text colors as a class name.\r\n *\r\n * @param {Object} options - The options to use to figure out which styles to apply.\r\n * @param {boolean?} options.text - Boolean if the base text color should attempt to be\r\n *    applied. This will only be applied if all the other states are not true.\r\n * @param {boolean?} options.disabled - Boolean if the text should be disabled.\r\n * @param {boolean?} options.error - Boolean if the error color should attempt to be applied.\r\n *    This will only be applied if the disabled state is false.\r\n * @param {boolean?} options.primary - Boolean if the primary color should be applied. This\r\n *    will only be applied if all the other states are false.\r\n * @param {boolean?} options.secondary - Boolean if the secondary color should be applied.\r\n *    This will only be applied if all the other states are false.\r\n * @param {boolean?} options.inherit - Boolean if the color should be inherited by a parent.\r\n *    This will only be applied if the error and disabled states are false.\r\n * @return {String} the class name\r\n */\r\nexport default function themeColors({\r\n  themeText = true,\r\n  text = false,\r\n  background = false,\r\n  disabled = false,\r\n  error = false,\r\n  hint = false,\r\n  primary = false,\r\n  secondary = false,\r\n  inherit = false,\r\n  ink = false,\r\n  card = false,\r\n  hover = false,\r\n} = {}, className) {\r\n  let colors = '';\r\n  if (themeText) {\r\n    if (disabled) {\r\n      colors = 'md-text--disabled';\r\n    } else if (error) {\r\n      colors = 'md-text--error';\r\n    } else if (inherit) {\r\n      colors = 'md-text--inherit';\r\n    } else {\r\n      colors = cn({\r\n        'md-text': text && !primary && !secondary && !hint,\r\n        'md-text--secondary': hint,\r\n        'md-text--theme-primary': !hint && primary,\r\n        'md-text--theme-secondary': !hint && secondary,\r\n        'md-ink--primary': ink && primary,\r\n        'md-ink--secondary': ink && secondary,\r\n      });\r\n    }\r\n  } else {\r\n    colors = cn({\r\n      'md-background': background && !primary && !secondary && !card,\r\n      'md-background--card': card,\r\n      'md-background--primary': primary,\r\n      'md-background--primary-hover': primary && hover,\r\n      'md-background--secondary': secondary,\r\n      'md-background--secondary-hover': secondary && hover,\r\n    });\r\n  }\r\n\r\n  return cn(colors, className);\r\n}\r\n","import cn from 'classnames';\r\n\r\n/**\r\n * A simple utility function to get the dynamic collapser styles.\r\n */\r\nexport default function getCollapserStyles({ flipped, suffix, suffixFlipped }, ...classNames) {\r\n  return cn('md-collapser', {\r\n    'md-collapser--flipped': flipped && (!suffixFlipped || !suffix),\r\n    [`md-collapser--${suffix}`]: suffix,\r\n    [`md-collapser--${suffix}-flipped`]: suffix && flipped && suffixFlipped,\r\n  }, ...classNames);\r\n}\r\n","/** @module utils/isFormPartRole */\r\n\r\n/**\r\n * A simple utility function to determine if an element has a role that should\r\n * be used as a form part. This is mostly used for changing the behavior of keyboard\r\n * events.\r\n *\r\n * A form part role is one of the following:\r\n * - checkbox\r\n * - radio\r\n * - listbox\r\n * - input\r\n *\r\n * @param {HTMLElement} el - the element to check.\r\n * @return {boolean} true if the element is considered an element part of a form.\r\n */\r\nexport default function isFormPartRole(el) {\r\n  if (!el) {\r\n    return false;\r\n  } else if (el.nodeName === 'INPUT') {\r\n    return true;\r\n  }\r\n\r\n  const role = el.getAttribute('role');\r\n  return role === 'checkbox' || role === 'radio' || role === 'listbox';\r\n}\r\n","/** @module utils/EventUtils/handleKeyboardAccessibility */\r\n\r\nimport { SPACE, ENTER } from '../../constants/keyCodes';\r\nimport closest from '../closest';\r\nimport isFormPartRole from '../isFormPartRole';\r\n\r\n/**\r\n * A utility function for adding keyboard accessibility to elements that are not a natively\r\n * clickable (div, span, etc). When the space or enter key is pressed while focusing the\r\n * element, different flows will happen.\r\n *\r\n * - space - The click event will be triggered and the default page scrolling behavior of the\r\n *      spacebar will be prevented\r\n * - enter - If the element has a form role ('checkbox' or 'radio'), the click event will not\r\n *      be triggered. Instead, it will find out if the element is inside a form. If it is, it\r\n *      will emulate the default behavior of attempting to submit the form. If the element does\r\n *      not have a form role, the click event will be triggered.\r\n *\r\n * @param {Event} e - the keydown event\r\n * @param {function} onClick - the on click event to be triggered if space or enter was pressed\r\n * @param {boolean=true} listenToEnter - boolean if the enter key should be used to trigger the\r\n *      the click event. Even if this is true, the click event will not be triggered if the role\r\n *      is for a form role.\r\n * @param {boolean=true} listenToSpace - boolean if the space key should be used to trigger the\r\n *      click event.\r\n * @return {Boolean} true if the enter or space keys were pressed while their listener is also active.\r\n */\r\nexport default function handleKeyboardAccessibility(e, onClick, listenToEnter = true, listenToSpace = true) {\r\n  const key = e.which || e.keyCode;\r\n  const space = listenToSpace && key === SPACE;\r\n  const enter = key === ENTER;\r\n\r\n  const { tagName } = e.target;\r\n  // it is valid to press space in text fields, contenteditable, and buttons\r\n  if (space && !tagName.match(/input|textarea|button/i) && e.target.getAttribute('contenteditable') !== 'true') {\r\n    // Stop page scrolling\r\n    e.preventDefault();\r\n  }\r\n\r\n  if (enter && isFormPartRole(e.target)) {\r\n    const form = closest(e.target, 'form');\r\n    const submit = form ? form.querySelector('*[type=\"submit\"]') : null;\r\n    if (submit) {\r\n      submit.click();\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  if ((enter && listenToEnter) || space) {\r\n    onClick(e);\r\n\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n","/** @module utils/closest */\r\n\r\n/**\r\n * A _very_ primitive polyfill for the Element.closest function. If this is a browser that doesn't\r\n * support it (IE, Edge, etc), it will just keep searching the parent elements until the nodeName\r\n * matches the provided type.\r\n *\r\n * @param {Element} el - the html element to find a closest node type for\r\n * @param {String} type - the html element type to find.\r\n * @return {Element} the found element or null.\r\n */\r\nexport default function closest(el, type) {\r\n  if (typeof el.closest === 'function') {\r\n    return el.closest(type);\r\n  }\r\n\r\n  const nodeType = type.toUpperCase();\r\n  let node = el.parentElement;\r\n  while (node && node.parentElement) {\r\n    if (node.nodeName === nodeType) {\r\n      return node;\r\n    }\r\n\r\n    node = node.parentElement;\r\n  }\r\n\r\n  return null;\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport Positions from './Positions';\r\n\r\nexport default PropTypes.oneOfType([\r\n  PropTypes.oneOf([\r\n    Positions.TOP_LEFT,\r\n    Positions.TOP_RIGHT,\r\n    Positions.BOTTOM_LEFT,\r\n    Positions.BOTTOM_RIGHT,\r\n    Positions.BELOW,\r\n  ]),\r\n  PropTypes.string,\r\n]);\r\n","'use strict';\n\nexports.__esModule = true;\nexports.default = deprecated;\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar warned = {};\n\nfunction deprecated(validator, reason) {\n  return function validate(props, propName, componentName, location, propFullName) {\n    var componentNameSafe = componentName || '<<anonymous>>';\n    var propFullNameSafe = propFullName || propName;\n\n    if (props[propName] != null) {\n      var messageKey = componentName + '.' + propName;\n\n      (0, _warning2.default)(warned[messageKey], 'The ' + location + ' `' + propFullNameSafe + '` of ' + ('`' + componentNameSafe + '` is deprecated. ' + reason + '.'));\n\n      warned[messageKey] = true;\n    }\n\n    for (var _len = arguments.length, args = Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {\n      args[_key - 5] = arguments[_key];\n    }\n\n    return validator.apply(undefined, [props, propName, componentName, location, propFullName].concat(args));\n  };\n}\n\n/* eslint-disable no-underscore-dangle */\nfunction _resetWarned() {\n  warned = {};\n}\n\ndeprecated._resetWarned = _resetWarned;\n/* eslint-enable no-underscore-dangle */","import React, { PureComponent, Children } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { findDOMNode } from 'react-dom';\r\nimport cn from 'classnames';\r\nimport { TAB } from '../constants/keyCodes';\r\nimport handleKeyboardAccessibility from '../utils/EventUtils/handleKeyboardAccessibility';\r\n\r\n/**\r\n * The `AccessibleFakeButton` is a generic component that can be used to render\r\n * a `div` or any other non `button` components as a button. This should not be\r\n * used often.\r\n *\r\n * The `AccessibleFakeButton` allows the user to tab focus the element, use the\r\n * space or enter key to trigger the `onClick` event, and toggles the `aria-pressed`\r\n * attribute.\r\n */\r\nexport default class AccessibleFakeButton extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * An optional style to apply.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * An optional function to call only when the button has been focused with the tab key.\r\n     */\r\n    tabbedClassName: PropTypes.string,\r\n\r\n    /**\r\n     * Any children to display in the Accessible Fake Button.\r\n     */\r\n    children: PropTypes.node,\r\n\r\n    /**\r\n     * An optional onClick function to call when the user clicks the\r\n     * button or presses space || enter.\r\n     */\r\n    onClick: PropTypes.func,\r\n\r\n    /**\r\n     * An optional onKeyDown function to call.\r\n     */\r\n    onKeyDown: PropTypes.func,\r\n\r\n    /**\r\n     * An optional onBlur function to call.\r\n     */\r\n    onBlur: PropTypes.func,\r\n\r\n    /**\r\n     * An optional onKeyUp function to call.\r\n     */\r\n    onKeyUp: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the element is focused with the tab key.\r\n     */\r\n    onTabFocus: PropTypes.func,\r\n\r\n    /**\r\n     * The component to render the Fake button as.\r\n     */\r\n    component: PropTypes.oneOfType([\r\n      PropTypes.func,\r\n      PropTypes.string,\r\n    ]).isRequired,\r\n\r\n    /**\r\n     * Boolean if the default outline should be removed the when the fake button has been focused.\r\n     *\r\n     * @see {@link #tabbedClassName}\r\n     */\r\n    noFocusOutline: PropTypes.bool,\r\n\r\n    /**\r\n     * The tab index to use for the Fake button so it is keyboard focusable.\r\n     */\r\n    tabIndex: PropTypes.number,\r\n\r\n    /**\r\n     * Boolean if the Button is disabled. This will prevent tab focus.\r\n     */\r\n    disabled: PropTypes.bool,\r\n\r\n    /**\r\n     * The role for the accessible fake button. It is recommended to keep it\r\n     * the default of `button` unless you are rendering it as an `a` tag.\r\n     */\r\n    role: PropTypes.string,\r\n\r\n    /**\r\n     * The ink when coming from the AccessibleFakeInkedButton\r\n     * @access private\r\n     */\r\n    ink: PropTypes.node,\r\n\r\n    /**\r\n     * Boolean if the spacebar should be used to trigger the click event. This _should_ be `true`\r\n     * is almost all cases.\r\n     */\r\n    listenToSpace: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the enter key should be used to trigger the click event. This _should_ be `true`\r\n     * in most cases. By default, the param will be ignored if the `role` attribute is for a `checkbox`\r\n     * or `radio`. When it is a checkbox or radio, it will attempt to submit the form on the enter\r\n     * keypress instead like the native elements.\r\n     */\r\n    listenToEnter: PropTypes.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    component: 'div',\r\n    tabIndex: 0,\r\n    role: 'button',\r\n    noFocusOutline: true,\r\n    listenToEnter: true,\r\n    listenToSpace: true,\r\n  };\r\n\r\n  state = { pressed: false, tabFocused: false };\r\n\r\n  /**\r\n   * Focuses the button.\r\n   */\r\n  focus = () => {\r\n    if (this._node) {\r\n      this._node.focus();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Blurs the button.\r\n   */\r\n  blur = () => {\r\n    if (this._node) {\r\n      this._node.blur();\r\n    }\r\n  };\r\n\r\n  _setNode = (node) => {\r\n    if (node) {\r\n      this._node = findDOMNode(node);\r\n    }\r\n  };\r\n\r\n  _handleClick = (e) => {\r\n    if (this.props.disabled) {\r\n      return;\r\n    }\r\n\r\n    if (this.props.onClick) {\r\n      this.props.onClick(e);\r\n    }\r\n\r\n    this._node.focus();\r\n    this.setState({ pressed: !this.state.pressed });\r\n  };\r\n\r\n  _handleKeyDown = (e) => {\r\n    const { disabled, onKeyDown, listenToEnter, listenToSpace } = this.props;\r\n    if (disabled) {\r\n      return;\r\n    }\r\n\r\n    if (onKeyDown) {\r\n      onKeyDown(e);\r\n    }\r\n\r\n    handleKeyboardAccessibility(e, this._handleClick, listenToEnter, listenToSpace);\r\n  };\r\n\r\n  _handleKeyUp = (e) => {\r\n    const { onKeyUp, onTabFocus } = this.props;\r\n    if (onKeyUp) {\r\n      onKeyUp(e);\r\n    }\r\n\r\n    if ((e.which || e.keyCode) === TAB) {\r\n      if (onTabFocus) {\r\n        onTabFocus(e);\r\n      }\r\n\r\n      this.setState({ tabFocused: true });\r\n    }\r\n  };\r\n\r\n  _handleBlur = (e) => {\r\n    if (this.props.onBlur) {\r\n      this.props.onBlur(e);\r\n    }\r\n\r\n    if (this.state.tabFocused) {\r\n      this.setState({ tabFocused: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      component: Component,\r\n      children,\r\n      className,\r\n      tabbedClassName,\r\n      disabled,\r\n      tabIndex,\r\n      ink,\r\n      noFocusOutline,\r\n      /* eslint-disable no-unused-vars */\r\n      onBlur,\r\n      onClick,\r\n      onKeyUp,\r\n      onKeyDown,\r\n      onTabFocus,\r\n      listenToEnter,\r\n      listenToSpace,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n\r\n    let childElements = children;\r\n    if (ink) {\r\n      childElements = Children.toArray(children);\r\n      childElements.unshift(ink);\r\n    }\r\n\r\n    return (\r\n      <Component\r\n        {...props}\r\n        ref={this._setNode}\r\n        className={cn('md-fake-btn', {\r\n          'md-pointer--hover': !disabled,\r\n          'md-fake-btn--no-outline': noFocusOutline,\r\n          [tabbedClassName]: tabbedClassName && this.state.tabFocused,\r\n        }, className)}\r\n        disabled={disabled}\r\n        tabIndex={disabled ? null : tabIndex}\r\n        onBlur={this._handleBlur}\r\n        onClick={this._handleClick}\r\n        onKeyUp={this._handleKeyUp}\r\n        onKeyDown={this._handleKeyDown}\r\n        aria-pressed={this.state.pressed}\r\n      >\r\n        {childElements}\r\n      </Component>\r\n    );\r\n  }\r\n}\r\n","/** @module utils/StringUtils/getDisplayName */\r\n\r\n/**\r\n * Gets the display name for a composed component.\r\n *\r\n * @param {function|Object} ComposedComponent - The composed component to use\r\n * @param {String} hoc - The higher order component's name to use.\r\n * @return {String} the new name of the component.\r\n */\r\nexport default function getDisplayName(ComposedComponent, hoc) {\r\n  const name = `${ComposedComponent.displayName || ComposedComponent.name || 'Component'}`;\r\n\r\n  return `with${hoc}(${name})`;\r\n}\r\n","/** @module utils/Positioning/getPagePosition */\r\n\r\n/**\r\n * Gets the current page position.\r\n *\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollY\r\n * @param {String} direction - The direction that should be retrieved. This\r\n *    should be either 'x' or 'y'.\r\n * @return {number} the position of the direction on the page.\r\n */\r\nexport default function getPagePosition(direction) {\r\n  const scroll = `scroll${direction === 'x' ? 'Left' : 'Top'}`;\r\n  if (typeof window.pageXOffset !== 'undefined') {\r\n    return window[`page${direction.toUpperCase()}Offset`];\r\n  } else if ((document.compatMode || '') === 'CSS1Compat') {\r\n    return document.documentElement[scroll];\r\n  } else {\r\n    return document.body[scroll];\r\n  }\r\n}\r\n","/** @module utils/Positioning/calcPageOffset */\r\nimport getPagePosition from './getPagePosition';\r\n\r\n/**\r\n * Calculates the page offset of an element. If the element\r\n * is false-ish, an empty object will be returned.\r\n *\r\n * This is really only used for calculating an ink position.\r\n *\r\n * @param {Node} el - An html node to find a page offset for.\r\n * @return {Object} an object with a left and top attribute for the page\r\n *    offset.\r\n */\r\nexport default function calcPageOffset(el) {\r\n  if (!el) {\r\n    return { left: null, right: null };\r\n  }\r\n\r\n  const rect = el.getBoundingClientRect();\r\n  return {\r\n    left: rect.left + getPagePosition('x'),\r\n    top: rect.top + getPagePosition('y'),\r\n  };\r\n}\r\n","/** @module utils/EventUtils/isValidClick */\r\nimport { LEFT_MOUSE } from '../../constants/keyCodes';\r\n\r\n/**\r\n * Checks if an event is a valid click event by ignoring\r\n * any clisk that are not the left mouse button and not\r\n * clicks that involve the shift key.\r\n *\r\n * @param {Object} e - the event to check\r\n * @return {Boolean} true if the event is valid.\r\n */\r\nexport default function isValidClick(e) {\r\n  return e.button === LEFT_MOUSE\r\n    && !e.shiftKey;\r\n}\r\n","// https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\r\nlet supportsPassive;\r\ntry {\r\n  const opts = Object.defineProperty({}, 'passive', {\r\n    get() {\r\n      supportsPassive = true;\r\n    },\r\n  });\r\n  window.addEventListener('test', null, opts);\r\n} catch (e) {\r\n  supportsPassive = false;\r\n}\r\n\r\n/**\r\n * A helper function for manually setting touch events on elements with the passive\r\n * option (when it is supported).\r\n *\r\n * @param {boolean} add - Boolean if the event listener should be added or removed.\r\n * @param {HTMLElement} el - The element to add the listener to.\r\n * @param {String} type - the event type to set. This should be 'start', 'move', or 'end'\r\n * @param {function} callback - The event listener callback function.\r\n * @param {Object=} options - any additional options to apply.\r\n */\r\nexport function setTouchEvent(add, el, eventType, callback, options) {\r\n  return el[`${add ? 'add' : 'remove'}EventListener`](\r\n    `touch${eventType}`,\r\n    callback,\r\n    supportsPassive ? { passive: true, ...options } : false\r\n  );\r\n}\r\n\r\n/**\r\n * A helper function for manually adding touch events on elements with the passive\r\n * option (when it is supported).\r\n *\r\n * @param {HTMLElement} el - The element to add the listener to.\r\n * @param {String} type - the event type to set. This should be 'start', 'move', or 'end'\r\n * @param {function} callback - The event listener callback function.\r\n * @param {Object=} options - any additional options to apply.\r\n */\r\nexport function addTouchEvent(el, type, callback, options) {\r\n  return setTouchEvent(true, el, type, callback, options);\r\n}\r\n\r\n/**\r\n * A helper function for manually removing touch events on elements with the passive\r\n * option (when it is supported).\r\n *\r\n * @param {HTMLElement} el - The element to add the listener to.\r\n * @param {String} type - the event type to set. This should be 'start', 'move', or 'end'\r\n * @param {function} callback - The event listener callback function.\r\n * @param {Object=} options - any additional options to apply.\r\n */\r\nexport function removeTouchEvent(el, type, callback, options) {\r\n  return setTouchEvent(false, el, type, callback, options);\r\n}\r\n","/** @module utils/EventUtils/captureNextEvent */\r\n\r\n/**\r\n * This function will capture the next event and stop propagation during the\r\n * bubbling cycle of events. This is really only useful if you want to stop\r\n * the default behavior of chained events.\r\n *\r\n * @param {String} type - The event type to capture.\r\n * @param {Object|func=} target - Either the DOM node to target, a callback function\r\n *      to call once the event has been captured, or undefined. If this is undefined,\r\n *      the event will be captured on the window.\r\n * @param {func=} callback - An optional callback function to call once the event\r\n *      has been captured.\r\n */\r\nexport default function captureNextEvent(type, target, callback) {\r\n  const el = typeof target !== 'function' && target ? target : window;\r\n  const cb = typeof target === 'function' ? target : callback;\r\n\r\n  const capture = e => {\r\n    e.stopPropagation();\r\n    if (cb) {\r\n      cb(e);\r\n    }\r\n\r\n    el.removeEventListener(type, capture, true);\r\n  };\r\n\r\n  el.addEventListener(type, capture, true);\r\n}\r\n","/** @module utils/NumberUtils/calculateHypotenuse */\r\n\r\n/**\r\n * Calculates the hypotenuse using the x and y coordinates given.\r\n *\r\n * @param {number} a the x coordinate\r\n * @param {number} b the y coordinate\r\n * @return {number} the hypotenuse length for the given x and y coordinates.\r\n */\r\nexport default function calculateHypotenuse(a, b) {\r\n  return Math.sqrt((a * a) + (b * b));\r\n}\r\n","// This will need to keep in sync with the `ReactCSSTransitionGroupChild` `TICK` const.\r\n// https://github.com/facebook/react/blob/master/src/addons/transitions/ReactCSSTransitionGroupChild.js#L22\r\n\r\nexport default 17;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport TICK from '../constants/CSSTransitionGroupTick';\r\n\r\nexport default class Ink extends PureComponent {\r\n  static propTypes = {\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    aborted: PropTypes.bool,\r\n    onRemove: PropTypes.func,\r\n    left: PropTypes.number.isRequired,\r\n    top: PropTypes.number.isRequired,\r\n    size: PropTypes.number.isRequired,\r\n    transitionOverlap: PropTypes.number.isRequired,\r\n    transitionEnterTimeout: PropTypes.number.isRequired,\r\n    transitionLeaveTimeout: PropTypes.number.isRequired,\r\n    pulse: PropTypes.bool,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      active: false,\r\n      expanded: false,\r\n      pulsing: false,\r\n      leaving: false,\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (!this.props.aborted && nextProps.aborted) {\r\n      if (this._timeout) {\r\n        clearTimeout(this._timeout);\r\n      }\r\n\r\n      if (this._abort) {\r\n        this._abort();\r\n      }\r\n\r\n      this.setState({ active: false, expanding: false, pulsing: false, leaving: false });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this._timeout) {\r\n      clearTimeout(this._timeout);\r\n    }\r\n  }\r\n\r\n  componentWillEnter(cb) {\r\n    if (this.props.aborted) {\r\n      cb();\r\n      return;\r\n    }\r\n\r\n    const { transitionOverlap, transitionEnterTimeout } = this.props;\r\n    this._abort = cb;\r\n\r\n    this._timeout = setTimeout(() => {\r\n      this._timeout = setTimeout(() => {\r\n        this._timeout = null;\r\n        this._abort = null;\r\n\r\n        cb();\r\n      }, transitionEnterTimeout - transitionOverlap);\r\n\r\n      this.setState({ expanded: true });\r\n    }, TICK);\r\n\r\n    this.setState({ active: true });\r\n  }\r\n\r\n  componentDidEnter() {\r\n    if (this.props.pulse) {\r\n      this._timeout = setTimeout(() => {\r\n        this._timeout = null;\r\n\r\n        this.setState({ pulsing: true });\r\n      }, this.props.transitionEnterTimeout);\r\n    }\r\n  }\r\n\r\n  componentWillLeave(cb) {\r\n    if (this.props.aborted) {\r\n      cb();\r\n      return;\r\n    }\r\n\r\n    if (this._timeout) {\r\n      clearTimeout(this._timeout);\r\n    }\r\n\r\n    this._abort = cb;\r\n    this._timeout = setTimeout(() => {\r\n      this._timeout = null;\r\n\r\n      cb();\r\n    }, this.props.transitionLeaveTimeout);\r\n\r\n\r\n    this.setState({ pulsing: false, leaving: true });\r\n  }\r\n\r\n  componentDidLeave() {\r\n    if (!this.props.aborted && this.props.onRemove) {\r\n      this.props.onRemove();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      style,\r\n      className,\r\n      left,\r\n      top,\r\n      size,\r\n    } = this.props;\r\n    const { active, expanded, pulsing, leaving } = this.state;\r\n\r\n    return (\r\n      <span\r\n        style={Object.assign({}, style, {\r\n          left,\r\n          top,\r\n          height: size,\r\n          width: size,\r\n        })}\r\n        className={cn('md-ink', {\r\n          'md-ink--active': active,\r\n          'md-ink--expanded': expanded,\r\n          'md-ink--pulsing': pulsing,\r\n          'md-ink--leaving': leaving,\r\n        }, className)}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport { findDOMNode } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport TransitionGroup from 'react-transition-group/TransitionGroup';\r\nimport cn from 'classnames';\r\n\r\nimport { ENTER, SPACE } from '../constants/keyCodes';\r\nimport isFormPartRole from '../utils/isFormPartRole';\r\nimport calcPageOffset from '../utils/Positioning/calcPageOffset';\r\nimport isValidClick from '../utils/EventUtils/isValidClick';\r\nimport { setTouchEvent, addTouchEvent, removeTouchEvent } from '../utils/EventUtils/touches';\r\nimport captureNextEvent from '../utils/EventUtils/captureNextEvent';\r\nimport calculateHypotenuse from '../utils/NumberUtils/calculateHypotenuse';\r\n\r\nimport Ink from './Ink';\r\n\r\n\r\n/**\r\n * The `InkContainer` is used for holding the list of inks that get created by touch,\r\n * click, or keyboard focus.\r\n *\r\n * If the container element has the `type=\"submit\"` attribute, the ink will also be\r\n * triggered when the user presses enter anywhere in the form.\r\n */\r\nexport default class InkContainer extends PureComponent {\r\n  static propTypes = {\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    inkStyle: PropTypes.object,\r\n    inkClassName: PropTypes.string,\r\n    waitForInkTransition: PropTypes.bool,\r\n    disabledInteractions: PropTypes.arrayOf(PropTypes.oneOf(['keyboard', 'mouse', 'touch'])),\r\n    transitionOverlap: PropTypes.number.isRequired,\r\n    transitionEnterTimeout: PropTypes.number.isRequired,\r\n    transitionLeaveTimeout: PropTypes.number.isRequired,\r\n    pulse: PropTypes.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    transitionOverlap: 150,\r\n    transitionEnterTimeout: 450,\r\n    transitionLeaveTimeout: 300,\r\n  };\r\n\r\n  state = { inks: [] };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { disabledInteractions: di } = this.props;\r\n    const { disabledInteractions: ndi } = nextProps;\r\n    if (di === ndi || !this._container) {\r\n      return;\r\n    }\r\n\r\n    const mouseDisabledDiff = this._isListenerDisabledDiff('mouse', di, ndi);\r\n    const touchDisabledDiff = this._isListenerDisabledDiff('touch', di, ndi);\r\n    const keyboardDisabledDiff = this._isListenerDisabledDiff('keyboard', di, ndi);\r\n    this._initOrRemoveEvents(nextProps, keyboardDisabledDiff, mouseDisabledDiff, touchDisabledDiff);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this._removeTimeout) {\r\n      clearTimeout(this._removeTimeout);\r\n    }\r\n\r\n    if (this._container) {\r\n      this._initOrRemoveEvents({ disabledInteractions: ['keyboard', 'mouse', 'touch'] });\r\n      this._getKeyboardContainer().removeEventListener('blur', this._handleBlur);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Creates an ink from pageX and pageY coordinates. These values should either come\r\n   * from the `changedTouches` or just the base event (if clicked). These coordinates\r\n   * are used to position the ink correctly in the container from touch/click point.\r\n   * If either value is undefined, an ink will be created from the center of the\r\n   * container.\r\n   *\r\n   * It will also automatically remove the ink.\r\n   *\r\n   * @param {number} pageX - The page x coordinate of the click or touch event.\r\n   * @param {number} pageY - The page y coordinate of the click or touch event.\r\n   */\r\n  createInk = (pageX, pageY) => {\r\n    this._createInk(pageX, pageY);\r\n    this._removeTimeout = setTimeout(() => {\r\n      this._removeTimeout = null;\r\n      this._removeInk();\r\n    }, this.props.transitionOverlap);\r\n  };\r\n\r\n  /**\r\n   * Focuses the main element.\r\n   */\r\n  focus = () => {\r\n    this._getKeyboardContainer().focus();\r\n  };\r\n\r\n  _isListenerDisabledDiff(interaction, disabledInteractions, nextDisabledInteractions) {\r\n    const i = disabledInteractions.indexOf(interaction);\r\n    const ni = nextDisabledInteractions.indexOf(interaction);\r\n\r\n    return (i < 0 && ni >= 0) || (i >= 0 && ni < 0);\r\n  }\r\n\r\n  _isListenerDisabled(interaction, disabledInteractions) {\r\n    return disabledInteractions && disabledInteractions.indexOf(interaction) !== -1;\r\n  }\r\n\r\n  /**\r\n   * Creates an ink from pageX and pageY coordinates. These values should either come\r\n   * from the `changedTouches` or just the base event (if clicked). These coordinates\r\n   * are used to position the ink correctly in the container from touch/click point.\r\n   * If either value is undefined, an ink will be created from the center of the\r\n   * container.\r\n   *\r\n   * @param {number} pageX - The page x coordinate of the click or touch event.\r\n   * @param {number} pageY - The page y coordinate of the click or touch event.\r\n   */\r\n  _createInk = (pageX, pageY) => {\r\n    const { offsetWidth, offsetHeight } = this._inkContainer;\r\n\r\n    let x;\r\n    let y;\r\n    if (typeof pageX !== 'undefined' && typeof pageY !== 'undefined') {\r\n      const pageOffset = calcPageOffset(this._inkContainer);\r\n\r\n      x = pageX - pageOffset.left;\r\n      y = pageY - pageOffset.top;\r\n    } else {\r\n      x = offsetWidth / 2;\r\n      y = offsetHeight / 2;\r\n    }\r\n\r\n    const r = Math.max(\r\n      calculateHypotenuse(x, y),\r\n      calculateHypotenuse(offsetWidth - x, y),\r\n      calculateHypotenuse(offsetWidth - x, offsetHeight - y),\r\n      calculateHypotenuse(x, offsetHeight - y)\r\n    );\r\n\r\n    const ink = {\r\n      left: x - r,\r\n      top: y - r,\r\n      size: r * 2,\r\n      key: Date.now(),\r\n    };\r\n\r\n    const inks = this.state.inks.slice();\r\n    inks.push(ink);\r\n    this.setState({ inks });\r\n  };\r\n\r\n  /**\r\n   * Removes an ink from the container.\r\n   */\r\n  _removeInk = () => {\r\n    const inks = this.state.inks.slice();\r\n    inks.pop();\r\n\r\n    this.setState({ inks });\r\n  };\r\n\r\n  /**\r\n   * Gets the container for any keyboard events. This will almost always be the main element,\r\n   * but text fields will need to be the input itself.\r\n   */\r\n  _getKeyboardContainer = () => {\r\n    if (this._container.classList.contains('md-text-field-container')) {\r\n      return this._container.querySelector('.md-text-field');\r\n    }\r\n\r\n    return this._container;\r\n  };\r\n\r\n  /**\r\n   * Sets the ink container and the main container from the ref callback. When the component\r\n   * is mounting, the keyboard, mouse, and keyboard events will be initialized.\r\n   */\r\n  _setContainers = (group) => {\r\n    if (group !== null) {\r\n      this._inkContainer = findDOMNode(group);\r\n      this._container = this._inkContainer.parentElement;\r\n\r\n      if (this._container) {\r\n        this._initOrRemoveEvents(this.props);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * This function will either add or remove the event listeners for creating inks.\r\n   *\r\n   * @param {Object} props - The current props to use for figuring out if the events should\r\n   *    be added or removed.\r\n   * @param {bool=} keyboardDiff - Boolean if there was a difference between the current props and either\r\n   *    the previous or next props for the keyboard interactions being disabled.\r\n   * @param {bool=} mouseDiff - Boolean if there was a difference between the current props and either\r\n   *    the previous or next props for the mouse interactions being disabled.\r\n   * @param {bool=} touchDiff - Boolean if there was a difference between the current props and either\r\n   *    the previous or next props for the touch interactions being disabled.\r\n   */\r\n  _initOrRemoveEvents = (props, keyboardDiff = true, mouseDiff = true, touchDiff = true) => {\r\n    const mouseDisabled = this._isListenerDisabled('mouse', props.disabledInteractions);\r\n    const touchDisabled = this._isListenerDisabled('touch', props.disabledInteractions);\r\n    const keyboardDisabled = this._isListenerDisabled('keyboard', props.disabledInteractions);\r\n\r\n    if (keyboardDiff) {\r\n      const fn = `${keyboardDisabled ? 'remove' : 'add'}EventListener`;\r\n      this._getKeyboardContainer()[fn]('focus', this._handleFocus);\r\n      this._getKeyboardContainer()[fn]('keydown', this._handleKeyDown);\r\n\r\n      if (this._container.getAttribute('type') === 'submit') {\r\n        window[fn]('submit', this._handleSubmit);\r\n      }\r\n\r\n      if (mouseDiff) {\r\n        this._container[`${!mouseDisabled ? 'add' : 'remove'}EventListener`]('mousedown', this._stopPropagationToFocus);\r\n      }\r\n\r\n      if (touchDiff) {\r\n        setTouchEvent(!touchDisabled, this._container, 'start', this._stopPropagationToFocus);\r\n      }\r\n    }\r\n\r\n    if (mouseDiff) {\r\n      const fn = `${mouseDisabled ? 'remove' : 'add'}EventListener`;\r\n      this._container[fn]('mousedown', this._handleMouseDown);\r\n      this._container[fn]('mouseup', this._handleMouseUp);\r\n    }\r\n\r\n    if (touchDiff) {\r\n      setTouchEvent(!touchDisabled, this._container, 'start', this._handleTouchStart);\r\n      setTouchEvent(!touchDisabled, this._container, 'end', this._handleTouchEnd);\r\n    }\r\n  };\r\n\r\n  _maybeDelayClick = () => {\r\n    if (!this.props.waitForInkTransition) {\r\n      return;\r\n    }\r\n\r\n    captureNextEvent('click', this._container);\r\n  };\r\n\r\n  _handleRemove = () => {\r\n    if (this._clicked && this.props.waitForInkTransition) {\r\n      // For some reason if the click event will make the ink unmount, it will no longer\r\n      // have a debug id in the TransitionGroup and it displays a warning. Adding a 1ms timeout\r\n      // fixes that issue... It only happens on an actual click instead of an enter click.\r\n      setTimeout(() => {\r\n        this._container.click();\r\n      }, 1);\r\n    }\r\n\r\n    this._clicked = false;\r\n  };\r\n\r\n  _handleKeyDown = (e) => {\r\n    const key = e.which || e.keyCode;\r\n    const enter = key === ENTER;\r\n    const space = key === SPACE;\r\n    // Don't trigger ink when enter key is pressed and the target has an input inside of it (SelectField)\r\n    if (space || (enter && !isFormPartRole(e.target) && !e.target.querySelector('input'))) {\r\n      this._clicked = true;\r\n      this.createInk();\r\n      this._maybeDelayClick();\r\n    }\r\n  };\r\n\r\n  _handleFocus = () => {\r\n    if (this._clicked) {\r\n      return;\r\n    }\r\n\r\n    this._createInk();\r\n    this._getKeyboardContainer().addEventListener('blur', this._handleBlur);\r\n  };\r\n\r\n  _handleBlur = () => {\r\n    this._getKeyboardContainer().removeEventListener('blur', this._handleBlur);\r\n    this._removeInk();\r\n  };\r\n\r\n  _handleMouseDown = (e) => {\r\n    this._clicked = true;\r\n    if (!isValidClick(e) || this._skipNextMouse) {\r\n      this._skipNextMouse = false;\r\n      return;\r\n    }\r\n\r\n    this._mouseLeave = false;\r\n    this._container.addEventListener('mouseleave', this._handleMouseLeave);\r\n    this._createInk(e.pageX, e.pageY);\r\n  };\r\n\r\n  _handleMouseLeave = () => {\r\n    this._container.removeEventListener('mouseleave', this._handleMouseLeave);\r\n    this._mouseLeave = true;\r\n    this._removeInk();\r\n  };\r\n\r\n  _handleMouseUp = () => {\r\n    if (this._mouseLeave) {\r\n      return;\r\n    }\r\n\r\n    this._maybeDelayClick();\r\n    this._container.removeEventListener('mouseleave', this._handleMouseLeave);\r\n    this._removeInk();\r\n  };\r\n\r\n  _handleTouchStart = (e) => {\r\n    this._aborted = false;\r\n    this._clicked = true;\r\n    this._skipNextMouse = true;\r\n    addTouchEvent(window, 'move', this._handleTouchMove);\r\n\r\n    const { pageX, pageY } = e.changedTouches[0];\r\n    this._createInk(pageX, pageY);\r\n  };\r\n\r\n  _handleTouchMove = () => {\r\n    removeTouchEvent(window, 'move', this._handleTouchMove);\r\n    const lastInk = this.state.inks[this.state.inks.length - 1];\r\n    if (!lastInk || Date.now() > (lastInk.key + 200)) {\r\n      this._aborted = false;\r\n      return;\r\n    }\r\n\r\n    const inks = this.state.inks.slice();\r\n    const index = inks.length - 1;\r\n\r\n    const abortedInk = Object.assign({}, lastInk, { aborted: true });\r\n    inks.splice(index, 1, abortedInk);\r\n\r\n    this._aborted = true;\r\n    this.setState({ inks }, this._removeInk);\r\n  };\r\n\r\n  _handleTouchEnd = () => {\r\n    this._skipNextMouse = true;\r\n\r\n    if (this._aborted) {\r\n      return;\r\n    } else {\r\n      removeTouchEvent(window, 'move', this._handleTouchMove);\r\n    }\r\n\r\n    this._removeInk();\r\n  };\r\n\r\n  /**\r\n   * If a form was submitted that contains the container of the ink and the current focus element\r\n   * is not the container, trigger an ink effect.\r\n   *\r\n   * The current focus check is added so that two inks are not created.\r\n   */\r\n  _handleSubmit = (e) => {\r\n    if (document.activeElement === this._container || !e.target.contains(this._container)) {\r\n      return;\r\n    }\r\n\r\n    this._maybeDelayClick();\r\n    this.createInk();\r\n  };\r\n\r\n  _stopPropagationToFocus = (e) => {\r\n    switch (e.type) {\r\n      case 'touchstart':\r\n        addTouchEvent(window, 'end', this._stopPropagationToFocus, { capture: true });\r\n        break;\r\n      case 'touchend':\r\n        removeTouchEvent(window, 'end', this._stopPropagationToFocus, { capture: true });\r\n        break;\r\n      case 'mousedown':\r\n        window.addEventListener('mouseup', this._stopPropagationToFocus, true);\r\n        break;\r\n      case 'mouseup':\r\n        window.removeEventListener('mouseup', this._stopPropagationToFocus, true);\r\n        break;\r\n      default:\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      style,\r\n      className,\r\n      inkStyle,\r\n      inkClassName,\r\n      transitionOverlap,\r\n      transitionEnterTimeout,\r\n      transitionLeaveTimeout,\r\n      pulse,\r\n    } = this.props;\r\n    const inks = this.state.inks.map(props => (\r\n      <Ink\r\n        {...props}\r\n        pulse={pulse}\r\n        style={inkStyle}\r\n        className={inkClassName}\r\n        onRemove={this._handleRemove}\r\n        transitionOverlap={transitionOverlap}\r\n        transitionEnterTimeout={transitionEnterTimeout}\r\n        transitionLeaveTimeout={transitionLeaveTimeout}\r\n      />\r\n    ));\r\n\r\n    return (\r\n      <TransitionGroup\r\n        component=\"div\"\r\n        style={style}\r\n        className={cn('md-ink-container', className)}\r\n        ref={this._setContainers}\r\n      >\r\n        {inks}\r\n      </TransitionGroup>\r\n    );\r\n  }\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default {\r\n  inkDisabled: PropTypes.bool,\r\n  inkDisabledInteractions: PropTypes.arrayOf(PropTypes.oneOf(['keyboard', 'mouse', 'touch'])),\r\n};\r\n","import React, { PureComponent } from 'react';\r\nimport { findDOMNode } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport getField from '../utils/getField';\r\nimport getDisplayName from '../utils/StringUtils/getDisplayName';\r\n\r\nimport InkContainer from './InkContainer';\r\nimport inkContextTypes from './inkContextTypes';\r\n\r\n/**\r\n * Takes any component and injects an ink container for having the Material Design Ink effect.\r\n *\r\n * The default triggers for an ink are:\r\n * - mouse down event\r\n * - touch start event\r\n * - keyboard focus\r\n * - form submit\r\n *\r\n * The form submit ink will only be triggered if the `ComposedComponent` has the attribute\r\n * `type=\"submit\"`, the `ComposedComponent` is in a form, and the user hits the `enter` key\r\n * while not actively focusing the `ComposedComponent`.\r\n *\r\n * ```js\r\n * @param {function} ComposedComponent - The React Component to inject an `ink` prop into.\r\n * @return {function} a new React class rendering the `ComposedComponent` and adding an\r\n *    `ink` pop.\r\n * ```\r\n */\r\nexport default ComposedComponent => class InkedComponent extends PureComponent {\r\n  static displayName = getDisplayName(ComposedComponent, 'Ink');\r\n  static propTypes = {\r\n    /**\r\n     * An optional style to apply to each ink that gets generated.\r\n     */\r\n    inkStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to each ink that gets generated.\r\n     */\r\n    inkClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the ink's container.\r\n     */\r\n    inkContainerStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the ink's container.\r\n     */\r\n    inkContainerClassName: PropTypes.string,\r\n\r\n    /**\r\n     * Boolean if the composed component or the ink is disabled.\r\n     */\r\n    disabled: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if only the ink is disabled for the composed component.\r\n     */\r\n    inkDisabled: PropTypes.bool,\r\n\r\n    /**\r\n     * The time (in ms) that the enter and leave transitions for the ink should overlap.\r\n     * This really just allows for a more _fluid_ looking ink when something is quickly\r\n     * touched or clicked by having it fade out while growing.\r\n     */\r\n    inkTransitionOverlap: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * The transition time for the ink to be considered fully entered. This should really\r\n     * map up to whatever value you set for `$md-ink-enter-transition-time`.\r\n     */\r\n    inkTransitionEnterTimeout: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * The transition time for the ink to be considered fully leaved (left?). This should really\r\n     * map up to whatever value you set for `$md-ink-leave-transition-time`.\r\n     */\r\n    inkTransitionLeaveTimeout: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * Boolean if the `ComposedComponent`'s click event only after the ink has finished transitioning\r\n     * in and out. This is really only to get a more _fluid_ looking click event when clicking on\r\n     * the `ComposedComponent` ends up taking it out of the view. (ex: Closing a Dialog).\r\n     */\r\n    waitForInkTransition: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional array of interactions that can be disabled for the ink. This is a *very* limited\r\n     * use case where `Switches` needed the ink disabled only when using a mouse.\r\n     */\r\n    disabledInteractions: PropTypes.arrayOf(PropTypes.oneOf(['keyboard', 'mouse', 'touch'])),\r\n\r\n    /**\r\n     * Boolean if the ink should do a pulse animation while focused. This was enabled by default in\r\n     * previous versions.\r\n     */\r\n    pulse: PropTypes.bool,\r\n\r\n    /**\r\n     * When using inked components in a `TransitionGroup`, the ref callback is not actually invoked.\r\n     * This is a little _hack_ to get it to work by not using `ref`, but this name.\r\n     */\r\n    __SUPER_SECRET_REF__: PropTypes.func,\r\n  };\r\n\r\n  static defaultProps = {\r\n    inkTransitionOverlap: 150,\r\n    inkTransitionEnterTimeout: 450,\r\n    inkTransitionLeaveTimeout: 300,\r\n  };\r\n\r\n  static contextTypes = inkContextTypes;\r\n\r\n  componentDidMount() {\r\n    const { __SUPER_SECRET_REF__: ref } = this.props;\r\n    // Emulate the ref callback...\r\n    if (ref) {\r\n      ref(this);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { __SUPER_SECRET_REF__: ref } = this.props;\r\n    // Emulate the ref callback...\r\n    if (ref) {\r\n      ref(null);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A publicly accessible way to manually create an ink. This can be used with the `refs`.\r\n   * The ink can either be created by using the `pageX` and `pageY` from a click/touch event\r\n   * or it will be created in the center of the `ComposedComponent`.\r\n   *\r\n   * ```js\r\n   * <SomeInkedComponent ref={inkHOC => inkHOC.createInk()} />\r\n   * ```\r\n   *\r\n   * @param {number=} pageX - An optional pageX of the click or touch event.\r\n   * @param {number=} pageY - An optional pageY of the click or touch event.\r\n   */\r\n  createInk = (pageX, pageY) => {\r\n    if (this._inkContainer && !this.props.disabled && !this.props.inkDisabled) {\r\n      this._inkContainer.createInk(pageX, pageY);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * This will attempt to focus the composed component. If the component is disabled, nothing\r\n   * will happen. If the `disabled` and `inkDisabled` props are not set to `true`, an ink will\r\n   * also be created.\r\n   *\r\n   * ```js\r\n   * <SomeInkedComponent ref={inkHOC => inkHOC.focus()} />\r\n   * ```\r\n   */\r\n  focus = () => {\r\n    if (this.props.inkDisabled) {\r\n      const composed = findDOMNode(this._composed);\r\n      if (composed) {\r\n        composed.focus();\r\n      }\r\n    } else if (this._inkContainer) {\r\n      this._inkContainer.focus();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Gets the composed component as a ref. This is useful if you need to access the ref of the\r\n   * composed component instead of the `injectInk` HOC to use some publicly accessible methods.\r\n   *\r\n   * ```js\r\n   * <SomeInkedComponent\r\n   *   ref={inkHOC => {\r\n   *     inkHOC.getComposedComponent().focus();\r\n   *   }}\r\n   * />\r\n   * ```\r\n   */\r\n  getComposedComponent = () => this._composed;\r\n\r\n  _setInkRef= (inkContainer) => {\r\n    if (inkContainer) {\r\n      this._inkContainer = inkContainer;\r\n    }\r\n  };\r\n\r\n  _setComposedComponent = (component) => {\r\n    this._composed = component;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      inkTransitionOverlap: transitionOverlap,\r\n      inkTransitionEnterTimeout: transitionEnterTimeout,\r\n      inkTransitionLeaveTimeout: transitionLeaveTimeout,\r\n      inkStyle,\r\n      inkClassName,\r\n      inkContainerStyle,\r\n      inkContainerClassName,\r\n      waitForInkTransition,\r\n      disabledInteractions,\r\n      pulse,\r\n      inkDisabled: propInkDisabled, // eslint-disable-line no-unused-vars\r\n      __SUPER_SECRET_REF__, // eslint-disable-line no-unused-vars\r\n      ...props\r\n    } = this.props;\r\n\r\n    const inkDisabled = getField(this.props, this.context, 'inkDisabled');\r\n    const inkDisabledInteractions = typeof disabledInteractions !== 'undefined'\r\n      ? disabledInteractions\r\n      : this.context.inkDisabledInteractions;\r\n\r\n    if (!(props.disabled || inkDisabled)) {\r\n      props.ink = (\r\n        <InkContainer\r\n          ref={this._setInkRef}\r\n          key=\"ink-container\"\r\n          pulse={pulse}\r\n          style={inkContainerStyle}\r\n          className={inkContainerClassName}\r\n          inkStyle={inkStyle}\r\n          inkClassName={inkClassName}\r\n          disabledInteractions={inkDisabledInteractions}\r\n          transitionOverlap={transitionOverlap}\r\n          transitionEnterTimeout={transitionEnterTimeout}\r\n          transitionLeaveTimeout={transitionLeaveTimeout}\r\n          waitForInkTransition={waitForInkTransition}\r\n        />\r\n      );\r\n    }\r\n\r\n    props.ref = this._setComposedComponent;\r\n\r\n    return <ComposedComponent {...props} />;\r\n  }\r\n};\r\n","import AccessibleFakeButton from './AccessibleFakeButton';\r\nimport injectInk from '../Inks/injectInk';\r\n\r\nexport default injectInk(AccessibleFakeButton);\r\n","\n\n// currently used to initiate the velocity style object to 0\n'use strict';\n\nexports.__esModule = true;\nexports['default'] = mapToZero;\n\nfunction mapToZero(obj) {\n  var ret = {};\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      ret[key] = 0;\n    }\n  }\n  return ret;\n}\n\nmodule.exports = exports['default'];","\n// turn {x: {val: 1, stiffness: 1, damping: 2}, y: 2} generated by\n// `{x: spring(1, {stiffness: 1, damping: 2}), y: 2}` into {x: 1, y: 2}\n\n'use strict';\n\nexports.__esModule = true;\nexports['default'] = stripStyle;\n\nfunction stripStyle(style) {\n  var ret = {};\n  for (var key in style) {\n    if (!Object.prototype.hasOwnProperty.call(style, key)) {\n      continue;\n    }\n    ret[key] = typeof style[key] === 'number' ? style[key] : style[key].val;\n  }\n  return ret;\n}\n\nmodule.exports = exports['default'];","\n\n// stepper is used a lot. Saves allocation to return the same array wrapper.\n// This is fine and danger-free against mutations because the callsite\n// immediately destructures it and gets the numbers inside without passing the\n\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = stepper;\n\nvar reusedTuple = [0, 0];\n\nfunction stepper(secondPerFrame, x, v, destX, k, b, precision) {\n  // Spring stiffness, in kg / s^2\n\n  // for animations, destX is really spring length (spring at rest). initial\n  // position is considered as the stretched/compressed position of a spring\n  var Fspring = -k * (x - destX);\n\n  // Damping, in kg / s\n  var Fdamper = -b * v;\n\n  // usually we put mass here, but for animation purposes, specifying mass is a\n  // bit redundant. you could simply adjust k and b accordingly\n  // let a = (Fspring + Fdamper) / mass;\n  var a = Fspring + Fdamper;\n\n  var newV = v + a * secondPerFrame;\n  var newX = x + newV * secondPerFrame;\n\n  if (Math.abs(newV) < precision && Math.abs(newX - destX) < precision) {\n    reusedTuple[0] = destX;\n    reusedTuple[1] = 0;\n    return reusedTuple;\n  }\n\n  reusedTuple[0] = newX;\n  reusedTuple[1] = newV;\n  return reusedTuple;\n}\n\nmodule.exports = exports[\"default\"];\n// array reference around.","var now = require('performance-now')\n  , root = typeof window === 'undefined' ? global : window\n  , vendors = ['moz', 'webkit']\n  , suffix = 'AnimationFrame'\n  , raf = root['request' + suffix]\n  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]\n\nfor(var i = 0; !raf && i < vendors.length; i++) {\n  raf = root[vendors[i] + 'Request' + suffix]\n  caf = root[vendors[i] + 'Cancel' + suffix]\n      || root[vendors[i] + 'CancelRequest' + suffix]\n}\n\n// Some versions of FF have rAF but not cAF\nif(!raf || !caf) {\n  var last = 0\n    , id = 0\n    , queue = []\n    , frameDuration = 1000 / 60\n\n  raf = function(callback) {\n    if(queue.length === 0) {\n      var _now = now()\n        , next = Math.max(0, frameDuration - (_now - last))\n      last = next + _now\n      setTimeout(function() {\n        var cp = queue.slice(0)\n        // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n        queue.length = 0\n        for(var i = 0; i < cp.length; i++) {\n          if(!cp[i].cancelled) {\n            try{\n              cp[i].callback(last)\n            } catch(e) {\n              setTimeout(function() { throw e }, 0)\n            }\n          }\n        }\n      }, Math.round(next))\n    }\n    queue.push({\n      handle: ++id,\n      callback: callback,\n      cancelled: false\n    })\n    return id\n  }\n\n  caf = function(handle) {\n    for(var i = 0; i < queue.length; i++) {\n      if(queue[i].handle === handle) {\n        queue[i].cancelled = true\n      }\n    }\n  }\n}\n\nmodule.exports = function(fn) {\n  // Wrap in a new function to prevent\n  // `cancel` potentially being assigned\n  // to the native rAF function\n  return raf.call(root, fn)\n}\nmodule.exports.cancel = function() {\n  caf.apply(root, arguments)\n}\nmodule.exports.polyfill = function(object) {\n  if (!object) {\n    object = root;\n  }\n  object.requestAnimationFrame = raf\n  object.cancelAnimationFrame = caf\n}\n","// Generated by CoffeeScript 1.7.1\n(function() {\n  var getNanoSeconds, hrtime, loadTime;\n\n  if ((typeof performance !== \"undefined\" && performance !== null) && performance.now) {\n    module.exports = function() {\n      return performance.now();\n    };\n  } else if ((typeof process !== \"undefined\" && process !== null) && process.hrtime) {\n    module.exports = function() {\n      return (getNanoSeconds() - loadTime) / 1e6;\n    };\n    hrtime = process.hrtime;\n    getNanoSeconds = function() {\n      var hr;\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n    loadTime = getNanoSeconds();\n  } else if (Date.now) {\n    module.exports = function() {\n      return Date.now() - loadTime;\n    };\n    loadTime = Date.now();\n  } else {\n    module.exports = function() {\n      return new Date().getTime() - loadTime;\n    };\n    loadTime = new Date().getTime();\n  }\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.2\n(function() {\n  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;\n\n  if ((typeof performance !== \"undefined\" && performance !== null) && performance.now) {\n    module.exports = function() {\n      return performance.now();\n    };\n  } else if ((typeof process !== \"undefined\" && process !== null) && process.hrtime) {\n    module.exports = function() {\n      return (getNanoSeconds() - nodeLoadTime) / 1e6;\n    };\n    hrtime = process.hrtime;\n    getNanoSeconds = function() {\n      var hr;\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n    moduleLoadTime = getNanoSeconds();\n    upTime = process.uptime() * 1e9;\n    nodeLoadTime = moduleLoadTime - upTime;\n  } else if (Date.now) {\n    module.exports = function() {\n      return Date.now() - loadTime;\n    };\n    loadTime = Date.now();\n  } else {\n    module.exports = function() {\n      return new Date().getTime() - loadTime;\n    };\n    loadTime = new Date().getTime();\n  }\n\n}).call(this);\n\n//# sourceMappingURL=performance-now.js.map\n","\n\n// usage assumption: currentStyle values have already been rendered but it says\n// nothing of whether currentStyle is stale (see unreadPropStyle)\n'use strict';\n\nexports.__esModule = true;\nexports['default'] = shouldStopAnimation;\n\nfunction shouldStopAnimation(currentStyle, style, currentVelocity) {\n  for (var key in style) {\n    if (!Object.prototype.hasOwnProperty.call(style, key)) {\n      continue;\n    }\n\n    if (currentVelocity[key] !== 0) {\n      return false;\n    }\n\n    var styleValue = typeof style[key] === 'number' ? style[key] : style[key].val;\n    // stepper will have already taken care of rounding precision errors, so\n    // won't have such thing as 0.9999 !=== 1\n    if (currentStyle[key] !== styleValue) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _mapToZero = require('./mapToZero');\n\nvar _mapToZero2 = _interopRequireDefault(_mapToZero);\n\nvar _stripStyle = require('./stripStyle');\n\nvar _stripStyle2 = _interopRequireDefault(_stripStyle);\n\nvar _stepper3 = require('./stepper');\n\nvar _stepper4 = _interopRequireDefault(_stepper3);\n\nvar _performanceNow = require('performance-now');\n\nvar _performanceNow2 = _interopRequireDefault(_performanceNow);\n\nvar _raf = require('raf');\n\nvar _raf2 = _interopRequireDefault(_raf);\n\nvar _shouldStopAnimation = require('./shouldStopAnimation');\n\nvar _shouldStopAnimation2 = _interopRequireDefault(_shouldStopAnimation);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar msPerFrame = 1000 / 60;\n\nvar Motion = (function (_React$Component) {\n  _inherits(Motion, _React$Component);\n\n  _createClass(Motion, null, [{\n    key: 'propTypes',\n    value: {\n      // TOOD: warn against putting a config in here\n      defaultStyle: _propTypes2['default'].objectOf(_propTypes2['default'].number),\n      style: _propTypes2['default'].objectOf(_propTypes2['default'].oneOfType([_propTypes2['default'].number, _propTypes2['default'].object])).isRequired,\n      children: _propTypes2['default'].func.isRequired,\n      onRest: _propTypes2['default'].func\n    },\n    enumerable: true\n  }]);\n\n  function Motion(props) {\n    var _this = this;\n\n    _classCallCheck(this, Motion);\n\n    _React$Component.call(this, props);\n    this.wasAnimating = false;\n    this.animationID = null;\n    this.prevTime = 0;\n    this.accumulatedTime = 0;\n    this.unreadPropStyle = null;\n\n    this.clearUnreadPropStyle = function (destStyle) {\n      var dirty = false;\n      var _state = _this.state;\n      var currentStyle = _state.currentStyle;\n      var currentVelocity = _state.currentVelocity;\n      var lastIdealStyle = _state.lastIdealStyle;\n      var lastIdealVelocity = _state.lastIdealVelocity;\n\n      for (var key in destStyle) {\n        if (!Object.prototype.hasOwnProperty.call(destStyle, key)) {\n          continue;\n        }\n\n        var styleValue = destStyle[key];\n        if (typeof styleValue === 'number') {\n          if (!dirty) {\n            dirty = true;\n            currentStyle = _extends({}, currentStyle);\n            currentVelocity = _extends({}, currentVelocity);\n            lastIdealStyle = _extends({}, lastIdealStyle);\n            lastIdealVelocity = _extends({}, lastIdealVelocity);\n          }\n\n          currentStyle[key] = styleValue;\n          currentVelocity[key] = 0;\n          lastIdealStyle[key] = styleValue;\n          lastIdealVelocity[key] = 0;\n        }\n      }\n\n      if (dirty) {\n        _this.setState({ currentStyle: currentStyle, currentVelocity: currentVelocity, lastIdealStyle: lastIdealStyle, lastIdealVelocity: lastIdealVelocity });\n      }\n    };\n\n    this.startAnimationIfNecessary = function () {\n      // TODO: when config is {a: 10} and dest is {a: 10} do we raf once and\n      // call cb? No, otherwise accidental parent rerender causes cb trigger\n      _this.animationID = _raf2['default'](function (timestamp) {\n        // check if we need to animate in the first place\n        var propsStyle = _this.props.style;\n        if (_shouldStopAnimation2['default'](_this.state.currentStyle, propsStyle, _this.state.currentVelocity)) {\n          if (_this.wasAnimating && _this.props.onRest) {\n            _this.props.onRest();\n          }\n\n          // no need to cancel animationID here; shouldn't have any in flight\n          _this.animationID = null;\n          _this.wasAnimating = false;\n          _this.accumulatedTime = 0;\n          return;\n        }\n\n        _this.wasAnimating = true;\n\n        var currentTime = timestamp || _performanceNow2['default']();\n        var timeDelta = currentTime - _this.prevTime;\n        _this.prevTime = currentTime;\n        _this.accumulatedTime = _this.accumulatedTime + timeDelta;\n        // more than 10 frames? prolly switched browser tab. Restart\n        if (_this.accumulatedTime > msPerFrame * 10) {\n          _this.accumulatedTime = 0;\n        }\n\n        if (_this.accumulatedTime === 0) {\n          // no need to cancel animationID here; shouldn't have any in flight\n          _this.animationID = null;\n          _this.startAnimationIfNecessary();\n          return;\n        }\n\n        var currentFrameCompletion = (_this.accumulatedTime - Math.floor(_this.accumulatedTime / msPerFrame) * msPerFrame) / msPerFrame;\n        var framesToCatchUp = Math.floor(_this.accumulatedTime / msPerFrame);\n\n        var newLastIdealStyle = {};\n        var newLastIdealVelocity = {};\n        var newCurrentStyle = {};\n        var newCurrentVelocity = {};\n\n        for (var key in propsStyle) {\n          if (!Object.prototype.hasOwnProperty.call(propsStyle, key)) {\n            continue;\n          }\n\n          var styleValue = propsStyle[key];\n          if (typeof styleValue === 'number') {\n            newCurrentStyle[key] = styleValue;\n            newCurrentVelocity[key] = 0;\n            newLastIdealStyle[key] = styleValue;\n            newLastIdealVelocity[key] = 0;\n          } else {\n            var newLastIdealStyleValue = _this.state.lastIdealStyle[key];\n            var newLastIdealVelocityValue = _this.state.lastIdealVelocity[key];\n            for (var i = 0; i < framesToCatchUp; i++) {\n              var _stepper = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);\n\n              newLastIdealStyleValue = _stepper[0];\n              newLastIdealVelocityValue = _stepper[1];\n            }\n\n            var _stepper2 = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);\n\n            var nextIdealX = _stepper2[0];\n            var nextIdealV = _stepper2[1];\n\n            newCurrentStyle[key] = newLastIdealStyleValue + (nextIdealX - newLastIdealStyleValue) * currentFrameCompletion;\n            newCurrentVelocity[key] = newLastIdealVelocityValue + (nextIdealV - newLastIdealVelocityValue) * currentFrameCompletion;\n            newLastIdealStyle[key] = newLastIdealStyleValue;\n            newLastIdealVelocity[key] = newLastIdealVelocityValue;\n          }\n        }\n\n        _this.animationID = null;\n        // the amount we're looped over above\n        _this.accumulatedTime -= framesToCatchUp * msPerFrame;\n\n        _this.setState({\n          currentStyle: newCurrentStyle,\n          currentVelocity: newCurrentVelocity,\n          lastIdealStyle: newLastIdealStyle,\n          lastIdealVelocity: newLastIdealVelocity\n        });\n\n        _this.unreadPropStyle = null;\n\n        _this.startAnimationIfNecessary();\n      });\n    };\n\n    this.state = this.defaultState();\n  }\n\n  Motion.prototype.defaultState = function defaultState() {\n    var _props = this.props;\n    var defaultStyle = _props.defaultStyle;\n    var style = _props.style;\n\n    var currentStyle = defaultStyle || _stripStyle2['default'](style);\n    var currentVelocity = _mapToZero2['default'](currentStyle);\n    return {\n      currentStyle: currentStyle,\n      currentVelocity: currentVelocity,\n      lastIdealStyle: currentStyle,\n      lastIdealVelocity: currentVelocity\n    };\n  };\n\n  // it's possible that currentStyle's value is stale: if props is immediately\n  // changed from 0 to 400 to spring(0) again, the async currentStyle is still\n  // at 0 (didn't have time to tick and interpolate even once). If we naively\n  // compare currentStyle with destVal it'll be 0 === 0 (no animation, stop).\n  // In reality currentStyle should be 400\n\n  Motion.prototype.componentDidMount = function componentDidMount() {\n    this.prevTime = _performanceNow2['default']();\n    this.startAnimationIfNecessary();\n  };\n\n  Motion.prototype.componentWillReceiveProps = function componentWillReceiveProps(props) {\n    if (this.unreadPropStyle != null) {\n      // previous props haven't had the chance to be set yet; set them here\n      this.clearUnreadPropStyle(this.unreadPropStyle);\n    }\n\n    this.unreadPropStyle = props.style;\n    if (this.animationID == null) {\n      this.prevTime = _performanceNow2['default']();\n      this.startAnimationIfNecessary();\n    }\n  };\n\n  Motion.prototype.componentWillUnmount = function componentWillUnmount() {\n    if (this.animationID != null) {\n      _raf2['default'].cancel(this.animationID);\n      this.animationID = null;\n    }\n  };\n\n  Motion.prototype.render = function render() {\n    var renderedChildren = this.props.children(this.state.currentStyle);\n    return renderedChildren && _react2['default'].Children.only(renderedChildren);\n  };\n\n  return Motion;\n})(_react2['default'].Component);\n\nexports['default'] = Motion;\nmodule.exports = exports['default'];\n\n// after checking for unreadPropStyle != null, we manually go set the\n// non-interpolating values (those that are a number, without a spring\n// config)","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _mapToZero = require('./mapToZero');\n\nvar _mapToZero2 = _interopRequireDefault(_mapToZero);\n\nvar _stripStyle = require('./stripStyle');\n\nvar _stripStyle2 = _interopRequireDefault(_stripStyle);\n\nvar _stepper3 = require('./stepper');\n\nvar _stepper4 = _interopRequireDefault(_stepper3);\n\nvar _performanceNow = require('performance-now');\n\nvar _performanceNow2 = _interopRequireDefault(_performanceNow);\n\nvar _raf = require('raf');\n\nvar _raf2 = _interopRequireDefault(_raf);\n\nvar _shouldStopAnimation = require('./shouldStopAnimation');\n\nvar _shouldStopAnimation2 = _interopRequireDefault(_shouldStopAnimation);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar msPerFrame = 1000 / 60;\n\nfunction shouldStopAnimationAll(currentStyles, styles, currentVelocities) {\n  for (var i = 0; i < currentStyles.length; i++) {\n    if (!_shouldStopAnimation2['default'](currentStyles[i], styles[i], currentVelocities[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nvar StaggeredMotion = (function (_React$Component) {\n  _inherits(StaggeredMotion, _React$Component);\n\n  _createClass(StaggeredMotion, null, [{\n    key: 'propTypes',\n    value: {\n      // TOOD: warn against putting a config in here\n      defaultStyles: _propTypes2['default'].arrayOf(_propTypes2['default'].objectOf(_propTypes2['default'].number)),\n      styles: _propTypes2['default'].func.isRequired,\n      children: _propTypes2['default'].func.isRequired\n    },\n    enumerable: true\n  }]);\n\n  function StaggeredMotion(props) {\n    var _this = this;\n\n    _classCallCheck(this, StaggeredMotion);\n\n    _React$Component.call(this, props);\n    this.animationID = null;\n    this.prevTime = 0;\n    this.accumulatedTime = 0;\n    this.unreadPropStyles = null;\n\n    this.clearUnreadPropStyle = function (unreadPropStyles) {\n      var _state = _this.state;\n      var currentStyles = _state.currentStyles;\n      var currentVelocities = _state.currentVelocities;\n      var lastIdealStyles = _state.lastIdealStyles;\n      var lastIdealVelocities = _state.lastIdealVelocities;\n\n      var someDirty = false;\n      for (var i = 0; i < unreadPropStyles.length; i++) {\n        var unreadPropStyle = unreadPropStyles[i];\n        var dirty = false;\n\n        for (var key in unreadPropStyle) {\n          if (!Object.prototype.hasOwnProperty.call(unreadPropStyle, key)) {\n            continue;\n          }\n\n          var styleValue = unreadPropStyle[key];\n          if (typeof styleValue === 'number') {\n            if (!dirty) {\n              dirty = true;\n              someDirty = true;\n              currentStyles[i] = _extends({}, currentStyles[i]);\n              currentVelocities[i] = _extends({}, currentVelocities[i]);\n              lastIdealStyles[i] = _extends({}, lastIdealStyles[i]);\n              lastIdealVelocities[i] = _extends({}, lastIdealVelocities[i]);\n            }\n            currentStyles[i][key] = styleValue;\n            currentVelocities[i][key] = 0;\n            lastIdealStyles[i][key] = styleValue;\n            lastIdealVelocities[i][key] = 0;\n          }\n        }\n      }\n\n      if (someDirty) {\n        _this.setState({ currentStyles: currentStyles, currentVelocities: currentVelocities, lastIdealStyles: lastIdealStyles, lastIdealVelocities: lastIdealVelocities });\n      }\n    };\n\n    this.startAnimationIfNecessary = function () {\n      // TODO: when config is {a: 10} and dest is {a: 10} do we raf once and\n      // call cb? No, otherwise accidental parent rerender causes cb trigger\n      _this.animationID = _raf2['default'](function (timestamp) {\n        var destStyles = _this.props.styles(_this.state.lastIdealStyles);\n\n        // check if we need to animate in the first place\n        if (shouldStopAnimationAll(_this.state.currentStyles, destStyles, _this.state.currentVelocities)) {\n          // no need to cancel animationID here; shouldn't have any in flight\n          _this.animationID = null;\n          _this.accumulatedTime = 0;\n          return;\n        }\n\n        var currentTime = timestamp || _performanceNow2['default']();\n        var timeDelta = currentTime - _this.prevTime;\n        _this.prevTime = currentTime;\n        _this.accumulatedTime = _this.accumulatedTime + timeDelta;\n        // more than 10 frames? prolly switched browser tab. Restart\n        if (_this.accumulatedTime > msPerFrame * 10) {\n          _this.accumulatedTime = 0;\n        }\n\n        if (_this.accumulatedTime === 0) {\n          // no need to cancel animationID here; shouldn't have any in flight\n          _this.animationID = null;\n          _this.startAnimationIfNecessary();\n          return;\n        }\n\n        var currentFrameCompletion = (_this.accumulatedTime - Math.floor(_this.accumulatedTime / msPerFrame) * msPerFrame) / msPerFrame;\n        var framesToCatchUp = Math.floor(_this.accumulatedTime / msPerFrame);\n\n        var newLastIdealStyles = [];\n        var newLastIdealVelocities = [];\n        var newCurrentStyles = [];\n        var newCurrentVelocities = [];\n\n        for (var i = 0; i < destStyles.length; i++) {\n          var destStyle = destStyles[i];\n          var newCurrentStyle = {};\n          var newCurrentVelocity = {};\n          var newLastIdealStyle = {};\n          var newLastIdealVelocity = {};\n\n          for (var key in destStyle) {\n            if (!Object.prototype.hasOwnProperty.call(destStyle, key)) {\n              continue;\n            }\n\n            var styleValue = destStyle[key];\n            if (typeof styleValue === 'number') {\n              newCurrentStyle[key] = styleValue;\n              newCurrentVelocity[key] = 0;\n              newLastIdealStyle[key] = styleValue;\n              newLastIdealVelocity[key] = 0;\n            } else {\n              var newLastIdealStyleValue = _this.state.lastIdealStyles[i][key];\n              var newLastIdealVelocityValue = _this.state.lastIdealVelocities[i][key];\n              for (var j = 0; j < framesToCatchUp; j++) {\n                var _stepper = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);\n\n                newLastIdealStyleValue = _stepper[0];\n                newLastIdealVelocityValue = _stepper[1];\n              }\n\n              var _stepper2 = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);\n\n              var nextIdealX = _stepper2[0];\n              var nextIdealV = _stepper2[1];\n\n              newCurrentStyle[key] = newLastIdealStyleValue + (nextIdealX - newLastIdealStyleValue) * currentFrameCompletion;\n              newCurrentVelocity[key] = newLastIdealVelocityValue + (nextIdealV - newLastIdealVelocityValue) * currentFrameCompletion;\n              newLastIdealStyle[key] = newLastIdealStyleValue;\n              newLastIdealVelocity[key] = newLastIdealVelocityValue;\n            }\n          }\n\n          newCurrentStyles[i] = newCurrentStyle;\n          newCurrentVelocities[i] = newCurrentVelocity;\n          newLastIdealStyles[i] = newLastIdealStyle;\n          newLastIdealVelocities[i] = newLastIdealVelocity;\n        }\n\n        _this.animationID = null;\n        // the amount we're looped over above\n        _this.accumulatedTime -= framesToCatchUp * msPerFrame;\n\n        _this.setState({\n          currentStyles: newCurrentStyles,\n          currentVelocities: newCurrentVelocities,\n          lastIdealStyles: newLastIdealStyles,\n          lastIdealVelocities: newLastIdealVelocities\n        });\n\n        _this.unreadPropStyles = null;\n\n        _this.startAnimationIfNecessary();\n      });\n    };\n\n    this.state = this.defaultState();\n  }\n\n  StaggeredMotion.prototype.defaultState = function defaultState() {\n    var _props = this.props;\n    var defaultStyles = _props.defaultStyles;\n    var styles = _props.styles;\n\n    var currentStyles = defaultStyles || styles().map(_stripStyle2['default']);\n    var currentVelocities = currentStyles.map(function (currentStyle) {\n      return _mapToZero2['default'](currentStyle);\n    });\n    return {\n      currentStyles: currentStyles,\n      currentVelocities: currentVelocities,\n      lastIdealStyles: currentStyles,\n      lastIdealVelocities: currentVelocities\n    };\n  };\n\n  StaggeredMotion.prototype.componentDidMount = function componentDidMount() {\n    this.prevTime = _performanceNow2['default']();\n    this.startAnimationIfNecessary();\n  };\n\n  StaggeredMotion.prototype.componentWillReceiveProps = function componentWillReceiveProps(props) {\n    if (this.unreadPropStyles != null) {\n      // previous props haven't had the chance to be set yet; set them here\n      this.clearUnreadPropStyle(this.unreadPropStyles);\n    }\n\n    this.unreadPropStyles = props.styles(this.state.lastIdealStyles);\n    if (this.animationID == null) {\n      this.prevTime = _performanceNow2['default']();\n      this.startAnimationIfNecessary();\n    }\n  };\n\n  StaggeredMotion.prototype.componentWillUnmount = function componentWillUnmount() {\n    if (this.animationID != null) {\n      _raf2['default'].cancel(this.animationID);\n      this.animationID = null;\n    }\n  };\n\n  StaggeredMotion.prototype.render = function render() {\n    var renderedChildren = this.props.children(this.state.currentStyles);\n    return renderedChildren && _react2['default'].Children.only(renderedChildren);\n  };\n\n  return StaggeredMotion;\n})(_react2['default'].Component);\n\nexports['default'] = StaggeredMotion;\nmodule.exports = exports['default'];\n\n// it's possible that currentStyle's value is stale: if props is immediately\n// changed from 0 to 400 to spring(0) again, the async currentStyle is still\n// at 0 (didn't have time to tick and interpolate even once). If we naively\n// compare currentStyle with destVal it'll be 0 === 0 (no animation, stop).\n// In reality currentStyle should be 400\n\n// after checking for unreadPropStyles != null, we manually go set the\n// non-interpolating values (those that are a number, without a spring\n// config)","\n\n// core keys merging algorithm. If previous render's keys are [a, b], and the\n// next render's [c, b, d], what's the final merged keys and ordering?\n\n// - c and a must both be before b\n// - b before d\n// - ordering between a and c ambiguous\n\n// this reduces to merging two partially ordered lists (e.g. lists where not\n// every item has a definite ordering, like comparing a and c above). For the\n// ambiguous ordering we deterministically choose to place the next render's\n// item after the previous'; so c after a\n\n// this is called a topological sorting. Except the existing algorithms don't\n// work well with js bc of the amount of allocation, and isn't optimized for our\n// current use-case bc the runtime is linear in terms of edges (see wiki for\n// meaning), which is huge when two lists have many common elements\n'use strict';\n\nexports.__esModule = true;\nexports['default'] = mergeDiff;\n\nfunction mergeDiff(prev, next, onRemove) {\n  // bookkeeping for easier access of a key's index below. This is 2 allocations +\n  // potentially triggering chrome hash map mode for objs (so it might be faster\n\n  var prevKeyIndex = {};\n  for (var i = 0; i < prev.length; i++) {\n    prevKeyIndex[prev[i].key] = i;\n  }\n  var nextKeyIndex = {};\n  for (var i = 0; i < next.length; i++) {\n    nextKeyIndex[next[i].key] = i;\n  }\n\n  // first, an overly elaborate way of merging prev and next, eliminating\n  // duplicates (in terms of keys). If there's dupe, keep the item in next).\n  // This way of writing it saves allocations\n  var ret = [];\n  for (var i = 0; i < next.length; i++) {\n    ret[i] = next[i];\n  }\n  for (var i = 0; i < prev.length; i++) {\n    if (!Object.prototype.hasOwnProperty.call(nextKeyIndex, prev[i].key)) {\n      // this is called my TM's `mergeAndSync`, which calls willLeave. We don't\n      // merge in keys that the user desires to kill\n      var fill = onRemove(i, prev[i]);\n      if (fill != null) {\n        ret.push(fill);\n      }\n    }\n  }\n\n  // now all the items all present. Core sorting logic to have the right order\n  return ret.sort(function (a, b) {\n    var nextOrderA = nextKeyIndex[a.key];\n    var nextOrderB = nextKeyIndex[b.key];\n    var prevOrderA = prevKeyIndex[a.key];\n    var prevOrderB = prevKeyIndex[b.key];\n\n    if (nextOrderA != null && nextOrderB != null) {\n      // both keys in next\n      return nextKeyIndex[a.key] - nextKeyIndex[b.key];\n    } else if (prevOrderA != null && prevOrderB != null) {\n      // both keys in prev\n      return prevKeyIndex[a.key] - prevKeyIndex[b.key];\n    } else if (nextOrderA != null) {\n      // key a in next, key b in prev\n\n      // how to determine the order between a and b? We find a \"pivot\" (term\n      // abuse), a key present in both prev and next, that is sandwiched between\n      // a and b. In the context of our above example, if we're comparing a and\n      // d, b's (the only) pivot\n      for (var i = 0; i < next.length; i++) {\n        var pivot = next[i].key;\n        if (!Object.prototype.hasOwnProperty.call(prevKeyIndex, pivot)) {\n          continue;\n        }\n\n        if (nextOrderA < nextKeyIndex[pivot] && prevOrderB > prevKeyIndex[pivot]) {\n          return -1;\n        } else if (nextOrderA > nextKeyIndex[pivot] && prevOrderB < prevKeyIndex[pivot]) {\n          return 1;\n        }\n      }\n      // pluggable. default to: next bigger than prev\n      return 1;\n    }\n    // prevOrderA, nextOrderB\n    for (var i = 0; i < next.length; i++) {\n      var pivot = next[i].key;\n      if (!Object.prototype.hasOwnProperty.call(prevKeyIndex, pivot)) {\n        continue;\n      }\n      if (nextOrderB < nextKeyIndex[pivot] && prevOrderA > prevKeyIndex[pivot]) {\n        return 1;\n      } else if (nextOrderB > nextKeyIndex[pivot] && prevOrderA < prevKeyIndex[pivot]) {\n        return -1;\n      }\n    }\n    // pluggable. default to: next bigger than prev\n    return -1;\n  });\n}\n\nmodule.exports = exports['default'];\n// to loop through and find a key's index each time), but I no longer care","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _mapToZero = require('./mapToZero');\n\nvar _mapToZero2 = _interopRequireDefault(_mapToZero);\n\nvar _stripStyle = require('./stripStyle');\n\nvar _stripStyle2 = _interopRequireDefault(_stripStyle);\n\nvar _stepper3 = require('./stepper');\n\nvar _stepper4 = _interopRequireDefault(_stepper3);\n\nvar _mergeDiff = require('./mergeDiff');\n\nvar _mergeDiff2 = _interopRequireDefault(_mergeDiff);\n\nvar _performanceNow = require('performance-now');\n\nvar _performanceNow2 = _interopRequireDefault(_performanceNow);\n\nvar _raf = require('raf');\n\nvar _raf2 = _interopRequireDefault(_raf);\n\nvar _shouldStopAnimation = require('./shouldStopAnimation');\n\nvar _shouldStopAnimation2 = _interopRequireDefault(_shouldStopAnimation);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar msPerFrame = 1000 / 60;\n\n// the children function & (potential) styles function asks as param an\n// Array<TransitionPlainStyle>, where each TransitionPlainStyle is of the format\n// {key: string, data?: any, style: PlainStyle}. However, the way we keep\n// internal states doesn't contain such a data structure (check the state and\n// TransitionMotionState). So when children function and others ask for such\n// data we need to generate them on the fly by combining mergedPropsStyles and\n// currentStyles/lastIdealStyles\nfunction rehydrateStyles(mergedPropsStyles, unreadPropStyles, plainStyles) {\n  // Copy the value to a `const` so that Flow understands that the const won't\n  // change and will be non-nullable in the callback below.\n  var cUnreadPropStyles = unreadPropStyles;\n  if (cUnreadPropStyles == null) {\n    return mergedPropsStyles.map(function (mergedPropsStyle, i) {\n      return {\n        key: mergedPropsStyle.key,\n        data: mergedPropsStyle.data,\n        style: plainStyles[i]\n      };\n    });\n  }\n  return mergedPropsStyles.map(function (mergedPropsStyle, i) {\n    for (var j = 0; j < cUnreadPropStyles.length; j++) {\n      if (cUnreadPropStyles[j].key === mergedPropsStyle.key) {\n        return {\n          key: cUnreadPropStyles[j].key,\n          data: cUnreadPropStyles[j].data,\n          style: plainStyles[i]\n        };\n      }\n    }\n    return { key: mergedPropsStyle.key, data: mergedPropsStyle.data, style: plainStyles[i] };\n  });\n}\n\nfunction shouldStopAnimationAll(currentStyles, destStyles, currentVelocities, mergedPropsStyles) {\n  if (mergedPropsStyles.length !== destStyles.length) {\n    return false;\n  }\n\n  for (var i = 0; i < mergedPropsStyles.length; i++) {\n    if (mergedPropsStyles[i].key !== destStyles[i].key) {\n      return false;\n    }\n  }\n\n  // we have the invariant that mergedPropsStyles and\n  // currentStyles/currentVelocities/last* are synced in terms of cells, see\n  // mergeAndSync comment for more info\n  for (var i = 0; i < mergedPropsStyles.length; i++) {\n    if (!_shouldStopAnimation2['default'](currentStyles[i], destStyles[i].style, currentVelocities[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n// core key merging logic\n\n// things to do: say previously merged style is {a, b}, dest style (prop) is {b,\n// c}, previous current (interpolating) style is {a, b}\n// **invariant**: current[i] corresponds to merged[i] in terms of key\n\n// steps:\n// turn merged style into {a?, b, c}\n//    add c, value of c is destStyles.c\n//    maybe remove a, aka call willLeave(a), then merged is either {b, c} or {a, b, c}\n// turn current (interpolating) style from {a, b} into {a?, b, c}\n//    maybe remove a\n//    certainly add c, value of c is willEnter(c)\n// loop over merged and construct new current\n// dest doesn't change, that's owner's\nfunction mergeAndSync(willEnter, willLeave, didLeave, oldMergedPropsStyles, destStyles, oldCurrentStyles, oldCurrentVelocities, oldLastIdealStyles, oldLastIdealVelocities) {\n  var newMergedPropsStyles = _mergeDiff2['default'](oldMergedPropsStyles, destStyles, function (oldIndex, oldMergedPropsStyle) {\n    var leavingStyle = willLeave(oldMergedPropsStyle);\n    if (leavingStyle == null) {\n      didLeave({ key: oldMergedPropsStyle.key, data: oldMergedPropsStyle.data });\n      return null;\n    }\n    if (_shouldStopAnimation2['default'](oldCurrentStyles[oldIndex], leavingStyle, oldCurrentVelocities[oldIndex])) {\n      didLeave({ key: oldMergedPropsStyle.key, data: oldMergedPropsStyle.data });\n      return null;\n    }\n    return { key: oldMergedPropsStyle.key, data: oldMergedPropsStyle.data, style: leavingStyle };\n  });\n\n  var newCurrentStyles = [];\n  var newCurrentVelocities = [];\n  var newLastIdealStyles = [];\n  var newLastIdealVelocities = [];\n  for (var i = 0; i < newMergedPropsStyles.length; i++) {\n    var newMergedPropsStyleCell = newMergedPropsStyles[i];\n    var foundOldIndex = null;\n    for (var j = 0; j < oldMergedPropsStyles.length; j++) {\n      if (oldMergedPropsStyles[j].key === newMergedPropsStyleCell.key) {\n        foundOldIndex = j;\n        break;\n      }\n    }\n    // TODO: key search code\n    if (foundOldIndex == null) {\n      var plainStyle = willEnter(newMergedPropsStyleCell);\n      newCurrentStyles[i] = plainStyle;\n      newLastIdealStyles[i] = plainStyle;\n\n      var velocity = _mapToZero2['default'](newMergedPropsStyleCell.style);\n      newCurrentVelocities[i] = velocity;\n      newLastIdealVelocities[i] = velocity;\n    } else {\n      newCurrentStyles[i] = oldCurrentStyles[foundOldIndex];\n      newLastIdealStyles[i] = oldLastIdealStyles[foundOldIndex];\n      newCurrentVelocities[i] = oldCurrentVelocities[foundOldIndex];\n      newLastIdealVelocities[i] = oldLastIdealVelocities[foundOldIndex];\n    }\n  }\n\n  return [newMergedPropsStyles, newCurrentStyles, newCurrentVelocities, newLastIdealStyles, newLastIdealVelocities];\n}\n\nvar TransitionMotion = (function (_React$Component) {\n  _inherits(TransitionMotion, _React$Component);\n\n  _createClass(TransitionMotion, null, [{\n    key: 'propTypes',\n    value: {\n      defaultStyles: _propTypes2['default'].arrayOf(_propTypes2['default'].shape({\n        key: _propTypes2['default'].string.isRequired,\n        data: _propTypes2['default'].any,\n        style: _propTypes2['default'].objectOf(_propTypes2['default'].number).isRequired\n      })),\n      styles: _propTypes2['default'].oneOfType([_propTypes2['default'].func, _propTypes2['default'].arrayOf(_propTypes2['default'].shape({\n        key: _propTypes2['default'].string.isRequired,\n        data: _propTypes2['default'].any,\n        style: _propTypes2['default'].objectOf(_propTypes2['default'].oneOfType([_propTypes2['default'].number, _propTypes2['default'].object])).isRequired\n      }))]).isRequired,\n      children: _propTypes2['default'].func.isRequired,\n      willEnter: _propTypes2['default'].func,\n      willLeave: _propTypes2['default'].func,\n      didLeave: _propTypes2['default'].func\n    },\n    enumerable: true\n  }, {\n    key: 'defaultProps',\n    value: {\n      willEnter: function willEnter(styleThatEntered) {\n        return _stripStyle2['default'](styleThatEntered.style);\n      },\n      // recall: returning null makes the current unmounting TransitionStyle\n      // disappear immediately\n      willLeave: function willLeave() {\n        return null;\n      },\n      didLeave: function didLeave() {}\n    },\n    enumerable: true\n  }]);\n\n  function TransitionMotion(props) {\n    var _this = this;\n\n    _classCallCheck(this, TransitionMotion);\n\n    _React$Component.call(this, props);\n    this.unmounting = false;\n    this.animationID = null;\n    this.prevTime = 0;\n    this.accumulatedTime = 0;\n    this.unreadPropStyles = null;\n\n    this.clearUnreadPropStyle = function (unreadPropStyles) {\n      var _mergeAndSync = mergeAndSync(_this.props.willEnter, _this.props.willLeave, _this.props.didLeave, _this.state.mergedPropsStyles, unreadPropStyles, _this.state.currentStyles, _this.state.currentVelocities, _this.state.lastIdealStyles, _this.state.lastIdealVelocities);\n\n      var mergedPropsStyles = _mergeAndSync[0];\n      var currentStyles = _mergeAndSync[1];\n      var currentVelocities = _mergeAndSync[2];\n      var lastIdealStyles = _mergeAndSync[3];\n      var lastIdealVelocities = _mergeAndSync[4];\n\n      for (var i = 0; i < unreadPropStyles.length; i++) {\n        var unreadPropStyle = unreadPropStyles[i].style;\n        var dirty = false;\n\n        for (var key in unreadPropStyle) {\n          if (!Object.prototype.hasOwnProperty.call(unreadPropStyle, key)) {\n            continue;\n          }\n\n          var styleValue = unreadPropStyle[key];\n          if (typeof styleValue === 'number') {\n            if (!dirty) {\n              dirty = true;\n              currentStyles[i] = _extends({}, currentStyles[i]);\n              currentVelocities[i] = _extends({}, currentVelocities[i]);\n              lastIdealStyles[i] = _extends({}, lastIdealStyles[i]);\n              lastIdealVelocities[i] = _extends({}, lastIdealVelocities[i]);\n              mergedPropsStyles[i] = {\n                key: mergedPropsStyles[i].key,\n                data: mergedPropsStyles[i].data,\n                style: _extends({}, mergedPropsStyles[i].style)\n              };\n            }\n            currentStyles[i][key] = styleValue;\n            currentVelocities[i][key] = 0;\n            lastIdealStyles[i][key] = styleValue;\n            lastIdealVelocities[i][key] = 0;\n            mergedPropsStyles[i].style[key] = styleValue;\n          }\n        }\n      }\n\n      // unlike the other 2 components, we can't detect staleness and optionally\n      // opt out of setState here. each style object's data might contain new\n      // stuff we're not/cannot compare\n      _this.setState({\n        currentStyles: currentStyles,\n        currentVelocities: currentVelocities,\n        mergedPropsStyles: mergedPropsStyles,\n        lastIdealStyles: lastIdealStyles,\n        lastIdealVelocities: lastIdealVelocities\n      });\n    };\n\n    this.startAnimationIfNecessary = function () {\n      if (_this.unmounting) {\n        return;\n      }\n\n      // TODO: when config is {a: 10} and dest is {a: 10} do we raf once and\n      // call cb? No, otherwise accidental parent rerender causes cb trigger\n      _this.animationID = _raf2['default'](function (timestamp) {\n        // https://github.com/chenglou/react-motion/pull/420\n        // > if execution passes the conditional if (this.unmounting), then\n        // executes async defaultRaf and after that component unmounts and after\n        // that the callback of defaultRaf is called, then setState will be called\n        // on unmounted component.\n        if (_this.unmounting) {\n          return;\n        }\n\n        var propStyles = _this.props.styles;\n        var destStyles = typeof propStyles === 'function' ? propStyles(rehydrateStyles(_this.state.mergedPropsStyles, _this.unreadPropStyles, _this.state.lastIdealStyles)) : propStyles;\n\n        // check if we need to animate in the first place\n        if (shouldStopAnimationAll(_this.state.currentStyles, destStyles, _this.state.currentVelocities, _this.state.mergedPropsStyles)) {\n          // no need to cancel animationID here; shouldn't have any in flight\n          _this.animationID = null;\n          _this.accumulatedTime = 0;\n          return;\n        }\n\n        var currentTime = timestamp || _performanceNow2['default']();\n        var timeDelta = currentTime - _this.prevTime;\n        _this.prevTime = currentTime;\n        _this.accumulatedTime = _this.accumulatedTime + timeDelta;\n        // more than 10 frames? prolly switched browser tab. Restart\n        if (_this.accumulatedTime > msPerFrame * 10) {\n          _this.accumulatedTime = 0;\n        }\n\n        if (_this.accumulatedTime === 0) {\n          // no need to cancel animationID here; shouldn't have any in flight\n          _this.animationID = null;\n          _this.startAnimationIfNecessary();\n          return;\n        }\n\n        var currentFrameCompletion = (_this.accumulatedTime - Math.floor(_this.accumulatedTime / msPerFrame) * msPerFrame) / msPerFrame;\n        var framesToCatchUp = Math.floor(_this.accumulatedTime / msPerFrame);\n\n        var _mergeAndSync2 = mergeAndSync(_this.props.willEnter, _this.props.willLeave, _this.props.didLeave, _this.state.mergedPropsStyles, destStyles, _this.state.currentStyles, _this.state.currentVelocities, _this.state.lastIdealStyles, _this.state.lastIdealVelocities);\n\n        var newMergedPropsStyles = _mergeAndSync2[0];\n        var newCurrentStyles = _mergeAndSync2[1];\n        var newCurrentVelocities = _mergeAndSync2[2];\n        var newLastIdealStyles = _mergeAndSync2[3];\n        var newLastIdealVelocities = _mergeAndSync2[4];\n\n        for (var i = 0; i < newMergedPropsStyles.length; i++) {\n          var newMergedPropsStyle = newMergedPropsStyles[i].style;\n          var newCurrentStyle = {};\n          var newCurrentVelocity = {};\n          var newLastIdealStyle = {};\n          var newLastIdealVelocity = {};\n\n          for (var key in newMergedPropsStyle) {\n            if (!Object.prototype.hasOwnProperty.call(newMergedPropsStyle, key)) {\n              continue;\n            }\n\n            var styleValue = newMergedPropsStyle[key];\n            if (typeof styleValue === 'number') {\n              newCurrentStyle[key] = styleValue;\n              newCurrentVelocity[key] = 0;\n              newLastIdealStyle[key] = styleValue;\n              newLastIdealVelocity[key] = 0;\n            } else {\n              var newLastIdealStyleValue = newLastIdealStyles[i][key];\n              var newLastIdealVelocityValue = newLastIdealVelocities[i][key];\n              for (var j = 0; j < framesToCatchUp; j++) {\n                var _stepper = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);\n\n                newLastIdealStyleValue = _stepper[0];\n                newLastIdealVelocityValue = _stepper[1];\n              }\n\n              var _stepper2 = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);\n\n              var nextIdealX = _stepper2[0];\n              var nextIdealV = _stepper2[1];\n\n              newCurrentStyle[key] = newLastIdealStyleValue + (nextIdealX - newLastIdealStyleValue) * currentFrameCompletion;\n              newCurrentVelocity[key] = newLastIdealVelocityValue + (nextIdealV - newLastIdealVelocityValue) * currentFrameCompletion;\n              newLastIdealStyle[key] = newLastIdealStyleValue;\n              newLastIdealVelocity[key] = newLastIdealVelocityValue;\n            }\n          }\n\n          newLastIdealStyles[i] = newLastIdealStyle;\n          newLastIdealVelocities[i] = newLastIdealVelocity;\n          newCurrentStyles[i] = newCurrentStyle;\n          newCurrentVelocities[i] = newCurrentVelocity;\n        }\n\n        _this.animationID = null;\n        // the amount we're looped over above\n        _this.accumulatedTime -= framesToCatchUp * msPerFrame;\n\n        _this.setState({\n          currentStyles: newCurrentStyles,\n          currentVelocities: newCurrentVelocities,\n          lastIdealStyles: newLastIdealStyles,\n          lastIdealVelocities: newLastIdealVelocities,\n          mergedPropsStyles: newMergedPropsStyles\n        });\n\n        _this.unreadPropStyles = null;\n\n        _this.startAnimationIfNecessary();\n      });\n    };\n\n    this.state = this.defaultState();\n  }\n\n  TransitionMotion.prototype.defaultState = function defaultState() {\n    var _props = this.props;\n    var defaultStyles = _props.defaultStyles;\n    var styles = _props.styles;\n    var willEnter = _props.willEnter;\n    var willLeave = _props.willLeave;\n    var didLeave = _props.didLeave;\n\n    var destStyles = typeof styles === 'function' ? styles(defaultStyles) : styles;\n\n    // this is special. for the first time around, we don't have a comparison\n    // between last (no last) and current merged props. we'll compute last so:\n    // say default is {a, b} and styles (dest style) is {b, c}, we'll\n    // fabricate last as {a, b}\n    var oldMergedPropsStyles = undefined;\n    if (defaultStyles == null) {\n      oldMergedPropsStyles = destStyles;\n    } else {\n      oldMergedPropsStyles = defaultStyles.map(function (defaultStyleCell) {\n        // TODO: key search code\n        for (var i = 0; i < destStyles.length; i++) {\n          if (destStyles[i].key === defaultStyleCell.key) {\n            return destStyles[i];\n          }\n        }\n        return defaultStyleCell;\n      });\n    }\n    var oldCurrentStyles = defaultStyles == null ? destStyles.map(function (s) {\n      return _stripStyle2['default'](s.style);\n    }) : defaultStyles.map(function (s) {\n      return _stripStyle2['default'](s.style);\n    });\n    var oldCurrentVelocities = defaultStyles == null ? destStyles.map(function (s) {\n      return _mapToZero2['default'](s.style);\n    }) : defaultStyles.map(function (s) {\n      return _mapToZero2['default'](s.style);\n    });\n\n    var _mergeAndSync3 = mergeAndSync(\n    // Because this is an old-style createReactClass component, Flow doesn't\n    // understand that the willEnter and willLeave props have default values\n    // and will always be present.\n    willEnter, willLeave, didLeave, oldMergedPropsStyles, destStyles, oldCurrentStyles, oldCurrentVelocities, oldCurrentStyles, // oldLastIdealStyles really\n    oldCurrentVelocities);\n\n    var mergedPropsStyles = _mergeAndSync3[0];\n    var currentStyles = _mergeAndSync3[1];\n    var currentVelocities = _mergeAndSync3[2];\n    var lastIdealStyles = _mergeAndSync3[3];\n    var lastIdealVelocities = _mergeAndSync3[4];\n    // oldLastIdealVelocities really\n\n    return {\n      currentStyles: currentStyles,\n      currentVelocities: currentVelocities,\n      lastIdealStyles: lastIdealStyles,\n      lastIdealVelocities: lastIdealVelocities,\n      mergedPropsStyles: mergedPropsStyles\n    };\n  };\n\n  // after checking for unreadPropStyles != null, we manually go set the\n  // non-interpolating values (those that are a number, without a spring\n  // config)\n\n  TransitionMotion.prototype.componentDidMount = function componentDidMount() {\n    this.prevTime = _performanceNow2['default']();\n    this.startAnimationIfNecessary();\n  };\n\n  TransitionMotion.prototype.componentWillReceiveProps = function componentWillReceiveProps(props) {\n    if (this.unreadPropStyles) {\n      // previous props haven't had the chance to be set yet; set them here\n      this.clearUnreadPropStyle(this.unreadPropStyles);\n    }\n\n    var styles = props.styles;\n    if (typeof styles === 'function') {\n      this.unreadPropStyles = styles(rehydrateStyles(this.state.mergedPropsStyles, this.unreadPropStyles, this.state.lastIdealStyles));\n    } else {\n      this.unreadPropStyles = styles;\n    }\n\n    if (this.animationID == null) {\n      this.prevTime = _performanceNow2['default']();\n      this.startAnimationIfNecessary();\n    }\n  };\n\n  TransitionMotion.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.unmounting = true;\n    if (this.animationID != null) {\n      _raf2['default'].cancel(this.animationID);\n      this.animationID = null;\n    }\n  };\n\n  TransitionMotion.prototype.render = function render() {\n    var hydratedStyles = rehydrateStyles(this.state.mergedPropsStyles, this.unreadPropStyles, this.state.currentStyles);\n    var renderedChildren = this.props.children(hydratedStyles);\n    return renderedChildren && _react2['default'].Children.only(renderedChildren);\n  };\n\n  return TransitionMotion;\n})(_react2['default'].Component);\n\nexports['default'] = TransitionMotion;\nmodule.exports = exports['default'];\n\n// list of styles, each containing interpolating values. Part of what's passed\n// to children function. Notice that this is\n// Array<ActualInterpolatingStyleObject>, without the wrapper that is {key: ...,\n// data: ... style: ActualInterpolatingStyleObject}. Only mergedPropsStyles\n// contains the key & data info (so that we only have a single source of truth\n// for these, and to save space). Check the comment for `rehydrateStyles` to\n// see how we regenerate the entirety of what's passed to children function\n\n// the array that keeps track of currently rendered stuff! Including stuff\n// that you've unmounted but that's still animating. This is where it lives\n\n// it's possible that currentStyle's value is stale: if props is immediately\n// changed from 0 to 400 to spring(0) again, the async currentStyle is still\n// at 0 (didn't have time to tick and interpolate even once). If we naively\n// compare currentStyle with destVal it'll be 0 === 0 (no animation, stop).\n// In reality currentStyle should be 400","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = {\n  noWobble: { stiffness: 170, damping: 26 }, // the default, if nothing provided\n  gentle: { stiffness: 120, damping: 14 },\n  wobbly: { stiffness: 180, damping: 12 },\n  stiff: { stiffness: 210, damping: 20 }\n};\nmodule.exports = exports[\"default\"];","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports['default'] = spring;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _presets = require('./presets');\n\nvar _presets2 = _interopRequireDefault(_presets);\n\nvar defaultConfig = _extends({}, _presets2['default'].noWobble, {\n  precision: 0.01\n});\n\nfunction spring(val, config) {\n  return _extends({}, defaultConfig, config, { val: val });\n}\n\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\nexports['default'] = reorderKeys;\n\nvar hasWarned = false;\n\nfunction reorderKeys() {\n  if (process.env.NODE_ENV === 'development') {\n    if (!hasWarned) {\n      hasWarned = true;\n      console.error('`reorderKeys` has been removed, since it is no longer needed for TransitionMotion\\'s new styles array API.');\n    }\n  }\n}\n\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequire(obj) { return obj && obj.__esModule ? obj['default'] : obj; }\n\nvar _Motion = require('./Motion');\n\nexports.Motion = _interopRequire(_Motion);\n\nvar _StaggeredMotion = require('./StaggeredMotion');\n\nexports.StaggeredMotion = _interopRequire(_StaggeredMotion);\n\nvar _TransitionMotion = require('./TransitionMotion');\n\nexports.TransitionMotion = _interopRequire(_TransitionMotion);\n\nvar _spring = require('./spring');\n\nexports.spring = _interopRequire(_spring);\n\nvar _presets = require('./presets');\n\nexports.presets = _interopRequire(_presets);\n\nvar _stripStyle = require('./stripStyle');\n\nexports.stripStyle = _interopRequire(_stripStyle);\n\n// deprecated, dummy warning function\n\nvar _reorderKeys = require('./reorderKeys');\n\nexports.reorderKeys = _interopRequire(_reorderKeys);","import React, { PureComponent, Children, cloneElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { findDOMNode } from 'react-dom';\r\nimport { Motion, spring } from 'react-motion';\r\n\r\n/**\r\n * The `Collapse` component is used to animate a single child entering\r\n * or leaving. This uses the `react-motion` library to animate the height,\r\n * padding-top, and padding-bottom of an element when the `collapsed` prop\r\n * changes.\r\n */\r\nexport default class Collapse extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * An optional style to merge with the `Motion` style.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional default style to merge with the `Motion` default style.\r\n     */\r\n    defaultStyle: PropTypes.object,\r\n\r\n    /**\r\n     * Boolean if the children are currently collapsed.\r\n     */\r\n    collapsed: PropTypes.bool.isRequired,\r\n\r\n    /**\r\n     * A single child to collapse or expand.\r\n     */\r\n    children: PropTypes.element.isRequired,\r\n\r\n    /**\r\n     * The spring config to use for the animation.\r\n     */\r\n    springConfig: PropTypes.object.isRequired,\r\n\r\n    /**\r\n     * Boolean if the single child entering or leaving should be animated.\r\n     */\r\n    animate: PropTypes.bool,\r\n\r\n    /**\r\n     * The min height to apply for the collapse div.\r\n     */\r\n    minHeight: PropTypes.number.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    animate: true,\r\n    springConfig: {\r\n      precision: 0.5,\r\n    },\r\n    minHeight: 0,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    if (!props.collapsed) {\r\n      this.state = { initialOpen: true };\r\n    } else {\r\n      this.state = {\r\n        height: props.minHeight,\r\n        paddingTop: 0,\r\n        paddingBottom: 0,\r\n      };\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (this.state.initialOpen && nextProps.collapsed) {\r\n      this.setState({ initialOpen: false });\r\n    }\r\n  }\r\n\r\n  _spring(collapsed, initialOpen, value, config, min = 0) {\r\n    const nextValue = !collapsed ? Math.max(min, value) : min;\r\n    if (initialOpen && !collapsed) {\r\n      return nextValue;\r\n    }\r\n\r\n    return spring(nextValue, config);\r\n  }\r\n\r\n  _setHeight = (child) => {\r\n    if (this._child && typeof this._child.ref === 'function') {\r\n      this._child.ref(child);\r\n    }\r\n\r\n    let height = 0;\r\n    let paddingTop = 0;\r\n    let paddingBottom = 0;\r\n    if (child !== null) {\r\n      const node = findDOMNode(child);\r\n      const cs = window.getComputedStyle(node);\r\n      height = node.offsetHeight;\r\n      paddingTop = parseInt(cs.getPropertyValue('padding-top'), 10);\r\n      paddingBottom = parseInt(cs.getPropertyValue('padding-bottom'), 10);\r\n    }\r\n\r\n    height = Math.max(this.props.minHeight, height);\r\n\r\n    this.setState({ height, paddingTop, paddingBottom });\r\n  };\r\n\r\n  render() {\r\n    const { height, paddingTop, paddingBottom, initialOpen } = this.state;\r\n    const {\r\n      children,\r\n      collapsed,\r\n      defaultStyle,\r\n      style: motionStyle,\r\n      springConfig,\r\n      animate,\r\n      minHeight,\r\n    } = this.props;\r\n\r\n    if (!animate) {\r\n      return collapsed ? null : children;\r\n    }\r\n\r\n    return (\r\n      <Motion\r\n        style={{\r\n          ...motionStyle,\r\n          height: this._spring(collapsed, initialOpen, height, springConfig, minHeight),\r\n          paddingTop: this._spring(collapsed, initialOpen, paddingTop, springConfig),\r\n          paddingBottom: this._spring(collapsed, initialOpen, paddingBottom, springConfig),\r\n        }}\r\n        defaultStyle={{\r\n          ...defaultStyle,\r\n          height,\r\n          paddingTop,\r\n          paddingBottom,\r\n        }}\r\n      >\r\n        {style => {\r\n          if (collapsed && !style.height) {\r\n            return null;\r\n          }\r\n\r\n          const child = Children.only(children);\r\n          this._child = child;\r\n          let nextStyle = child.props.style;\r\n          if ((collapsed && (!minHeight || style.height !== minHeight)) || style.height !== height) {\r\n            nextStyle = {\r\n              ...child.props.style,\r\n              ...style,\r\n              overflow: 'hidden',\r\n            };\r\n          }\r\n          return cloneElement(child, {\r\n            ref: !collapsed ? this._setHeight : null,\r\n            style: nextStyle,\r\n          });\r\n        }}\r\n      </Motion>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport themeColors from '../utils/themeColors';\r\n\r\nconst ICON_SIZE = 24;\r\n\r\n/**\r\n * The \\`FontIcon\\` component is used for rendering a font-icon library's\r\n * icon. The default is to use the `material-icons` library, but others\r\n * can be used as well.\r\n *\r\n * If you are using another font-icon library that does not always create\r\n * icons with a perfect 1:1 scale (such as font-awesome), it is recommended\r\n * to update the `.md-icon` styles to set the width and height to `$md-font-icon-size`.\r\n * However, this will prevent different sided icons.\r\n *\r\n * ```scss\r\n * .md-icon.fa {\r\n *   height: $md-font-icon-size;\r\n *   width: $md-font-icon-size;\r\n * }\r\n * ```\r\n */\r\nexport default class FontIcon extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * An optional style to apply.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the `FontIcon`.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * The icon font library className to use to display the icon.\r\n     */\r\n    iconClassName: PropTypes.string.isRequired,\r\n\r\n    /**\r\n     * Boolean if the primary theme color should be applied.\r\n     */\r\n    primary: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the secondary theme color should be applied.\r\n     */\r\n    secondary: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the icon is considered disabled and should inherit the\r\n     * disabled color.\r\n     */\r\n    disabled: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the error color should be applied to the icon.\r\n     */\r\n    error: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the color of the icon should be inherited by parent elements.\r\n     */\r\n    inherit: PropTypes.bool,\r\n\r\n    /**\r\n     * Either a boolean that will enforce the 24x24 size of the font icon or a number of the size\r\n     * to enforce. This is useful when using other font icon libraries that do not have a consistent\r\n     * size.\r\n     */\r\n    forceSize: PropTypes.oneOfType([\r\n      PropTypes.bool,\r\n      PropTypes.number,\r\n    ]),\r\n\r\n    /**\r\n     * Boolean if the `forceSize` prop should also force the `font-size` instead of only `width` and `height`.\r\n     */\r\n    forceFontSize: (props, propName, component, ...args) => {\r\n      let error = PropTypes.bool(props, propName, component, ...args);\r\n      if (!error && typeof props.forceSize === 'undefined' && props[propName]) {\r\n        error = new Error(\r\n          `You provided a \\`forceFontSize\\` prop to the ${component} component, without specifying the \\`forceSize\\` ` +\r\n          `prop. Either set the \\`forceSize\\` prop to a boolean or a number, or disable \\`${propName}\\`.`\r\n        );\r\n      }\r\n\r\n      return error;\r\n    },\r\n\r\n    /**\r\n     * Any children required to display the icon with the font library.\r\n     */\r\n    children: PropTypes.node,\r\n  };\r\n\r\n  static defaultProps = {\r\n    iconClassName: 'material-icons',\r\n  };\r\n\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.state = { styles: this._mergeStyles(props) };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { style, forceSize, forceFontSize } = this.props;\r\n    if (style !== nextProps.style || forceSize !== nextProps.forceSize || forceFontSize !== nextProps.forceFontSize) {\r\n      this.setState({ styles: this._mergeStyles(nextProps) });\r\n    }\r\n  }\r\n\r\n  _mergeStyles = ({ style, forceSize, forceFontSize }) => {\r\n    let styles = style;\r\n    if (typeof forceSize === 'boolean') {\r\n      styles = {\r\n        height: ICON_SIZE,\r\n        width: ICON_SIZE,\r\n        fontSize: forceFontSize ? ICON_SIZE : undefined,\r\n        ...style,\r\n      };\r\n    } else if (typeof forceSize === 'number') {\r\n      styles = {\r\n        height: forceSize,\r\n        width: forceSize,\r\n        fontSize: forceFontSize ? forceSize : undefined,\r\n        ...style,\r\n      };\r\n    }\r\n\r\n    return styles;\r\n  };\r\n\r\n  render() {\r\n    const { styles } = this.state;\r\n    const {\r\n      iconClassName,\r\n      className,\r\n      children,\r\n      disabled,\r\n      primary,\r\n      secondary,\r\n      error,\r\n      inherit,\r\n      /* eslint-disable no-unused-vars */\r\n      style,\r\n      forceSize,\r\n      forceFontSize,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n\r\n    const classes = cn('md-icon', iconClassName, themeColors({\r\n      disabled,\r\n      error,\r\n      inherit,\r\n      primary,\r\n      secondary,\r\n    }), className);\r\n\r\n    return (\r\n      <i {...props} style={styles} className={classes}>\r\n        {children}\r\n      </i>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport FontIcon from '../FontIcons/FontIcon';\r\n\r\nexport default function getDeprecatedIcon(className, children, icon) {\r\n  if (className || children) {\r\n    return <FontIcon iconClassName={className}>{children}</FontIcon>;\r\n  }\r\n\r\n  return icon;\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\n/**\r\n * The `TileAddon` component is used to render either a `FontIcon` or an `Avatar`\r\n * next to the `ListTileText` for a `ListItem`.\r\n */\r\nexport default class TileAddon extends PureComponent {\r\n  static propTypes = {\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    active: PropTypes.bool,\r\n    activeClassName: PropTypes.string,\r\n    icon: PropTypes.node,\r\n    avatar: PropTypes.node,\r\n  };\r\n\r\n  render() {\r\n    const { icon, avatar, active, activeClassName, style, className } = this.props;\r\n    if (!icon && !avatar) {\r\n      return null;\r\n    }\r\n\r\n    let avatarIcon = false;\r\n    if (avatar) {\r\n      const avatarChild = React.Children.only(avatar);\r\n      if (avatarChild.props.iconSized) {\r\n        avatarIcon = true;\r\n      }\r\n    }\r\n    return (\r\n      <div\r\n        style={style}\r\n        className={cn('md-tile-addon', {\r\n          'md-tile-addon--icon': icon || avatarIcon,\r\n          'md-tile-addon--avatar': avatar && !avatarIcon,\r\n          [activeClassName]: active,\r\n        }, className)}\r\n      >\r\n        {icon || avatar}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport themeColors from '../utils/themeColors';\r\n\r\n/**\r\n * The `ListItemText` component is used to render the `primaryText` and an optional\r\n * `secondaryText` for a `ListItem`.\r\n */\r\nexport default class ListItemText extends PureComponent {\r\n  static propTypes = {\r\n    active: PropTypes.bool,\r\n    activeClassName: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    primaryText: PropTypes.node.isRequired,\r\n    primaryTextStyle: PropTypes.object,\r\n    primaryTextClassName: PropTypes.string,\r\n    secondaryText: PropTypes.node,\r\n    secondaryTextStyle: PropTypes.object,\r\n    secondaryTextClassName: PropTypes.string,\r\n    className: PropTypes.string,\r\n    threeLines: PropTypes.bool,\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      active,\r\n      activeClassName,\r\n      disabled,\r\n      primaryText,\r\n      primaryTextStyle,\r\n      primaryTextClassName,\r\n      secondaryText,\r\n      secondaryTextStyle,\r\n      secondaryTextClassName,\r\n      className,\r\n      threeLines,\r\n      ...props\r\n    } = this.props;\r\n\r\n    let secondaryTextNode;\r\n    if (secondaryText) {\r\n      secondaryTextNode = (\r\n        <div\r\n          style={secondaryTextStyle}\r\n          className={cn('md-tile-text--secondary', {\r\n            'md-tile-text--three-lines': threeLines,\r\n          }, themeColors({ disabled, hint: !disabled }), secondaryTextClassName)}\r\n        >\r\n          {secondaryText}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div {...props} className={cn('md-tile-content', className)}>\r\n        <div\r\n          style={primaryTextStyle}\r\n          className={cn('md-tile-text--primary', {\r\n            [activeClassName]: !disabled && active,\r\n          }, themeColors({ disabled, text: !active }), primaryTextClassName)}\r\n        >\r\n          {primaryText}\r\n        </div>\r\n        {secondaryTextNode}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport themeColors from '../utils/themeColors';\r\n\r\n/**\r\n * The `Subheader` component is generally used inside of lists or menus.\r\n */\r\nexport default class Subheader extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * An optional style to apply to the subheader.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the subheader.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * Boolean if the subheader should be styled with the primary color.\r\n     */\r\n    primary: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the subheader is inset in the list. This will add additional\r\n     * spacing to align the subheader.\r\n     */\r\n    inset: PropTypes.bool,\r\n\r\n    /**\r\n     * The primary text to use in the subheader.\r\n     */\r\n    primaryText: PropTypes.node.isRequired,\r\n\r\n    /**\r\n     * Any optional children to display after the `primaryText`. This prop is\r\n     * not recommended.\r\n     */\r\n    children: PropTypes.node,\r\n\r\n    /**\r\n     * The component to render the Subheader as.\r\n     */\r\n    component: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.func,\r\n    ]).isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    component: 'li',\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      component: Component,\r\n      inset,\r\n      primary,\r\n      primaryText,\r\n      className,\r\n      children,\r\n      ...props\r\n    } = this.props;\r\n\r\n    return (\r\n      <Component\r\n        {...props}\r\n        className={cn('md-subheader', {\r\n          'md-list-item--inset': inset,\r\n        }, themeColors({ primary, hint: !primary }), className)}\r\n      >\r\n        {primaryText}\r\n        {children}\r\n      </Component>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { findDOMNode } from 'react-dom';\r\nimport cn from 'classnames';\r\nimport deprecated from 'react-prop-types/lib/deprecated';\r\n\r\nimport getField from '../utils/getField';\r\nimport fixedToShape from '../Helpers/fixedToShape';\r\nimport Subheader from '../Subheaders';\r\n\r\n/**\r\n * Lists present multiple line items vertically as a single continuous element.\r\n */\r\nexport default class List extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * An optional style to apply to the list.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the list.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * Boolean if this should be an ordered list (`<ol>`) component. Otherwise, it will\r\n     * be rendered as `<ul>`.\r\n     */\r\n    ordered: PropTypes.bool,\r\n\r\n    /**\r\n     * This *should* be a list of `ListItem`, `ListItemControl`, `Divider`, or\r\n     * `Subheader`.\r\n     */\r\n    children: PropTypes.node,\r\n\r\n    /**\r\n     * Boolean if the list should appear horizontally instead of vertically.\r\n     */\r\n    inline: PropTypes.bool,\r\n    subheader: deprecated(PropTypes.string, 'Use the `Subheader` component as a child instead'),\r\n    primarySubheader: deprecated(PropTypes.bool, 'Use the `Subheader` component as a child instead'),\r\n  };\r\n\r\n  static childContextTypes = {\r\n    listLevel: PropTypes.number,\r\n    cascadingMenu: PropTypes.bool,\r\n    cascadingFixedTo: fixedToShape,\r\n    cascadingZDepth: PropTypes.number,\r\n  };\r\n\r\n  static contextTypes = {\r\n    listLevel: PropTypes.number,\r\n    cascadingMenu: PropTypes.bool,\r\n    cascadingFixedTo: fixedToShape,\r\n    cascadingZDepth: PropTypes.number,\r\n  };\r\n\r\n  state = {};\r\n\r\n  getChildContext() {\r\n    const { listLevel, ...context } = this.context;\r\n    const cascadingFixedTo = getField(this.state, this.context, 'cascadingFixedTo');\r\n    return {\r\n      ...context,\r\n      cascadingFixedTo,\r\n      listLevel: typeof listLevel === 'undefined'\r\n        ? 1\r\n        : listLevel + 1,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.context.cascadingMenu) {\r\n      const list = findDOMNode(this);\r\n      if (list.offsetHeight < list.scrollHeight) {\r\n        const cascadingFixedTo = { y: findDOMNode(this) };\r\n        this.setState({ cascadingFixedTo }); // eslint-disable-line react/no-did-mount-set-state\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      className,\r\n      ordered,\r\n      children,\r\n      subheader,\r\n      inline,\r\n      primarySubheader,\r\n      ...props\r\n    } = this.props;\r\n    const { cascadingMenu, cascadingZDepth, listLevel } = this.context;\r\n\r\n    let subheaderEl;\r\n    if (subheader) {\r\n      subheaderEl = <Subheader key=\"subheader\" primaryText={subheader} primary={primarySubheader} />;\r\n    }\r\n\r\n    const Component = ordered ? 'ol' : 'ul';\r\n    return (\r\n      <Component\r\n        {...props}\r\n        className={cn('md-list', {\r\n          'md-list--inline': inline,\r\n          'md-list--menu-cascading': cascadingMenu,\r\n          [`md-paper md-paper--${cascadingZDepth}`]: cascadingZDepth && cascadingMenu && listLevel > 0,\r\n          [`md-list--nested-${listLevel}`]: listLevel && !cascadingMenu,\r\n        }, className)}\r\n      >\r\n        {subheaderEl}\r\n        {children}\r\n      </Component>\r\n    );\r\n  }\r\n}\r\n","'use strict';\n\nexports.__esModule = true;\nexports.default = isRequiredForA11y;\nfunction isRequiredForA11y(validator) {\n  return function validate(props, propName, componentName, location, propFullName) {\n    var componentNameSafe = componentName || '<<anonymous>>';\n    var propFullNameSafe = propFullName || propName;\n\n    if (props[propName] == null) {\n      return new Error('The ' + location + ' `' + propFullNameSafe + '` is required to make ' + ('`' + componentNameSafe + '` accessible for users of assistive ') + 'technologies such as screen readers.');\n    }\n\n    for (var _len = arguments.length, args = Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {\n      args[_key - 5] = arguments[_key];\n    }\n\n    return validator.apply(undefined, [props, propName, componentName, location, propFullName].concat(args));\n  };\n}","/** @module utils/EventUtils/handleWindowClickListeners */\r\nlet mobileSafari;\r\n\r\n/**\r\n * Since mobile safari doesn't delegate click events to the window (it only does touch events),\r\n * this utility function will hack a fix to allow the delegation by updaging the body's cursor\r\n * to be a pointer.\r\n *\r\n * Hopefully this can be removed one day....\r\n *\r\n * @see https://developer.mozilla.org/en-US/docs/Web/Events/click#Safari_Mobile\r\n * @param {function} cb - the callback function to use for a window click event.\r\n * @param {boolean} enabled - boolean if the click event is enabled.\r\n */\r\nexport default function handleWindowClickListeners(cb, enabled = false) {\r\n  if (typeof mobileSafari === 'undefined' && typeof window !== 'undefined') {\r\n    const ua = window.navigator.userAgent;\r\n    const iOS = ua.match(/iP(ad|hone)/i);\r\n    const webkit = ua.match(/WebKit/i);\r\n    mobileSafari = iOS && webkit && !ua.match(/CriOS/i);\r\n\r\n    if (mobileSafari) {\r\n      document.body.style.cursor = 'pointer';\r\n    }\r\n  }\r\n\r\n  const listener = window[`${enabled ? 'add' : 'remove'}EventListener`];\r\n  listener('click', cb);\r\n}\r\n","/** @module utils/Positoning/getSelectedTextPosition */\r\nimport getSelectedText from '../getSelectedText';\r\nimport getTextWidth from './getTextWidth';\r\n\r\nconst ZERO_WIDTH_CHARACTER = '\\u200b';\r\n\r\n/**\r\n * A utility function to attempt to get the current highlighted text position.\r\n *\r\n * When a context menu is opened, this function attempts to find the bounding client rect\r\n * for the highlighted text. However, if the text is in the text field, some weird stuff\r\n * happens and it is unable to get it correctly.\r\n */\r\nexport default function getSelectedTextPosition(e) {\r\n  let height;\r\n  const { target, clientX, clientY } = e;\r\n  const text = getSelectedText();\r\n  const width = Math.round(getTextWidth(text, target) || 0);\r\n  if (!text || target.classList.contains('md-text-field')) {\r\n    height = parseInt(window.getComputedStyle(target).fontSize, 10);\r\n    return {\r\n      width,\r\n      height,\r\n      left: clientX - width,\r\n      top: clientY,\r\n    };\r\n  }\r\n\r\n  // All browsers I am supporting have window.getSelection, but better safe than sorry\r\n  if (window.getSelection) {\r\n    const selection = window.getSelection();\r\n    if (selection.rangeCount) {\r\n      const range = selection.getRangeAt(0).cloneRange();\r\n      let rect = null;\r\n      if (range.getClientRects) {\r\n        const rects = range.getClientRects();\r\n        if (rects.length > 0) {\r\n          rect = rects[0];\r\n        }\r\n      }\r\n\r\n      if (!rect) {\r\n        const span = document.createElement('span');\r\n        span.appendChild(document.createTextNode(ZERO_WIDTH_CHARACTER));\r\n        range.insertNode(span);\r\n        rect = span.getBoundingClientRect();\r\n\r\n        const spanParent = span.parentNode;\r\n        spanParent.removeChild(span);\r\n        spanParent.normalize();\r\n      }\r\n\r\n      return rect;\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n","/** @module utils/getSelectedText */\r\n\r\n/**\r\n * A utility function that gets the current selected text in the document. I think\r\n * that all the browsers I support have `window.getSelection`, but it falls back to\r\n * support others.\r\n *\r\n * @return {String} the current selection on the page\r\n */\r\nexport default function getSelectedText() {\r\n  if (typeof window.getSelection !== 'undefined') {\r\n    return window.getSelection().toString();\r\n  } else if (typeof document.selection !== 'undefined' && document.selection.type === 'Text') {\r\n    return document.selection.createRange().text;\r\n  }\r\n\r\n  return '';\r\n}\r\n","/** @module utils/Positioning/getScroll */\r\n\r\n/**\r\n * A utility function to just get an element's scroll x and y\r\n * values. This is really just needed because `window` uses\r\n * different attributes.\r\n *\r\n * @param {Object} el - The element to get a scroll value from.\r\n * @return {Object} an object containing the scrollX and scrollY of the element.\r\n */\r\nexport default function getScroll(el) {\r\n  if (typeof el.scrollX !== 'undefined' && typeof el.scrollY !== 'undefined') {\r\n    return { x: el.scrollX, y: el.scrollY };\r\n  } else if (typeof el.scrollLeft !== 'undefined' && typeof el.scrollTop !== 'undefined') {\r\n    return { x: el.scrollLeft, y: el.scrollTop };\r\n  }\r\n\r\n  return { x: 0, y: 0 };\r\n}\r\n","/** @module utils/Positioning/getScreenSize */\r\n\r\n/**\r\n * A utility function to get the height or width of the of the browser with\r\n * a fallback for older browsers.\r\n *\r\n * @param {String} position - the position to get the screen size for\r\n * @return {number} the screen size for the provided position.\r\n */\r\nexport default function getScreenSize(position) {\r\n  if (position !== 'Height' && position !== 'Width' && process.env.NODE_ENV !== 'production') {\r\n    throw new Error(\r\n      'The \\'getScreenSize\\' function requires either a position of \\'Height\\' or \\'Width\\' ' +\r\n      `but received \\`${position}\\``\r\n    );\r\n  }\r\n\r\n  return window[`inner${position}`] || document.documentElement[`client${position}`];\r\n}\r\n","/** @module utils/Positioning/viewport */\r\nimport getScreenSize from './getScreenSize';\r\n\r\n/**\r\n * Determines if an element is still in the viewport. If it is,\r\n * it will return a `true` boolean. If it is not, it will return\r\n * an object containing booleans for top, right, bottom, and left\r\n * where a `false` value will mean it is out of the viewport for that\r\n * position.\r\n *\r\n * @param {Object} el - The element to test.\r\n * @return {boolean|Object} the results.\r\n */\r\nexport default function viewport(el) {\r\n  if (!el) {\r\n    return {};\r\n  }\r\n\r\n  const rect = el.getBoundingClientRect();\r\n  const top = rect.top >= 0;\r\n  const right = rect.right <= getScreenSize('Width');\r\n  const bottom = rect.bottom <= getScreenSize('Height');\r\n  const left = rect.left >= 0;\r\n\r\n  return top && right && bottom && left || { top, right, bottom, left };\r\n}\r\n","/** @module utils/Positioning/isOutOfBounds */\r\n\r\nimport getScreenSize from './getScreenSize';\r\n\r\nfunction isOutHorizontally(fixedTo, child, threshold) {\r\n  const { left: fixedLeft, right: fixedRight } = fixedTo.getBoundingClientRect();\r\n  const { left: childLeft, right: childRight } = child.getBoundingClientRect();\r\n  const offset = child.offsetWidth * threshold;\r\n\r\n  const left = childLeft + offset;\r\n  const right = childRight - offset;\r\n\r\n  const screenEdge = childLeft === 0 || getScreenSize('Width') === childRight;\r\n  return fixedLeft > left || fixedRight < right || screenEdge;\r\n}\r\n\r\nfunction isOutVertically(fixedTo, child, toggle, threshold) {\r\n  const { top: fixedTop, bottom: fixedBottom } = fixedTo.getBoundingClientRect();\r\n  const { top: childTop, bottom: childBottom } = child.getBoundingClientRect();\r\n  const offset = toggle.offsetHeight * threshold;\r\n\r\n  const screenEdge = childTop === 0 || getScreenSize('Height') === childBottom;\r\n  return fixedTop > childTop + offset || fixedBottom < childTop - offset || screenEdge;\r\n}\r\n\r\n/**\r\n * Checks if the fixedTo object for the Layover component is considered\r\n * out of bounds relative to the container.\r\n *\r\n * @param {Object} fixedTo - The Layover's `fixedTo` prop.\r\n * @param {Object} child - The Layover's `children` prop as a DOM element.\r\n * @param {Object} toggle - The Layover's `toggle` prop as a DOM element.\r\n * @param {number} verticalThreshold - The vertical threshold multiplier to apply.\r\n * @param {number} horizontalThreshold - The horizontal threshold multiplier to apply.\r\n * @return {boolean} true if the Layover's `fixedTo` prop is considered out of bounds.\r\n */\r\nexport default function isOutOfBounds(fixedTo, child, toggle, verticalThreshold, horizontalThreshold) {\r\n  if (fixedTo === window) {\r\n    return false;\r\n  } else if (fixedTo.x || fixedTo.y) {\r\n    const { x, y } = fixedTo;\r\n    return (!!y && isOutVertically(y, child, toggle, verticalThreshold)) ||\r\n      (!!x && isOutHorizontally(x, child, horizontalThreshold));\r\n  }\r\n\r\n  return isOutVertically(fixedTo, child, toggle, verticalThreshold) ||\r\n    isOutHorizontally(fixedTo, child, horizontalThreshold);\r\n}\r\n","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\n/* eslint-disable require-jsdoc, valid-jsdoc */\nvar MapShim = (function () {\n    if (typeof Map !== 'undefined') {\n        return Map;\n    }\n\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\n    function getIndex(arr, key) {\n        var result = -1;\n\n        arr.some(function (entry, index) {\n            if (entry[0] === key) {\n                result = index;\n\n                return true;\n            }\n\n            return false;\n        });\n\n        return result;\n    }\n\n    return (function () {\n        function anonymous() {\n            this.__entries__ = [];\n        }\n\n        var prototypeAccessors = { size: { configurable: true } };\n\n        /**\r\n         * @returns {boolean}\r\n         */\n        prototypeAccessors.size.get = function () {\n            return this.__entries__.length;\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\n        anonymous.prototype.get = function (key) {\n            var index = getIndex(this.__entries__, key);\n            var entry = this.__entries__[index];\n\n            return entry && entry[1];\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.set = function (key, value) {\n            var index = getIndex(this.__entries__, key);\n\n            if (~index) {\n                this.__entries__[index][1] = value;\n            } else {\n                this.__entries__.push([key, value]);\n            }\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.delete = function (key) {\n            var entries = this.__entries__;\n            var index = getIndex(entries, key);\n\n            if (~index) {\n                entries.splice(index, 1);\n            }\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.has = function (key) {\n            return !!~getIndex(this.__entries__, key);\n        };\n\n        /**\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.clear = function () {\n            this.__entries__.splice(0);\n        };\n\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.forEach = function (callback, ctx) {\n            var this$1 = this;\n            if ( ctx === void 0 ) ctx = null;\n\n            for (var i = 0, list = this$1.__entries__; i < list.length; i += 1) {\n                var entry = list[i];\n\n                callback.call(ctx, entry[1], entry[0]);\n            }\n        };\n\n        Object.defineProperties( anonymous.prototype, prototypeAccessors );\n\n        return anonymous;\n    }());\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\nvar global$1 = (function () {\n    if (typeof global !== 'undefined' && global.Math === Math) {\n        return global;\n    }\n\n    if (typeof self !== 'undefined' && self.Math === Math) {\n        return self;\n    }\n\n    if (typeof window !== 'undefined' && window.Math === Math) {\n        return window;\n    }\n\n    // eslint-disable-next-line no-new-func\n    return Function('return this')();\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\nvar requestAnimationFrame$1 = (function () {\n    if (typeof requestAnimationFrame === 'function') {\n        // It's required to use a bounded function because IE sometimes throws\n        // an \"Invalid calling object\" error if rAF is invoked without the global\n        // object on the left hand side.\n        return requestAnimationFrame.bind(global$1);\n    }\n\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\n})();\n\n// Defines minimum timeout before adding a trailing call.\nvar trailingTimeout = 2;\n\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\nvar throttle = function (callback, delay) {\n    var leadingCall = false,\n        trailingCall = false,\n        lastCallTime = 0;\n\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\n    function resolvePending() {\n        if (leadingCall) {\n            leadingCall = false;\n\n            callback();\n        }\n\n        if (trailingCall) {\n            proxy();\n        }\n    }\n\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\n    function timeoutCallback() {\n        requestAnimationFrame$1(resolvePending);\n    }\n\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\n    function proxy() {\n        var timeStamp = Date.now();\n\n        if (leadingCall) {\n            // Reject immediately following calls.\n            if (timeStamp - lastCallTime < trailingTimeout) {\n                return;\n            }\n\n            // Schedule new call to be in invoked when the pending one is resolved.\n            // This is important for \"transitions\" which never actually start\n            // immediately so there is a chance that we might miss one if change\n            // happens amids the pending invocation.\n            trailingCall = true;\n        } else {\n            leadingCall = true;\n            trailingCall = false;\n\n            setTimeout(timeoutCallback, delay);\n        }\n\n        lastCallTime = timeStamp;\n    }\n\n    return proxy;\n};\n\n// Minimum delay before invoking the update of observers.\nvar REFRESH_DELAY = 20;\n\n// A list of substrings of CSS properties used to find transition events that\n// might affect dimensions of observed elements.\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\n\n// Check if MutationObserver is available.\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\n\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\nvar ResizeObserverController = function() {\n    this.connected_ = false;\n    this.mutationEventsAdded_ = false;\n    this.mutationsObserver_ = null;\n    this.observers_ = [];\n\n    this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\n    this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\n};\n\n/**\r\n * Adds observer to observers list.\r\n *\r\n * @param {ResizeObserverSPI} observer - Observer to be added.\r\n * @returns {void}\r\n */\n\n\n/**\r\n * Holds reference to the controller's instance.\r\n *\r\n * @private {ResizeObserverController}\r\n */\n\n\n/**\r\n * Keeps reference to the instance of MutationObserver.\r\n *\r\n * @private {MutationObserver}\r\n */\n\n/**\r\n * Indicates whether DOM listeners have been added.\r\n *\r\n * @private {boolean}\r\n */\nResizeObserverController.prototype.addObserver = function (observer) {\n    if (!~this.observers_.indexOf(observer)) {\n        this.observers_.push(observer);\n    }\n\n    // Add listeners if they haven't been added yet.\n    if (!this.connected_) {\n        this.connect_();\n    }\n};\n\n/**\r\n * Removes observer from observers list.\r\n *\r\n * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.removeObserver = function (observer) {\n    var observers = this.observers_;\n    var index = observers.indexOf(observer);\n\n    // Remove observer if it's present in registry.\n    if (~index) {\n        observers.splice(index, 1);\n    }\n\n    // Remove listeners if controller has no connected observers.\n    if (!observers.length && this.connected_) {\n        this.disconnect_();\n    }\n};\n\n/**\r\n * Invokes the update of observers. It will continue running updates insofar\r\n * it detects changes.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.refresh = function () {\n    var changesDetected = this.updateObservers_();\n\n    // Continue running updates if changes have been detected as there might\n    // be future ones caused by CSS transitions.\n    if (changesDetected) {\n        this.refresh();\n    }\n};\n\n/**\r\n * Updates every observer from observers list and notifies them of queued\r\n * entries.\r\n *\r\n * @private\r\n * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n *  dimensions of it's elements.\r\n */\nResizeObserverController.prototype.updateObservers_ = function () {\n    // Collect observers that have active observations.\n    var activeObservers = this.observers_.filter(function (observer) {\n        return observer.gatherActive(), observer.hasActive();\n    });\n\n    // Deliver notifications in a separate cycle in order to avoid any\n    // collisions between observers, e.g. when multiple instances of\n    // ResizeObserver are tracking the same element and the callback of one\n    // of them changes content dimensions of the observed target. Sometimes\n    // this may result in notifications being blocked for the rest of observers.\n    activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\n\n    return activeObservers.length > 0;\n};\n\n/**\r\n * Initializes DOM listeners.\r\n *\r\n * @private\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.connect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already added.\n    if (!isBrowser || this.connected_) {\n        return;\n    }\n\n    // Subscription to the \"Transitionend\" event is used as a workaround for\n    // delayed transitions. This way it's possible to capture at least the\n    // final state of an element.\n    document.addEventListener('transitionend', this.onTransitionEnd_);\n\n    window.addEventListener('resize', this.refresh);\n\n    if (mutationObserverSupported) {\n        this.mutationsObserver_ = new MutationObserver(this.refresh);\n\n        this.mutationsObserver_.observe(document, {\n            attributes: true,\n            childList: true,\n            characterData: true,\n            subtree: true\n        });\n    } else {\n        document.addEventListener('DOMSubtreeModified', this.refresh);\n\n        this.mutationEventsAdded_ = true;\n    }\n\n    this.connected_ = true;\n};\n\n/**\r\n * Removes DOM listeners.\r\n *\r\n * @private\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.disconnect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already removed.\n    if (!isBrowser || !this.connected_) {\n        return;\n    }\n\n    document.removeEventListener('transitionend', this.onTransitionEnd_);\n    window.removeEventListener('resize', this.refresh);\n\n    if (this.mutationsObserver_) {\n        this.mutationsObserver_.disconnect();\n    }\n\n    if (this.mutationEventsAdded_) {\n        document.removeEventListener('DOMSubtreeModified', this.refresh);\n    }\n\n    this.mutationsObserver_ = null;\n    this.mutationEventsAdded_ = false;\n    this.connected_ = false;\n};\n\n/**\r\n * \"Transitionend\" event handler.\r\n *\r\n * @private\r\n * @param {TransitionEvent} event\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.onTransitionEnd_ = function (ref) {\n        var propertyName = ref.propertyName; if ( propertyName === void 0 ) propertyName = '';\n\n    // Detect whether transition may affect dimensions of an element.\n    var isReflowProperty = transitionKeys.some(function (key) {\n        return !!~propertyName.indexOf(key);\n    });\n\n    if (isReflowProperty) {\n        this.refresh();\n    }\n};\n\n/**\r\n * Returns instance of the ResizeObserverController.\r\n *\r\n * @returns {ResizeObserverController}\r\n */\nResizeObserverController.getInstance = function () {\n    if (!this.instance_) {\n        this.instance_ = new ResizeObserverController();\n    }\n\n    return this.instance_;\n};\n\nResizeObserverController.instance_ = null;\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\nvar defineConfigurable = (function (target, props) {\n    for (var i = 0, list = Object.keys(props); i < list.length; i += 1) {\n        var key = list[i];\n\n        Object.defineProperty(target, key, {\n            value: props[key],\n            enumerable: false,\n            writable: false,\n            configurable: true\n        });\n    }\n\n    return target;\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\nvar getWindowOf = (function (target) {\n    // Assume that the element is an instance of Node, which means that it\n    // has the \"ownerDocument\" property from which we can retrieve a\n    // corresponding global object.\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\n\n    // Return the local global object if it's not possible extract one from\n    // provided element.\n    return ownerGlobal || global$1;\n});\n\n// Placeholder of an empty content rectangle.\nvar emptyRect = createRectInit(0, 0, 0, 0);\n\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\nfunction toFloat(value) {\n    return parseFloat(value) || 0;\n}\n\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\nfunction getBordersSize(styles) {\n    var positions = [], len = arguments.length - 1;\n    while ( len-- > 0 ) positions[ len ] = arguments[ len + 1 ];\n\n    return positions.reduce(function (size, position) {\n        var value = styles['border-' + position + '-width'];\n\n        return size + toFloat(value);\n    }, 0);\n}\n\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\nfunction getPaddings(styles) {\n    var positions = ['top', 'right', 'bottom', 'left'];\n    var paddings = {};\n\n    for (var i = 0, list = positions; i < list.length; i += 1) {\n        var position = list[i];\n\n        var value = styles['padding-' + position];\n\n        paddings[position] = toFloat(value);\n    }\n\n    return paddings;\n}\n\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\nfunction getSVGContentRect(target) {\n    var bbox = target.getBBox();\n\n    return createRectInit(0, 0, bbox.width, bbox.height);\n}\n\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\nfunction getHTMLElementContentRect(target) {\n    // Client width & height properties can't be\n    // used exclusively as they provide rounded values.\n    var clientWidth = target.clientWidth;\n    var clientHeight = target.clientHeight;\n\n    // By this condition we can catch all non-replaced inline, hidden and\n    // detached elements. Though elements with width & height properties less\n    // than 0.5 will be discarded as well.\n    //\n    // Without it we would need to implement separate methods for each of\n    // those cases and it's not possible to perform a precise and performance\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\n    // gives wrong results for elements with width & height less than 0.5.\n    if (!clientWidth && !clientHeight) {\n        return emptyRect;\n    }\n\n    var styles = getWindowOf(target).getComputedStyle(target);\n    var paddings = getPaddings(styles);\n    var horizPad = paddings.left + paddings.right;\n    var vertPad = paddings.top + paddings.bottom;\n\n    // Computed styles of width & height are being used because they are the\n    // only dimensions available to JS that contain non-rounded values. It could\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\n    var width = toFloat(styles.width),\n        height = toFloat(styles.height);\n\n    // Width & height include paddings and borders when the 'border-box' box\n    // model is applied (except for IE).\n    if (styles.boxSizing === 'border-box') {\n        // Following conditions are required to handle Internet Explorer which\n        // doesn't include paddings and borders to computed CSS dimensions.\n        //\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\n        // properties then it's either IE, and thus we don't need to subtract\n        // anything, or an element merely doesn't have paddings/borders styles.\n        if (Math.round(width + horizPad) !== clientWidth) {\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\n        }\n\n        if (Math.round(height + vertPad) !== clientHeight) {\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\n        }\n    }\n\n    // Following steps can't be applied to the document's root element as its\n    // client[Width/Height] properties represent viewport area of the window.\n    // Besides, it's as well not necessary as the <html> itself neither has\n    // rendered scroll bars nor it can be clipped.\n    if (!isDocumentElement(target)) {\n        // In some browsers (only in Firefox, actually) CSS width & height\n        // include scroll bars size which can be removed at this step as scroll\n        // bars are the only difference between rounded dimensions + paddings\n        // and \"client\" properties, though that is not always true in Chrome.\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\n\n        // Chrome has a rather weird rounding of \"client\" properties.\n        // E.g. for an element with content width of 314.2px it sometimes gives\n        // the client width of 315px and for the width of 314.7px it may give\n        // 314px. And it doesn't happen all the time. So just ignore this delta\n        // as a non-relevant.\n        if (Math.abs(vertScrollbar) !== 1) {\n            width -= vertScrollbar;\n        }\n\n        if (Math.abs(horizScrollbar) !== 1) {\n            height -= horizScrollbar;\n        }\n    }\n\n    return createRectInit(paddings.left, paddings.top, width, height);\n}\n\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\nvar isSVGGraphicsElement = (function () {\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\n    // interface.\n    if (typeof SVGGraphicsElement !== 'undefined') {\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\n    }\n\n    // If it's so, then check that element is at least an instance of the\n    // SVGElement and that it has the \"getBBox\" method.\n    // eslint-disable-next-line no-extra-parens\n    return function (target) { return target instanceof getWindowOf(target).SVGElement && typeof target.getBBox === 'function'; };\n})();\n\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\nfunction isDocumentElement(target) {\n    return target === getWindowOf(target).document.documentElement;\n}\n\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\nfunction getContentRect(target) {\n    if (!isBrowser) {\n        return emptyRect;\n    }\n\n    if (isSVGGraphicsElement(target)) {\n        return getSVGContentRect(target);\n    }\n\n    return getHTMLElementContentRect(target);\n}\n\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\nfunction createReadOnlyRect(ref) {\n    var x = ref.x;\n    var y = ref.y;\n    var width = ref.width;\n    var height = ref.height;\n\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\n    var rect = Object.create(Constr.prototype);\n\n    // Rectangle's properties are not writable and non-enumerable.\n    defineConfigurable(rect, {\n        x: x, y: y, width: width, height: height,\n        top: y,\n        right: x + width,\n        bottom: height + y,\n        left: x\n    });\n\n    return rect;\n}\n\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\nfunction createRectInit(x, y, width, height) {\n    return { x: x, y: y, width: width, height: height };\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\nvar ResizeObservation = function(target) {\n    this.broadcastWidth = 0;\n    this.broadcastHeight = 0;\n    this.contentRect_ = createRectInit(0, 0, 0, 0);\n\n    this.target = target;\n};\n\n/**\r\n * Updates content rectangle and tells whether it's width or height properties\r\n * have changed since the last broadcast.\r\n *\r\n * @returns {boolean}\r\n */\n\n\n/**\r\n * Reference to the last observed content rectangle.\r\n *\r\n * @private {DOMRectInit}\r\n */\n\n\n/**\r\n * Broadcasted width of content rectangle.\r\n *\r\n * @type {number}\r\n */\nResizeObservation.prototype.isActive = function () {\n    var rect = getContentRect(this.target);\n\n    this.contentRect_ = rect;\n\n    return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;\n};\n\n/**\r\n * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n * from the corresponding properties of the last observed content rectangle.\r\n *\r\n * @returns {DOMRectInit} Last observed content rectangle.\r\n */\nResizeObservation.prototype.broadcastRect = function () {\n    var rect = this.contentRect_;\n\n    this.broadcastWidth = rect.width;\n    this.broadcastHeight = rect.height;\n\n    return rect;\n};\n\nvar ResizeObserverEntry = function(target, rectInit) {\n    var contentRect = createReadOnlyRect(rectInit);\n\n    // According to the specification following properties are not writable\n    // and are also not enumerable in the native implementation.\n    //\n    // Property accessors are not being used as they'd require to define a\n    // private WeakMap storage which may cause memory leaks in browsers that\n    // don't support this type of collections.\n    defineConfigurable(this, { target: target, contentRect: contentRect });\n};\n\nvar ResizeObserverSPI = function(callback, controller, callbackCtx) {\n    this.activeObservations_ = [];\n    this.observations_ = new MapShim();\n\n    if (typeof callback !== 'function') {\n        throw new TypeError('The callback provided as parameter 1 is not a function.');\n    }\n\n    this.callback_ = callback;\n    this.controller_ = controller;\n    this.callbackCtx_ = callbackCtx;\n};\n\n/**\r\n * Starts observing provided element.\r\n *\r\n * @param {Element} target - Element to be observed.\r\n * @returns {void}\r\n */\n\n\n/**\r\n * Registry of the ResizeObservation instances.\r\n *\r\n * @private {Map<Element, ResizeObservation>}\r\n */\n\n\n/**\r\n * Public ResizeObserver instance which will be passed to the callback\r\n * function and used as a value of it's \"this\" binding.\r\n *\r\n * @private {ResizeObserver}\r\n */\n\n/**\r\n * Collection of resize observations that have detected changes in dimensions\r\n * of elements.\r\n *\r\n * @private {Array<ResizeObservation>}\r\n */\nResizeObserverSPI.prototype.observe = function (target) {\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    // Do nothing if current environment doesn't have the Element interface.\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n        return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n        throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_;\n\n    // Do nothing if element is already being observed.\n    if (observations.has(target)) {\n        return;\n    }\n\n    observations.set(target, new ResizeObservation(target));\n\n    this.controller_.addObserver(this);\n\n    // Force the update of observations.\n    this.controller_.refresh();\n};\n\n/**\r\n * Stops observing provided element.\r\n *\r\n * @param {Element} target - Element to stop observing.\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.unobserve = function (target) {\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    // Do nothing if current environment doesn't have the Element interface.\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n        return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n        throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_;\n\n    // Do nothing if element is not being observed.\n    if (!observations.has(target)) {\n        return;\n    }\n\n    observations.delete(target);\n\n    if (!observations.size) {\n        this.controller_.removeObserver(this);\n    }\n};\n\n/**\r\n * Stops observing all elements.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.disconnect = function () {\n    this.clearActive();\n    this.observations_.clear();\n    this.controller_.removeObserver(this);\n};\n\n/**\r\n * Collects observation instances the associated element of which has changed\r\n * it's content rectangle.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.gatherActive = function () {\n        var this$1 = this;\n\n    this.clearActive();\n\n    this.observations_.forEach(function (observation) {\n        if (observation.isActive()) {\n            this$1.activeObservations_.push(observation);\n        }\n    });\n};\n\n/**\r\n * Invokes initial callback function with a list of ResizeObserverEntry\r\n * instances collected from active resize observations.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.broadcastActive = function () {\n    // Do nothing if observer doesn't have active observations.\n    if (!this.hasActive()) {\n        return;\n    }\n\n    var ctx = this.callbackCtx_;\n\n    // Create ResizeObserverEntry instance for every active observation.\n    var entries = this.activeObservations_.map(function (observation) {\n        return new ResizeObserverEntry(observation.target, observation.broadcastRect());\n    });\n\n    this.callback_.call(ctx, entries, ctx);\n    this.clearActive();\n};\n\n/**\r\n * Clears the collection of active observations.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.clearActive = function () {\n    this.activeObservations_.splice(0);\n};\n\n/**\r\n * Tells whether observer has active observations.\r\n *\r\n * @returns {boolean}\r\n */\nResizeObserverSPI.prototype.hasActive = function () {\n    return this.activeObservations_.length > 0;\n};\n\n// Registry of internal observers. If WeakMap is not available use current shim\n// for the Map collection as it has all required methods and because WeakMap\n// can't be fully polyfilled anyway.\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\n\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\nvar ResizeObserver = function(callback) {\n    if (!(this instanceof ResizeObserver)) {\n        throw new TypeError('Cannot call a class as a function.');\n    }\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    var controller = ResizeObserverController.getInstance();\n    var observer = new ResizeObserverSPI(callback, controller, this);\n\n    observers.set(this, observer);\n};\n\n// Expose public methods of ResizeObserver.\n['observe', 'unobserve', 'disconnect'].forEach(function (method) {\n    ResizeObserver.prototype[method] = function () {\n        return (ref = observers.get(this))[method].apply(ref, arguments);\n        var ref;\n    };\n});\n\nvar index = (function () {\n    // Export existing implementation if available.\n    if (typeof global$1.ResizeObserver !== 'undefined') {\n        return global$1.ResizeObserver;\n    }\n\n    return ResizeObserver;\n})();\n\nexport default index;\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ResizeObserverAPI from 'resize-observer-polyfill';\r\n\r\n/**\r\n * The `ResizeObserver` component is a component hook for the\r\n * [ResizeObserver](http://rawgit.com/WICG/ResizeObserver/master/index.html)\r\n * using the [resize-observer-polyfill](https://github.com/que-etc/resize-observer-polyfill)\r\n * for browsers that don't support it yet.\r\n *\r\n * This component displays an empty `span` with `aria-hidden` to allow access to the DOM. By\r\n * default it will attempt to watch changes on its parent component, but it can be configured\r\n * to watch any element by using the `target` prop.\r\n */\r\nexport default class ResizeObserver extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * Boolean if the height should be watched for the resize target.\r\n     */\r\n    watchHeight: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the width should be watched for the resize target.\r\n     */\r\n    watchWidth: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional target that should be used for detecting resize events. This can either\r\n     * be a HTMLDOMNode or a string to use with `document.getElementById` or `document.querySelector`.\r\n     *\r\n     * If this prop is not provided and not null, it will default to the parent node of this component.\r\n     * If the provided `target={null}`, the observer will not begin until the `target` is `undefined` or\r\n     * it has been correctly passed a target string or object.\r\n     */\r\n    target: PropTypes.oneOfType([\r\n      PropTypes.object,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * The component to be rendered as. This should normally just be the default `span`, but there are cases\r\n     * where the component should be switched to something else for valid html.\r\n     */\r\n    component: PropTypes.string,\r\n\r\n    /**\r\n     * A function to call when the height or width has been changed and that attribute is being watched.\r\n     * The callback will include the current height, width, scrollHeight and scrollWidth of the target.\r\n     *\r\n     * ```js\r\n     * onResize({\r\n     *   height: nextHeight,\r\n     *   width: nextWidth,\r\n     *   scrollHeight: nextScrollHeight,\r\n     *   scrollWidth: nextScrollWidth,\r\n     *   el: resizeTarget,\r\n     * });\r\n     * ```\r\n     */\r\n    onResize: PropTypes.func.isRequired,\r\n\r\n    /**\r\n     * An optional ref callback that will include the `target` or the parent node of the resize observer. Just\r\n     * like other refs, this will provide null when it unmounts.\r\n     *\r\n     * This is really only helpful if you'd like the DOM node for a parent Component without needing to use\r\n     * `ReactDOM.findDOMNode(this)`.\r\n     */\r\n    elRef: PropTypes.func,\r\n  };\r\n\r\n  static defaultProps = {\r\n    watchHeight: false,\r\n    watchWidth: false,\r\n    component: 'span',\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { target } = this.props;\r\n    const nextTarget = nextProps.target;\r\n    if (target === nextTarget) {\r\n      return;\r\n    } else if (nextTarget) {\r\n      if (this._target) {\r\n        this._observer.unobserve(this._target);\r\n      }\r\n      this._target = this._getTarget(this._container, nextTarget);\r\n      this._observer.observe(this._target);\r\n    }\r\n  }\r\n\r\n  _container = null;\r\n  _target = null;\r\n  _observer = null;\r\n  _height = null;\r\n  _width = null;\r\n  _scrollHeight = null;\r\n  _scrollWidth = null;\r\n\r\n  _getTarget(container, target) {\r\n    if (target === null || (target && typeof target !== 'string')) {\r\n      return target;\r\n    }\r\n\r\n    let t = null;\r\n    if (target) {\r\n      t = document.getElementById(target) || document.querySelector(target);\r\n    } else {\r\n      t = container.parentNode;\r\n    }\r\n\r\n    if (!t) {\r\n      throw new Error(\r\n        'An HTMLDOMNode is required as the `ResizeObserver`\\'s watch target but none were provided/found. ' +\r\n        `Please update the target prop to find a valid node since the provided target is invalid. \\`${target}\\`.`\r\n      );\r\n    }\r\n\r\n    return t;\r\n  }\r\n\r\n  _measure = (entries) => {\r\n    if (!this._observer || !this._target) {\r\n      return;\r\n    }\r\n\r\n    for (const entry of entries) {\r\n      if (!entry) {\r\n        return;\r\n      }\r\n\r\n      const { height, width } = entry.contentRect;\r\n      const { scrollHeight, scrollWidth } = entry.target;\r\n      if (this._isHeightChange(height, scrollHeight) || this._isWidthChange(width, scrollWidth)) {\r\n        this._height = height;\r\n        this._width = width;\r\n        this._scrollHeight = scrollHeight;\r\n        this._scrollWidth = scrollWidth;\r\n        this.props.onResize({ height, width, scrollHeight, scrollWidth, el: entry.target });\r\n      }\r\n    }\r\n  };\r\n\r\n  _isHeightChange = (height, scrollHeight) => this.props.watchHeight\r\n    && (height !== this._height || scrollHeight !== this._scrollHeight);\r\n  _isWidthChange = (width, scrollWidth) => this.props.watchWidth\r\n    && (width !== this._width || scrollWidth !== this._scrollWidth);\r\n\r\n  _handleRef = (container) => {\r\n    if (container) {\r\n      this._container = container;\r\n      this._target = this._getTarget(container, this.props.target);\r\n      this._observer = new ResizeObserverAPI(this._measure);\r\n\r\n      if (this._target) {\r\n        this._observer.observe(this._target);\r\n      }\r\n    } else {\r\n      if (this._observer) {\r\n        this._observer.disconnect();\r\n      }\r\n\r\n      this._container = null;\r\n      this._target = null;\r\n      this._observer = null;\r\n      this._height = null;\r\n      this._width = null;\r\n      this._scrollHeight = null;\r\n      this._scrollWidth = null;\r\n    }\r\n\r\n    if (this.props.elRef) {\r\n      this.props.elRef(this._target);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { component: Component } = this.props;\r\n    return <Component ref={this._handleRef} aria-hidden />;\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport { findDOMNode } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport CSSTransitionGroup from 'react-transition-group/CSSTransitionGroup';\r\nimport cn from 'classnames';\r\n\r\nimport handleWindowClickListeners from '../utils/EventUtils/handleWindowClickListeners';\r\nimport getSelectedTextPosition from '../utils/Positioning/getSelectedTextPosition';\r\nimport getScroll from '../utils/Positioning/getScroll';\r\nimport viewport from '../utils/Positioning/viewport';\r\nimport isOutOfBounds from '../utils/Positioning/isOutOfBounds';\r\nimport anchorShape from './anchorShape';\r\nimport fixedToShape from './fixedToShape';\r\nimport positionShape from './positionShape';\r\nimport HorizontalAnchors from './HorizontalAnchors';\r\nimport VerticalAnchors from './VerticalAnchors';\r\nimport Positions from './Positions';\r\nimport ResizeObserver from './ResizeObserver';\r\n\r\n/**\r\n * The Layover component is used to keep a component fixed to another component\r\n * while the page is scrolling or a container is scrolling. When the fixed component\r\n * is considered out of view, it will be closed.\r\n *\r\n * > NOTE: Don't look at source code. Plz.\r\n */\r\nexport default class Layover extends PureComponent {\r\n  static HorizontalAnchors = HorizontalAnchors;\r\n  static VerticalAnchors = VerticalAnchors;\r\n  static Positions = Positions;\r\n\r\n  static propTypes = {\r\n    /**\r\n     * A id to give the layover itself. This is generally recommended for accessibility. If the\r\n     * child does not have an id, the child will automatically be updated to be `${id}-layover`.\r\n     */\r\n    id: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * An optional style to apply to the layover.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the layover.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * Boolean if the layover's child is currently visible.\r\n     */\r\n    visible: PropTypes.bool.isRequired,\r\n\r\n    /**\r\n     * This should either be a single element or two elements that the layover recalculates\r\n     * its fixed position when scrolling for horizontal and vertical.\r\n     *\r\n     * When it is a single element, it will recalculate for both horizontal and vertical\r\n     * scrolling. Otherwise, you can specify the element for horizontal scrolling and a\r\n     * separate element for vertical scrolling. If one is omitted, it will default to `window`.\r\n     *\r\n     * If the component is no longer considered to be in view after scrolling, the `onClose`\r\n     * prop will be called.\r\n     */\r\n    fixedTo: fixedToShape.isRequired,\r\n\r\n    /**\r\n     * The renderable item that causes the Layover to become visible. This _should_\r\n     * most likely be an `element` or `arrayOf(element)`, but anything is allowed.\r\n     */\r\n    toggle: PropTypes.node,\r\n\r\n    /**\r\n     * Since the `toggle` prop can be anything, I need a way to be able to find an\r\n     * element to base all the calculations on. This can either be a string that\r\n     * gets passed to `layover.querySelector`, a DOM Element, or a function that\r\n     * returns a DOM Element.\r\n     */\r\n    toggleQuery: PropTypes.oneOfType([\r\n      PropTypes.func,\r\n      PropTypes.object,\r\n      PropTypes.string,\r\n    ]).isRequired,\r\n\r\n    /**\r\n     * A single child that should be fixed to the toggle element.\r\n     */\r\n    children: PropTypes.element.isRequired,\r\n\r\n    /**\r\n     * Boolean if the Layover should be displayed as a block instead of as an inline block.\r\n     */\r\n    block: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the `children` should be centered horizontally and vertically while keeping\r\n     * its height in mind as well. This is *only* valid if both the x and y `anchor` targets\r\n     * are `CENTER`.\r\n     */\r\n    centered: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the layover should gain the `md-full-width` class name.\r\n     */\r\n    fullWidth: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the width of the children should be updated automatically to be the width\r\n     * of the toggle element.\r\n     */\r\n    sameWidth: PropTypes.bool,\r\n\r\n    /**\r\n     * The minimum value the `left` style can be for the child component. This is really just used\r\n     * to make sure it doesn't scroll off the left of the page. It can also be used to make\r\n     * full screen layovers on devices when when the `fillViewportWidth` prop is enabled.\r\n     *\r\n     * This can either be a number of pixels or a string for percentages. If this value is a string\r\n     * **it will always be used over the calculated values** so it is preferred to use a number.\r\n     *\r\n     * @see {@link #minRight}\r\n     * @see {@link #fillViewportWidth}\r\n     */\r\n    minLeft: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]).isRequired,\r\n\r\n    /**\r\n     * The minimum value the `right` style can be for the child component. This is really just used\r\n     * to make sure it doesn't scroll off the right of the page when the `fillViewportWidth` prop is\r\n     * enabled.\r\n     *\r\n     * This can either be a number of pixels or a string for percentages. If this value is a string\r\n     * **it will always be used over the calculated values** so it is preferred to use a number.\r\n     *\r\n     * @see {@link #minLeft}\r\n     * @see {@link #fillViewportWidth}\r\n     */\r\n    minRight: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]).isRequired,\r\n\r\n    /**\r\n     * The minimum value that can be used for the `bottom` prop when the `fillViewportHeight` prop is enabled.\r\n     * It is generally recommended to keep this value at `0` to keep it stretched to the bottom of the viewport\r\n     * or setting it to a small positive number to add some padding.\r\n     *\r\n     * This can either be a number of pixels or a string for percentages. If this value is a string\r\n     * **it will always be used over the calculated values** so it is preferred to use a number.\r\n     *\r\n     * @see {@link #fillViewportHeight}\r\n     */\r\n    minBottom: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * Boolean if the layover should make the child fill the entire viewport's width. This will just\r\n     * style the child element with:\r\n     *\r\n     * ```js\r\n     * childStyle = {\r\n     *   left: this.props.minLeft,\r\n     *   right: this.props.minRight,\r\n     * };\r\n     * ```\r\n     *\r\n     * If you add any additional constraints such as `width` or `max-width`, it will not span the entire viewport's\r\n     * width. This prop should generally really only be used on mobile devices. Using this prop along with\r\n     * `fillViewportHeight` for Autocompletes can create great Android mobile searches. See the `fillViewportHeight`\r\n     * for more information about why it is *only Android*.\r\n     *\r\n     * @see {@link #minLeft}\r\n     * @see {@link #minRight}\r\n     * @see {@link #fillViewportHeight}\r\n     */\r\n    fillViewportWidth: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the layover should fill the height of the viewport from the current calculated `top`. This will just\r\n     * style the child element with:\r\n     *\r\n     * ```js\r\n     * childStyle = {\r\n     *   top: currentCalculatedTop,\r\n     *   bottom: this.props.minBottom,\r\n     *   maxHeight: 'none',\r\n     * };\r\n     * ```\r\n     *\r\n     * This is *super* nice on Android devices since it will allow you to create nice toolbar search autocompletes\r\n     * in your app and the list of items will grow until it reaches the soft keyboard. It isn't as nice on iOS since\r\n     * iOS does not subtract the soft keyboard from the viewport's size so the list will still extend to the bottom\r\n     * of the page.\r\n     *\r\n     * @see {@link #minBottom}\r\n     * @see {@link #fillViewportWidth}\r\n     */\r\n    fillViewportHeight: PropTypes.bool,\r\n\r\n    /**\r\n     * A function used to hide the visibility of the children when the children are no longer\r\n     * visible or an element outside of the layover is clicked.\r\n     */\r\n    onClose: PropTypes.func.isRequired,\r\n\r\n    /**\r\n     * The component to render the Layover as.\r\n     */\r\n    component: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.func,\r\n    ]).isRequired,\r\n\r\n    /**\r\n     * The transition name to use for the children appearing/disappearing.\r\n     */\r\n    transitionName: PropTypes.string.isRequired,\r\n\r\n    /**\r\n     * The transition duration for the enter animation. The animation can be disabled by setting\r\n     * this value to 0.\r\n     */\r\n    transitionEnterTimeout: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * The transition duration for the leave animation. The animation can be disabled by setting\r\n     * this value to 0.\r\n     */\r\n    transitionLeaveTimeout: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * This is a threshold that is used to calculate if the `children` is still in\r\n     * view by applying this multiplier to the `children`'s width.\r\n     */\r\n    xThreshold: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * This is a threshold that is used to calculate if the `children` is still in\r\n     * view by applying this multiplier to the `toggle`'s height.\r\n     */\r\n    yThreshold: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * Boolean if the `children` should be hidden when an element outside\r\n     * of the `Layout` component has been clicked.\r\n     */\r\n    closeOnOutsideClick: PropTypes.bool.isRequired,\r\n\r\n    /**\r\n     * This is how the children get \"anchored\" to the `toggle` element and how the\r\n     * auto-fix attempts will be made. Right now, the auto fixes will only be handled\r\n     * on viewport boundaries instead of `fixedTo` boundaries. It was too hard for\r\n     * first attempt.\r\n     *\r\n     * The general behavior will be that an equal-opposite of an anchor will be chosen\r\n     * when that direction is out of viewport. So for example, the children are out\r\n     * of viewport for the right of the screen, and the `anchor.x` value is\r\n     * `Layover.HorizontalPositions.RIGHT`, the children will be swapped to be the `LEFT`\r\n     * of the `toggle` component now.\r\n     *\r\n     * So a full list:\r\n     * - `LEFT` / `RIGHT`\r\n     * - `INNER_LEFT` / `INNER_RIGHT`\r\n     * - `TOP` / `BOTTOM`\r\n     *\r\n     * The `CENTER` and `OVERLAP` positions can not be automatically adjusted.\r\n     *\r\n     * > To be safe, you should use the enum values for the `x` and `y` values.\r\n     * @see {@link #VerticalAnchors}\r\n     * @see {@link #HorizontalAnchors}\r\n     */\r\n    anchor: anchorShape.isRequired,\r\n\r\n    /**\r\n     * This is how the children get \"anchored\" when the `animationPositions` is set to `Layover.Positions.BELOW`.\r\n     * Set this to `null` to continue using the base `anchor` prop instead of switching to this anchor.\r\n     *\r\n     * @see {@link #anchor}\r\n     */\r\n    belowAnchor: anchorShape,\r\n\r\n    /**\r\n     * This is the position that the children should animate from. It directly ties into\r\n     * the `$md-layover-child-positions` Sass variable.\r\n     */\r\n    animationPosition: positionShape.isRequired,\r\n\r\n    /**\r\n     * If you would like the layover to interact as a context menu, provide this prop. It will\r\n     * make the children appear relative to the context menu origin automatically.\r\n     *\r\n     * @see {@link #preventContextMenu}\r\n     */\r\n    onContextMenu: PropTypes.func,\r\n\r\n    /**\r\n     * Boolean if the default behavior of the context menu should be prevented when using the\r\n     * `onContextMenu` prop.\r\n     *\r\n     * @see {@link #onContextMenu}\r\n     */\r\n    preventContextMenu: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the layover should attempt to automatically adjust the position of the element to\r\n     * keep it within the viewport. If this value is set to `false`, the `onClose` prop will be called\r\n     * instead.\r\n     */\r\n    repositionOnScroll: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the layover should attempt to automatically adjust the position of the element to\r\n     * keep it within the viewport. If this value is set to `false`, the `onClose` prop will be called\r\n     * instead.\r\n     */\r\n    repositionOnResize: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the layover should become \"simplified\". This basically disables all the logic for\r\n     * keeping the child within the viewport and allows you to manage all the positioning via CSS.\r\n     *\r\n     * When this is enabled, it updates the `Layover` to have `position: relative` while the child will\r\n     * have `position: absolute` which will allow for simple `top`, `right`, `bottom`, and/or `left` CSS\r\n     * to position as wanted.\r\n     *\r\n     * This is really only helpful in cases where the layover can't calculate things correctly due to\r\n     * being in fixed containers somewhere in the page or some other weird stuff. Hopefully this won't\r\n     * really need to be used much.\r\n     */\r\n    simplified: PropTypes.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    anchor: {\r\n      x: Layover.HorizontalAnchors.INNER_LEFT,\r\n      y: Layover.VerticalAnchors.OVERLAP,\r\n    },\r\n    belowAnchor: {\r\n      x: Layover.HorizontalAnchors.CENTER,\r\n      y: Layover.VerticalAnchors.BOTTOM,\r\n    },\r\n    animationPosition: Layover.Positions.BELOW,\r\n    repositionOnScroll: true,\r\n    repositionOnResize: false,\r\n    component: 'div',\r\n    fixedTo: typeof window !== 'undefined' ? window : {},\r\n    toggleQuery: '.md-text-field-container,button,*[role=\"button\"],*[role=\"listbox\"]',\r\n    transitionName: 'md-layover',\r\n    transitionEnterTimeout: 200,\r\n    transitionLeaveTimeout: 200,\r\n    yThreshold: 0.38,\r\n    xThreshold: 0.38,\r\n    closeOnOutsideClick: true,\r\n    preventContextMenu: true,\r\n    simplified: false,\r\n    minLeft: 0,\r\n    minRight: 0,\r\n    minBottom: 0,\r\n    fillViewportWidth: false,\r\n    fillViewportHeight: false,\r\n  };\r\n\r\n  constructor(props) {\r\n    super();\r\n\r\n    const child = React.Children.only(props.children);\r\n    this.state = {\r\n      below: false,\r\n      right: false,\r\n      styles: child.props.style,\r\n    };\r\n\r\n    this._lastXFix = null;\r\n    this._lastYFix = null;\r\n    this._initialX = null;\r\n    this._initialY = null;\r\n    this._initialTop = null;\r\n    this._initialLeft = null;\r\n    this._child = null;\r\n    this._toggle = null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (process.env.NODE_ENV === 'development') {\r\n      window.addEventListener('load', () => {\r\n        this._setContainer(this._container);\r\n      });\r\n    }\r\n\r\n    const { visible, fixedTo, sameWidth, centered, simplified } = this.props;\r\n    const anchor = this._getAnchor(this.props);\r\n    if (visible) {\r\n      handleWindowClickListeners(this._handleOutsideClick, true);\r\n\r\n      // Don't worry about any of the other logic for a \"simple\" layover\r\n      if (simplified) {\r\n        return;\r\n      }\r\n\r\n      const rect = this._contextRect || this._toggle.getBoundingClientRect();\r\n      if (this._dialog) {\r\n        this._manageFixedToListener(this._dialog, true);\r\n      } else if (!this._inFixed) {\r\n        this._manageFixedToListener(fixedTo, true);\r\n      }\r\n\r\n      this._init(fixedTo, anchor, sameWidth, centered, rect);\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { fixedTo, visible, children, sameWidth, centered, simplified } = nextProps;\r\n    if (simplified) {\r\n      if (this.props.simplified !== simplified) {\r\n        this._reset();\r\n      }\r\n      return;\r\n    }\r\n\r\n    const anchor = this._getAnchor(nextProps);\r\n    const visibileDiff = visible !== this.props.visible;\r\n    const childStyle = React.Children.only(children).props.style;\r\n\r\n    if (visibileDiff) {\r\n      if (!visible) {\r\n        this._reset();\r\n      } else {\r\n        // Initialize the layover logic\r\n        const rect = this._contextRect || this._toggle.getBoundingClientRect();\r\n        if (this._dialog) {\r\n          this._manageFixedToListener(this._dialog, true);\r\n        } else if (!this._inFixed) {\r\n          this._manageFixedToListener(fixedTo, true);\r\n        }\r\n\r\n        this._init(fixedTo, anchor, sameWidth, centered, rect);\r\n      }\r\n    } else if (fixedTo !== this.props.fixedTo && visible) {\r\n      // swap the fixedTo listeners\r\n      this._manageFixedToListener(this.props.fixedTo, false);\r\n      this._manageFixedToListener(fixedTo, true);\r\n    } else if (childStyle !== React.Children.only(this.props.children).props.style) {\r\n      // Re-merge styles... This is only required if all the others fail since all the other\r\n      // logic always merges styles with the children styles\r\n      this.setState({ styles: { ...this.state.styles, ...childStyle } });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { visible, closeOnOutsideClick } = this.props;\r\n    const enabled = visible && closeOnOutsideClick;\r\n    const prevEnabled = prevProps.visible && prevProps.closeOnOutsideClick;\r\n    if (enabled !== prevEnabled) {\r\n      if (this._clickTimeout) {\r\n        clearTimeout(this._clickTimeout);\r\n        this._clickTimeout = null;\r\n      }\r\n\r\n      // This is really an arbitrary timeout time, but firefox needs to have a timeout\r\n      // so the context menu doesn't close automatically due to an \"outside click\" being\r\n      // triggered\r\n      this._clickTimeout = setTimeout(() => {\r\n        this._clickTimeout = null;\r\n        handleWindowClickListeners(this._handleOutsideClick, enabled);\r\n      }, enabled ? 300 : 0);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this._clickTimeout) {\r\n      clearTimeout(this._clickTimeout);\r\n      this._clickTimeout = null;\r\n    }\r\n    handleWindowClickListeners(this._handleOutsideClick, false);\r\n\r\n    if (!this.props.simplified) {\r\n      this._manageFixedToListener(this.props.fixedTo, false);\r\n      this._manageWindowResizeListener(false);\r\n    }\r\n  }\r\n\r\n  _getAnchor({ anchor, belowAnchor, animationPosition }) {\r\n    return animationPosition === Layover.Positions.BELOW && belowAnchor || anchor;\r\n  }\r\n\r\n  _isCenteredDialog = () => this._dialog && this._dialog.classList.contains('md-dialog--centered');\r\n\r\n  _createStyles = (anchor, centered, child, rect) => {\r\n    const { x, y } = anchor;\r\n    const { offsetWidth, offsetHeight } = child;\r\n\r\n    let left;\r\n    let top;\r\n    if (x === HorizontalAnchors.CENTER) {\r\n      left = rect.left + (rect.width / 2) - (offsetWidth / 2);\r\n    } else if (x === HorizontalAnchors.INNER_RIGHT) {\r\n      left = rect.right - offsetWidth;\r\n    } else if (x === HorizontalAnchors.LEFT) {\r\n      left = rect.left - offsetWidth;\r\n    } else if (x === HorizontalAnchors.RIGHT) {\r\n      left = rect.right;\r\n    }\r\n\r\n    if (centered && x === HorizontalAnchors.CENTER && y === VerticalAnchors.CENTER) {\r\n      top = rect.top - (offsetHeight / 2) + (rect.height / 2);\r\n    } else if (y === VerticalAnchors.TOP) {\r\n      top = rect.top - offsetHeight;\r\n    } else if (y === VerticalAnchors.CENTER) {\r\n      top = rect.top + rect.height / 2;\r\n    } else if (y === VerticalAnchors.BOTTOM) {\r\n      top = rect.bottom;\r\n    }\r\n\r\n    if (this._isCenteredDialog()) {\r\n      const dialogRect = this._dialog.getBoundingClientRect();\r\n      left -= dialogRect.left;\r\n      top -= dialogRect.top;\r\n    }\r\n\r\n    const style = {};\r\n    if (top) {\r\n      style.top = top;\r\n    }\r\n\r\n    if (left) {\r\n      style.left = left;\r\n    }\r\n\r\n    return style;\r\n  };\r\n\r\n  /**\r\n   * Whew. Ok. So since the fixedTo prop can either be two elements or a single item,\r\n   * this utility function is used to add/remove the scrolling event listeners for\r\n   * this prop.\r\n   *\r\n   * When the fixedTo prop has a horizontal and/or vertical attribute, the `window`\r\n   * will be the fallback option. If both the horizontal and vertical attributes are\r\n   * defined, the `window` still needs to have a scroll listener to make sure it\r\n   * doesn't go off screen.\r\n   */\r\n  _manageFixedToListener = (fixedTo, add) => {\r\n    const listener = `${add ? 'add' : 'remove'}EventListener`;\r\n    if (fixedTo !== window && (fixedTo.x || fixedTo.y)) {\r\n      const { x, y } = fixedTo;\r\n      if (x) {\r\n        x[listener]('scroll', this._handleScroll);\r\n      } else {\r\n        window[listener]('scroll', this._handleScroll);\r\n      }\r\n\r\n      if (y) {\r\n        y[listener]('scroll', this._handleScroll);\r\n      } else if (!x) {\r\n        // Only add the window event listener once\r\n        window[listener]('scroll', this._handleScroll);\r\n      }\r\n\r\n      if (y && y !== window && x && x !== window) {\r\n        window[listener]('scroll', this._handleScroll);\r\n      }\r\n    } else {\r\n      fixedTo[listener]('scroll', this._handleScroll);\r\n\r\n      if (fixedTo !== window) {\r\n        window[listener]('scroll', this._handleScroll);\r\n      }\r\n    }\r\n  };\r\n\r\n  _manageWindowResizeListener = (enabled) => {\r\n    if (this._windowResizeTimeout) {\r\n      clearTimeout(this._windowResizeTimeout);\r\n      this._windowResizeTimeout = null;\r\n    }\r\n\r\n    if (enabled) {\r\n      // add a 2 second delay before watching resize events since Android soft keyboards trigger a resize event.\r\n      this._windowResizeTimeout = setTimeout(() => {\r\n        this._windowResizeTimeout = null;\r\n        window.addEventListener('resize', this._handleWindowResize);\r\n      }, 2000);\r\n    } else {\r\n      window.removeEventListener('resize', this._handleWindowResize);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * This is just a simple utility function to merge the existing state styles,\r\n   * any new styles, and the children's styles (with most precedence).\r\n   */\r\n  _mergeStyles = (style) => {\r\n    const {\r\n      minLeft,\r\n      minRight,\r\n      minBottom,\r\n      fillViewportWidth,\r\n      fillViewportHeight,\r\n    } = this.props;\r\n    if (fillViewportWidth) {\r\n      style.left = minLeft;\r\n      style.right = minRight;\r\n    } else {\r\n      if (style.left) {\r\n        style.left = Math.max(minLeft, style.left);\r\n      }\r\n\r\n      if (style.right) {\r\n        style.right = Math.max(minRight, style.right);\r\n      }\r\n    }\r\n\r\n    if (fillViewportHeight) {\r\n      style.bottom = minBottom;\r\n      style.maxHeight = 'none';\r\n    } else {\r\n      // These styles are only created when filling the viewport height, so clear\r\n      // them out again\r\n      style.bottom = null;\r\n      style.maxHeight = null;\r\n    }\r\n\r\n    return {\r\n      ...this.state.styles,\r\n      ...style,\r\n      ...React.Children.only(this.props.children).props.style,\r\n    };\r\n  };\r\n\r\n  /**\r\n   * This initializes the popover with the default styles, and the initial bookkeeping\r\n   * variables to update while it is open.\r\n   */\r\n  _init = (fixedTo, anchor, sameWidth, centered, rect) => {\r\n    if (this._child) {\r\n      // The init function can be called again if the user quickly toggles the layover. If that\r\n      // is the case, we want the styles that were set after the _positionChild _attemptFix.\r\n      return;\r\n    }\r\n\r\n    const { height, width } = rect;\r\n    let { top, left, right } = rect;\r\n    let x;\r\n    let y;\r\n    if (this._dialog) {\r\n      const scroll = getScroll(this._dialog);\r\n      x = scroll.x;\r\n      y = scroll.y;\r\n\r\n      if (this._isCenteredDialog()) {\r\n        const dialogRect = this._dialog.getBoundingClientRect();\r\n        left -= dialogRect.left;\r\n        top -= dialogRect.top;\r\n        right -= dialogRect.right;\r\n      }\r\n    } else if (fixedTo !== window && (fixedTo.y || fixedTo.x)) {\r\n      x = getScroll(fixedTo.x || window).x;\r\n      y = getScroll(fixedTo.y || window).y;\r\n    } else {\r\n      const scroll = getScroll(fixedTo);\r\n      x = scroll.x;\r\n      y = scroll.y;\r\n    }\r\n\r\n    this._initialX = x;\r\n    this._initialY = y;\r\n    this._initialLeft = left;\r\n    this._initialTop = top;\r\n\r\n    if (anchor.x === HorizontalAnchors.INNER_RIGHT) {\r\n      this._initialLeft = left + width;\r\n    } else if (anchor.x === HorizontalAnchors.RIGHT) {\r\n      this._initialLeft = right;\r\n    }\r\n\r\n    if (!centered) {\r\n      this._lastYFix = anchor.y === VerticalAnchors.TOP ? 'bottom' : 'top';\r\n    } else {\r\n      // Centered is not fixable\r\n      this._lastYFix = null;\r\n    }\r\n    if (anchor.x === HorizontalAnchors.LEFT || anchor.x === HorizontalAnchors.INNER_LEFT) {\r\n      this._lastXFix = 'right';\r\n    } else if (anchor.x === HorizontalAnchors.RIGHT || anchor.x === HorizontalAnchors.INNER_RIGHT) {\r\n      this._lastXFix = 'left';\r\n    } else {\r\n      // Can't fix others\r\n      this._lastXFix = null;\r\n    }\r\n\r\n    if (anchor.y === VerticalAnchors.BOTTOM) {\r\n      this._initialTop = top + height;\r\n    }\r\n\r\n    if (fixedTo !== window && !fixedTo.y && !fixedTo.x) {\r\n      const scroll = getScroll(window);\r\n      this._initialWinX = scroll.x;\r\n      this._initialWinY = scroll.y;\r\n    }\r\n\r\n    const styles = this._mergeStyles({\r\n      left: this._initialLeft,\r\n      top: this._initialTop,\r\n      transformOrigin: undefined,\r\n      width: sameWidth ? width : undefined,\r\n    });\r\n\r\n    this.setState({ styles });\r\n  };\r\n\r\n  _reset = ({ fixedTo } = this.props) => {\r\n    // Reset all the bookkeeping variables for a fresh start on re-visible\r\n    this._lastXFix = null;\r\n    this._lastYFix = null;\r\n    this._initialX = null;\r\n    this._initialY = null;\r\n    this._initialTop = null;\r\n    this._initialLeft = null;\r\n\r\n    if (!this._inFixed) {\r\n      if (this._dialog) {\r\n        this._manageFixedToListener(this._dialog, false);\r\n      }\r\n\r\n      this._manageFixedToListener(fixedTo, false);\r\n    }\r\n  };\r\n\r\n  _setContainer = (container) => {\r\n    this._container = findDOMNode(container);\r\n    this._toggle = null;\r\n    if (!this._container) {\r\n      return;\r\n    }\r\n\r\n    const { toggleQuery, onContextMenu } = this.props;\r\n    if (typeof toggleQuery === 'function') {\r\n      this._toggle = toggleQuery();\r\n    } else if (typeof toggleQuery === 'string') {\r\n      this._toggle = this._container.querySelector(toggleQuery);\r\n    } else {\r\n      this._toggle = toggleQuery;\r\n    }\r\n\r\n    if (!this._toggle && !onContextMenu && process.env.NODE_ENV !== 'production') {\r\n      const error = new Error(\r\n        'Unable to find a toggle component with the provided `toggleQuery` and `toggle` element. \\n' +\r\n        `\\`toggleQuery\\`: \\`${toggleQuery}\\``\r\n      );\r\n      error.toggleQuery = toggleQuery;\r\n      error.toggle = this.props.toggle;\r\n\r\n      throw error;\r\n    }\r\n\r\n    let node = this._container;\r\n    while (node) {\r\n      const fixed = window.getComputedStyle(node).position === 'fixed';\r\n      if (fixed && node.className.match(/md-dialog--(full-page|centered)/)) {\r\n        this._dialog = node;\r\n        return;\r\n      } else if (fixed && !node.classList.contains('md-layover-child')) {\r\n        this._inFixed = true;\r\n        return;\r\n      }\r\n\r\n      node = node.offsetParent;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Attempts to fix the child by setting it's location ONLY for the entire\r\n   * page viewport. I didn't bother attempting to fix it for additional fixedTo\r\n   * stuff.\r\n   */\r\n  _initialFix = () => {\r\n    // Need to make a clone that disables any transitions to calculate positioning stuff\r\n    const clone = this._child.cloneNode(true);\r\n    clone.style.webkitTransform = 'none';\r\n    clone.style.transfrom = 'none';\r\n    clone.style.webkitTransition = 'none';\r\n    clone.style.transition = 'none';\r\n\r\n    this._child.parentNode.appendChild(clone);\r\n    const vp = viewport(clone);\r\n    const { offsetHeight: childHeight, offsetWidth: childWidth } = clone;\r\n    this._child.parentNode.removeChild(clone);\r\n\r\n    if (vp === true || !this._toggle || !this._child) {\r\n      return;\r\n    }\r\n\r\n    const { x, y } = this._getAnchor(this.props);\r\n    let toggleHeight;\r\n    let toggleWidth;\r\n    if (this._contextRect) {\r\n      toggleHeight = this._contextRect.height;\r\n      toggleWidth = this._contextRect.width;\r\n    } else {\r\n      toggleHeight = this._toggle.offsetHeight;\r\n      toggleWidth = this._toggle.offsetWidth;\r\n    }\r\n\r\n    let addToTop = 0;\r\n    let addToLeft = 0;\r\n\r\n    // Android devices will never get this far because they consider the keyboard as part\r\n    // of the viewport, iOS will and cause it to be a giant negative number. *sigh*\r\n    // Prevent any additional vertical positioning for iOS\r\n    if (!this.props.fillViewportHeight && (!vp.top || !vp.bottom)) {\r\n      const multiplier = vp.top ? -1 : 1;\r\n      if (!vp.bottom && y === VerticalAnchors.OVERLAP) {\r\n        addToTop += toggleHeight;\r\n      } else if (y === VerticalAnchors.TOP || y === VerticalAnchors.BOTTOM) {\r\n        addToTop += (multiplier * toggleHeight);\r\n      }\r\n\r\n      addToTop += (multiplier * childHeight);\r\n\r\n      this._lastYFix = vp.top ? 'bottom' : 'top';\r\n    }\r\n\r\n    if (!this.props.fillViewportWidth && x !== HorizontalAnchors.CENTER && (!vp.left || !vp.right)) {\r\n      if (!vp.left && x === HorizontalAnchors.LEFT) {\r\n        addToLeft += toggleWidth + childWidth;\r\n        this._lastXFix = 'left';\r\n      } else if (!vp.left && x === HorizontalAnchors.INNER_LEFT) {\r\n        addToLeft += toggleWidth;\r\n        this._lastXFix = 'left';\r\n      } else if (!vp.right && x === HorizontalAnchors.RIGHT) {\r\n        addToLeft -= (toggleWidth + childWidth);\r\n        this._lastXFix = 'right';\r\n      } else if (!vp.right && x === HorizontalAnchors.INNER_RIGHT) {\r\n        addToLeft -= toggleWidth;\r\n        this._lastXFix = 'right';\r\n      }\r\n    }\r\n\r\n    if (addToTop !== 0 || addToLeft !== 0) {\r\n      this._initialTop += addToTop;\r\n      this._initialLeft += addToLeft;\r\n\r\n      this.setState({ styles: this._mergeStyles({ top: this._initialTop, left: this._initialLeft }) });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * When the child is initially mounted, it will update the styles for centering\r\n   * the element (if enabled) and then attempt to fix any viewport issues.\r\n   */\r\n  _fixateChild = (child) => {\r\n    this._child = findDOMNode(child);\r\n\r\n    if (this._child !== null) {\r\n      this._childComponent = React.Children.only(this.props.children);\r\n\r\n      // If child also has a ref callback, simulate the same thing\r\n      if (typeof this._childComponent.ref === 'function') {\r\n        this._childComponent.ref(child);\r\n      }\r\n\r\n      if (this.props.simplified || !this._child || (!this._toggle && !this._contextRect)) {\r\n        return;\r\n      }\r\n\r\n      if (this._dialog && this._dialog.classList.contains('md-dialog--centered')) {\r\n        return;\r\n      }\r\n\r\n      this._manageWindowResizeListener(true);\r\n      this._positionChild();\r\n    } else if (this._childComponent && typeof this._childComponent.ref === 'function') {\r\n      this._childComponent.ref(child);\r\n    }\r\n  };\r\n\r\n  _positionChild = () => {\r\n    const { centered } = this.props;\r\n    const anchor = this._getAnchor(this.props);\r\n    const rect = this._contextRect || this._toggle.getBoundingClientRect();\r\n    this._height = rect.height;\r\n    this._width = rect.width;\r\n    const styles = this._createStyles(anchor, centered, this._child, rect);\r\n    if (styles.top || styles.left) {\r\n      this._initialLeft = styles.left || this._initialLeft;\r\n      this._initialTop = styles.top || this._initialTop;\r\n      this.setState({ styles: this._mergeStyles(styles) }, this._initialFix);\r\n    } else {\r\n      this._initialFix();\r\n    }\r\n  };\r\n\r\n  _handleResize = () => {\r\n    if (this.props.visible) {\r\n      this._positionChild();\r\n    }\r\n  };\r\n\r\n  _handleScroll = (e) => {\r\n    if (!this.props.repositionOnScroll) {\r\n      this._manageFixedToListener(this.props.fixedTo, false);\r\n      this.props.onClose(e);\r\n    }\r\n\r\n    if (!this._ticking) {\r\n      requestAnimationFrame(() => this._handleTick(e));\r\n    }\r\n\r\n    this._ticking = true;\r\n  };\r\n\r\n  /**\r\n   * This is the meat of the stuff. Do lots of viewport / container checks to make sure\r\n   * the element should still be visible. If it is still visible, it will update its\r\n   * x and y position for the new scroll position.\r\n   */\r\n  _handleTick = (e) => {\r\n    const { fixedTo, xThreshold, yThreshold } = this.props;\r\n    const vp = viewport(this._child);\r\n    if (vp !== true && vp.left && vp.right) {\r\n      const fixed = !this._contextRect && this._attemptFix(vp);\r\n      if (!fixed) {\r\n        this.props.onClose(e);\r\n        this._ticking = false;\r\n      }\r\n\r\n      return;\r\n    } else if (\r\n      isOutOfBounds(fixedTo, this._child, this._toggle, yThreshold, xThreshold)\r\n    ) {\r\n      this.props.onClose(e);\r\n      this._ticking = false;\r\n      return;\r\n    }\r\n\r\n    let x;\r\n    let y;\r\n    if (this._dialog) {\r\n      const scroll = getScroll(this._dialog);\r\n      x = scroll.x;\r\n      y = scroll.y;\r\n    } else if (fixedTo !== window && (fixedTo.x || fixedTo.y)) {\r\n      x = getScroll(fixedTo.x || window).x;\r\n      y = getScroll(fixedTo.y || window).y;\r\n    } else {\r\n      const scroll = getScroll(fixedTo);\r\n      x = scroll.x;\r\n      y = scroll.y;\r\n    }\r\n\r\n    let winX;\r\n    let winY;\r\n    // When using the additional fixedTo stuff, need to also keep track of the entire\r\n    // window's scrolling..\r\n    if (fixedTo !== window && !fixedTo.x && !fixedTo.y) {\r\n      const scroll = getScroll(window);\r\n      winX = scroll.x;\r\n      winY = scroll.y;\r\n    }\r\n\r\n    const { styles } = this.state;\r\n    let { left, top } = styles;\r\n    if (this._initialX !== x) {\r\n      left = (this._initialX - x) + this._initialLeft;\r\n    }\r\n\r\n    if (winX && this._initialWinX !== winX) {\r\n      left = (this._initialWinX - winX) + this._initialX;\r\n    }\r\n\r\n    if (this._initialY !== y) {\r\n      top = (this._initialY - y) + this._initialTop;\r\n    }\r\n\r\n    if (winY && this._initialWinY !== winY) {\r\n      top = (this._initialWinY - winY) + this._initialTop + (this._initialY - y);\r\n    }\r\n\r\n    if (styles.top !== top || styles.left !== left) {\r\n      this.setState({ styles: this._mergeStyles({ left, top }) }, () => {\r\n        this._ticking = false;\r\n      });\r\n    } else {\r\n      this._ticking = false;\r\n    }\r\n  };\r\n\r\n  _handleOutsideClick = (e) => {\r\n    if (\r\n      (this._contextRect && this._child && !this._child.contains(e.target)) ||\r\n      (this._container && !this._container.contains(e.target))\r\n    ) {\r\n      this.props.onClose(e);\r\n    }\r\n  };\r\n\r\n  _handleWindowResize = (e) => {\r\n    const { onClose, repositionOnResize } = this.props;\r\n    if (repositionOnResize) {\r\n      this._handleResize();\r\n    } else {\r\n      onClose(e);\r\n      this._manageWindowResizeListener(false);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Attempts to fix a viewport problem by swapping the positioning. This only does\r\n   * vertical switching right now.\r\n   *\r\n   * @param {Object} vp - The result of the viewport function\r\n   * @return {boolean} true if the fix was able to be done and successful.\r\n   */\r\n  _attemptFix = (vp) => {\r\n    const { x, y } = this._getAnchor(this.props);\r\n    const centered = x === HorizontalAnchors.CENTER && y === VerticalAnchors.CENTER && this.props.centered;\r\n    if (centered || (this._lastYFix === 'top' && !vp.top) || (this._lastYFix === 'bottom' && !vp.bottom)) {\r\n      return false;\r\n    }\r\n\r\n    const toggleTop = this._toggle.getBoundingClientRect().top;\r\n    const { offsetHeight: toggleHeight } = this._toggle;\r\n    const { offsetHeight: childHeight } = this._child;\r\n\r\n    // Can;t fix if the child can't fit on the page based on the toggle's position\r\n    if (toggleTop + toggleHeight + childHeight > window.innerHeight) {\r\n      return false;\r\n    }\r\n\r\n    const { top } = this._child.getBoundingClientRect();\r\n    let newTop = this._initialTop;\r\n    let addToTop = childHeight * (vp.top ? -1 : 1);\r\n    if (y === VerticalAnchors.OVERLAP) {\r\n      addToTop += ((vp.top ? 1 : -1) * toggleHeight);\r\n    } else if (y === VerticalAnchors.TOP || y === VerticalAnchors.BOTTOM) {\r\n      addToTop += ((this._lastYFix === 'top' ? -1 : 1) * toggleHeight);\r\n    }\r\n\r\n    if (addToTop !== 0) {\r\n      newTop = top + addToTop;\r\n      this._lastYFix = vp.top ? 'bottom' : 'top';\r\n    }\r\n\r\n    if (newTop !== this._initialTop) {\r\n      this._initialTop = newTop;\r\n      const { fixedTo } = this.props;\r\n      let scrollEl = fixedTo;\r\n      if (fixedTo !== window && (fixedTo.y || fixedTo.x)) {\r\n        scrollEl = fixedTo.y || window;\r\n      }\r\n\r\n      this._initialY = getScroll(scrollEl).y;\r\n\r\n      this.setState({ styles: this._mergeStyles({ top: this._initialTop }) }, () => {\r\n        this._ticking = false;\r\n      });\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  _handleContextMenu = (e) => {\r\n    const anchor = this._getAnchor(this.props);\r\n    const { onContextMenu, preventContextMenu, fixedTo, sameWidth, centered, visible } = this.props;\r\n    if (!onContextMenu) {\r\n      return;\r\n    }\r\n\r\n    this._contextRect = getSelectedTextPosition(e);\r\n    if (preventContextMenu && (!this._child || !this._child.contains(e.target))) {\r\n      e.preventDefault();\r\n    }\r\n\r\n    onContextMenu(e);\r\n    if (visible) {\r\n      this._init(fixedTo, anchor, sameWidth, centered, this._contextRect);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      className,\r\n      block,\r\n      toggle,\r\n      visible,\r\n      children,\r\n      fullWidth,\r\n      animationPosition,\r\n      simplified,\r\n      fillViewportWidth,\r\n      fillViewportHeight,\r\n      /* eslint-disable no-unused-vars */\r\n      anchor,\r\n      belowAnchor,\r\n      onClose,\r\n      repositionOnScroll,\r\n      repositionOnResize,\r\n      sameWidth,\r\n      centered,\r\n      fixedTo,\r\n      toggleQuery,\r\n      yThreshold,\r\n      xThreshold,\r\n      onContextMenu,\r\n      preventContextMenu,\r\n      closeOnOutsideClick,\r\n      minLeft,\r\n      minRight,\r\n      minBottom,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n\r\n    let child;\r\n    let childId;\r\n    if (visible) {\r\n      child = React.Children.only(children);\r\n      if (child.props.id) {\r\n        childId = child.props.id;\r\n      } else if (props.id) {\r\n        childId = `${props.id}-layover`;\r\n      }\r\n\r\n      child = React.cloneElement(children, {\r\n        ref: this._fixateChild,\r\n        id: childId,\r\n        style: simplified ? child.props.style : this.state.styles,\r\n        className: cn(`md-layover-child md-layover-child--${animationPosition}`, {\r\n          'md-layover-child--simplified': simplified,\r\n        }, child.props.className),\r\n      });\r\n    }\r\n\r\n    let observer = null;\r\n    if (!simplified && (!fillViewportWidth && !fillViewportHeight)) {\r\n      observer = (\r\n        <ResizeObserver\r\n          watchWidth={!fillViewportWidth}\r\n          watchHeight={!fillViewportHeight}\r\n          target={this._child}\r\n          onResize={this._handleResize}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <CSSTransitionGroup\r\n        {...props}\r\n        className={cn('md-layover', {\r\n          'md-layover--simplified': simplified,\r\n          'md-inline-block': !block && !fullWidth,\r\n          'md-full-width': fullWidth,\r\n        }, className)}\r\n        ref={this._setContainer}\r\n        aria-haspopup\r\n        aria-owns={childId}\r\n        aria-expanded={visible}\r\n        transitionEnter={props.transitionEnterTimeout !== 0}\r\n        transitionLeave={props.transitionLeaveTimeout !== 0}\r\n        onContextMenu={this._handleContextMenu}\r\n      >\r\n        {observer}\r\n        {toggle}\r\n        {child}\r\n      </CSSTransitionGroup>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { findDOMNode } from 'react-dom';\r\nimport cn from 'classnames';\r\nimport deprecated from 'react-prop-types/lib/deprecated';\r\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\r\n\r\nimport TICK from '../constants/CSSTransitionGroupTick';\r\nimport getField from '../utils/getField';\r\nimport handleKeyboardAccessibility from '../utils/EventUtils/handleKeyboardAccessibility';\r\nimport anchorShape from '../Helpers/anchorShape';\r\nimport fixedToShape from '../Helpers/fixedToShape';\r\nimport positionShape from '../Helpers/positionShape';\r\nimport Layover from '../Helpers/Layover';\r\nimport List from '../Lists/List';\r\n\r\n/**\r\n * The `Menu` controlled component is used to display a list of children in the `List`\r\n * component once the `visible` prop is true.\r\n */\r\nexport default class Menu extends PureComponent {\r\n  static HorizontalAnchors = Layover.HorizontalAnchors;\r\n  static VerticalAnchors = Layover.VerticalAnchors;\r\n  static Positions = {\r\n    // Can't do ...Layover.Positions since it triggers the get for CONTEXT\r\n    TOP_LEFT: Layover.Positions.TOP_LEFT,\r\n    TOP_RIGHT: Layover.Positions.TOP_RIGHT,\r\n    BOTTOM_LEFT: Layover.Positions.BOTTOM_LEFT,\r\n    BOTTOM_RIGHT: Layover.Positions.BOTTOM_RIGHT,\r\n    BELOW: Layover.Positions.BELOW,\r\n    _warned: false,\r\n    get CONTEXT() {\r\n      if (!this._warned) {\r\n        /* eslint-disable no-console */\r\n        console.error(\r\n          'The `Menu.Positions.CONTEXT` position has been deprecated and will be removed ' +\r\n          'in the next major release. To make the `Menu` behave as a context menu, provide ' +\r\n          'the `onContextMenu` prop instead.'\r\n        );\r\n        /* eslint-enable no-console */\r\n      }\r\n\r\n      this._warned = true;\r\n      return 'context';\r\n    },\r\n  };\r\n\r\n  static propTypes = {\r\n    /**\r\n     * An id to provide to the menu's container. This is required for accessibility as it generates\r\n     * the `aria-` attributes for dynamic content.\r\n     *\r\n     * @see {@link #listId}\r\n     */\r\n    id: isRequiredForA11y(PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ])),\r\n\r\n    /**\r\n     * An optional id to provide to the menu's list. If this prop is omitted, the list's id will be\r\n     * `\\`${id}-list\\``\r\n     */\r\n    listId: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * An optional style to apply to the main container for the menu.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional class name to apply to the main container for the menu.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the list once the menu has opened.\r\n     */\r\n    listStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional class name to apply to the list once the menu has opened.\r\n     */\r\n    listClassName: PropTypes.string,\r\n\r\n    /**\r\n     * The component to render the main container as.\r\n     *\r\n     * @see {@link Helpers/Layover#component}\r\n     */\r\n    component: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.func,\r\n    ]),\r\n\r\n    /**\r\n     * This is how the menu's `List` gets anchored to the `toggle` element.\r\n     *\r\n     * @see {@link Helpers/Layover#anchor}\r\n     */\r\n    anchor: anchorShape,\r\n\r\n    /**\r\n     * This is the optional anchor to use when the `position` is set to `Menu.Positions.BELOW`.\r\n     * Set this to `null` to use the default `anchor` prop.\r\n     *\r\n     * @see {@link Helpers/Layover#belowAnchor}\r\n     */\r\n    belowAnchor: anchorShape,\r\n\r\n    /**\r\n     * This is the animation position for the list that appears.\r\n     *\r\n     * @see {@link Helpers/Layover#animationPosition}\r\n     */\r\n    position: positionShape,\r\n\r\n    /**\r\n     * This is the component/element that should toggle the menu open.\r\n     *\r\n     * @see {@link Helpers/Layover#toggle}\r\n     */\r\n    toggle: PropTypes.node,\r\n\r\n    /**\r\n     * This is how the menu's list will be \"fixed\" to the `toggle` component.\r\n     *\r\n     * @see {@link Helpers/Layover#fixedTo}\r\n     */\r\n    fixedTo: fixedToShape,\r\n\r\n    /**\r\n     * Any additional props that should be applied to the list in the menu. This is really used\r\n     * when additional `aria-` tags need to be applied.\r\n     */\r\n    listProps: PropTypes.object,\r\n\r\n    /**\r\n     * Boolean if the menu's list should appear horizontally instead of vertically.\r\n     */\r\n    listInline: PropTypes.bool,\r\n\r\n    /**\r\n     * The list's z-depth for applying box shadow. This should be a number from 0 to 5.\r\n     */\r\n    listZDepth: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * Boolean if the list should have its height restricted to the `$md-menu-mobile-max-height`/\r\n     * `$md-menu-desktop-max-height` values.\r\n     *\r\n     * @see [md-menu-mobile-max-height](/components/menus?tab=2#variable-md-menu-mobile-max-height)\r\n     * @see [md-menu-desktop-max-height](/components/menus?tab=2#variable-md-menu-desktop-max-height)\r\n     */\r\n    listHeightRestricted: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the menu's list is visible.\r\n     */\r\n    visible: PropTypes.bool.isRequired,\r\n\r\n    /**\r\n     * Any children to render in the menu's list. This _should_ normally be `ListItem`, or\r\n     * `ListItemControl`.\r\n     */\r\n    children: PropTypes.node,\r\n\r\n    /**\r\n     * An optional function to call when en element in the menu has been clicked.\r\n     */\r\n    onClick: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when a key is pressed anywhere in the menu.\r\n     */\r\n    onKeyDown: PropTypes.func,\r\n\r\n    /**\r\n     * A function to call to close the menu. This is used for closing on outside clicks,\r\n     * closing when a list item has been clicked, or the user presses escape.\r\n     */\r\n    onClose: PropTypes.func.isRequired,\r\n\r\n    /**\r\n     * Boolean if the menu should be cascading. This means that the menu will pop the additional\r\n     * `nestedItems` on any `ListItem` to be appear either to the right or left of the visible list.\r\n     */\r\n    cascading: PropTypes.bool,\r\n\r\n    /**\r\n     * This is how the cascading lists get anchored to the list item.\r\n     *\r\n     * @see {@link Helpers/Layover#anchor}\r\n     */\r\n    cascadingAnchor: Layover.propTypes.anchor,\r\n\r\n    /**\r\n     * This is the z-depth the list should gain for a cascading menu. This only gets applied on\r\n     * items that are more than 1 level deep.\r\n     */\r\n    cascadingZDepth: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * Boolean if the `md-full-width` class name should get applied to the menu's container.\r\n     */\r\n    fullWidth: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the menu should be displayed as a block instead of as an inline block.\r\n     *\r\n     * @see {@link #fullWidth}\r\n     */\r\n    block: PropTypes.bool,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#centered}\r\n     */\r\n    centered: Layover.propTypes.centered,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#sameWidth}\r\n     */\r\n    sameWidth: Layover.propTypes.sameWidth,\r\n\r\n    /**\r\n     * If you would like the menu to interact as a context menu, provide this prop.\r\n     *\r\n     * @see {@link Helpers/Layover#onContextMenu}\r\n     */\r\n    onContextMenu: Layover.propTypes.onContextMenu,\r\n\r\n    /**\r\n     * Boolean if the default behavior of the context menu should be prevented when using the\r\n     * `onContextMenu` prop.\r\n     *\r\n     * @see {@link Helpers/Layover#preventContextMenu}\r\n     */\r\n    preventContextMenu: Layover.propTypes.preventContextMenu,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#xThreshold}\r\n     */\r\n    xThreshold: PropTypes.number,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#yThreshold}\r\n     */\r\n    yThreshold: PropTypes.number,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#closeOnOutsideClick}\r\n     */\r\n    closeOnOutsideClick: PropTypes.bool,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#toggleQuery}\r\n     */\r\n    toggleQuery: PropTypes.oneOfType([\r\n      PropTypes.func,\r\n      PropTypes.object,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * An optional transition name to use for the list appearing/disappearing.\r\n     *\r\n     * @see {@link Helpers/Layover#transitionName}\r\n     */\r\n    transitionName: PropTypes.string,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#transitionEnterTimeout}\r\n     */\r\n    transitionEnterTimeout: PropTypes.number,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#transitionLeaveTimeout}\r\n     */\r\n    transitionLeaveTimeout: PropTypes.number,\r\n\r\n    /**\r\n     * Boolean if the menu should automatically try to reposition itself to stay within\r\n     * the viewport when the `fixedTo` element scrolls.\r\n     *\r\n     * @see {@link Helpers/Layover#repositionOnScroll}\r\n     */\r\n    repositionOnScroll: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the menu should automatically try to reposition itself to stay within\r\n     * the viewport when the window resizes.\r\n     *\r\n     * @see {@link Helpers/Layover#repositionOnResize}\r\n     */\r\n    repositionOnResize: PropTypes.bool,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#simplified}\r\n     */\r\n    simplified: PropTypes.bool,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#minLeft}\r\n     */\r\n    minLeft: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#minRight}\r\n     */\r\n    minRight: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#minBottom}\r\n     */\r\n    minBottom: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#fillViewportWidth}\r\n     */\r\n    fillViewportWidth: PropTypes.bool,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#fillViewportHeight}\r\n     */\r\n    fillViewportHeight: PropTypes.bool,\r\n\r\n    isOpen: deprecated(PropTypes.bool, 'Use `visible` instead'),\r\n    close: deprecated(PropTypes.func, 'Use `onClose` instead'),\r\n    autoclose: deprecated(PropTypes.bool, 'The menus will always autoclose as according to the specs'),\r\n    contained: deprecated(PropTypes.bool, 'Use `sameWidth` instead'),\r\n    limitHeight: deprecated(PropTypes.bool, 'The menus will always be limited in height as according to the specs'),\r\n    expanderIconClassName: deprecated(\r\n      PropTypes.node,\r\n      'The expander for cascading menus will now just be a simple rotate of the existing `ListItem` ' +\r\n      'expander icon'\r\n    ),\r\n    expanderIconChildren: deprecated(\r\n      PropTypes.node,\r\n      'The expander for cascading menus will now just be a simple rotate of the existing `ListItem` ' +\r\n      'expander icon'\r\n    ),\r\n  };\r\n\r\n  static defaultProps = {\r\n    anchor: {\r\n      x: Layover.HorizontalAnchors.INNER_RIGHT,\r\n      y: Layover.VerticalAnchors.OVERLAP,\r\n    },\r\n    cascadingAnchor: {\r\n      x: Layover.HorizontalAnchors.RIGHT,\r\n      y: Layover.VerticalAnchors.OVERLAP,\r\n    },\r\n    position: Layover.Positions.TOP_RIGHT,\r\n    fixedTo: typeof window !== 'undefined' ? window : {},\r\n    listZDepth: 2,\r\n    listHeightRestricted: true,\r\n    cascadingZDepth: 3,\r\n    repositionOnScroll: true,\r\n    repositionOnResize: false,\r\n    simplified: true,\r\n  };\r\n\r\n  static contextTypes = {\r\n    listLevel: PropTypes.number,\r\n    cascadingId: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number,\r\n    ]),\r\n    cascadingMenu: PropTypes.bool,\r\n    cascadingAnchor: anchorShape,\r\n    cascadingZDepth: PropTypes.number,\r\n  };\r\n\r\n  static childContextTypes = {\r\n    listLevel: PropTypes.number,\r\n    cascadingId: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number,\r\n    ]),\r\n    cascadingMenu: PropTypes.bool,\r\n    cascadingFixedTo: fixedToShape,\r\n    cascadingAnchor: anchorShape,\r\n    cascadingZDepth: PropTypes.number,\r\n  };\r\n\r\n  getChildContext() {\r\n    const { cascading, id, fixedTo, cascadingAnchor } = this.props;\r\n    const listLevel = this.context.listLevel || 0;\r\n    const cascadingMenu = typeof cascading !== 'undefined' ? cascading : this.context.cascadingMenu;\r\n    const cascadingZDepth = getField(this.context, this.props, 'cascadingZDepth');\r\n    const cascadingFixedTo = typeof fixedTo !== 'undefined' ? fixedTo : this.context.cascadingFixedTo;\r\n\r\n    return {\r\n      listLevel,\r\n      cascadingId: `${id}-level-${listLevel + 1}`,\r\n      cascadingMenu,\r\n      cascadingAnchor,\r\n      cascadingZDepth,\r\n      cascadingFixedTo,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._container = findDOMNode(this);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this._timeout) {\r\n      clearTimeout(this._timeout);\r\n    }\r\n  }\r\n\r\n  _handleClose = (e) => {\r\n    const { close, onClose } = this.props;\r\n    if (close || onClose) {\r\n      (close || onClose)(e);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Checks if a provided event target or HTML Element is considered a menu click target.\r\n   * This normally is just a ListItem.\r\n   */\r\n  _isCloseTarget(target) {\r\n    return target.classList.contains('md-list-item')\r\n      && !target.classList.contains('md-list-item--nested-container');\r\n  }\r\n\r\n  /**\r\n   * Checks if a provided event target or HTML Element is something that should shortcut/break\r\n   * out of the click event loop because it **should not** close menus when clicked.\r\n   */\r\n  _isIgnoreTarget(target) {\r\n    return target.getAttribute('disabled') !== null\r\n      || target.classList.contains('md-list-control');\r\n  }\r\n\r\n  _handleClick = (e) => {\r\n    if (this.props.onClick) {\r\n      this.props.onClick(e);\r\n    }\r\n\r\n    let node = e.target;\r\n    while (this._container && this._container.contains(node)) {\r\n      if (this._isIgnoreTarget(node)) {\r\n        return;\r\n      } else if (this._isCloseTarget(node)) {\r\n        e.persist();\r\n        // set a timeout so item click events still trigger, and then close\r\n        this._timeout = setTimeout(() => {\r\n          this._timeout = null;\r\n          this._handleClose(e);\r\n        }, TICK);\r\n\r\n        return;\r\n      }\r\n\r\n      node = node.parentNode;\r\n    }\r\n  };\r\n\r\n  _handleKeyDown = (e) => {\r\n    if (this.props.onKeyDown) {\r\n      this.props.onKeyDown(e);\r\n    }\r\n\r\n    handleKeyboardAccessibility(e, this._handleClick, true, true);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      className,\r\n      listStyle,\r\n      listClassName,\r\n      visible,\r\n      children,\r\n      listProps,\r\n      listZDepth,\r\n      listInline,\r\n      listHeightRestricted,\r\n      cascading,\r\n      sameWidth,\r\n      simplified,\r\n      contained, // deprecated\r\n      isOpen, // deprecated\r\n      /* eslint-disable no-unused-vars */\r\n      fixedTo: propFixedTo,\r\n      listId: propListId,\r\n      cascadingAnchor,\r\n      cascadingZDepth,\r\n      onClose,\r\n      position: propPosition,\r\n\r\n      // deprecated\r\n      close,\r\n      autoclose,\r\n      limitHeight,\r\n      expanderIconChildren,\r\n      expanderIconClassName,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n\r\n    let { listId, position } = this.props;\r\n    if (!listId) {\r\n      listId = `${id}-list`;\r\n    }\r\n\r\n    // can't have a simplified menu for cascading and context menus\r\n    const simple = !cascading && !props.onContextMenu && position !== 'context' && simplified;\r\n    if (position === 'context') {\r\n      position = Menu.Positions.BELOW;\r\n    }\r\n\r\n    const below = position === Menu.Positions.BELOW;\r\n    const fixedTo = typeof propFixedTo !== 'undefined' ? propFixedTo : this.context.cascadingFixedTo;\r\n    const listVisible = typeof isOpen !== 'undefined' ? isOpen : visible;\r\n    return (\r\n      <Layover\r\n        {...props}\r\n        id={id}\r\n        className={cn('md-menu-container', {\r\n          'md-menu-container--menu-below': simplified && below,\r\n        }, className)}\r\n        simplified={simple}\r\n        sameWidth={contained || sameWidth}\r\n        fixedTo={fixedTo}\r\n        onClick={this._handleClick}\r\n        onKeyDown={this._handleKeyDown}\r\n        onClose={this._handleClose}\r\n        animationPosition={position}\r\n        visible={listVisible}\r\n        aria-haspopup\r\n        aria-expanded={listVisible}\r\n        aria-owns={listId}\r\n      >\r\n        <List\r\n          {...listProps}\r\n          id={listId}\r\n          key=\"menu-list\"\r\n          style={listStyle}\r\n          className={cn('md-list--menu', {\r\n            'md-list--menu-restricted': listHeightRestricted,\r\n            'md-list--menu-contained': simplified && (sameWidth || contained),\r\n            [`md-list--menu-${position}`]: simplified,\r\n            [`md-paper md-paper--${listZDepth}`]: listZDepth,\r\n          }, listClassName)}\r\n          inline={listInline}\r\n        >\r\n          {children}\r\n        </List>\r\n      </Layover>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { findDOMNode } from 'react-dom';\r\nimport cn from 'classnames';\r\nimport deprecated from 'react-prop-types/lib/deprecated';\r\n\r\nimport themeColors from '../utils/themeColors';\r\nimport getCollapserStyles from '../utils/getCollapserStyles';\r\nimport getField from '../utils/getField';\r\nimport controlled from '../utils/PropTypes/controlled';\r\nimport { TAB } from '../constants/keyCodes';\r\nimport anchorShape from '../Helpers/anchorShape';\r\nimport fixedToShape from '../Helpers/fixedToShape';\r\nimport AccessibleFakeInkedButton from '../Helpers/AccessibleFakeInkedButton';\r\nimport Collapse from '../Helpers/Collapse';\r\nimport FontIcon from '../FontIcons/FontIcon';\r\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\r\nimport TileAddon from './TileAddon';\r\nimport ListItemText from './ListItemText';\r\nimport List from './List';\r\nimport Menu from '../Menus/Menu';\r\n\r\n/**\r\n * The `ListItem` component is used for rendering a `li` tag with text and optional\r\n * icons/avatars.\r\n */\r\nexport default class ListItem extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * An optional style to apply to the `li` tag.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the `li` tag.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the `.md-list-tile`.\r\n     *\r\n     * @see {@link #component}\r\n     */\r\n    tileStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the `.md-list-tile`.\r\n     *\r\n     * @see {@link #component}\r\n     */\r\n    tileClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the div that surrounds the `primaryText` and `secondaryText`\r\n     * nodes.\r\n     */\r\n    contentStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the div that surrounds the `primaryText` and `secondaryText`\r\n     * nodes.\r\n     */\r\n    contentClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the element that is rendered before content node.\r\n     */\r\n    leftNodeStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the element that is rendered before content node.\r\n     */\r\n    leftNodeClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the element that is rendered after content node.\r\n     */\r\n    rightNodeStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the element that is rendered after content node.\r\n     */\r\n    rightNodeClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the div surrounding the `primaryText`.\r\n     */\r\n    primaryTextStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the div surrounding the `primaryText`.\r\n     */\r\n    primaryTextClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the div surrounding the `secondaryText`.\r\n     */\r\n    secondaryTextStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the div surrounding the `secondaryText`.\r\n     */\r\n    secondaryTextClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the nested `List` that gets created when using `nestedItems`.\r\n     */\r\n    nestedListStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the nested `List` that gets created when using `nestedItems`.\r\n     */\r\n    nestedListClassName: PropTypes.string,\r\n\r\n    /**\r\n     * Boolean if the nested `List` in a cascading menu should be restricted.\r\n     */\r\n    nestedListHeightRestricted: PropTypes.bool,\r\n\r\n    /**\r\n     * Any additional children to display in the `.md-list-tile`. If you use this prop,\r\n     * you will most likely need to override the `height` for the `.md-list-tile--icon`,\r\n     * `.md-list-tile--avatar`, `.md-list-tile--two-lines`, and/or `.md-list-tile--three-lines`\r\n     * to get it to display correctly unless the children are positioned `absolute`.\r\n     */\r\n    children: PropTypes.node,\r\n\r\n    /**\r\n     * Boolean if the `ListItem` is disabled.\r\n     */\r\n    disabled: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional tab index for the `.md-list-tile`. If omitted, it will default to the\r\n     * `AccessibleFakeButton`'s `tabIndex` default prop value.\r\n     */\r\n    tabIndex: PropTypes.number,\r\n\r\n    /**\r\n     * The primary text to display. This will only be rendered as a single line. Any overflown\r\n     * text will be converted to ellipsis.\r\n     */\r\n    primaryText: PropTypes.node.isRequired,\r\n\r\n    /**\r\n     * An optional secondary text to display below the `primaryText`. This can be an additional\r\n     * one or two lines. Like the `primaryText`, and overflown text will be converted to ellipsis.\r\n     *\r\n     * You must set the `threeLines` prop to `true` if you want this to be displayed as two lines.\r\n     */\r\n    secondaryText: PropTypes.node,\r\n\r\n    /**\r\n     * An optional `FontIcon` to display to the left of the text.\r\n     */\r\n    leftIcon: PropTypes.node,\r\n\r\n    /**\r\n     * An optional `Avatar` to display to the left of the text. If you have a mixed `List` of\r\n     * `FontIcon` and `Avatar`, it is recommended to set the `iconSized` prop on the `Avatar` to\r\n     * `true` so that the `Avatar` will be scaled down to the `FontIcon` size.\r\n     */\r\n    leftAvatar: PropTypes.node,\r\n\r\n    /**\r\n     * An optional `FontIcon` to display to the right of the text.\r\n     */\r\n    rightIcon: PropTypes.node,\r\n\r\n    /**\r\n     * An optional `Avatar` to display to the right of the text. If you have a mixed `List` of\r\n     * `FontIcon` and `Avatar`, it is recommended to set the `iconSized` prop on the `Avatar` to\r\n     * `true` so that the `Avatar` will be scaled down to the `FontIcon` size.\r\n     */\r\n    rightAvatar: PropTypes.node,\r\n\r\n    /**\r\n     * Boolean if the list item should be inset as if there is a `leftIcon` or a `leftAvatar`.\r\n     * This is used for some lists where only a parent contains the icon.\r\n     */\r\n    inset: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the `secondaryText` should span two lines instead of one. This will include\r\n     * three lines of text in total when including the `primaryText`.\r\n     */\r\n    threeLines: PropTypes.bool,\r\n\r\n    /**\r\n     * The component to render the `.md-list-tile` as. This is mostly useful if you\r\n     * want to use the `ListItem` for navigation and working with the `react-router`'s `Link`\r\n     * component.\r\n     *\r\n     * This prop is **not** the top-most element of the `ListItem` component. To change the\r\n     * top-most element, see the `itemComponent` prop.\r\n     *\r\n     * @see {@link #itemComponent}\r\n     */\r\n    component: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.func,\r\n    ]).isRequired,\r\n\r\n    /**\r\n     * The component to render the top-most element of the `ListItem` component. This is the\r\n     * `.md-list-item` and defaults to the `<li>` element.\r\n     *\r\n     * @see {@link #component}\r\n     * @see {@link #itemProps}\r\n     */\r\n    itemComponent: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.func,\r\n    ]).isRequired,\r\n\r\n    /**\r\n     * An optional ref callback to get reference to the top-most element of the `ListItem` component.\r\n     * Just like other refs, this will provide null when it unmounts.\r\n     */\r\n    itemRef: PropTypes.func,\r\n\r\n    /**\r\n     * An optional list of `ListItem`, `ListItemControl`, `Divider`, or `Subheader` components\r\n     * to render in a nested list. This will inject an expander icon to the right of the text\r\n     * in the `.md-list-tile` that rotates 180 degrees when open.\r\n     *\r\n     * The nested items will be visible once the user clicks on the `ListItem`.\r\n     *\r\n     * @see {@link #visible}\r\n     */\r\n    nestedItems: PropTypes.arrayOf(PropTypes.node),\r\n\r\n    /**\r\n     * An optional parameter determining whether `nestedItems` should be placed before or after `ListItemText`\r\n     */\r\n    prependNested: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the `nestedItems` are visible by default.\r\n     */\r\n    defaultVisible: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the `nestedItems` are visible. This will make the `nestedItems` controlled\r\n     * and require the `onClick` function to be defined.\r\n     *\r\n     * @see {@link #defaultVisible}\r\n     */\r\n    visible: controlled(PropTypes.bool, 'onClick', 'defaultVisible'),\r\n\r\n    /**\r\n     * An icon to use for the expander icon when there are nested items.\r\n     */\r\n    expanderIcon: PropTypes.element,\r\n\r\n    /**\r\n     * Boolean if the expander icon should appear as the left icon instead of the right.\r\n     */\r\n    expanderLeft: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional function to call when the `.md-list-tile` is clicked. This is required if the\r\n     * `visible` prop is defined.\r\n     */\r\n    onClick: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `.md-list-tile` triggers the `mouseover` event.\r\n     */\r\n    onMouseOver: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `.md-list-tile` triggers the `mouseleave` event.\r\n     */\r\n    onMouseLeave: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `.md-list-tile` triggers the `touchstart` event.\r\n     */\r\n    onTouchStart: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `.md-list-tile` triggers the `touchend` event.\r\n     */\r\n    onTouchEnd: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `.md-list-tile` triggers the `keydown` event.\r\n     */\r\n    onKeyDown: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `.md-list-tile` triggers the `keyup` event.\r\n     */\r\n    onKeyUp: PropTypes.func,\r\n\r\n    /**\r\n     * Boolean if the `ListItem` is currently active. This will apply the `activeClassName` prop\r\n     * to the `leftIcon`, `rightIcon`, and the `primaryText`.\r\n     */\r\n    active: PropTypes.bool,\r\n\r\n    /**\r\n     * The className to apply to the `leftIcon`, `rightIcon`, and `primaryText` when the `active`\r\n     * prop is `true`.\r\n     */\r\n    activeClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the top-most element of the `ListItem` component (`.md-list-item`)\r\n     * when the `active` prop is `true`.\r\n     */\r\n    activeBoxStyle: PropTypes.object,\r\n\r\n    /**\r\n     * The className to apply to the top-most element of the `ListItem` component (`.md-list-item`)\r\n     * when the `active` prop is `true`.\r\n     */\r\n    activeBoxClassName: PropTypes.string,\r\n\r\n    /**\r\n     * Boolean if the nested items should animate when they appear or disappear.\r\n     */\r\n    animateNestedItems: PropTypes.bool,\r\n\r\n    /**\r\n     * Defines the number of items in the list. This is only required when all items in the\r\n     * list are not present in the DOM.\r\n     *\r\n     * @see https://www.w3.org/TR/wai-aria/states_and_properties#aria-setsize\r\n     */\r\n    'aria-setsize': PropTypes.number,\r\n\r\n    /**\r\n     * Defines the items position in the list. This is only required when all items in the list\r\n     * are not present in the DOM. The custom validation just requires this prop if the `aria-setsize`\r\n     * prop is defined as a helpful reminder.\r\n     *\r\n     * @see https://www.w3.org/TR/wai-aria/states_and_properties#aria-posinset\r\n     */\r\n    'aria-posinset': (props, propName, ...args) => {\r\n      let validator = PropTypes.number;\r\n      if (typeof props['aria-setsize'] !== 'undefined') {\r\n        validator = validator.isRequired;\r\n      }\r\n\r\n      return validator(props, propName, ...args);\r\n    },\r\n\r\n    /**\r\n     * Any additional props you would like to supply to the surrounding `<li>` tag for the `ListItem`.\r\n     * By default, all props will be provided to the inner `AccessibleFakeButton`. If the `passPropsToItem`\r\n     * prop is enabled, the remaining props will be provided to the `<li>` tag instead and this prop\r\n     * is probably useless.\r\n     */\r\n    itemProps: PropTypes.object,\r\n\r\n    /**\r\n     * Any additional props you would like to add to the inner `AccessibleFakeButton`. By default, all the\r\n     * remaining props will be provided to the `AccessibleFakeButton`, so this prop is probably useless.\r\n     * Enabling the `passPropsToItem` prop will change the default behavior so that the remaining props\r\n     * are provided to the surrounding `<li>` node instead and this prop becomes useful.\r\n     */\r\n    tileProps: PropTypes.object,\r\n\r\n    /**\r\n     * All the remaining props should be passed to the surrounding `<li>` node instead of the `AccessibleFakeButton`.\r\n     *\r\n     * > NOTE: This will most likely become the default in the next *major* release. Migration warnings will be added\r\n     * if that is the case.\r\n     */\r\n    passPropsToItem: PropTypes.bool,\r\n    expanderIconChildren: deprecated(PropTypes.node, 'Use `expanderIcon` instead'),\r\n    expanderIconClassName: deprecated(PropTypes.string, 'Use `expanderIcon` instead'),\r\n    initiallyOpen: deprecated(PropTypes.bool, 'Use `defaultVisible` instead'),\r\n    defaultOpen: deprecated(PropTypes.bool, 'Use `defaultVisible` instead'),\r\n    isOpen: deprecated(PropTypes.bool, 'Use `visible` instead'),\r\n  };\r\n\r\n  static defaultProps = {\r\n    animateNestedItems: true,\r\n    activeClassName: 'md-text--theme-primary',\r\n    component: 'div',\r\n    itemComponent: 'li',\r\n    expanderIcon: <FontIcon>keyboard_arrow_down</FontIcon>,\r\n  };\r\n\r\n  static contextTypes = {\r\n    cascadingId: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n    cascadingMenu: PropTypes.bool,\r\n    cascadingAnchor: anchorShape,\r\n    cascadingFixedTo: fixedToShape,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { active: false };\r\n\r\n    if (typeof props.isOpen === 'undefined' && typeof props.visible === 'undefined') {\r\n      const defined = v => typeof v !== 'undefined';\r\n      const { initiallyOpen, defaultOpen, defaultVisible } = this.props;\r\n      let visible = defined(initiallyOpen) ? initiallyOpen : defaultVisible;\r\n      visible = defined(defaultOpen) ? defaultOpen : visible;\r\n      visible = !!visible;\r\n\r\n      this.state.visible = visible;\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.state.active) {\r\n      window.removeEventListener('click', this._handleOutsideClick);\r\n    }\r\n\r\n    if (this._touchTimeout) {\r\n      clearTimeout(this._touchTimeout);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A utility function to focus the `AccessibleFakeInkedButton` in the `ListItem` and also\r\n   * inject an ink to indicate focus.\r\n   */\r\n  focus = () => {\r\n    if (this._tile) {\r\n      this._tile.focus();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * A utility function to blur the `AccessibleFakeInkedButton` in the `ListItem`.\r\n   */\r\n  blur = () => {\r\n    if (this._tile) {\r\n      this._tile.blur();\r\n    }\r\n  };\r\n\r\n  _setTile = (tile) => {\r\n    if (tile) {\r\n      this._tile = tile;\r\n      this._tileNode = findDOMNode(tile);\r\n    }\r\n  };\r\n\r\n  _setContainer = (container) => {\r\n    const { itemRef } = this.props;\r\n    if (container) {\r\n      this._container = findDOMNode(container);\r\n    }\r\n    if (itemRef) {\r\n      itemRef(container ? this._container : null);\r\n    }\r\n  };\r\n\r\n  _handleOutsideClick = (e) => {\r\n    if (this._container && !this._container.contains(e.target)) {\r\n      window.removeEventListener('click', this._handleOutsideClick);\r\n      this.setState({ active: false });\r\n    }\r\n  };\r\n\r\n  _handleClick = (e) => {\r\n    if (this.props.onClick) {\r\n      this.props.onClick(e);\r\n    }\r\n\r\n    if (typeof this.state.visible !== 'undefined') {\r\n      this.setState({ visible: !this.state.visible });\r\n    }\r\n  };\r\n\r\n  _handleMouseOver = (e) => {\r\n    if (this.props.onMouseOver) {\r\n      this.props.onMouseOver(e);\r\n    }\r\n\r\n    if (!this.props.disabled) {\r\n      this.setState({ active: true });\r\n    }\r\n  };\r\n\r\n  _handleMouseLeave = (e) => {\r\n    if (this.props.onMouseLeave) {\r\n      this.props.onMouseLeave(e);\r\n    }\r\n\r\n    if (!this.props.disabled) {\r\n      this.setState({ active: false });\r\n    }\r\n  };\r\n\r\n  _handleTouchStart = (e) => {\r\n    if (this.props.onTouchStart) {\r\n      this.props.onTouchStart(e);\r\n    }\r\n\r\n    this._touched = true;\r\n\r\n    this.setState({ active: true, touchedAt: Date.now() });\r\n  };\r\n\r\n  _handleTouchEnd = (e) => {\r\n    if (this.props.onTouchEnd) {\r\n      this.props.onTouchEnd(e);\r\n    }\r\n\r\n    const time = Date.now() - this.state.touchedAt;\r\n    this._touchTimeout = setTimeout(() => {\r\n      this._touchTimeout = null;\r\n\r\n      this.setState({ active: false });\r\n    }, time > 450 ? 0 : 450 - time);\r\n  };\r\n\r\n  _handleKeyUp = (e) => {\r\n    if (this.props.onKeyUp) {\r\n      this.props.onKeyUp(e);\r\n    }\r\n\r\n    if ((e.which || e.keyCode) === TAB) {\r\n      window.addEventListener('click', this._handleOutsideClick);\r\n      this.setState({ active: true });\r\n    }\r\n  };\r\n\r\n  _handleKeyDown = (e) => {\r\n    if (this.props.onKeyDown) {\r\n      this.props.onKeyDown(e);\r\n    }\r\n\r\n    if ((e.which || e.keyCode) === TAB) {\r\n      window.removeEventListener('click', this._handleOutsideClick);\r\n      this.setState({ active: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      style,\r\n      className,\r\n      tileStyle,\r\n      tileClassName,\r\n      contentStyle,\r\n      contentClassName,\r\n      leftNodeStyle,\r\n      leftNodeClassName,\r\n      rightNodeStyle,\r\n      rightNodeClassName,\r\n      primaryTextStyle,\r\n      primaryTextClassName,\r\n      secondaryTextStyle,\r\n      secondaryTextClassName,\r\n      nestedListStyle,\r\n      nestedListClassName,\r\n      nestedListHeightRestricted,\r\n      disabled,\r\n      leftIcon,\r\n      leftAvatar,\r\n      inset,\r\n      rightIcon,\r\n      rightAvatar,\r\n      primaryText,\r\n      secondaryText,\r\n      threeLines,\r\n      children,\r\n      nestedItems,\r\n      prependNested,\r\n      active,\r\n      activeClassName,\r\n      activeBoxStyle,\r\n      activeBoxClassName,\r\n      animateNestedItems,\r\n      expanderIcon,\r\n      expanderLeft,\r\n      component,\r\n      itemComponent: ItemComponent,\r\n      itemProps,\r\n      tileProps,\r\n      passPropsToItem,\r\n      'aria-setsize': ariaSize,\r\n      'aria-posinset': ariaPos,\r\n\r\n      // deprecated\r\n      isOpen,\r\n      expanderIconChildren,\r\n      expanderIconClassName,\r\n      /* eslint-disable no-unused-vars */\r\n      visible: propVisible,\r\n      defaultVisible,\r\n      itemRef,\r\n\r\n      // deprecated\r\n      defaultOpen,\r\n      initiallyOpen,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n\r\n    const { cascadingId, cascadingMenu, cascadingAnchor, cascadingFixedTo } = this.context;\r\n    let visible = getField(this.props, this.state, 'visible');\r\n    if (typeof isOpen !== 'undefined') {\r\n      visible = isOpen;\r\n    }\r\n\r\n    let leftNode = (\r\n      <TileAddon\r\n        key=\"left-addon\"\r\n        style={leftNodeStyle}\r\n        className={leftNodeClassName}\r\n        active={active}\r\n        activeClassName={activeClassName}\r\n        icon={leftIcon}\r\n        avatar={leftAvatar}\r\n      />\r\n    );\r\n\r\n    let rightNode = (\r\n      <TileAddon\r\n        key=\"right-addon\"\r\n        style={rightNodeStyle}\r\n        className={rightNodeClassName}\r\n        active={active}\r\n        activeClassName={activeClassName}\r\n        icon={rightIcon}\r\n        avatar={rightAvatar}\r\n      />\r\n    );\r\n\r\n    let nestedList;\r\n    if (nestedItems) {\r\n      if (!cascadingMenu) {\r\n        nestedList = (\r\n          <Collapse collapsed={!visible} animate={animateNestedItems}>\r\n            <List style={nestedListStyle} className={nestedListClassName}>{nestedItems}</List>\r\n          </Collapse>\r\n        );\r\n      }\r\n\r\n      const icon = React.Children.only(getDeprecatedIcon(expanderIconClassName, expanderIconChildren, expanderIcon));\r\n      const collapser = (\r\n        <TileAddon\r\n          key=\"expander-addon\"\r\n          icon={React.cloneElement(icon, {\r\n            className: getCollapserStyles({ flipped: visible }, icon.props.className),\r\n          })}\r\n          avatar={null}\r\n        />\r\n      );\r\n\r\n      if (expanderLeft) {\r\n        if (!leftIcon && !leftAvatar) {\r\n          leftNode = collapser;\r\n        }\r\n      } else if (!rightIcon && !rightAvatar) {\r\n        rightNode = collapser;\r\n      }\r\n    }\r\n\r\n    const icond = !!leftIcon || !!rightIcon || !!nestedItems;\r\n    const avatard = !!leftAvatar || !!rightAvatar;\r\n\r\n    const tile = (\r\n      <AccessibleFakeInkedButton\r\n        {...tileProps}\r\n        {...(passPropsToItem ? undefined : props)}\r\n        component={component}\r\n        __SUPER_SECRET_REF__={this._setTile}\r\n        key=\"tile\"\r\n        onClick={this._handleClick}\r\n        onMouseOver={this._handleMouseOver}\r\n        onMouseLeave={this._handleMouseLeave}\r\n        onTouchStart={this._handleTouchStart}\r\n        onTouchEnd={this._handleTouchEnd}\r\n        onKeyDown={this._handleKeyDown}\r\n        onKeyUp={this._handleKeyUp}\r\n        disabled={disabled}\r\n        style={tileStyle}\r\n        className={cn('md-list-tile', {\r\n          'md-list-tile--active': this.state.active && !this._touched,\r\n          'md-list-tile--icon': !secondaryText && icond && !avatard,\r\n          'md-list-tile--avatar': !secondaryText && avatard,\r\n          'md-list-tile--two-lines': secondaryText && !threeLines,\r\n          'md-list-tile--three-lines': secondaryText && threeLines,\r\n          'md-list-item--inset': inset && !leftIcon && !leftAvatar,\r\n        }, themeColors({ disabled, text: true }), tileClassName)}\r\n        aria-expanded={nestedList && !cascadingMenu ? visible : null}\r\n      >\r\n        {leftNode}\r\n        <ListItemText\r\n          active={active}\r\n          activeClassName={activeClassName}\r\n          disabled={disabled}\r\n          primaryText={primaryText}\r\n          secondaryText={secondaryText}\r\n          threeLines={threeLines}\r\n          style={contentStyle}\r\n          className={cn({\r\n            'md-tile-content--left-icon': leftIcon || expanderLeft && nestedItems,\r\n            'md-tile-content--left-avatar': leftAvatar,\r\n            'md-tile-content--right-padding': rightIcon || rightAvatar,\r\n          }, contentClassName)}\r\n          primaryTextStyle={primaryTextStyle}\r\n          primaryTextClassName={primaryTextClassName}\r\n          secondaryTextStyle={secondaryTextStyle}\r\n          secondaryTextClassName={secondaryTextClassName}\r\n        />\r\n        {rightNode}\r\n        {children}\r\n      </AccessibleFakeInkedButton>\r\n    );\r\n\r\n    const sharedProps = {\r\n      ...itemProps,\r\n      ...(passPropsToItem ? props : undefined),\r\n      style: Object.assign({}, style, active ? activeBoxStyle : null),\r\n      className: cn('md-list-item', {\r\n        'md-list-item--nested-container': nestedItems,\r\n        [activeBoxClassName]: activeBoxClassName && active,\r\n      }, className),\r\n      'aria-setsize': ariaSize,\r\n      'aria-posinset': ariaPos,\r\n      ref: this._setContainer,\r\n    };\r\n    if (cascadingMenu && nestedItems) {\r\n      return (\r\n        <Menu\r\n          id={cascadingId}\r\n          visible={visible}\r\n          onClose={this._handleClick}\r\n          toggle={tile}\r\n          block\r\n          simplified={false}\r\n          anchor={cascadingAnchor}\r\n          belowAnchor={null}\r\n          position={Menu.Positions.BELOW}\r\n          component={ItemComponent}\r\n          listStyle={nestedListStyle}\r\n          listClassName={nestedListClassName}\r\n          listHeightRestricted={nestedListHeightRestricted}\r\n          {...sharedProps}\r\n          fixedTo={cascadingFixedTo}\r\n        >\r\n          {nestedItems}\r\n        </Menu>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <ItemComponent {...sharedProps}>\r\n        {prependNested ? nestedList : null}\r\n        {tile}\r\n        {prependNested ? null : nestedList}\r\n      </ItemComponent>\r\n    );\r\n  }\r\n}\r\n","/** @module utils/isValied */\r\n\r\n/**\r\n * A really simple utility function to check if an input's value is considered \"valued\".\r\n *\r\n * @param {string|number} v - the value to check\r\n * @return {boolean} true if the value is a number or a non-empty string.\r\n */\r\nexport default function isValued(v) {\r\n  return v === 0 || !!v;\r\n}\r\n","/** @module utils/StringUtils/addSuffix */\r\n\r\n/**\r\n * Optionally adds a suffix to a string if it does\r\n * not already contain that string.\r\n *\r\n * @param {String} str - The string to modify\r\n * @param {String} suffix - The suffix to add\r\n *\r\n * @return {String} the string with a suffix\r\n */\r\nexport default function addSuffix(str, suffix) {\r\n  if (!str || typeof str !== 'string') {\r\n    return str;\r\n  }\r\n\r\n  return str.indexOf(suffix) === -1\r\n    ? `${str.trim()} ${suffix}`\r\n    : str;\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport themeColors from '../utils/themeColors';\r\n\r\nexport default class FloatingLabel extends PureComponent {\r\n  static propTypes = {\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    label: PropTypes.node,\r\n    floating: PropTypes.bool,\r\n    error: PropTypes.bool,\r\n    active: PropTypes.bool,\r\n    disabled: PropTypes.bool,\r\n    iconOffset: PropTypes.bool,\r\n    customSize: PropTypes.string,\r\n    htmlFor: PropTypes.string,\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      label,\r\n      htmlFor,\r\n      className,\r\n      floating,\r\n      active,\r\n      error,\r\n      disabled,\r\n      iconOffset,\r\n      customSize,\r\n      ...props\r\n    } = this.props;\r\n\r\n    if (!label) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <label\r\n        {...props}\r\n        htmlFor={htmlFor}\r\n        className={cn('md-floating-label', {\r\n          'md-floating-label--inactive': !floating,\r\n          'md-floating-label--inactive-sized': !floating && !customSize,\r\n          [`md-floating-label--${customSize}`]: customSize,\r\n          [`md-floating-label--inactive-${customSize}`]: customSize && !floating,\r\n          'md-floating-label--floating': floating,\r\n          'md-floating-label--icon-offset': iconOffset,\r\n        }, themeColors({\r\n          disabled,\r\n          error,\r\n          hint: !active,\r\n          primary: active,\r\n        }, className))}\r\n      >\r\n        {label}\r\n      </label>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nexport default class Message extends PureComponent {\r\n  static propTypes = {\r\n    active: PropTypes.bool,\r\n    className: PropTypes.string,\r\n    children: PropTypes.node,\r\n  };\r\n\r\n  render() {\r\n    const { active, children, className } = this.props;\r\n\r\n    if (!children) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div\r\n        aria-hidden={!active}\r\n        className={cn(\r\n          'md-text-field-message',\r\n          `md-text-field-message--${active ? '' : 'in'}active`,\r\n          className\r\n        )}\r\n      >\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport themeColors from '../utils/themeColors';\r\nimport Message from './Message';\r\n\r\nexport default class TextFieldMessage extends PureComponent {\r\n  static propTypes = {\r\n    className: PropTypes.string,\r\n    error: PropTypes.bool,\r\n    helpText: PropTypes.node,\r\n    errorText: PropTypes.node,\r\n    active: PropTypes.bool,\r\n    helpOnFocus: PropTypes.bool,\r\n    maxLength: PropTypes.number,\r\n    currentLength: PropTypes.number,\r\n    leftIcon: PropTypes.bool,\r\n    rightIcon: PropTypes.bool,\r\n    block: PropTypes.bool,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n\r\n    this.state = {\r\n      message: (props.error && props.errorText) || props.helpText || props.errorText,\r\n      isMessageVisible: this._isMessageVisible(props),\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const keys = ['active', 'error', 'helpOnFocus', 'helpText', 'errorText'];\r\n    if (this._anyChanges(keys, this.props, nextProps)) {\r\n      this.setState({\r\n        isMessageVisible: this._isMessageVisible(nextProps),\r\n        message: (nextProps.error && nextProps.errorText) || nextProps.helpText || nextProps.errorText,\r\n      });\r\n    }\r\n  }\r\n\r\n  _anyChanges(keys, p1, p2) {\r\n    let changed = false;\r\n    keys.some(key => {\r\n      if (p1[key] !== p2[key]) {\r\n        changed = true;\r\n      }\r\n\r\n      return changed;\r\n    });\r\n\r\n    return changed;\r\n  }\r\n\r\n  _isMessageVisible(props) {\r\n    const { error, errorText, helpText, helpOnFocus, active } = props;\r\n    if (error && errorText) {\r\n      return true;\r\n    }\r\n\r\n    return !!(helpText && (!helpOnFocus || active));\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      maxLength,\r\n      error,\r\n      className,\r\n      errorText,\r\n      helpText,\r\n      currentLength,\r\n      leftIcon,\r\n      rightIcon,\r\n      block,\r\n      active,\r\n    } = this.props;\r\n    const { isMessageVisible, message } = this.state;\r\n\r\n    if (currentLength === 'undefined' || (!helpText && !errorText && !maxLength)) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className={cn('md-text-field-message-container', {\r\n          'md-text-field-message-container--count-only': !message || !isMessageVisible,\r\n          'md-text-field-message-container--left-icon-offset': leftIcon,\r\n          'md-text-field-message-container--right-icon-offset': rightIcon,\r\n          'md-full-width': !block,\r\n        }, themeColors({ error, disabled: !error }), className)}\r\n      >\r\n        <Message key=\"message\" active={isMessageVisible}>{message}</Message>\r\n        <Message key=\"counter\" className=\"md-text-field-message--counter\" active={active}>\r\n          {maxLength ? `${currentLength} / ${maxLength}` : null}\r\n        </Message>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport { TAB } from '../constants/keyCodes';\r\nimport themeColors from '../utils/themeColors';\r\n\r\nexport default class PasswordButton extends PureComponent {\r\n  static propTypes = {\r\n    active: PropTypes.bool,\r\n    passwordVisible: PropTypes.bool,\r\n    icon: PropTypes.element,\r\n    block: PropTypes.bool,\r\n    floating: PropTypes.bool,\r\n  };\r\n\r\n  state = { keyboardFocus: false };\r\n\r\n  _handleOutsideClick = (e) => {\r\n    if (this._button && !this._button.contains(e.target)) {\r\n      window.removeEventListener('click', this._handleOutsideClick);\r\n      this.setState({ keyboardFocus: false });\r\n    }\r\n  };\r\n\r\n  _handleBlur = () => {\r\n    if (this.state.keyboardFocus) {\r\n      this.setState({ keyboardFocus: false });\r\n    }\r\n  };\r\n\r\n  _handleKeyUp = (e) => {\r\n    const key = e.which || e.keyCode;\r\n    if (key === TAB) {\r\n      this.setState({ keyboardFocus: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { keyboardFocus } = this.state;\r\n    const {\r\n      active,\r\n      passwordVisible,\r\n      block,\r\n      floating,\r\n      icon,\r\n      ...props\r\n    } = this.props;\r\n\r\n    return (\r\n      <button\r\n        {...props}\r\n        onBlur={this._handleBlur}\r\n        onKeyUp={this._handleKeyUp}\r\n        type=\"button\"\r\n        className={cn('md-text-field-inline-indicator md-password-btn md-pointer--hover', {\r\n          'md-password-btn--focus': keyboardFocus,\r\n          'md-password-btn--invisible': active && !passwordVisible,\r\n          'md-text-field-inline-indicator--floating': floating,\r\n          'md-text-field-inline-indicator--block': block,\r\n        }, themeColors({ disabled: !active, hint: active }))}\r\n      >\r\n        {icon}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport ResizeObserver from '../Helpers/ResizeObserver';\r\n\r\n/**\r\n * The `TextArea` component is used to allow a dynamic height for the\r\n * `textarea`. The height will keep on changing until the maxRows prop\r\n * is met or infinitely if it does not exist, or is 0.\r\n */\r\nexport default class TextArea extends PureComponent {\r\n  static propTypes = {\r\n    id: PropTypes.string,\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    rows: PropTypes.number.isRequired,\r\n    maxRows: PropTypes.number,\r\n    onChange: PropTypes.func,\r\n    defaultValue: PropTypes.string,\r\n    floatingLabel: PropTypes.bool,\r\n    value: PropTypes.string,\r\n    block: PropTypes.bool,\r\n    label: PropTypes.node,\r\n  };\r\n\r\n  state = { height: null };\r\n\r\n  componentDidMount() {\r\n    this._rowHeight = this._calcRowHeight();\r\n    this._syncHeightWithMask();\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (this.props.rows !== nextProps.rows) {\r\n      this._rowHeight = this._calcRowHeight(nextProps);\r\n    }\r\n\r\n    if (this.props.value !== nextProps.value || this.props.maxRows !== nextProps.maxRows) {\r\n      this._syncHeightWithMask(nextProps.value);\r\n    }\r\n  }\r\n\r\n  getField = () => this._field;\r\n\r\n  getValue = () => this._field.value;\r\n\r\n  focus = () => {\r\n    this._field.focus();\r\n  };\r\n\r\n  blur = () => {\r\n    this._field.blur();\r\n  };\r\n\r\n  _calcRowHeight = ({ rows } = this.props) => {\r\n    if (!this._field) {\r\n      return 19;\r\n    }\r\n\r\n    const height = this._field.style.height;\r\n    this._field.style.height = 'auto';\r\n    const rowHeight = this._field.offsetHeight / rows;\r\n    this._field.style.height = height;\r\n    return rowHeight;\r\n  };\r\n\r\n  _setMask = (mask) => {\r\n    this._mask = mask;\r\n  };\r\n\r\n  _setField = (field) => {\r\n    this._field = field;\r\n  };\r\n\r\n  _handleResize = () => {\r\n    this._rowHeight = this._calcRowHeight();\r\n    this._syncHeightWithMask();\r\n  };\r\n\r\n  _syncHeightWithMask = (value) => {\r\n    // The mask is always null in snapshot teseting\r\n    if (!this._mask) {\r\n      return;\r\n    }\r\n\r\n    if (value !== undefined) {\r\n      this._mask.value = value;\r\n    }\r\n\r\n    let height = this._mask.scrollHeight;\r\n    if (height === undefined) {\r\n      return;\r\n    }\r\n\r\n    const { rows, maxRows } = this.props;\r\n    if (maxRows && maxRows > 0) {\r\n      height = Math.min(height, this._rowHeight * maxRows);\r\n    }\r\n\r\n    height = Math.max(this._rowHeight * rows, height);\r\n    this.setState({ height });\r\n  };\r\n\r\n  _handleChange = (e) => {\r\n    this._syncHeightWithMask(e.target.value, e);\r\n\r\n    if (this.props.onChange) {\r\n      this.props.onChange(e);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { height } = this.state;\r\n\r\n    const {\r\n      style,\r\n      defaultValue,\r\n      value,\r\n      className,\r\n      label,\r\n      block,\r\n      /* eslint-disable no-unused-vars */\r\n      maxRows,\r\n      onChange,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n\r\n    return (\r\n      <div\r\n        style={{ height: height && height + 5 }}\r\n        className={cn('md-text-field-multiline-container', {\r\n          'md-text-field--margin': !label && !block,\r\n          'md-text-field--floating-margin': label && !block,\r\n        })}\r\n      >\r\n        <ResizeObserver watchWidth onResize={this._handleResize} />\r\n        <textarea\r\n          ref={this._setMask}\r\n          className={cn(className, 'md-text-field--multiline-mask')}\r\n          readOnly\r\n          rows={props.rows}\r\n          tabIndex={-1}\r\n          style={style}\r\n          defaultValue={defaultValue}\r\n          aria-hidden\r\n          value={value}\r\n        />\r\n        <textarea\r\n          {...props}\r\n          ref={this._setField}\r\n          style={Object.assign({}, style, { height })}\r\n          className={className}\r\n          defaultValue={defaultValue}\r\n          value={value}\r\n          onChange={this._handleChange}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { PureComponent, createElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport themeColors from '../utils/themeColors';\r\nimport TextArea from './TextArea';\r\n\r\n/**\r\n * This component either renders a base `input` tag or the `TextArea` component.\r\n */\r\nexport default class InputField extends PureComponent {\r\n  static propTypes = {\r\n    id: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number,\r\n    ]),\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    type: PropTypes.string,\r\n    placeholder: PropTypes.string,\r\n    block: PropTypes.bool,\r\n    disabled: PropTypes.bool,\r\n    rows: PropTypes.number,\r\n    maxRows: PropTypes.number,\r\n    label: PropTypes.node,\r\n    fullWidth: PropTypes.bool,\r\n    customSize: PropTypes.string,\r\n    passwordVisible: PropTypes.bool,\r\n    inlineIndicator: PropTypes.bool,\r\n  };\r\n\r\n  getField = () => { // eslint-disable-line arrow-body-style\r\n    return typeof this.props.rows === 'undefined'\r\n      ? this._field\r\n      : this._field.getField();\r\n  };\r\n\r\n  getValue = () => {\r\n    if (typeof this.props.rows === 'undefined') {\r\n      return this._field.value;\r\n    }\r\n\r\n    return this._field.getValue();\r\n  };\r\n\r\n  focus = () => {\r\n    this._field.focus();\r\n  };\r\n\r\n  blur = () => {\r\n    this._field.blur();\r\n  };\r\n\r\n  _setField = (field) => {\r\n    this._field = field;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      className,\r\n      rows,\r\n      label,\r\n      customSize,\r\n      fullWidth,\r\n      type,\r\n      passwordVisible,\r\n      block,\r\n      inlineIndicator,\r\n      maxRows,\r\n      ...props\r\n    } = this.props;\r\n\r\n    const multiline = typeof rows !== 'undefined';\r\n    const Component = multiline ? TextArea : 'input';\r\n    if (!multiline) {\r\n      props.type = passwordVisible ? 'text' : type;\r\n    } else {\r\n      props.label = label;\r\n      props.block = block;\r\n      props.maxRows = maxRows;\r\n    }\r\n\r\n    return createElement(Component, {\r\n      ...props,\r\n      rows,\r\n      ref: this._setField,\r\n      className: cn('md-text-field', {\r\n        'md-text-field--inline-indicator': inlineIndicator || (!multiline && type === 'password'),\r\n        'md-text-field--multiline': multiline,\r\n        'md-text-field--margin': !block && !multiline && !label,\r\n        'md-text-field--floating-margin': !block && !multiline && label,\r\n        [`md-text-field--${customSize}`]: customSize,\r\n        'md-full-width': fullWidth,\r\n      }, themeColors({ disabled: props.disabled, text: !props.disabled }, className)),\r\n    });\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\n/**\r\n * The divider component will pass all other props such as style or\r\n * event listeners on to the component.\r\n */\r\nexport default class Divider extends PureComponent {\r\n  static propTypes = {\r\n    /*\r\n     * An optional style to apply to the divider.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the divider.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * Boolean if this divider should be inset relative to it's container\r\n     * component. This means that if it is in a `List` with `Avatar`, it\r\n     * will start the divider  to the left of the main text in the list.\r\n     */\r\n    inset: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the divider should be vertical instead of horizontal.\r\n     */\r\n    vertical: PropTypes.bool,\r\n  };\r\n\r\n  render() {\r\n    const { className, inset, vertical, ...props } = this.props;\r\n\r\n    const Component = vertical ? 'div' : 'hr';\r\n\r\n    return (\r\n      <Component\r\n        {...props}\r\n        className={cn('md-divider', {\r\n          'md-divider--vertical': vertical,\r\n          'md-divider--inset': inset,\r\n        }, className)}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport Divider from '../Dividers/Divider';\r\n\r\nexport default class TextFieldDivider extends PureComponent {\r\n  static propTypes = {\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    active: PropTypes.bool,\r\n    error: PropTypes.bool,\r\n    lineDirection: PropTypes.oneOf(['left', 'center', 'right']),\r\n  };\r\n\r\n  render() {\r\n    const { active, error, lineDirection, className, ...props } = this.props;\r\n    return (\r\n      <Divider\r\n        {...props}\r\n        className={cn(`md-divider--text-field md-divider--expand-from-${lineDirection}`, {\r\n          'md-divider--text-field-expanded': active,\r\n          'md-divider--text-field-active': !error && active,\r\n          'md-divider--text-field-error': error,\r\n        }, className)}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent, Children, cloneElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport deprecated from 'react-prop-types/lib/deprecated';\r\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\r\n\r\nimport isValued from '../utils/isValued';\r\nimport getField from '../utils/getField';\r\nimport getTextWidth from '../utils/Positioning/getTextWidth';\r\nimport controlled from '../utils/PropTypes/controlled';\r\nimport invalidIf from '../utils/PropTypes/invalidIf';\r\nimport minNumber from '../utils/PropTypes/minNumber';\r\nimport addSuffix from '../utils/StringUtils/addSuffix';\r\nimport FontIcon from '../FontIcons/FontIcon';\r\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\r\nimport FloatingLabel from './FloatingLabel';\r\nimport TextFieldMessage from './TextFieldMessage';\r\nimport PasswordButton from './PasswordButton';\r\nimport InputField from './InputField';\r\nimport TextFieldDivider from './TextFieldDivider';\r\n\r\nconst DEFAULT_TEXT_FIELD_SIZE = 180;\r\n\r\nconst WILL_RECEIVE_KEYS = ['style', 'value', 'resize'];\r\nconst DID_UPDATE_KEYS = ['leftIcon', 'rightIcon', 'passwordIcon', 'inlineIndicator'];\r\n\r\n/**\r\n * The `TextField` component can either be a single line `input` field or a multiline\r\n * `textarea` field. `FontIcon`s, messages, and password indicators can also be added\r\n * to this field.\r\n *\r\n * The optional mouse and touch events will be added to the entire container while the\r\n * text specific events will be added to the `input` or `textarea` tags.\r\n */\r\nexport default class TextField extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * The id for a text field. This is required when using the `label` prop for accessibility,\r\n     * but normally a good idea to include one anyways.\r\n     */\r\n    id: isRequiredForA11y(PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ])),\r\n\r\n    /**\r\n     * An optional style to apply to the text field's container.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the text field's container.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the `input` or `textarea` tag.\r\n     */\r\n    inputStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the `input` or `textarea` tag.\r\n     */\r\n    inputClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional value to apply to the text field. This will make the component\r\n     * controlled and require the `onChange` prop.\r\n     */\r\n    value: controlled(PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number,\r\n    ]), 'onChange'),\r\n\r\n    /**\r\n     * An optional default value for the text field.\r\n     */\r\n    defaultValue: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number,\r\n    ]),\r\n\r\n    /**\r\n     * Boolean if the text field should be displayed as a `block`. This is equivalent to\r\n     * the `full width` text field in the Material Design specs. This view will disable\r\n     * floating labels and remove the text divider from the component.\r\n     */\r\n    block: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the `block` text field should include padding to the left and right of\r\n     * the text field.\r\n     */\r\n    paddedBlock: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the text field is currently disabled.\r\n     */\r\n    disabled: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional label to display with the text field. This will convert the text field\r\n     * into a floating label text field. You can make it single line by only using the\r\n     * `placeholder` prop.\r\n     */\r\n    label: invalidIf(PropTypes.node, 'block'),\r\n\r\n    /**\r\n     * An optional placeholder text to display in the text field. If there is no `label` prop,\r\n     * the text field will be displayed as a single line text field. If there is a `label` prop,\r\n     * this will only be visible when there is no value and the user focused the text field.\r\n     */\r\n    placeholder: PropTypes.string,\r\n\r\n    /**\r\n     * The type for the text field. This is one of the most import props for mobile accessibility\r\n     * as it will update the keyboard for the text type. This does not get applied on multiline\r\n     * text fields.\r\n     */\r\n    type: PropTypes.oneOf([\r\n      'text',\r\n      'number',\r\n      'email',\r\n      'search',\r\n      'tel',\r\n      'url',\r\n      'password',\r\n    ]).isRequired,\r\n\r\n    /**\r\n     * An optional function to call when the text field's container triggers the `click` event.\r\n     */\r\n    onClick: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the text field's container triggers the `doubleclick`\r\n     * event.\r\n     */\r\n    onDoubleClick: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the text field's container triggers the `touchstart`\r\n     * event.\r\n     */\r\n    onTouchStart: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the text field's container triggers the `touchmove`\r\n     * event.\r\n     */\r\n    onTouchMove: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the text field's container triggers the `touchcancel`\r\n     * event.\r\n     */\r\n    onTouchCancel: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the text field's container triggers the `touchend`\r\n     * event.\r\n     */\r\n    onTouchEnd: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the text field's container triggers the `mousedown`\r\n     * event.\r\n     */\r\n    onMouseDown: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the text field's container triggers the `mouseup`\r\n     * event.\r\n     */\r\n    onMouseUp: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the text field's container triggers the `mouseover`\r\n     * event.\r\n     */\r\n    onMouseOver: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the text field's container triggers the `mouseleave`\r\n     * event.\r\n     */\r\n    onMouseLeave: PropTypes.func,\r\n\r\n    /**\r\n     * An optional onChange function to call. If the `value` prop is defined, this is\r\n     * required.\r\n     *\r\n     * When the value changes in the text field, this will be called with the new text\r\n     * field's value and the change event.\r\n     *\r\n     * ```js\r\n     * onChange(e.target.value, e);\r\n     * ```\r\n     */\r\n    onChange: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the text field is blurred.\r\n     */\r\n    onBlur: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the text field is focused.\r\n     */\r\n    onFocus: PropTypes.func,\r\n\r\n    /**\r\n     * An optional boolean if the `active` state of the text field can be externally\r\n     * modified as well. The text field is usually considered active when it gains focus.\r\n     *\r\n     * If this prop is set, it will check both the active prop and the active state to\r\n     * determine if one is true.\r\n     */\r\n    active: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional boolean if the `error` state of the text field can be externally\r\n     * modified as well. The text field is usually considered errored when it is required\r\n     * and there is no value or the current length of the text field's value is greater\r\n     * than the `maxLength` prop.\r\n     *\r\n     * If this prop is set, it will check both the error prop and the error state to\r\n     * determine if one is true.\r\n     */\r\n    error: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional boolean if the `floating` state of the text field's floating label can be\r\n     * externally modified as well. The floating state is true when the text field gains focus\r\n     * or there is a value in the text field.\r\n     *\r\n     * If this prop is set, it will check both the floating prop and the floating state to\r\n     * determine if one is true.\r\n     */\r\n    floating: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the text field is required. If the user blurs the text field while there is\r\n     * no value and it is required, the `error` state will be set to true.\r\n     */\r\n    required: PropTypes.bool,\r\n\r\n    /**\r\n     * The direction that the underline should appear from.\r\n     */\r\n    lineDirection: PropTypes.oneOf(['left', 'center', 'right']).isRequired,\r\n\r\n    /**\r\n     * An optional icon to place to the left of the text field.\r\n     */\r\n    leftIcon: PropTypes.element,\r\n\r\n    /**\r\n     * Boolean if the left icon should be stateful. This means that the icon will\r\n     * gain the active or error colors with the text field.\r\n     */\r\n    leftIconStateful: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional icon to place to the right of the text field.\r\n     */\r\n    rightIcon: PropTypes.element,\r\n\r\n    /**\r\n     * Boolean if the right icon should be stateful. This means that the icon will\r\n     * gain the active or error colors with the text field.\r\n     */\r\n    rightIconStateful: PropTypes.bool,\r\n\r\n    /**\r\n     * The icon to use for a password text field.\r\n     */\r\n    passwordIcon: PropTypes.element,\r\n\r\n    /**\r\n     * Boolean if the password is initially visible.\r\n     */\r\n    passwordInitiallyVisible: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the text field should be displayed as full width.\r\n     */\r\n    fullWidth: PropTypes.bool,\r\n\r\n    /**\r\n     * The number of rows for the `multiline` text field. This value must be greater than\r\n     * or equal to 1. When this value is set, the text field will be converted to a multiline\r\n     * field.\r\n     */\r\n    rows: minNumber(1, false),\r\n\r\n    /**\r\n     * The maximum number of rows for a `multiline` text field. If this value is\r\n     * `undefined`, `0`, or a number less than `0`, the multiline text field will\r\n     * infinitely expand.\r\n     */\r\n    maxRows: PropTypes.number,\r\n\r\n    /**\r\n     * An optional custom size to apply to the text field. This is used along with\r\n     * the `$md-text-field-custom-sizes` variable. It basically applies a className of\r\n     * `md-text-field--NAME`.\r\n     */\r\n    customSize: PropTypes.string,\r\n\r\n    /**\r\n     * An optional error text to display below the text field. This will only appear when\r\n     * the text field has the `error` state through the `error` prop, the current length\r\n     * of the text field's value is greater than the `maxLength` prop, or the field is\r\n     * required and the user blurs the text field with no value.\r\n     */\r\n    errorText: PropTypes.node,\r\n\r\n    /**\r\n     * An optional help text to display below the text field. This will always be visible\r\n     * unless the `helpOnFocus` prop is set to true. Otherwise it will appear on focus.\r\n     */\r\n    helpText: PropTypes.node,\r\n\r\n    /**\r\n     * Boolean if the help text should display on focus only.\r\n     */\r\n    helpOnFocus: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional max length for the text field. This will insert a counter underneath the\r\n     * text field that appears on focus.\r\n     */\r\n    maxLength: PropTypes.number,\r\n\r\n    /**\r\n     * The ink when there is an injectInk above the text field. Used from the SelectField.\r\n     *\r\n     * @access private\r\n     */\r\n    ink: PropTypes.node,\r\n\r\n    /**\r\n     * An optional element to display inside of the `TextField` to the farthest right. This will\r\n     * position the indicator absolutely and add some additional padding to the `TextField`.\r\n     */\r\n    inlineIndicator: PropTypes.element,\r\n\r\n    /**\r\n     * This prop allows the text field to resize its width to stay between the min and max sizes provided. By\r\n     * default, the field will expand and collapse based on the amount of text provided. The collapsing can\r\n     * be disabled by providing `disableShrink` to the configuration object.\r\n     *\r\n     * If the `min` prop is not provided, it will default to `180` which is about the same size as a default\r\n     * text field.\r\n     */\r\n    resize: PropTypes.shape({\r\n      min: PropTypes.number,\r\n      max: PropTypes.number.isRequired,\r\n      disableShrink: PropTypes.bool,\r\n    }),\r\n\r\n    /**\r\n     * Boolean if the TextField is in a toolbar and acting as a title. This will apply additional styles to the\r\n     * text field to make it look like the toolbar's title.\r\n     */\r\n    toolbar: PropTypes.bool,\r\n\r\n    passwordIconChildren: deprecated(PropTypes.node, 'Use the `passwordIcon` prop instead'),\r\n    passwordIconClassName: deprecated(PropTypes.string, 'Use the `passwordIcon` prop instead'),\r\n    icon: deprecated(PropTypes.node, 'Use the `leftIcon` or `rightIcon` prop instead'),\r\n    floatingLabel: deprecated(\r\n      PropTypes.bool,\r\n      'The `label` prop is now always floating. To create a non-floating text field, only use the `placeholder` prop'\r\n    ),\r\n    adjustMinWidth: deprecated(PropTypes.bool, 'Manually add a min width style instead'),\r\n  };\r\n\r\n  static defaultProps = {\r\n    type: 'text',\r\n    lineDirection: 'left',\r\n    passwordIcon: <FontIcon>remove_red_eye</FontIcon>,\r\n    leftIconStateful: true,\r\n    rightIconStateful: true,\r\n    fullWidth: true,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const currentLength = this._getLength(typeof props.value !== 'undefined' ? props.value : props.defaultValue);\r\n\r\n    this._canvas = null;\r\n    let width = null;\r\n    if (typeof props.resize !== 'undefined') {\r\n      width = typeof props.resize.min === 'number' ? props.resize.min : DEFAULT_TEXT_FIELD_SIZE;\r\n    }\r\n\r\n    this.state = {\r\n      active: false,\r\n      error: props.maxLength ? props.maxLength < currentLength : false,\r\n      floating: isValued(props.defaultValue) || isValued(props.value),\r\n      passwordVisible: props.passwordInitiallyVisible,\r\n      currentLength,\r\n      styles: width ? { width, ...props.style } : props.style,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { value, defaultValue, resize, style } = this.props;\r\n    const v = typeof value !== 'undefined' ? value : defaultValue;\r\n    /* eslint-disable react/no-did-mount-set-state */\r\n    if (resize) { // always want to set width on mount\r\n      this.setState({ styles: { width: this._calcWidth(v, this.props), ...style } });\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { value, resize, style } = nextProps;\r\n    const nextState = {};\r\n    if (value !== this.props.value) {\r\n      nextState.error = this._isErrored(nextProps);\r\n      nextState.floating = this._focus || isValued(value);\r\n      nextState.currentLength = this._getLength(value);\r\n    }\r\n\r\n    if (WILL_RECEIVE_KEYS.some(key => this.props[key] !== nextProps[key])) {\r\n      if (!resize) {\r\n        nextState.styles = style;\r\n      } else {\r\n        const width = this._calcWidth(value, nextProps);\r\n        nextState.styles = { width, ...style };\r\n      }\r\n    }\r\n\r\n    this.setState(nextState);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { resize, value, style } = this.props;\r\n    if (resize && DID_UPDATE_KEYS.some(key => this.props[key] !== prevProps[key])) {\r\n      const width = this._calcWidth(value, this.props);\r\n      this.setState({ styles: { width, ...style } }); // eslint-disable-line react/no-did-update-set-state\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A helper function for getting the specific `input` field or the `textarea` in the `TextField`.\r\n   * This is accessible if you use `refs`.\r\n   *\r\n   * Example:\r\n   *\r\n   * ```js\r\n   * <TextField ref={field => this._field = field;} label=\"Hello\" />;\r\n   *\r\n   * this._field.getField(); // `input` node\r\n   * ```\r\n   */\r\n  getField = () => this._field.getField();\r\n\r\n  /**\r\n   * A helper function for focusing the `input` field or the `textarea` in the `TextField`.\r\n   * This is accessibile if you use `refs`.\r\n   * Example:\r\n   *\r\n   * ```js\r\n   * <TextField ref={field => this._field = field;} label=\"Hello\" />;\r\n   *\r\n   * this._field.focus();\r\n   * ```\r\n   */\r\n  focus = () => {\r\n    this._field.focus();\r\n  };\r\n\r\n  /**\r\n   * Gets the current value from the text field. This is used when you have an uncontrolled\r\n   * text field and simply need the value from a ref callback.\r\n   *\r\n   * @return {String} the text field's value\r\n   */\r\n  get value() {\r\n    return this.getField().value;\r\n  }\r\n\r\n\r\n  /**\r\n   * A helper function for blurring the `input` field or the `textarea` in the `TextField`.\r\n   * This is accessible if you use `refs`.\r\n   * Example:\r\n   *\r\n   * ```js\r\n   * <TextField ref={field => this._field = field;} label=\"Hello\" />;\r\n   *\r\n   * this._field.blur();\r\n   * ```\r\n   */\r\n  blur() {\r\n    this._field.blur();\r\n  }\r\n\r\n  _cloneIcon(icon, active, error, disabled, stateful, block, dir) {\r\n    if (!icon) {\r\n      return icon;\r\n    }\r\n\r\n    try {\r\n      const iconEl = Children.only(icon);\r\n      return cloneElement(iconEl, {\r\n        key: iconEl.key || `icon-${dir}`,\r\n        disabled: stateful ? disabled : undefined,\r\n        primary: stateful ? !error && active : undefined,\r\n        error: stateful ? error : undefined,\r\n        className: cn('md-text-field-icon', {\r\n          'md-text-field-icon--positioned': !block,\r\n        }, iconEl.props.className),\r\n      });\r\n    } catch (e) {\r\n      return icon;\r\n    }\r\n  }\r\n\r\n  _getLength = (v) => {\r\n    if (isValued(v)) {\r\n      return String(v).length;\r\n    }\r\n\r\n    return 0;\r\n  };\r\n\r\n  _setContainer = (div) => {\r\n    this._container = div;\r\n  };\r\n\r\n  _setField = (field) => {\r\n    if (field !== null) {\r\n      this._field = field;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * A small utility function for calculating an inline-icon's width keeping the SVG Icons\r\n   * in mind and any margin that gets applied for spacing.\r\n   */\r\n  _calcIconWidth = (icon) => {\r\n    const style = window.getComputedStyle(icon);\r\n\r\n    return icon.getBoundingClientRect().width\r\n      + parseInt(style.marginLeft, 10);\r\n  };\r\n\r\n  _calcWidth = (value, props = this.props) => {\r\n    let text = value;\r\n    // if it is a password, use the bullet unicode instead\r\n    if (props.type === 'password') {\r\n      text = Array.from(Array(value.length)).reduce(s => `${s}\\u2022`, '');\r\n    }\r\n\r\n    const field = this._field && this._field.getField();\r\n    if (!isValued(text) && field) {\r\n      text = field.value;\r\n    }\r\n\r\n    const min = getField(props.resize, { min: DEFAULT_TEXT_FIELD_SIZE }, 'min');\r\n    let width = getTextWidth(text, field);\r\n    if (width === null || !field) {\r\n      // some error happened, don't do other logic\r\n      return width || min;\r\n    }\r\n\r\n    const { max } = props.resize;\r\n\r\n    if (this._container) {\r\n      const indicator = this._container.querySelector('.md-text-field-inline-indicator');\r\n      if (indicator) {\r\n        width += indicator.getBoundingClientRect().width;\r\n      }\r\n\r\n      const iconContainer = this._container.querySelector('.md-text-field-icon-container');\r\n      if (iconContainer) {\r\n        // There is conditionally an icon before and after the text field, or only an icon before/after\r\n        // There is never a third icon if the indicator is defined\r\n        const [first, second, third] = iconContainer.children;\r\n        if (first.classList.contains('md-icon')) {\r\n          width += first.getBoundingClientRect().width;\r\n          width += parseInt(window.getComputedStyle(second).marginLeft, 10);\r\n\r\n          if (third) {\r\n            width += this._calcIconWidth(third);\r\n          }\r\n        } else if (second) {\r\n          width += this._calcIconWidth(second);\r\n        }\r\n      }\r\n    }\r\n\r\n    return Math.ceil(Math.min(max, Math.max(min, width)));\r\n  };\r\n\r\n  _isErrored = ({ value, maxLength, required } = this.props) => {\r\n    let { error } = this.state;\r\n    const currentLength = this._getLength(value);\r\n    if (required && error) {\r\n      error = !isValued(value);\r\n    }\r\n\r\n    if (maxLength) {\r\n      error = error || currentLength > maxLength;\r\n    }\r\n\r\n    return error;\r\n  };\r\n\r\n  _handleContainerClick = (e) => {\r\n    if (this.props.onClick) {\r\n      this.props.onClick(e);\r\n    }\r\n\r\n    if (!this.props.disabled) {\r\n      this.focus();\r\n    }\r\n  };\r\n\r\n  _handleBlur = (e) => {\r\n    this._focus = false;\r\n    const { required, maxLength, onBlur } = this.props;\r\n    if (onBlur) {\r\n      onBlur(e);\r\n    }\r\n\r\n    const { value } = e.target;\r\n    const state = {\r\n      active: false,\r\n      error: (required && !isValued(value)) || (maxLength && String(value).length > maxLength),\r\n    };\r\n\r\n    if (!this.props.block) {\r\n      state.floating = isValued(value);\r\n    }\r\n\r\n    this.setState(state);\r\n  };\r\n\r\n  _handleFocus = (e) => {\r\n    this._focus = true;\r\n    const { onFocus, block } = this.props;\r\n    if (onFocus) {\r\n      onFocus(e);\r\n    }\r\n\r\n    const state = { active: true };\r\n    if (!block) {\r\n      state.floating = true;\r\n    }\r\n\r\n    this.setState(state);\r\n  };\r\n\r\n  _handleChange = (e) => {\r\n    const { onChange, maxLength, required, resize } = this.props;\r\n    const { value } = e.target;\r\n    if (onChange) {\r\n      onChange(e.target.value, e);\r\n    }\r\n\r\n    const currentLength = value.length;\r\n    let state;\r\n    if (typeof maxLength !== 'undefined') {\r\n      state = { currentLength, error: currentLength > maxLength };\r\n    } else if (required && this.state.error) {\r\n      state = { error: !currentLength };\r\n    }\r\n\r\n    if (typeof this.props.value === 'undefined' && resize) {\r\n      const width = this._calcWidth(value);\r\n      if (!resize.disableShrink || !this.state.styles || width > this.state.styles.width) {\r\n        state = state || {};\r\n        state.styles = { ...this.state.styles, width };\r\n      }\r\n    }\r\n\r\n    if (state) {\r\n      this.setState(state);\r\n    }\r\n  };\r\n\r\n  _togglePasswordField = () => {\r\n    this.setState({ passwordVisible: !this.state.passwordVisible }, this.focus);\r\n  };\r\n\r\n  render() {\r\n    const { currentLength, passwordVisible, styles } = this.state;\r\n    const {\r\n      id,\r\n      type,\r\n      className,\r\n      inputStyle,\r\n      inputClassName,\r\n      block,\r\n      fullWidth,\r\n      required,\r\n      customSize,\r\n      maxLength,\r\n      errorText,\r\n      helpText,\r\n      helpOnFocus,\r\n      disabled,\r\n      leftIconStateful,\r\n      rightIconStateful,\r\n      passwordIcon,\r\n      lineDirection,\r\n      paddedBlock,\r\n      onDoubleClick,\r\n      onTouchStart,\r\n      onTouchMove,\r\n      onTouchCancel,\r\n      onTouchEnd,\r\n      onMouseDown,\r\n      onMouseUp,\r\n      onMouseOver,\r\n      onMouseLeave,\r\n      ink,\r\n      inlineIndicator,\r\n      toolbar,\r\n\r\n      // deprecated\r\n      icon,\r\n      passwordIconChildren,\r\n      passwordIconClassName,\r\n      /* eslint-disable no-unused-vars */\r\n      style,\r\n      label: propLabel,\r\n      placeholder: propPlaceholder,\r\n      error: propError,\r\n      active: propActive,\r\n      floating: propFloating,\r\n      leftIcon: propLeftIcon,\r\n      rightIcon: propRightIcon,\r\n      onClick,\r\n      onChange,\r\n      onBlur,\r\n      onFocus,\r\n      resize,\r\n\r\n      // deprecated\r\n      adjustMinWidth,\r\n      floatingLabel: propFloatingLabel,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n\r\n    let {\r\n      label,\r\n      placeholder,\r\n      error,\r\n      active,\r\n      floating,\r\n      leftIcon,\r\n      rightIcon,\r\n    } = this.props;\r\n    active = active || this.state.active;\r\n    error = error || this.state.error;\r\n    floating = floating || this.state.floating;\r\n\r\n    if (required) {\r\n      if (label) {\r\n        label = addSuffix(label, '*');\r\n      }\r\n\r\n      if (placeholder && !label) {\r\n        placeholder = addSuffix(placeholder, '*');\r\n      }\r\n    }\r\n\r\n    if (label && !floating) {\r\n      placeholder = null;\r\n    }\r\n\r\n    leftIcon = this._cloneIcon(icon || leftIcon, active, error, disabled, leftIconStateful, block, 'left');\r\n    if (type === 'password' && !disabled) {\r\n      rightIcon = (\r\n        <PasswordButton\r\n          key=\"password-btn\"\r\n          onClick={this._togglePasswordField}\r\n          active={active}\r\n          passwordVisible={passwordVisible}\r\n          icon={getDeprecatedIcon(passwordIconClassName, passwordIconChildren, passwordIcon)}\r\n          block={block}\r\n          floating={!!label}\r\n        />\r\n      );\r\n    } else if (inlineIndicator) {\r\n      const el = Children.only(inlineIndicator);\r\n      rightIcon = cloneElement(inlineIndicator, {\r\n        key: 'icon-right',\r\n        className: cn('md-text-field-inline-indicator', {\r\n          'md-text-field-inline-indicator--floating': label,\r\n          'md-text-field-inline-indicator--block': block,\r\n        }, el.props.className),\r\n      });\r\n    } else {\r\n      rightIcon = this._cloneIcon(rightIcon, active, error, disabled, rightIconStateful, block, 'right');\r\n    }\r\n    const rightIconed = !!rightIcon && type !== 'password' && !inlineIndicator;\r\n\r\n    const floatingLabel = (\r\n      <FloatingLabel\r\n        key=\"label\"\r\n        label={label}\r\n        htmlFor={id}\r\n        active={active}\r\n        error={error}\r\n        floating={floating}\r\n        customSize={customSize}\r\n        disabled={disabled}\r\n        iconOffset={!!leftIcon}\r\n      />\r\n    );\r\n\r\n    const message = (\r\n      <TextFieldMessage\r\n        key=\"message\"\r\n        active={active}\r\n        error={error}\r\n        errorText={errorText}\r\n        helpText={helpText}\r\n        helpOnFocus={helpOnFocus}\r\n        block={block}\r\n        maxLength={maxLength}\r\n        leftIcon={!!leftIcon}\r\n        rightIcon={!!rightIcon}\r\n        currentLength={currentLength}\r\n      />\r\n    );\r\n\r\n    const field = (\r\n      <InputField\r\n        {...props}\r\n        key=\"field\"\r\n        ref={this._setField}\r\n        id={id}\r\n        type={type}\r\n        label={label}\r\n        style={inputStyle}\r\n        className={cn({ 'md-text-field--toolbar': toolbar }, inputClassName)}\r\n        disabled={disabled}\r\n        customSize={customSize}\r\n        fullWidth={fullWidth}\r\n        passwordVisible={passwordVisible}\r\n        placeholder={placeholder}\r\n        block={block}\r\n        onFocus={this._handleFocus}\r\n        onBlur={this._handleBlur}\r\n        onChange={this._handleChange}\r\n        inlineIndicator={!!inlineIndicator}\r\n      />\r\n    );\r\n\r\n    let divider;\r\n    if (!block) {\r\n      divider = (\r\n        <TextFieldDivider\r\n          key=\"text-divider\"\r\n          active={active}\r\n          error={error}\r\n          lineDirection={lineDirection}\r\n        />\r\n      );\r\n    }\r\n\r\n    let children;\r\n    if (leftIcon || rightIconed) {\r\n      children = (\r\n        <div key=\"icon-divider\" className=\"md-text-field-icon-container\">\r\n          {leftIcon}\r\n          <div\r\n            key=\"divider-container\"\r\n            className={cn('md-text-field-divider-container', {\r\n              'md-text-field-divider-container--grow': fullWidth,\r\n            })}\r\n          >\r\n            {field}\r\n            {divider}\r\n          </div>\r\n          {rightIcon}\r\n        </div>\r\n      );\r\n    } else {\r\n      children = [leftIcon, field, divider, rightIcon];\r\n    }\r\n\r\n    children = [floatingLabel, children, message];\r\n\r\n    const multiline = typeof props.rows !== 'undefined';\r\n    return (\r\n      <div\r\n        style={styles}\r\n        className={cn('md-text-field-container', {\r\n          'md-inline-block': !fullWidth && !block,\r\n          'md-full-width': block || fullWidth,\r\n          'md-text-field-container--disabled': disabled,\r\n          'md-text-field-container--input': !multiline,\r\n          'md-text-field-container--input-block': block && !multiline,\r\n          'md-text-field-container--multiline': multiline,\r\n          'md-text-field-container--multiline-block': multiline && block,\r\n          'md-text-field-container--padded-block': block && paddedBlock,\r\n        }, className)}\r\n        onClick={this._handleContainerClick}\r\n        onDoubleClick={onDoubleClick}\r\n        onMouseOver={onMouseOver}\r\n        onMouseLeave={onMouseLeave}\r\n        onMouseDown={onMouseDown}\r\n        onMouseUp={onMouseUp}\r\n        onTouchStart={onTouchStart}\r\n        onTouchEnd={onTouchEnd}\r\n        onTouchCancel={onTouchCancel}\r\n        onTouchMove={onTouchMove}\r\n        ref={this._setContainer}\r\n      >\r\n        {ink}\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { findDOMNode } from 'react-dom';\r\nimport CSSTransitionGroup from 'react-transition-group/CSSTransitionGroup';\r\nimport cn from 'classnames';\r\n\r\nimport getField from '../utils/getField';\r\nimport omit from '../utils/omit';\r\nimport findIgnoreCase from '../utils/findIgnoreCase';\r\nimport fuzzyFilter from '../utils/fuzzyFilter';\r\nimport caseInsensitiveFilter from '../utils/caseInsensitiveFilter';\r\nimport getTextWidth from '../utils/Positioning/getTextWidth';\r\nimport oneRequiredForA11y from '../utils/PropTypes/oneRequiredForA11y';\r\nimport controlled from '../utils/PropTypes/controlled';\r\nimport invalidIf from '../utils/PropTypes/invalidIf';\r\nimport { UP, DOWN, TAB } from '../constants/keyCodes';\r\nimport anchorShape from '../Helpers/anchorShape';\r\nimport fixedToShape from '../Helpers/fixedToShape';\r\nimport positionShape from '../Helpers/positionShape';\r\n\r\nimport ListItem from '../Lists/ListItem';\r\nimport Menu from '../Menus/Menu';\r\nimport TextField from '../TextFields/TextField';\r\n\r\n/**\r\n * The `Autocomplete` component is useful for presenting real-time suggestions, completions,\r\n * or filtering.\r\n */\r\nexport default class Autocomplete extends PureComponent {\r\n  static HorizontalAnchors = Menu.HorizontalAnchors;\r\n  static VerticalAnchors = Menu.VerticalAnchors;\r\n  static Positions = Menu.Positions;\r\n  static fuzzyFilter = fuzzyFilter;\r\n  static caseInsensitiveFilter = caseInsensitiveFilter;\r\n  static findIgnoreCase = findIgnoreCase;\r\n  static propTypes = {\r\n    /**\r\n     * An id to give the autocomplete. Either this or the `menuId` is required for accessibility.\r\n     *\r\n     * @see {@link #menuId}\r\n     */\r\n    id: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * The menu id to provide to the autocomplete. Either this prop or the `id` prop is required. If\r\n     * this props is omitted, the menuId will become: `${id}-menu`\r\n     */\r\n    menuId: oneRequiredForA11y(PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]), 'id'),\r\n\r\n    /**\r\n     * An optional id to provide to the menu's list.\r\n     *\r\n     * @see {@link Menus/Menu#listId}\r\n     */\r\n    listId: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * An optional style to apply to the menu that contains the autocomplete.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the menu that contains the autocomplete.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the autocomplete's text field.\r\n     */\r\n    textFieldStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the autocomplete's text field.\r\n     */\r\n    textFieldClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the autocomplete's text field input itself.\r\n     */\r\n    inputStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the autocomplete's input field itself.\r\n     */\r\n    inputClassName: PropTypes.string,\r\n\r\n    /**\r\n     * The optional style to apply to the opened menu List if the\r\n     * `Autocomplete` is not using `inline` suggestions.\r\n     */\r\n    listStyle: PropTypes.object,\r\n\r\n    /**\r\n     * The optional className to apply to the opened menu List if the\r\n     * `Autocomplete` is not using `inline` suggestions.\r\n     */\r\n    listClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the inline suggestion when using `inline` mode.\r\n     */\r\n    inlineSuggestionStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the inline suggestion when using `inline` mode.\r\n     */\r\n    inlineSuggestionClassName: PropTypes.string,\r\n\r\n    /**\r\n     * Boolean if the autocomplete is disabled.\r\n     */\r\n    disabled: PropTypes.bool,\r\n\r\n    /**\r\n     * A label to display with the autocomplete.\r\n     */\r\n    label: PropTypes.node,\r\n\r\n    /**\r\n     * An optional value to use for the text field. This will force this component\r\n     * to be controlled and require the `onChange` function.\r\n     */\r\n    value: controlled(PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number,\r\n    ]), 'onChange'),\r\n\r\n    /**\r\n     * The default value for the autocomplete's text field.\r\n     */\r\n    defaultValue: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number,\r\n    ]),\r\n\r\n    /**\r\n     * An object key to use to extract the text to be compared for filtering.\r\n     * This will only be applied if the given `data` prop is an array of objects.\r\n     */\r\n    dataLabel: PropTypes.string.isRequired,\r\n\r\n    /**\r\n     * An optional object key to use to extract the `value` of the given `data` prop.\r\n     * This is really only used with generating a unique react key. The unique react\r\n     * key with either be:\r\n     * - the datum if it is a string or number\r\n     * - the `key` attribute of the datum object\r\n     * - the `datum[dataValue]`\r\n     * - or the `datum[dataLabel]`\r\n     */\r\n    dataValue: PropTypes.string,\r\n\r\n    /**\r\n     * A single key or an array of keys to delete from your data object before passing\r\n     * to the `ListItem` component.\r\n     */\r\n    deleteKeys: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.arrayOf(PropTypes.string),\r\n    ]),\r\n\r\n    /**\r\n     * The data that will be used for autocomplete suggestions. This can either be\r\n     * an array of string, number, or object. If it is an array of objects, the key\r\n     * `dataLabel` is required.\r\n     *\r\n     * ```docgen\r\n     * PropTypes.arrayOf(PropTypes.oneOfType([\r\n     *   PropTypes.element,\r\n     *   PropTypes.string,\r\n     *   PropTypes.number,\r\n     *   PropTypes.shape({\r\n     *     [dataLabel]: PropTypes.oneOfType([\r\n     *       PropTypes.string,\r\n     *       PropTypes.number,\r\n     *       PropTypes.node,\r\n     *     ]).isRequired,\r\n     *   }),\r\n     * ])).isRequired\r\n     * ```\r\n     */\r\n    data: (props, propName, component, ...others) => {\r\n      const { dataLabel } = props;\r\n      return PropTypes.arrayOf(PropTypes.oneOfType([\r\n        PropTypes.element,\r\n        PropTypes.string,\r\n        PropTypes.number,\r\n        PropTypes.shape({\r\n          [dataLabel]: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number,\r\n            PropTypes.node,\r\n          ]).isRequired,\r\n        }),\r\n      ])).isRequired(props, propName, component, ...others);\r\n    },\r\n\r\n    /**\r\n     * An optional number representing the total number of results in the `data` prop.\r\n     * This should really only be used when the data is paginated. When this is set,\r\n     * each item in the suggestion menu will be updated with the `aria-setsize` and\r\n     * `aria-posinset`.\r\n     *\r\n     * @see {@link #offset}\r\n     */\r\n    total: invalidIf(PropTypes.number, 'inline'),\r\n\r\n    /**\r\n     * An optional number representing the data's offset if the results were paginated.\r\n     * This is used for accessibility with the `aria-posinset` attribute.\r\n     *\r\n     * @see {@link #total}\r\n     */\r\n    offset: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * An optional function to use to filter the `data`. If you have a sexy backend\r\n     * using solr or some other search/indexer, it is recommended to set this prop to\r\n     * `null`.\r\n     */\r\n    filter: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `Autocomplete`'s text field has a `keydown` event.\r\n     */\r\n    onKeyDown: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `Autocomplete`'s text field has a `mousedown` event.\r\n     */\r\n    onMouseDown: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `Autocomplete`'s text field value changes.\r\n     * The callback will be given the new value and the change event.\r\n     *\r\n     * `onChange(textFeldValue, event)`\r\n     */\r\n    onChange: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `Autocomplete`'s text field is focused.\r\n     */\r\n    onFocus: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the entire `Autocomplete` component is blurred.\r\n     * This will be triggered when the window is clicked or when a user tabs away from\r\n     * the autocomplete.\r\n     */\r\n    onBlur: PropTypes.func,\r\n\r\n    /**\r\n     * Boolean if this text field should be styled as a full width text field.\r\n     * Floating labels and the text field indicator will be removed automatically.\r\n     */\r\n    block: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the autocomplete should span the entire width.\r\n     */\r\n    fullWidth: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the `Autocomplete` should display suggestions inline instead\r\n     * of in a `Menu`.\r\n     */\r\n    inline: PropTypes.bool,\r\n\r\n    /**\r\n     * The amount of padding to use between the current text and the inline suggestion text.\r\n     */\r\n    inlineSuggestionPadding: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * The function to call to find a suggestion for an inline autocomplete. This function\r\n     * expects to return a single result of a number or a string.\r\n     *\r\n     * ```js\r\n     * @param {Array<Object|String|Number>} data - The data prop to search.\r\n     * @param {String} value - The current value to use for searching.\r\n     * @param {String} dataLabel - The `dataLabel` prop to use if a datum is an object.\r\n     * @return {String|Number} the found suggestion or false-ish\r\n     * ```\r\n     */\r\n    findInlineSuggestion: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when an autocomplete suggestion is clicked either\r\n     * by using the mouse, the enter/space key, or touch. The match index and current\r\n     * `dataLabel` will be given back.\r\n     *\r\n     * `onAutocomplete(suggestion, suggestionIndex, matches);`\r\n     *\r\n     * @see {@link #autocompleteWithLabel}\r\n     */\r\n    onAutocomplete: PropTypes.func,\r\n\r\n    /**\r\n     * Boolean if the `onAutocomplete` should attempt send the `suggestion[dataLabel]` instead\r\n     * of `suggestion[dataValue]` when the data is an object.\r\n     *\r\n     * @see {@link #onAutocomplete}\r\n     */\r\n    autocompleteWithLabel: PropTypes.bool,\r\n\r\n    /**\r\n     * A boolean if the text field's value should be reset to the empty string when\r\n     * an item is auto-completed. This is useful if you do not want a fully controlled\r\n     * component and the values are stored outside of the `TextField`. (like `Chips`).\r\n     */\r\n    clearOnAutocomplete: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional function to call when the `Autocomplete` suggestion menu opens.\r\n     */\r\n    onMenuOpen: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `Autocomplete` suggestion menu closes.\r\n     */\r\n    onMenuClose: PropTypes.func,\r\n\r\n    /**\r\n     * This prop is used for disabling the browser's default autocomplete suggestions\r\n     * of previously typed values in the text field. By default, this is disabled.\r\n     */\r\n    autoComplete: PropTypes.oneOf(['on', 'off']),\r\n\r\n    /**\r\n     * Boolean if the `input` should be focused again after a suggestion was clicked.\r\n     *\r\n     * This is really only added for keyboard support and the fact that each of suggestions\r\n     * are focusable.\r\n     */\r\n    focusInputOnAutocomplete: PropTypes.bool,\r\n\r\n    /**\r\n     * This is how the menu's `List` gets anchored to the `toggle` element.\r\n     *\r\n     * @see {@link Helpers/Layover#anchor}\r\n     */\r\n    anchor: anchorShape,\r\n\r\n    /**\r\n     * This is the anchor to use when the `position` is set to `Autocomplete.Positions.BELOW`.\r\n     *\r\n     * @see {@link Helpers/Layover#belowAnchor}\r\n     */\r\n    belowAnchor: anchorShape,\r\n\r\n    /**\r\n     * This is the animation position for the list that appears.\r\n     *\r\n     * @see {@link Helpers/Layover#animationPosition}\r\n     */\r\n    position: positionShape,\r\n\r\n    /**\r\n     * This is how the menu's list will be \"fixed\" to the `toggle` component.\r\n     *\r\n     * @see {@link Helpers/Layover#fixedTo}\r\n     */\r\n    fixedTo: fixedToShape,\r\n\r\n    /**\r\n     * Boolean if the menu's list should appear horizontally instead of vertically.\r\n     */\r\n    listInline: PropTypes.bool,\r\n\r\n    /**\r\n     * The list's z-depth for applying box shadow. This should be a number from 0 to 5.\r\n     */\r\n    listZDepth: PropTypes.number,\r\n\r\n    /**\r\n     * Boolean if the list should have its height restricted to the `$md-menu-mobile-max-height`/\r\n     * `$md-menu-desktop-max-height` values.\r\n     *\r\n     * @see [md-menu-mobile-max-height](/components/menus?tab=2#variable-md-menu-mobile-max-height)\r\n     * @see [md-menu-desktop-max-height](/components/menus?tab=2#variable-md-menu-desktop-max-height)\r\n     */\r\n    listHeightRestricted: PropTypes.bool,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#xThreshold}\r\n     */\r\n    xThreshold: PropTypes.number,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#yThreshold}\r\n     */\r\n    yThreshold: PropTypes.number,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#closeOnOutsideClick}\r\n     */\r\n    closeOnOutsideClick: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional transition name to use for the list appearing/disappearing.\r\n     *\r\n     * @see {@link Helpers/Layover#transitionName}\r\n     */\r\n    transitionName: PropTypes.string,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#transitionEnterTimeout}\r\n     */\r\n    transitionEnterTimeout: PropTypes.number,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#transitionLeaveTimeout}\r\n     */\r\n    transitionLeaveTimeout: PropTypes.number,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#centered}\r\n     */\r\n    centered: Menu.propTypes.centered,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#sameWidth}\r\n     */\r\n    sameWidth: Menu.propTypes.sameWidth,\r\n\r\n    /**\r\n     * Boolean if the menu should automatically try to reposition itself to stay within\r\n     * the viewport when the `fixedTo` element scrolls.\r\n     *\r\n     * @see {@link Helpers/Layover#repositionOnScroll}\r\n     */\r\n    repositionOnScroll: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the menu should automatically try to reposition itself to stay within\r\n     * the viewport when the window resizes.\r\n     *\r\n     * @see {@link Helpers/Layover#repositionOnResize}\r\n     */\r\n    repositionOnResize: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the menu logic should be simplified without any viewport logic and position\r\n     * based on the relative position of the menu. This will most like require some additional\r\n     * styles applied to the menu.\r\n     *\r\n     * @see {@link Helpers/Layover#simplified}\r\n     */\r\n    simplifiedMenu: PropTypes.bool,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#minLeft}\r\n     */\r\n    minLeft: PropTypes.number,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#minRight}\r\n     */\r\n    minRight: PropTypes.number,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#minBottom}\r\n     */\r\n    minBottom: PropTypes.number,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#fillViewportWidth}\r\n     */\r\n    fillViewportWidth: PropTypes.bool,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#fillViewportHeight}\r\n     */\r\n    fillViewportHeight: PropTypes.bool,\r\n\r\n    /**\r\n     * @see {@link TextFields#toolbar}\r\n     */\r\n    toolbar: PropTypes.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    autocompleteWithLabel: false,\r\n    position: Menu.Positions.BELOW,\r\n    sameWidth: true,\r\n    offset: 0,\r\n    fullWidth: true,\r\n    defaultValue: '',\r\n    dataLabel: 'primaryText',\r\n    filter: Autocomplete.fuzzyFilter,\r\n    findInlineSuggestion: Autocomplete.findIgnoreCase,\r\n    autoComplete: 'off',\r\n    repositionOnScroll: true,\r\n    repositionOnResize: true,\r\n    inlineSuggestionPadding: 6,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const {\r\n      defaultValue,\r\n      data,\r\n      dataLabel,\r\n      filter,\r\n    } = props;\r\n\r\n    let matches = [];\r\n    if (defaultValue && filter) {\r\n      matches = filter(data, defaultValue, dataLabel);\r\n    } else if (!filter) {\r\n      matches = data;\r\n    }\r\n\r\n    this.state = {\r\n      value: defaultValue,\r\n      matches,\r\n      visible: false,\r\n      matchIndex: -1,\r\n      manualFocus: false,\r\n      suggestion: '',\r\n      suggestionIndex: -1,\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { value: nextValue, data, filter, dataLabel } = nextProps;\r\n    const dataDiff = data !== this.props.data;\r\n    if (nextValue !== this.props.value || dataDiff) {\r\n      let { visible, matches } = this.state;\r\n      const value = getField(nextProps, this.state, 'value');\r\n\r\n      if (filter) {\r\n        matches = filter(data, value, dataLabel);\r\n      } else if (dataDiff) {\r\n        matches = data;\r\n      }\r\n\r\n      if (this.state.focus) {\r\n        visible = !!matches.length;\r\n      }\r\n\r\n      this.setState({ matches, visible });\r\n    }\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    if (this.state.visible !== nextState.visible) {\r\n      const menuFn = nextProps[`onMenu${nextState.visible ? 'Open' : 'Close'}`];\r\n      if (menuFn) {\r\n        menuFn();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the current value from the text field. This is used when you have an uncontrolled\r\n   * text field and simply need the value from a ref callback.\r\n   *\r\n   * @return {String} the text field's value\r\n   */\r\n  get value() {\r\n    return getField(this.props, this.state, 'value');\r\n  }\r\n\r\n  _close = (e) => {\r\n    if (this.props.onBlur) {\r\n      this.props.onBlur(e);\r\n    }\r\n\r\n    this.setState({ visible: false });\r\n  };\r\n\r\n  _handleChange = (value, event) => {\r\n    const { onChange, filter, findInlineSuggestion, data, dataLabel, inline } = this.props;\r\n\r\n    if (onChange) {\r\n      onChange(value, event);\r\n    }\r\n\r\n    if (inline) {\r\n      // If findInlineSuggestion does not exist, assume that `onChange` will handle it.\r\n      return findInlineSuggestion ? this._findInlineSuggestions(value) : null;\r\n    }\r\n\r\n    let { visible } = this.state;\r\n    let matches = value || !filter ? this.state.matches : [];\r\n    if (value && filter) {\r\n      matches = filter(data, value, dataLabel);\r\n    }\r\n\r\n    if (filter) {\r\n      visible = !!matches.length;\r\n    }\r\n\r\n    return this.setState({ matches, visible, value });\r\n  }\r\n\r\n  _handleFocus = (e) => {\r\n    if (this.props.onFocus) {\r\n        this.props.onFocus(e);\r\n    }\r\n\r\n    const value = e.target.value;\r\n\r\n    if (this.props.inline && value) {\r\n        if (this.props.findInlineSuggestion) {\r\n            this._findInlineSuggestions(value);\r\n        }\r\n\r\n        return;\r\n    }\r\n    this.setState({\r\n        matchIndex: -1,\r\n        visible: true,\r\n        manualFocus: false,\r\n        focus: true,\r\n        matches: this.props.data,\r\n    });\r\n  };\r\n\r\n  _handleBlur = (e) => {\r\n    if (this.props.inline || !this.state.matches.length) {\r\n      if (this.props.onBlur) {\r\n        this.props.onBlur(e);\r\n      }\r\n    }\r\n\r\n    this.setState({ focus: false });\r\n  };\r\n\r\n  _handleInlineAutocomplete = () => {\r\n    const { suggestionIndex, matches } = this.state;\r\n    if (suggestionIndex === -1) {\r\n      return;\r\n    }\r\n\r\n    const {\r\n      data,\r\n      dataLabel,\r\n      dataValue,\r\n      autocompleteWithLabel: label,\r\n      onAutocomplete,\r\n    } = this.props;\r\n\r\n    let value = data[suggestionIndex];\r\n    if (onAutocomplete) {\r\n      let v = value;\r\n      if (typeof value === 'object') {\r\n        if (!label) {\r\n          v = value[dataValue];\r\n        } else {\r\n          v = value[dataLabel];\r\n        }\r\n      }\r\n\r\n      onAutocomplete(v, suggestionIndex, matches);\r\n    }\r\n\r\n    if (typeof value === 'object') {\r\n      value = value[dataLabel];\r\n    }\r\n\r\n    this.setState({\r\n      value,\r\n      suggestion: '',\r\n      suggestionIndex: -1,\r\n      tabbed: true,\r\n    });\r\n  };\r\n\r\n  _handleTextFieldKeyDown = (e) => {\r\n    const { inline, onKeyDown } = this.props;\r\n    const { suggestionIndex } = this.state;\r\n\r\n    const key = e.which || e.keyCode;\r\n    if (onKeyDown) {\r\n      onKeyDown(e);\r\n    }\r\n\r\n    if (inline && key === TAB && suggestionIndex !== -1) { // Autocomplete the text field\r\n      e.preventDefault();\r\n      this._handleInlineAutocomplete();\r\n    }\r\n  };\r\n\r\n  _handleMenuKeyDown = (e) => {\r\n    const key = e.which || e.keyCode;\r\n    if (key === TAB) {\r\n      if (this.props.onBlur) {\r\n        this.props.onBlur(e);\r\n      }\r\n\r\n      this.setState({ visible: false });\r\n    } else if (key === UP || key === DOWN) {\r\n      this._focusSuggestion(key === UP, e);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Just check if the click target is in a list item.. if it is, autocomplete the text field\r\n   * with that item.\r\n   */\r\n  _handleClick = (e) => {\r\n    let target = e.target;\r\n    while (this._menu && this._menu.contains(target)) {\r\n      if (target.classList.contains('md-list-item')) {\r\n        let items = target.parentNode.querySelectorAll('.md-list-item');\r\n        items = Array.prototype.slice.call(items);\r\n\r\n        return this._handleItemClick(items.indexOf(target));\r\n      }\r\n\r\n      target = target.parentNode;\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  _handleItemClick = (index) => {\r\n    if (index === -1) { return; }\r\n\r\n    const { matches } = this.state;\r\n    const {\r\n      data,\r\n      dataLabel,\r\n      dataValue,\r\n      filter,\r\n      onAutocomplete,\r\n      clearOnAutocomplete,\r\n      focusInputOnAutocomplete,\r\n      autocompleteWithLabel: label,\r\n    } = this.props;\r\n\r\n    let value = matches.filter(m => !React.isValidElement(m))[index];\r\n    if (onAutocomplete) {\r\n      let v = value;\r\n      if (typeof v === 'object') {\r\n        if (!label) {\r\n          v = value[dataValue];\r\n        } else {\r\n          v = value[dataLabel];\r\n        }\r\n      }\r\n\r\n      onAutocomplete(v, index, matches);\r\n    }\r\n\r\n    if (typeof value === 'object') {\r\n      value = value[dataLabel];\r\n    }\r\n\r\n    value = clearOnAutocomplete ? '' : value;\r\n    let callback;\r\n    if (focusInputOnAutocomplete) {\r\n      callback = () => {\r\n        this._field.focus();\r\n      };\r\n    }\r\n\r\n    this.setState({\r\n      visible: false,\r\n      manualFocus: focusInputOnAutocomplete,\r\n      matches: filter ? filter(data, value, dataLabel) : matches,\r\n      value,\r\n    }, callback);\r\n  };\r\n\r\n  _focusSuggestion = (negative, e) => {\r\n    e.preventDefault();\r\n    const { matchIndex, matches } = this.state;\r\n    const l = matches.length;\r\n\r\n    let index;\r\n    if (negative && matchIndex === -1 || !negative && matchIndex >= l) {\r\n      return;\r\n    } else if (negative) {\r\n      index = matchIndex - 1;\r\n      if (index === -1) {\r\n        this._field.focus();\r\n      }\r\n    } else {\r\n      index = Math.min(l, matchIndex + 1);\r\n    }\r\n\r\n    if (index !== -1 && index !== matchIndex) {\r\n      const item = this._menu.querySelectorAll('.md-list-tile')[index];\r\n      if (item) {\r\n        item.focus();\r\n      }\r\n    }\r\n\r\n    this.setState({ matchIndex: index });\r\n  };\r\n\r\n  _findInlineSuggestions = (value) => {\r\n    const { data, dataLabel, findInlineSuggestion, inlineSuggestionPadding } = this.props;\r\n\r\n    let suggestion = findInlineSuggestion(data, value, dataLabel);\r\n    if (typeof suggestion === 'object') {\r\n      throw new Error(\r\n        '`findInlineSuggestion` should return a string or a number, but got an object.',\r\n        suggestion\r\n      );\r\n    }\r\n\r\n    let { suggestionStyle } = this.state;\r\n    let suggestionIndex = -1;\r\n    if (suggestion) {\r\n      // Find index of suggestion\r\n      data.some((datum, i) => {\r\n        const d = typeof dataum === 'object' ? datum[dataLabel] : datum;\r\n        if (d === suggestion) {\r\n          suggestionIndex = i;\r\n        }\r\n\r\n        return suggestionIndex !== -1;\r\n      });\r\n\r\n      // Strip already used letters\r\n      suggestion = suggestion.toString().substring(value.length, suggestion.length);\r\n\r\n      // Position the inline suggestion next to the text\r\n      let width = getTextWidth(value, this._field);\r\n      if (width !== null) {\r\n        width += inlineSuggestionPadding;\r\n      }\r\n\r\n      if (width !== null && (!suggestionStyle || suggestionStyle.left !== width)) {\r\n        suggestionStyle = { left: width };\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      value,\r\n      suggestion,\r\n      suggestionIndex,\r\n      suggestionStyle,\r\n      tabbed: false,\r\n      focus: true,\r\n    });\r\n  };\r\n\r\n  _mapToListItem = (match, i) => {\r\n    if (React.isValidElement(match)) { return match; }\r\n\r\n    const { dataLabel, dataValue, deleteKeys, total, offset, data } = this.props;\r\n    let props;\r\n    switch (typeof match) {\r\n      case 'string':\r\n      case 'number':\r\n        props = {\r\n          key: match,\r\n          primaryText: match,\r\n        };\r\n        break;\r\n      default:\r\n        if (deleteKeys) {\r\n          props = omit(match, typeof deleteKeys === 'string' ? [deleteKeys] : deleteKeys);\r\n        } else {\r\n          props = match;\r\n        }\r\n\r\n        props = {\r\n          ...props,\r\n          key: match.key || (dataValue && match[dataValue]) || match[dataLabel],\r\n          primaryText: match[dataLabel],\r\n        };\r\n    }\r\n\r\n    if (typeof total !== 'undefined' && data.length < total) {\r\n      props['aria-setsize'] = total;\r\n      props['aria-posinset'] = i + 1 + offset;\r\n    }\r\n\r\n    // Allows focus, but does not let tab focus. This is so up and down keys work.\r\n    return <ListItem tabIndex={-1} {...props} />;\r\n  };\r\n\r\n  /**\r\n   * The `mousedown` event is used instead of `click` because of the order\r\n   * of the `mousedown`, `focus`, and `click` events.\r\n   */\r\n  _toggleMenu = (e) => {\r\n    if (this.props.onMouseDown) {\r\n      this.props.onMouseDown(e);\r\n    }\r\n\r\n    if (!this.props.inline && this.state.matches.length && getField(this.props, this.state, 'value')) {\r\n      this.setState({ visible: !this.state.visible });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Allows touch devices to autocomplete the inline view by tapping:\r\n   * - the suggestion text\r\n   * - the text field IF there is a suggestion visible\r\n   */\r\n  _handleTouchStart = (e) => {\r\n    const { target } = e;\r\n    const { suggestion } = this.state;\r\n    if (target.classList.contains('md-autocomplete-suggestion') && suggestion) {\r\n      this._handleInlineAutocomplete();\r\n    }\r\n  };\r\n\r\n  _setField = (field) => {\r\n    if (field) {\r\n      this._field = field.getField();\r\n    }\r\n  };\r\n\r\n  _setMenu = (menu) => {\r\n    this._menu = findDOMNode(menu);\r\n  };\r\n\r\n  render() {\r\n    const { visible, matches, tabbed, focus, suggestionStyle } = this.state;\r\n    const {\r\n      fullWidth,\r\n      block,\r\n      style,\r\n      className,\r\n      listStyle,\r\n      listClassName,\r\n      textFieldStyle,\r\n      textFieldClassName,\r\n      inlineSuggestionStyle,\r\n      inlineSuggestionClassName,\r\n      menuId,\r\n      inline,\r\n      anchor,\r\n      belowAnchor,\r\n      position,\r\n      fixedTo,\r\n      listId,\r\n      listInline,\r\n      listZDepth,\r\n      listHeightRestricted,\r\n      xThreshold,\r\n      yThreshold,\r\n      closeOnOutsideClick,\r\n      transitionName,\r\n      transitionEnterTimeout,\r\n      transitionLeaveTimeout,\r\n      centered,\r\n      sameWidth,\r\n      repositionOnScroll,\r\n      repositionOnResize,\r\n      simplifiedMenu,\r\n      minLeft,\r\n      minRight,\r\n      minBottom,\r\n      fillViewportWidth,\r\n      fillViewportHeight,\r\n      /* eslint-disable no-unused-vars */\r\n      value: propValue,\r\n      total,\r\n      offset,\r\n      filter,\r\n      data,\r\n      dataLabel,\r\n      dataValue,\r\n      deleteKeys,\r\n      defaultValue,\r\n      clearOnAutocomplete,\r\n      autocompleteWithLabel,\r\n      findInlineSuggestion,\r\n      inlineSuggestionPadding,\r\n      onAutocomplete,\r\n      onMenuOpen,\r\n      onMenuClose,\r\n      onBlur,\r\n      onFocus,\r\n      onKeyDown,\r\n      onMouseDown,\r\n      onChange,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n    delete props.focusInputOnAutocomplete;\r\n\r\n    const value = getField(this.props, this.state, 'value');\r\n\r\n    const autocomplete = (\r\n      <TextField\r\n        {...props}\r\n        aria-autocomplete={inline ? 'inline' : 'list'}\r\n        style={textFieldStyle}\r\n        className={cn('md-autocomplete', textFieldClassName)}\r\n        key=\"autocomplete\"\r\n        ref={this._setField}\r\n        value={value}\r\n        onKeyDown={this._handleTextFieldKeyDown}\r\n        onMouseDown={this._toggleMenu}\r\n        onChange={this._handleChange}\r\n        onFocus={this._handleFocus}\r\n        onBlur={this._handleBlur}\r\n        fullWidth={fullWidth}\r\n        block={block}\r\n      />\r\n    );\r\n\r\n    if (inline) {\r\n      let suggestion;\r\n      if (focus && this.state.suggestion) {\r\n        suggestion = (\r\n          <span\r\n            key=\"suggestion\"\r\n            style={{ ...suggestionStyle, ...inlineSuggestionStyle }}\r\n            className={cn('md-autocomplete-suggestion', {\r\n              'md-autocomplete-suggestion--floating': props.label,\r\n              'md-autocomplete-suggestion--block': block,\r\n            }, inlineSuggestionClassName)}\r\n          >\r\n            {this.state.suggestion}\r\n          </span>\r\n        );\r\n      }\r\n\r\n      return (\r\n        <CSSTransitionGroup\r\n          component=\"div\"\r\n          style={style}\r\n          className={cn('md-menu-container md-autocomplete-container', className, {\r\n            'md-full-width': fullWidth || block,\r\n          })}\r\n          transitionName=\"opacity\"\r\n          transitionEnterTimeout={150}\r\n          transitionLeave={!tabbed}\r\n          transitionLeaveTimeout={150}\r\n          onTouchStart={this._handleTouchStart}\r\n        >\r\n          {autocomplete}\r\n          {suggestion}\r\n        </CSSTransitionGroup>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Menu\r\n        id={menuId || `${props.id}-menu`}\r\n        listId={listId}\r\n        ref={this._setMenu}\r\n        toggle={autocomplete}\r\n        visible={visible}\r\n        onClick={this._handleClick}\r\n        onClose={this._close}\r\n        onKeyDown={this._handleMenuKeyDown}\r\n        simplified={simplifiedMenu}\r\n        sameWidth={sameWidth}\r\n        centered={centered}\r\n        anchor={anchor}\r\n        belowAnchor={belowAnchor}\r\n        position={position}\r\n        fixedTo={fixedTo}\r\n        listInline={listInline}\r\n        listZDepth={listZDepth}\r\n        listHeightRestricted={listHeightRestricted}\r\n        xThreshold={xThreshold}\r\n        yThreshold={yThreshold}\r\n        closeOnOutsideClick={closeOnOutsideClick}\r\n        transitionName={transitionName}\r\n        transitionEnterTimeout={transitionEnterTimeout}\r\n        transitionLeaveTimeout={transitionLeaveTimeout}\r\n        fullWidth={fullWidth || block}\r\n        style={style}\r\n        className={cn('md-autocomplete-container', className)}\r\n        listStyle={listStyle}\r\n        listClassName={cn('md-autocomplete-list', listClassName)}\r\n        repositionOnScroll={repositionOnScroll}\r\n        repositionOnResize={repositionOnResize}\r\n        minLeft={minLeft}\r\n        minRight={minRight}\r\n        minBottom={minBottom}\r\n        fillViewportWidth={fillViewportWidth}\r\n        fillViewportHeight={fillViewportHeight}\r\n      >\r\n        {matches.map(this._mapToListItem)}\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n","/** @module utils/fuzzyFilter */\r\nimport React from 'react';\r\n\r\n/**\r\n * This function does a simple fuzzy search of some `needle` for every\r\n * item in a `haystack`. It will only include items that are:\r\n *  - not null or undefined\r\n *  - valid React Components\r\n *  - a number or string that contains each letter/number in order ignoring case\r\n *  - an object's `dataLabel` value that contains each letter/number in order ignoring case.\r\n *\r\n * Example:\r\n * ```js\r\n * const haystack = ['Apple', 'Banana', 'Orange'];\r\n * fuzzyFilter(haystack, 'An') // ['Banana', 'Orange'];\r\n * fuzzyFilter(haystack, 'ae') // ['Apple']\r\n * ```\r\n *\r\n * @param {Array.<string|number|Object|function>} haystack - the haystack to search\r\n * @param {string} needle - the filter text to use.\r\n * @param {string=} dataLabel - the data label to use if the element is an object.\r\n *\r\n * @return {Array.<string|number|Object|function>} a filtered list.\r\n */\r\nexport default function fuzzyFilter(haystack, needle, dataLabel) {\r\n  // Create an amazing regex that matches the letters in order\r\n  // and escapes any strings that could be part of a regex.\r\n  const reg = new RegExp(\r\n    `${needle}`.split('')\r\n      .join('\\\\w*')\r\n      .replace(/(\\(|\\||\\)|\\\\(?!w\\*)|\\[|\\|-|\\.|\\^|\\+|\\$|\\?|^(?!w)\\*)/g, '\\\\$1')\r\n      // Couldn't get the matching of two '*' working, so replace them here..\r\n      .replace(/\\*\\*/g, '*\\\\*'),\r\n    'i'\r\n  );\r\n\r\n  return haystack.filter(hay => {\r\n    if (hay === null || typeof hay === 'undefined') {\r\n      return false;\r\n    } else if (React.isValidElement(hay)) {\r\n      return true;\r\n    }\r\n\r\n    let value;\r\n    switch (typeof hay) {\r\n      case 'string':\r\n      case 'number':\r\n        value = hay.toString();\r\n        break;\r\n      default:\r\n        value = hay[dataLabel];\r\n    }\r\n\r\n    return value && value.match(reg);\r\n  });\r\n}\r\n","/** @module utils/caseInsensitiveFilter */\r\nimport React from 'react';\r\n\r\n/**\r\n * This function does a simple ignore case search of some `filterText` for every\r\n * item in a `haystack`. It will only include items that are:\r\n *  - not null or undefined\r\n *  - valid React Components\r\n *  - a number or string that contains each letter/number in exact order ignoring case\r\n *  - an object's `dataLabel` value that contains each letter/number in exact order ignoring case.\r\n *\r\n * Example:\r\n *\r\n * ```js\r\n * const haystack = ['Apple', 'Banana', 'Orange'];\r\n * caseInsensitiveFilter(haystack, 'An') // ['Banana', 'Orange'];\r\n * caseInsensitiveFilter(haystack, 'ae') // []\r\n * ```\r\n *\r\n * @param {Array.<string|number|Object|function>} haystack - the haystack to search\r\n * @param {string} filterText - the filter text to use.\r\n * @param {string=} dataLabel - the data label to use if the element is an object.\r\n *\r\n * @return {Array.<string|number|Object|function>} a filtered list.\r\n */\r\nexport default function caseInsensitiveFilter(haystack, filterText, dataLabel) {\r\n  const needle = filterText.toLowerCase();\r\n\r\n  return haystack.filter(hay => {\r\n    if (hay === null || typeof hay === 'undefined') {\r\n      return false;\r\n    } else if (React.isValidElement(hay)) {\r\n      return true;\r\n    }\r\n\r\n    let value;\r\n    switch (typeof hay) {\r\n      case 'string':\r\n      case 'number':\r\n        value = hay.toString();\r\n        break;\r\n      default:\r\n        value = hay[dataLabel];\r\n    }\r\n\r\n    return value && value.toLowerCase().indexOf(needle) !== -1;\r\n  });\r\n}\r\n","/** @module utils/findIgnoreCase */\r\nimport React from 'react';\r\n\r\n/**\r\n * This function finds the first item in a `haystack` that starts with every\r\n * letter of the `value` in order. It will ignore:\r\n *  - null or undefined\r\n *  - valid React components\r\n *\r\n * @param {Array.<string|number|Object|function>} haystack - the haystack to search.\r\n * @param {string} value - the current value to use.\r\n * @param {string=} dataLabel - the object key to use to extract the comparing value.\r\n *\r\n * @return {string} the found element or the empty string.\r\n */\r\nexport default function findIgnoreCase(haystack, value, dataLabel) {\r\n  const needle = value ? value.toLowerCase() : '';\r\n\r\n  if (!needle) { return needle; }\r\n\r\n  let suggestion = '';\r\n  haystack.some(hay => {\r\n    if (hay === null || typeof hay === 'undefined' || React.isValidElement(hay)) {\r\n      return false;\r\n    }\r\n\r\n    const hayStr = typeof hay === 'object' ? hay[dataLabel] : hay.toString();\r\n\r\n    if (hayStr.toLowerCase().indexOf(needle) === 0) {\r\n      suggestion = hayStr;\r\n    }\r\n\r\n    return suggestion;\r\n  });\r\n\r\n  return suggestion;\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport oneRequiredForA11yIf from '../utils/PropTypes/oneRequiredForA11yIf';\r\n\r\n/**\r\n * The avatar component is used to convert a `FontIcon`, an image, or\r\n * a letter into an avatar.\r\n *\r\n * Any other props given to the Avatar component such as event listeners\r\n * or styles will also be applied.\r\n */\r\nexport default class Avatar extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * An optional className to apply to the avatar.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to either the `<img>` or `<div>` surrounding the content. The `<img>` tag\r\n     * will be used with the `src` prop is defined.\r\n     */\r\n    contentStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to either the `<img>` or `<div>` surrounding the content. The `<img>` tag\r\n     * will be used with the `src` prop is defined.\r\n     */\r\n    contentClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional image source to use for the avatar.\r\n     */\r\n    src: oneRequiredForA11yIf(PropTypes.string, 'role', 'alt'),\r\n\r\n    /**\r\n     * An optional image alt to use for the avatar if it is\r\n     * an image.\r\n     */\r\n    alt: PropTypes.string,\r\n\r\n    /**\r\n     * An optional `FontIcon` to convert into an avatar.\r\n     */\r\n    icon: PropTypes.node,\r\n\r\n    /**\r\n     * An optional letter to display in the avatar.\r\n     */\r\n    children: PropTypes.node,\r\n\r\n    /**\r\n     * A boolean if a random color should be applied to the avatar.\r\n     * This will be one of the `suffixes`.\r\n     */\r\n    random: PropTypes.bool,\r\n\r\n    /**\r\n     * A list of available suffixes to use when generating a random\r\n     * color for the avatar.\r\n     */\r\n    suffixes: PropTypes.arrayOf(PropTypes.string),\r\n\r\n    /**\r\n     * The suffix to use for a color. This can be any value but\r\n     * *should* be one of the available `suffixes`.\r\n     */\r\n    suffix: PropTypes.string,\r\n\r\n    /**\r\n     * Boolean if the `Avatar` should be sized to a `FontIcon` size. This\r\n     * will just set the width and height to the `$md-font-icon-size`.\r\n     */\r\n    iconSized: PropTypes.bool,\r\n\r\n    /**\r\n     * A role for the avatar's image. When the `src` prop is set, either a `role` of `presentation`\r\n     * or the `alt` prop must be defined for a11y.\r\n     */\r\n    role: PropTypes.oneOf(['presentation']),\r\n  };\r\n\r\n  static defaultProps = {\r\n    suffixes: [\r\n      'red',\r\n      'pink',\r\n      'purple',\r\n      'deep-purple',\r\n      'indigo',\r\n      'blue',\r\n      'light-blue',\r\n      'cyan',\r\n      'teal',\r\n      'green',\r\n      'light-green',\r\n      'lime',\r\n      'yellow',\r\n      'amber',\r\n      'orange',\r\n      'deep-orange',\r\n      'brown',\r\n      'grey',\r\n      'blue-grey',\r\n    ],\r\n  };\r\n\r\n  state = { color: null };\r\n\r\n  componentWillMount() {\r\n    if (this.props.random) {\r\n      this._setRandomColor();\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.random && (this.props.src !== nextProps.src || this.props.icon !== nextProps.icon)) {\r\n      this._setRandomColor();\r\n    } else if (this.props.random && !nextProps.random) {\r\n      this.setState({ color: null });\r\n    }\r\n  }\r\n\r\n  _setRandomColor = () => {\r\n    const { suffixes } = this.props;\r\n\r\n    const i = (Math.floor(Math.random() * (suffixes.length - 1)) + 1);\r\n    this.setState({ color: suffixes[i] });\r\n  };\r\n\r\n  _getColor(suffix, suffixes, color) {\r\n    if (suffix) {\r\n      return `md-avatar--${suffix}`;\r\n    } else if (!!suffixes && !color) {\r\n      return 'md-avatar--default';\r\n    }\r\n\r\n    return `md-avatar--${color}`;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      className,\r\n      contentStyle,\r\n      contentClassName,\r\n      src,\r\n      alt,\r\n      icon,\r\n      children,\r\n      suffix,\r\n      suffixes,\r\n      iconSized,\r\n      role,\r\n      random, // eslint-disable-line no-unused-vars\r\n      ...props\r\n    } = this.props;\r\n\r\n    let content;\r\n    if (src) {\r\n      content = (\r\n        <img\r\n          src={src}\r\n          alt={alt}\r\n          role={role}\r\n          style={contentStyle}\r\n          className={cn('md-avatar-img', contentClassName)}\r\n        />\r\n      );\r\n    } else {\r\n      content = (\r\n        <div\r\n          style={contentStyle}\r\n          className={cn('md-avatar-content', contentClassName)}\r\n        >\r\n          {icon || children}\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div\r\n        {...props}\r\n        className={cn('md-inline-block md-avatar', this._getColor(suffix, suffixes, this.state.color), {\r\n          'md-avatar--icon-sized': iconSized,\r\n        }, className)}\r\n      >\r\n        {content}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent, Children, cloneElement, isValidElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\r\n\r\nimport themeColors from '../utils/themeColors';\r\n\r\n/**\r\n * The main use case of the `Badge` component is for notifications. It can\r\n * however also place any content floating to whatever children are supplied.\r\n */\r\nexport default class Badge extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * An optional style to apply to the badge's container.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the badge's container.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the badge.\r\n     */\r\n    badgeStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the badge.\r\n     */\r\n    badgeClassName: PropTypes.string,\r\n\r\n    /**\r\n     * The id to give the badge's content. This is required to help with the\r\n     * `aria-describedby` attribute that should be applied to one of the children.\r\n     *\r\n     * If there is only one child that is a valid React element, the `aria-describedby`\r\n     * will automatically be cloned into that child (so make sure your component passes\r\n     * that prop correctly).\r\n     *\r\n     * If there is only one child, but it is a string or number, the badge's container\r\n     * will be updated to include the `aria-describedby`.\r\n     *\r\n     * If there is more than child, you are required to add it to a child yourself.\r\n     */\r\n    badgeId: isRequiredForA11y(PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ])),\r\n\r\n    /**\r\n     * The content to display with the badge's content. The size of this\r\n     * element is determinate of the location of the content. You might have\r\n     * to update the positioning yourself.\r\n     */\r\n    children: PropTypes.node.isRequired,\r\n\r\n    /**\r\n     * The component to render the badge as.\r\n     */\r\n    component: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.func,\r\n    ]).isRequired,\r\n\r\n    /**\r\n     * The content to display in the badge. If the content is a number or a number string,\r\n     * the number will be normalized if `normalizeContent` is enabled.\r\n     */\r\n    badgeContent: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n      PropTypes.node,\r\n    ]).isRequired,\r\n\r\n    /**\r\n     * This will basically update the display value of the content to only be 2 digits. If\r\n     * a number is greater than 99, 99+ will be displayed instead. This is really just to\r\n     * keep the count inside the circular bubble.\r\n     */\r\n    max: PropTypes.number,\r\n\r\n    /**\r\n     * Boolean if the primary color background should get applied to the badge's content.\r\n     */\r\n    primary: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the secondary color background should get applied to the badge's content.\r\n     */\r\n    secondary: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the default styles should be applied.\r\n     */\r\n    default: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the badge's content should appear in a circular container. If this is\r\n     * undefined, the content will be in a circular container if the badgeContent is a number.\r\n     */\r\n    circular: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the badge's notification should be invisible when the count is 0.\r\n     */\r\n    invisibleOnZero: PropTypes.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    max: 99,\r\n    component: 'div',\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const single = this._isSingleChild(props);\r\n    this.state = {\r\n      single,\r\n      element: single && isValidElement(props.children),\r\n      count: this._normalizeCount(props),\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { badgeContent, max, children } = this.props;\r\n    let nextState;\r\n    if (badgeContent !== nextProps.badgeContent || max !== nextProps.max) {\r\n      nextState = { count: this._normalizeCount(nextProps) };\r\n    }\r\n\r\n    if (children !== nextProps.children) {\r\n      nextState = nextState || {};\r\n      nextState.single = this._isSingleChild(nextProps);\r\n      nextState.element = nextState.single && isValidElement(nextProps.children);\r\n    }\r\n\r\n    if (nextState) {\r\n      this.setState(nextState);\r\n    }\r\n  }\r\n\r\n  _isSingleChild({ children }) {\r\n    return Children.count(children) === 1;\r\n  }\r\n\r\n  _normalizeCount({ badgeContent, max }) {\r\n    let count;\r\n    if (max) {\r\n      const n = parseInt(badgeContent, 10);\r\n      if (!Number.isNaN(n) && n.toString() === badgeContent.toString()) {\r\n        count = n > max ? `${max}+` : n;\r\n      }\r\n    }\r\n\r\n    return count;\r\n  }\r\n\r\n  render() {\r\n    const { count, single, element } = this.state;\r\n    const {\r\n      className,\r\n      badgeStyle,\r\n      badgeClassName,\r\n      badgeContent,\r\n      component: Component,\r\n      children,\r\n      primary,\r\n      secondary,\r\n      default: defaultTheme,\r\n      circular,\r\n      badgeId,\r\n      invisibleOnZero,\r\n      max, // eslint-disable-line no-unused-vars\r\n      ...props\r\n    } = this.props;\r\n\r\n    const useCircular = typeof circular !== 'undefined' ? circular : typeof count !== 'undefined';\r\n    let content = children;\r\n    if (single && element) {\r\n      const c = Children.only(content);\r\n      if (!c.props['aria-describedby']) {\r\n        content = cloneElement(c, { 'aria-describedby': badgeId });\r\n      }\r\n    } else if (single && !element && !props['aria-describedby']) {\r\n      props['aria-describedby'] = badgeId;\r\n    }\r\n\r\n    const badge = (\r\n      <span\r\n        id={badgeId}\r\n        key=\"badge\"\r\n        role=\"status\"\r\n        style={badgeStyle}\r\n        className={cn('md-badge', {\r\n          'md-badge--circular': useCircular,\r\n          'md-badge--default': defaultTheme,\r\n        }, themeColors({\r\n          primary,\r\n          secondary,\r\n          text: useCircular,\r\n          themeText: !primary && !secondary,\r\n        }, badgeClassName))}\r\n      >\r\n        {count || badgeContent}\r\n      </span>\r\n    );\r\n\r\n    return (\r\n      <Component\r\n        {...props}\r\n        className={cn('md-badge-container md-inline-block', className)}\r\n      >\r\n        {content}\r\n        {invisibleOnZero && count === 0 ? null : badge}\r\n      </Component>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  createPortal,\r\n  unmountComponentAtNode as unmount,\r\n  unstable_renderSubtreeIntoContainer as render,\r\n} from 'react-dom';\r\n\r\nconst isReact16 = typeof createPortal === 'function';\r\n\r\n/**\r\n * Creates a \"Portal\" for the children to be rendered in. Basically it will render the\r\n * children only when the `visible` prop is `true`. When it is visible, a new `component`\r\n * will be rendered as the first child in the body with the children inside.\r\n *\r\n * Unlike all the other components, `style` will not be applied for the `Portal`.\r\n */\r\nexport default class Portal extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * An optional className to apply to the newly created `component` when visible.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * Boolean if the children are visible.\r\n     */\r\n    visible: PropTypes.bool.isRequired,\r\n\r\n    /**\r\n     * The children to render when visible.\r\n     */\r\n    children: PropTypes.element,\r\n\r\n    /**\r\n     * The component to render as. This should be a valid DOM element.\r\n     */\r\n    component: PropTypes.string.isRequired,\r\n\r\n    /**\r\n     * An optional function to call when the portal is opened.\r\n     */\r\n    onOpen: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the portal is closed\r\n     */\r\n    onClose: PropTypes.func,\r\n\r\n    /**\r\n     * An optional DOM Node to render the portal into. The default is to render as\r\n     * the first child in the `body`.\r\n     */\r\n    renderNode: PropTypes.object,\r\n\r\n    /**\r\n     * Boolean if the portal should render the children as the last child of the `renderNode`\r\n     * or `body` instead of the first.\r\n     */\r\n    lastChild: PropTypes.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    component: 'span',\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.visible) {\r\n      this._renderPortal(this.props);\r\n\r\n      if (isReact16) {\r\n        // Need to update after the renderPortal created the DOM element.\r\n        this.forceUpdate();\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { visible, onOpen } = nextProps;\r\n    if (this.props.visible === visible) {\r\n      if (visible && !isReact16) {\r\n        // Need to just re-render the subtree\r\n        this._renderPortal(nextProps);\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    if (visible) {\r\n      if (onOpen) {\r\n        onOpen();\r\n      }\r\n\r\n      this._renderPortal(nextProps);\r\n    } else {\r\n      this._removePortal();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.props.visible && this.props.onClose) {\r\n      this.props.onClose();\r\n    }\r\n    this._removePortal();\r\n  }\r\n\r\n  _container = null;\r\n  _portal = null;\r\n\r\n  _applyStyles = (props) => {\r\n    if (props.className) {\r\n      this._container.className = props.className;\r\n    }\r\n  };\r\n\r\n  _renderPortal = (props) => {\r\n    if (!this._container) {\r\n      this._container = document.createElement(props.component);\r\n\r\n      this._applyStyles(props);\r\n      const node = (props.renderNode || document.body);\r\n      if (props.lastChild) {\r\n        node.appendChild(this._container);\r\n      } else {\r\n        node.insertBefore(this._container, node.firstChild);\r\n      }\r\n    } else {\r\n      this._applyStyles(props);\r\n    }\r\n\r\n    if (!isReact16) {\r\n      this._portal = render(this, props.children, this._container);\r\n    }\r\n  };\r\n\r\n  _removePortal = () => {\r\n    if (this.props.onClose) {\r\n      this.props.onClose();\r\n    }\r\n\r\n    if (this._container) {\r\n      if (!isReact16) {\r\n        unmount(this._container);\r\n      }\r\n\r\n      (this.props.renderNode || document.body).removeChild(this._container);\r\n    }\r\n\r\n    this._portal = null;\r\n    this._container = null;\r\n  };\r\n\r\n  render() {\r\n    const { component: Component, className, children, visible } = this.props;\r\n\r\n    // When doing server side rendering, actually render the component as a direct child of its parent.\r\n    // Once it has been rendered and working client side, it will be removed correctly.\r\n    if (typeof window === 'undefined' && visible) {\r\n      return <Component className={className}>{children}</Component>;\r\n    } else if (isReact16 && visible && this._container && typeof window !== 'undefined') {\r\n      return createPortal(children, this._container);\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n","/** @module utils/NumberUtils/isBetween */\r\n\r\n/**\r\n * Checks if a number is between a min and maximum (inclusive)\r\n *\r\n * @param {Number} num the number to check\r\n * @param {Number} min the minimum\r\n * @param {Number} max the maximum\r\n * @return {Boolean} true if the number is between the min and max (inclusive)\r\n */\r\nexport default function isBetween(num, min, max) {\r\n  return num >= min && num <= max;\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport between from '../utils/PropTypes/between';\r\n\r\n/**\r\n * The `Paper` component is a simple wrapper that adds box-shadow.\r\n *\r\n * You can also use the SCSS mixin instead of paper.\r\n *\r\n * ```scss\r\n * @include md-box-shadow(5);\r\n * ```\r\n */\r\nexport default class Paper extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * The component to render the paper as.\r\n     */\r\n    component: PropTypes.oneOfType([\r\n      PropTypes.func,\r\n      PropTypes.string,\r\n    ]).isRequired,\r\n\r\n    /**\r\n     * An optional className to apply.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * The depth of the paper. This should be a number between 0 - 5. If\r\n     * the depth is 0, it will raise to a depth of 3 on hover.\r\n     */\r\n    zDepth: between(PropTypes.number.isRequired, 0, 5),\r\n\r\n    /**\r\n     * Any children to display in the paper.\r\n     */\r\n    children: PropTypes.node,\r\n\r\n    /**\r\n     * Boolean if the paper should raise to the `zDepth` of `3` on hover when the initial\r\n     * `zDepth` is `0`.\r\n     */\r\n    raiseOnHover: PropTypes.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    zDepth: 1,\r\n    component: 'div',\r\n  };\r\n\r\n  render() {\r\n    const { component: Component, zDepth, className, raiseOnHover, ...props } = this.props;\r\n\r\n    return (\r\n      <Component\r\n        {...props}\r\n        className={cn(`md-paper md-paper--${zDepth}`, {\r\n          'md-paper--0-hover': zDepth === 0 && raiseOnHover,\r\n        }, className)}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent, Children, isValidElement, cloneElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport themeColors from '../utils/themeColors';\r\nimport AccessibleFakeInkedButton from '../Helpers/AccessibleFakeInkedButton';\r\nimport Collapse from '../Helpers/Collapse';\r\nimport FontIcon from '../FontIcons';\r\n\r\n/**\r\n * The `BottomNav` component is used for rendering the navigation tab/link in the `BottomNavigation`\r\n * component.\r\n */\r\nexport default class BottomNav extends PureComponent {\r\n  static propTypes = {\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    component: PropTypes.oneOfType([\r\n      PropTypes.func,\r\n      PropTypes.string,\r\n    ]),\r\n    active: PropTypes.bool,\r\n    fixed: PropTypes.bool,\r\n    children: PropTypes.node,\r\n    index: PropTypes.number.isRequired,\r\n    label: PropTypes.node.isRequired,\r\n    colored: PropTypes.bool,\r\n    iconChildren: PropTypes.node,\r\n    iconClassName: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n    onNavChange: PropTypes.func,\r\n    role: PropTypes.string,\r\n    animate: PropTypes.bool,\r\n    icon: PropTypes.element,\r\n  };\r\n\r\n  static defaultProps = {\r\n    component: 'a',\r\n    role: null,\r\n  };\r\n\r\n  _handleClick = (e) => {\r\n    const { onClick, onNavChange, index } = this.props;\r\n    if (onClick) {\r\n      onClick(index, e);\r\n    }\r\n\r\n    if (onNavChange) {\r\n      onNavChange(index, e);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      active,\r\n      fixed,\r\n      className,\r\n      colored,\r\n      animate,\r\n\r\n      // deprecated\r\n      iconClassName,\r\n      iconChildren,\r\n      /* eslint-disable no-unused-vars */\r\n      index,\r\n      icon: propIcon,\r\n      label: propLabel,\r\n      onClick,\r\n      onNavChange,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n\r\n    let { label, icon } = this.props;\r\n    const labelClassName = cn('md-bottom-nav-label', { 'md-bottom-nav-label--shifting-inactive': !active && !fixed });\r\n    if (Children.count(label) === 1 && isValidElement(label)) {\r\n      const labelEl = Children.only(label);\r\n      label = cloneElement(label, {\r\n        className: cn(labelClassName, labelEl.props.className),\r\n      });\r\n    } else {\r\n      label = <div className={labelClassName}>{label}</div>;\r\n    }\r\n\r\n    if (!icon && (iconClassName || iconChildren)) {\r\n      // Deprecated\r\n      icon = <FontIcon iconClassName={iconClassName} inherit>{iconChildren}</FontIcon>;\r\n    } else if (icon) {\r\n      icon = React.cloneElement(icon, { inherit: true });\r\n    }\r\n\r\n    return (\r\n      <AccessibleFakeInkedButton\r\n        {...props}\r\n        onClick={this._handleClick}\r\n        className={cn('md-bottom-nav', {\r\n          'md-bottom-nav--active': active,\r\n          'md-bottom-nav--fixed': fixed,\r\n          'md-bottom-nav--shifting': !fixed,\r\n          'md-bottom-nav--shifting-active': !fixed && active,\r\n          'md-bottom-nav--shifting-inactive': !fixed && !active,\r\n        }, themeColors({ primary: !colored && active, text: !active && !colored }, className))}\r\n      >\r\n        {icon}\r\n        <Collapse collapsed={!fixed && !active} animate={animate}>\r\n          {label}\r\n        </Collapse>\r\n      </AccessibleFakeInkedButton>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport deprecated from 'react-prop-types/lib/deprecated';\r\n\r\nimport getField from '../utils/getField';\r\nimport controlled from '../utils/PropTypes/controlled';\r\nimport { addTouchEvent, removeTouchEvent } from '../utils/EventUtils/touches';\r\nimport Portal from '../Helpers/Portal';\r\nimport Paper from '../Papers/Paper';\r\nimport BottomNav from './BottomNav';\r\n\r\n/**\r\n * The `BottomNavigation` component is an alternative to the `NavigationDrawer` for handling navigation\r\n * only on mobile devices.\r\n */\r\nexport default class BottomNavigation extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * An optional style to apply.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * A list of objects to generate a bottom navigation link. There must be at least 3 and no more\r\n     * than 5 links. A link gets rendered as the `AccessibleFakeButton` component, so any additional\r\n     * props in the link's shape will be passed along.\r\n     *\r\n     * ```docgen\r\n     * PropTypes.arrayOf(PropTypes.shape({\r\n     *   label: PropTypes.node.isRequired,\r\n     *   icon: PropTypes.element,\r\n     *   component: PropTypes.oneOfType([\r\n     *      PropTypes.func,\r\n     *      PropTypes.string,\r\n     *   ]),\r\n     * }).isRequired\r\n     * ```\r\n     */\r\n    links: (props, propName, component, ...args) => {\r\n      const links = props[propName] || props.actions;\r\n      const len = links.length;\r\n\r\n      if (len < 3) {\r\n        return new Error(\r\n          `Only ${len} \\`${propName}\\` were given to the ${component}. At least 3 are required.`\r\n        );\r\n      } else if (len > 5) {\r\n        return new Error(\r\n          `${len} \\`${propName}\\` were given to the ${component}. No more than 5 may be given.`\r\n        );\r\n      }\r\n\r\n      return PropTypes.arrayOf(PropTypes.shape({\r\n        label: PropTypes.node.isRequired,\r\n        icon: PropTypes.element,\r\n        iconChildren: deprecated(PropTypes.node, 'Use `icon` instead'),\r\n        iconClassName: deprecated(PropTypes.string, 'Use `icon` instead'),\r\n        component: PropTypes.oneOfType([\r\n          PropTypes.func,\r\n          PropTypes.string,\r\n        ]),\r\n      })).isRequired(props, propName, component, ...args);\r\n    },\r\n\r\n    /**\r\n     * Boolean if the bottom navigation should be colored with the primary color or whatever color\r\n     * was a result of the `react-md-theme-bottom-navigations-colored` mixin.\r\n     */\r\n    colored: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the bottom navigation should dynamically appear based on scrolling. When the user\r\n     * scrolls the `dynamicThreshold` amount, this component will either disappear (scrolling down)\r\n     * or appear (scrolling up).\r\n     */\r\n    dynamic: PropTypes.bool,\r\n\r\n    /**\r\n     * The distance a user must scroll before the bottom navigation appears or disappears when it is `dynamic`.\r\n     */\r\n    dynamicThreshold: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * An optional function to call when a link has been clicked. The callback will\r\n     * include the new active index and the click event.\r\n     *\r\n     * ```js\r\n     * onNavChange(newActiveIndex, event);\r\n     * ```\r\n     */\r\n    onNavChange: PropTypes.func,\r\n\r\n    /**\r\n     * An optional active index to use. This will make the component controlled and require the\r\n     * `onNavChange` prop to be defined.\r\n     */\r\n    activeIndex: controlled(PropTypes.number, 'onNavChange', 'defaultActiveIndex'),\r\n\r\n    /**\r\n     * The index for the link that is active by default.\r\n     */\r\n    defaultActiveIndex: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * Boolean if the bottom navigation is visible by default. This *should* probably always\r\n     * be true.\r\n     */\r\n    defaultVisible: PropTypes.bool.isRequired,\r\n\r\n    /**\r\n     * The component to render the bottom navigation as.\r\n     */\r\n    component: PropTypes.oneOfType([\r\n      PropTypes.func,\r\n      PropTypes.string,\r\n    ]).isRequired,\r\n\r\n    /**\r\n     * Boolean if the Portal's functionality of rendering in a separate react tree should be applied\r\n     * to the bottom navigation.\r\n     *\r\n     * @see {@link Helpers/Portal}\r\n     */\r\n    portal: PropTypes.bool,\r\n\r\n    /**\r\n     * Since the `BottomNavigation` component uses the `Portal` component, you can pass an optional\r\n     * HTML Node to render in.\r\n     */\r\n    renderNode: PropTypes.object,\r\n\r\n    /**\r\n     * Boolean if the bottom navigation should render as the last child in the `renderNode` or `body`\r\n     * instead of as the first.\r\n     */\r\n    lastChild: PropTypes.bool,\r\n\r\n    /**\r\n     * The transition duration for the dynamic bottom navigation to appear or disappear. This should\r\n     * match the `$md-bottom-navigation-transition-time` variable.\r\n     */\r\n    transitionDuration: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * An optional function to call when the visibility of the bottom navigation changes. The callback\r\n     * will include the new visibility.\r\n     *\r\n     * ```js\r\n     * onVisibilityChange(!visible);\r\n     * ```\r\n     */\r\n    onVisibilityChange: PropTypes.func,\r\n\r\n    /**\r\n     * Boolean if the label on a shifting navigation should animate in and out.\r\n     */\r\n    animate: PropTypes.bool,\r\n\r\n    onChange: deprecated(PropTypes.func, 'Use `onNavChange` instead'),\r\n    initiallyVisible: deprecated(PropTypes.bool, 'Use `defaultVisible` instead'),\r\n    initialActiveIndex: deprecated(PropTypes.number, 'Use `defaultActiveIndex` instead'),\r\n    containerStyle: deprecated(PropTypes.object, 'Use `style` instead'),\r\n    containerClassName: deprecated(PropTypes.string, 'Use `className` instead'),\r\n    transitionName: deprecated(PropTypes.string, 'There is no CSSTransitionGroup used anymore'),\r\n    transitionEnterTimeout: deprecated(PropTypes.number, 'Use `transitionDuration` instead'),\r\n    transitionLeaveTimeout: deprecated(PropTypes.number, 'Use `transitionDuration` instead'),\r\n    actions: deprecated(PropTypes.array, 'Use `links` instead'),\r\n  };\r\n\r\n  static defaultProps = {\r\n    animate: true,\r\n    defaultActiveIndex: 0,\r\n    component: 'footer',\r\n    defaultVisible: true,\r\n    transitionDuration: 300,\r\n    portal: false,\r\n    dynamicThreshold: 5,\r\n  };\r\n\r\n  static contextTypes = {\r\n    renderNode: PropTypes.object,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const visible = typeof props.initiallyVisible === 'boolean' ? props.initiallyVisible : props.defaultVisible;\r\n    this.state = {\r\n      visible,\r\n      portalVisible: visible,\r\n    };\r\n\r\n    if (typeof props.activeIndex === 'undefined') {\r\n      this.state.activeIndex = props.defaultActiveIndex;\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.dynamic) {\r\n      this._addTouchEvents();\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { dynamic } = nextProps;\r\n    if (this.props.dynamic === dynamic) {\r\n      return;\r\n    }\r\n\r\n    if (dynamic) {\r\n      this._addTouchEvents();\r\n    } else {\r\n      this._removeTouchEvents();\r\n    }\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    if (this.state.visible !== nextState.visible && nextProps.onVisibilityChange) {\r\n      nextProps.onVisibilityChange(nextState.visible);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.props.dynamic) {\r\n      this._removeTouchEvents();\r\n    }\r\n\r\n    if (this._timeout) {\r\n      clearTimeout(this._timeout);\r\n    }\r\n  }\r\n\r\n  _addTouchEvents = () => {\r\n    addTouchEvent(window, 'start', this._handleTouchStart);\r\n    addTouchEvent(window, 'move', this._handleTouchMove);\r\n    addTouchEvent(window, 'end', this._handleTouchEnd);\r\n  };\r\n\r\n  _removeTouchEvents = () => {\r\n    removeTouchEvent(window, 'start', this._handleTouchStart);\r\n    removeTouchEvent(window, 'move', this._handleTouchMove);\r\n    removeTouchEvent(window, 'end', this._handleTouchEnd);\r\n  };\r\n\r\n  _animateIn = () => {\r\n    if (this._timeout) {\r\n      clearTimeout(this._timeout);\r\n    }\r\n\r\n    this._timeout = setTimeout(() => {\r\n      this._timeout = null;\r\n      this.setState({ visible: true });\r\n    }, 17);\r\n\r\n    this.setState({ portalVisible: true });\r\n  };\r\n\r\n  _animateOut = () => {\r\n    if (this._timeout) {\r\n      clearTimeout(this._timeout);\r\n    }\r\n\r\n    this._timeout = setTimeout(() => {\r\n      this._timeout = null;\r\n      this.setState({ portalVisible: false });\r\n    }, this.props.transitionDuration);\r\n\r\n    this.setState({ visible: false });\r\n  };\r\n\r\n  _handleTouchStart = (e) => {\r\n    const { pageY } = e.changedTouches[0];\r\n\r\n    this._pageY = pageY;\r\n    this._scrolling = true;\r\n  };\r\n\r\n  _handleTouchMove = (e) => {\r\n    const { visible } = this.state;\r\n    if (!this._scrolling) {\r\n      return;\r\n    }\r\n\r\n    const touchY = e.changedTouches[0].pageY;\r\n    const { dynamicThreshold } = this.props;\r\n    const passedThreshold = Math.abs(this._pageY - touchY) >= dynamicThreshold;\r\n    if (this._pageY > touchY && visible && passedThreshold) {\r\n      this._pageY = touchY;\r\n      this._animateOut();\r\n    } else if (this._pageY < touchY && !visible && passedThreshold) {\r\n      this._pageY = touchY;\r\n      this._animateIn();\r\n    }\r\n  };\r\n\r\n  _handleTouchEnd = () => {\r\n    this._scrolling = false;\r\n  };\r\n\r\n  _handleNavChange = (index, e) => {\r\n    if (this.props.onNavChange || this.props.onChange) {\r\n      (this.props.onNavChange || this.props.onChange)(index, e);\r\n    }\r\n\r\n    if (typeof this.props.activeIndex === 'undefined') {\r\n      this.setState({ activeIndex: index });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { visible, portalVisible } = this.state;\r\n    const {\r\n      className,\r\n      actions,\r\n      colored,\r\n      dynamic,\r\n      lastChild,\r\n      animate,\r\n      portal,\r\n      /* eslint-disable no-unused-vars */\r\n      links: propLinks,\r\n      activeIndex: propActiveIndex,\r\n      renderNode: propRenderNode,\r\n      onNavChange,\r\n      onVisibilityChange,\r\n      defaultVisible,\r\n      defaultActiveIndex,\r\n      dynamicThreshold,\r\n      transitionDuration,\r\n\r\n      // deprecated\r\n      onChange,\r\n      initiallyVisible,\r\n      containerStyle,\r\n      containerClassName,\r\n      transitionName,\r\n      transitionEnterTimeout,\r\n      transitionLeaveTimeout,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n\r\n    let { links } = this.props;\r\n    if (actions) {\r\n      links = actions;\r\n    }\r\n\r\n    const fixed = links.length === 3;\r\n    const activeIndex = getField(this.props, this.state, 'activeIndex');\r\n    const renderNode = getField(this.props, this.context, 'renderNode');\r\n    const navigation = (\r\n      <Paper\r\n        {...props}\r\n        key=\"navigation\"\r\n        className={cn('md-bottom-navigation', {\r\n          'md-background--card': !colored,\r\n          'md-background--primary': colored,\r\n          'md-bottom-navigation--dynamic': dynamic,\r\n          'md-bottom-navigation--dynamic-inactive': dynamic && !visible,\r\n        }, className)}\r\n        role=\"navigation\"\r\n      >\r\n        {links.map((action, index) => (\r\n          <BottomNav\r\n            {...action}\r\n            animate={animate}\r\n            key={action.key || index}\r\n            index={index}\r\n            onNavChange={this._handleNavChange}\r\n            active={activeIndex === index}\r\n            colored={colored}\r\n            fixed={fixed}\r\n          />\r\n        ))}\r\n      </Paper>\r\n    );\r\n\r\n    if (!portal) {\r\n      return portalVisible ? navigation : null;\r\n    }\r\n\r\n    return (\r\n      <Portal renderNode={renderNode} visible={portalVisible} lastChild={lastChild}>\r\n        {navigation}\r\n      </Portal>\r\n    );\r\n  }\r\n}\r\n","import cn from 'classnames';\r\nimport themeColors from '../utils/themeColors';\r\n\r\n/**\r\n * Since it can be helpful to apply button styles on other components, this is a utlity function\r\n * to apply those styles based on props.\r\n */\r\nexport default function getBtnStyles({\r\n  flat,\r\n  raised,\r\n  icon,\r\n  floating,\r\n  disabled,\r\n  primary,\r\n  secondary,\r\n  hover,\r\n  swapTheming,\r\n  pressed,\r\n  mini,\r\n  fixed,\r\n  fixedPosition,\r\n}, ...classNames) {\r\n  const flatStyles = flat || icon;\r\n  const raisedStyles = raised || floating;\r\n  const textTheming = (flatStyles && !swapTheming) || (raisedStyles && swapTheming);\r\n  const backgroundTheming = ((!disabled && raisedStyles && !swapTheming)\r\n    || (flatStyles && swapTheming))\r\n    && (primary || secondary);\r\n\r\n  return cn('md-btn', {\r\n    'md-btn--flat': flat || (disabled && raised),\r\n    'md-btn--raised': !disabled && raised,\r\n    'md-btn--icon': icon || floating,\r\n    'md-btn--floating': floating,\r\n    'md-btn--text': flat || raised,\r\n    'md-btn--hover': !disabled && hover,\r\n    'md-btn--raised-disabled': disabled && raised,\r\n    'md-btn--raised-pressed': !disabled && raisedStyles && pressed,\r\n    'md-btn--fixed': fixed,\r\n    [`md-btn--fixed-${fixedPosition}`]: floating && fixed,\r\n    'md-btn--floating-mini': floating && mini,\r\n    'md-btn--color-primary-active': !disabled && primary && hover && textTheming,\r\n    'md-btn--color-secondary-active': !disabled && secondary && hover && textTheming,\r\n    'md-pointer--hover': !disabled,\r\n    'md-paper md-paper--2': !disabled && floating,\r\n    'md-paper--4': !disabled && floating && pressed,\r\n  }, themeColors({\r\n    text: !icon && !floating && !backgroundTheming,\r\n    themeText: !backgroundTheming,\r\n    disabled,\r\n    primary,\r\n    secondary,\r\n    hover: true,\r\n    ink: true,\r\n  }), ...classNames);\r\n}\r\n","import React, { PureComponent, cloneElement, isValidElement, Children } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\n/**\r\n * The `IconSeparator` component is a simple helper component to render some text and\r\n * an icon with some space between them while centering the text. The icon can either\r\n * come before or after the text.\r\n */\r\nexport default class IconSeparator extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * An optional style to apply.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the label.\r\n     */\r\n    labelStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the label.\r\n     */\r\n    labelClassName: PropTypes.string,\r\n\r\n    /**\r\n     * The label to display.\r\n     */\r\n    label: PropTypes.node.isRequired,\r\n\r\n    /**\r\n     * The icon to display.\r\n     */\r\n    children: PropTypes.node.isRequired,\r\n\r\n    /**\r\n     * Boolean if the icon should appear before or after the text\r\n     */\r\n    iconBefore: PropTypes.bool,\r\n\r\n    /**\r\n     * The component to be rendered as.\r\n     */\r\n    component: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.func,\r\n    ]).isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    component: 'div',\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      className,\r\n      labelStyle,\r\n      labelClassName,\r\n      component,\r\n      label,\r\n      iconBefore,\r\n      children,\r\n      ...props\r\n    } = this.props;\r\n\r\n    let text;\r\n    if (isValidElement(label)) {\r\n      const labelProps = Children.only(label).props;\r\n      text = cloneElement(label, {\r\n        className: cn('md-icon-text', labelClassName, labelProps.className),\r\n        style: { ...labelStyle, ...labelProps.style },\r\n      });\r\n    } else {\r\n      text = <span style={labelStyle} className={cn('md-icon-text', labelClassName)}>{label}</span>;\r\n    }\r\n\r\n    const Component = component;\r\n\r\n    return (\r\n      <Component {...props} className={cn('md-icon-separator', className)}>\r\n        {iconBefore && children}\r\n        {text}\r\n        {!iconBefore && children}\r\n      </Component>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport TICK from '../constants/CSSTransitionGroupTick';\r\n\r\nexport default class Tooltip extends PureComponent {\r\n  static propTypes = {\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    position: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\r\n    children: PropTypes.node.isRequired,\r\n    enterTimeout: PropTypes.number,\r\n    leaveTimeout: PropTypes.number,\r\n  };\r\n\r\n  static defaultProps = {\r\n    position: 'bottom',\r\n    enterTimeout: 150,\r\n    leaveTimeout: 150,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      entering: false,\r\n      leaving: false,\r\n      active: false,\r\n      visible: false,\r\n    };\r\n\r\n    this._timeout = null;\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this._timeout) {\r\n      clearTimeout(this._timeout);\r\n    }\r\n  }\r\n\r\n  componentWillEnter(cb) {\r\n    this._timeout = setTimeout(() => {\r\n      this._timeout = setTimeout(() => {\r\n        this._timeout = null;\r\n\r\n        cb();\r\n      }, this.props.enterTimeout);\r\n      this.setState({ active: true });\r\n    }, TICK);\r\n\r\n    this.setState({ entering: true });\r\n  }\r\n\r\n  componentDidEnter() {\r\n    this.setState({ entering: false, active: false, visible: true });\r\n  }\r\n\r\n  componentWillLeave(cb) {\r\n    if (this._timeout) {\r\n      clearTimeout(this._timeout);\r\n    }\r\n\r\n    this._timeout = setTimeout(() => {\r\n      this._timeout = setTimeout(() => {\r\n        this._timeout = null;\r\n\r\n        cb();\r\n      }, this.props.leaveTimeout);\r\n\r\n      this.setState({ active: true, visible: false });\r\n    }, TICK);\r\n\r\n    this.setState({ leaving: true });\r\n  }\r\n\r\n  render() {\r\n    const { active, entering, leaving, visible } = this.state;\r\n    const { style, className, children, position } = this.props;\r\n\r\n    const direction = position === 'top' || position === 'bottom' ? 'horizontal' : 'vertical';\r\n    return (\r\n      <span\r\n        style={style}\r\n        className={cn(`md-tooltip md-tooltip--${position} md-tooltip--${direction}`, {\r\n          'md-tooltip--active': active,\r\n          'md-tooltip--enter': entering,\r\n          'md-tooltip--enter-active': entering && active,\r\n          'md-tooltip--leave': leaving,\r\n          'md-tooltip--leave-active': leaving && active,\r\n          [`md-tooltip--${position}-active`]: visible || (entering && active),\r\n        }, className)}\r\n      >\r\n        {children}\r\n      </span>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport { findDOMNode } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport TransitionGroup from 'react-transition-group/TransitionGroup';\r\nimport cn from 'classnames';\r\n\r\nimport { TAB } from '../constants/keyCodes';\r\nimport captureNextEvent from '../utils/EventUtils/captureNextEvent';\r\nimport { addTouchEvent, removeTouchEvent } from '../utils/EventUtils/touches';\r\nimport Tooltip from './Tooltip';\r\n\r\n\r\nfunction getContainer(tooltip) {\r\n  return tooltip.parentNode;\r\n}\r\n\r\nexport default class TooltipContainer extends PureComponent {\r\n  static propTypes = {\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    tooltipStyle: PropTypes.object,\r\n    tooltipClassName: PropTypes.string,\r\n    label: PropTypes.node.isRequired,\r\n    position: Tooltip.propTypes.position,\r\n    delay: PropTypes.number,\r\n    enterTimeout: Tooltip.propTypes.enterTimeout,\r\n    leaveTimeout: Tooltip.propTypes.leaveTimeout,\r\n    /**\r\n     * A function that returns a DOM element that will be used as the tooltip's container.\r\n     * A ref to the tooltip's DOM element will be passed into the function.\r\n     */\r\n    container: PropTypes.func,\r\n    /**\r\n     * A component/element the tooltip should be linked to,\r\n     * or a function that returns such a component/element.\r\n     * A ref to the tooltip's container will be passed into the function.\r\n     *\r\n     * By default the tooltip's container will be used as the target.\r\n     */\r\n    target: PropTypes.oneOfType([\r\n      PropTypes.object,\r\n      PropTypes.func,\r\n    ]),\r\n  };\r\n\r\n  static defaultProps = {\r\n    container: getContainer,\r\n    delay: 0,\r\n  };\r\n\r\n  state = { visible: false };\r\n\r\n  componentDidMount() {\r\n    this._setTarget();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.target !== prevProps.target) {\r\n      this._setTarget();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._unlinkTarget();\r\n    this._target = null;\r\n\r\n    if (this._delayedTimeout) {\r\n      clearTimeout(this._delayedTimeout);\r\n    }\r\n  }\r\n\r\n  _delayedTimeout = null;\r\n\r\n  _unlinkTarget = () => {\r\n    const target = this._target;\r\n    if (target) {\r\n      removeTouchEvent(target, 'start', this._showTooltip);\r\n      removeTouchEvent(target, 'end', this._hideTooltip);\r\n      target.removeEventListener('mouseover', this._showTooltip);\r\n      target.removeEventListener('mouseleave', this._hideTooltip);\r\n      target.removeEventListener('keyup', this._handleKeyUp);\r\n      target.removeEventListener('blur', this._hideTooltip);\r\n    }\r\n  };\r\n\r\n  _setTarget = () => {\r\n    const container = this._container;\r\n    let { target } = this.props;\r\n\r\n    this._unlinkTarget();\r\n\r\n    if (typeof target === 'function') {\r\n      target = target(container, this);\r\n    }\r\n    target = target ? findDOMNode(target) : container;\r\n    this._target = target || null;\r\n\r\n    if (target) {\r\n      addTouchEvent(target, 'start', this._showTooltip);\r\n      addTouchEvent(target, 'end', this._hideTooltip);\r\n      target.addEventListener('mouseover', this._showTooltip);\r\n      target.addEventListener('mouseleave', this._hideTooltip);\r\n      target.addEventListener('keyup', this._handleKeyUp);\r\n      target.addEventListener('blur', this._hideTooltip);\r\n    }\r\n  };\r\n\r\n  _setContainers = (span) => {\r\n    if (span) {\r\n      this._container = this.props.container(span.parentNode, this);\r\n    }\r\n  };\r\n\r\n  _stopContextMenu = (e) => {\r\n    e.preventDefault();\r\n    window.removeEventListener('contextmenu', this._stopContextMenu, true);\r\n    captureNextEvent('click');\r\n    this.setState({ visible: true });\r\n  };\r\n\r\n  _showTooltip = (e) => {\r\n    if (e.type === 'mouseover' && this._touched) {\r\n      return;\r\n    }\r\n\r\n    if (e.type === 'touchstart') {\r\n      this._touched = true;\r\n\r\n      window.addEventListener('contextmenu', this._stopContextMenu, true);\r\n      return;\r\n    }\r\n\r\n\r\n    const { delay } = this.props;\r\n    if (this._delayedTimeout) {\r\n      clearTimeout(this._delayedTimeout);\r\n    }\r\n\r\n    if (delay) {\r\n      this._delayedTimeout = setTimeout(() => {\r\n        this._delayedTimeout = null;\r\n\r\n        this.setState({ visible: true });\r\n      }, delay);\r\n    } else {\r\n      this.setState({ visible: true });\r\n    }\r\n  };\r\n\r\n  _hideTooltip = (e) => {\r\n    if (this._delayedTimeout) {\r\n      clearTimeout(this._delayedTimeout);\r\n    }\r\n\r\n    if (e.type === 'mouseover' && this._touched) {\r\n      return;\r\n    }\r\n\r\n    this.setState({ visible: false });\r\n  };\r\n\r\n  _handleKeyUp = (e) => {\r\n    if ((e.which || e.keyCode) === TAB) {\r\n      this._showTooltip(e);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { visible } = this.state;\r\n    const {\r\n      style,\r\n      className,\r\n      tooltipStyle,\r\n      tooltipClassName,\r\n      label,\r\n      position,\r\n      enterTimeout,\r\n      leaveTimeout,\r\n    } = this.props;\r\n\r\n    const tooltip = (\r\n      <Tooltip\r\n        key=\"tooltip\"\r\n        style={tooltipStyle}\r\n        className={tooltipClassName}\r\n        position={position}\r\n        enterTimeout={enterTimeout}\r\n        leaveTimeout={leaveTimeout}\r\n      >\r\n        {label}\r\n      </Tooltip>\r\n    );\r\n\r\n    return (\r\n      <TransitionGroup\r\n        style={style}\r\n        className={cn('md-tooltip-container', className)}\r\n        component=\"div\"\r\n      >\r\n        <span ref={this._setContainers} aria-hidden />\r\n        {visible ? tooltip : null}\r\n      </TransitionGroup>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport getDisplayName from '../utils/StringUtils/getDisplayName';\r\nimport TooltipContainer from './TooltipContainer';\r\n\r\n\r\n/**\r\n * Takes any component and injects a tooltip container as a prop. The tooltip container\r\n * will add event listeners for touch, mouse, and keyboard events so that a tooltip will appear\r\n * in the ComposedComponent.\r\n *\r\n * If the `tooltipLabel` prop is omitted, the tooltip and event listeners will not\r\n * be included.\r\n *\r\n * ```js\r\n * @param {function} ComposedComponent the component to compose with the tooltip functionality.\r\n * @return {function} the ComposedComponent with a tooltip.\r\n * ```\r\n */\r\nexport default ComposedComponent => class TooltipedComponent extends PureComponent {\r\n  static displayName = getDisplayName(ComposedComponent, 'Tooltip');\r\n  static propTypes = {\r\n    /**\r\n     * An optional style to apply to the tooltip container.\r\n     */\r\n    tooltipContainerStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the tooltip container.\r\n     */\r\n    tooltipContainerClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the tooltip itself.\r\n     */\r\n    tooltipStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to the tooltip itself.\r\n     */\r\n    tooltipClassName: PropTypes.string,\r\n\r\n    /**\r\n     * The tooltip to display. If omitted, the `tooltip` prop will not be injected.\r\n     */\r\n    tooltipLabel: PropTypes.node,\r\n\r\n    /**\r\n     * The amount of delay before the tooltip will appear on hover, touch, or keyboard focus.\r\n     */\r\n    tooltipDelay: TooltipContainer.propTypes.delay,\r\n\r\n    /**\r\n     * The position that the tooltip should appear related to the composed component.\r\n     */\r\n    tooltipPosition: TooltipContainer.propTypes.position,\r\n\r\n    /**\r\n     * The transition time for the tooltip appearing.\r\n     */\r\n    tooltipTransitionEnterTimeout: TooltipContainer.propTypes.enterTimeout,\r\n\r\n    /**\r\n     * The transition time for the tooltip disappearing.\r\n     */\r\n    tooltipTransitionLeaveTimeout: TooltipContainer.propTypes.leaveTimeout,\r\n  };\r\n\r\n  _composed = null;\r\n\r\n  /**\r\n   * Gets the composed component as a ref. This is useful if you need to access the ref of the\r\n   * composed component instead of the `injectTooltip` HOC to use some publicly accessible methods.\r\n   *\r\n   * ```js\r\n   * <SomeTooltippedComponent\r\n   *   ref={tooltipHOC => {\r\n   *     tooltipHOC.getComposedComponent().focus();\r\n   *   }}\r\n   * />\r\n   * ```\r\n   *\r\n   * > NOTE: This can be `null`, so make sure to do a null check before using.\r\n   */\r\n  getComposedComponent = () => this._composed;\r\n\r\n  _setComposedComponent = (component) => {\r\n    this._composed = component;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      tooltipLabel,\r\n      tooltipDelay,\r\n      tooltipPosition,\r\n      tooltipStyle,\r\n      tooltipClassName,\r\n      tooltipContainerStyle,\r\n      tooltipContainerClassName,\r\n      tooltipTransitionEnterTimeout,\r\n      tooltipTransitionLeaveTimeout,\r\n      ...props\r\n    } = this.props;\r\n\r\n    if (tooltipLabel) {\r\n      props.tooltip = (\r\n        <TooltipContainer\r\n          key=\"tooltipContainer\"\r\n          label={tooltipLabel}\r\n          delay={tooltipDelay}\r\n          position={tooltipPosition}\r\n          enterTimeout={tooltipTransitionEnterTimeout}\r\n          leaveTimeout={tooltipTransitionLeaveTimeout}\r\n          style={tooltipContainerStyle}\r\n          className={tooltipContainerClassName}\r\n          tooltipStyle={tooltipStyle}\r\n          tooltipClassName={tooltipClassName}\r\n        />\r\n      );\r\n    }\r\n\r\n    props.ref = this._setComposedComponent;\r\n\r\n    return <ComposedComponent {...props} />;\r\n  }\r\n};\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport deprecated from 'react-prop-types/lib/deprecated';\r\n\r\nimport { TAB } from '../constants/keyCodes';\r\nimport TICK from '../constants/CSSTransitionGroupTick';\r\nimport getBtnStyles from './getBtnStyles';\r\nimport invalidIf from '../utils/PropTypes/invalidIf';\r\nimport captureNextEvent from '../utils/EventUtils/captureNextEvent';\r\nimport FontIcon from '../FontIcons/FontIcon';\r\nimport IconSeparator from '../Helpers/IconSeparator';\r\nimport injectInk from '../Inks/injectInk';\r\nimport injectTooltip from '../Tooltips/injectTooltip';\r\n\r\n/**\r\n * The `Button` component can either be a `FlatButton`, `RaisedButton`, `IconButton`, or a\r\n * `FloatingButton`.\r\n *\r\n * A `FlatButton` is a button with no depth on the screen that is ideally used in `Dialog`s\r\n * or `CardActions`. The text can be optionally styled with the `primary` or `secondary` colors.\r\n *\r\n * A `RaisedButton` is a button with some depth to help actions have more prominent in flat\r\n * layouts or layouts with varying content. The background can be styled by the light/dark theme,\r\n * or optionally the `primary` or `secondary` color.\r\n *\r\n * An `IconButton` is a button that just displays a `FontIcon` as the child in a circle.\r\n * The `FontIcon` can be optionally styled with the `primary` or `secondary` color.\r\n *\r\n * A `FloatingButton` is a special case. Woop\r\n */\r\nclass Button extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * An optional style to apply to the button.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the button.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * A boolean if the icon should appear before or after the text for a `FlatButton` or\r\n     * a `RaisedButton`.\r\n     */\r\n    iconBefore: PropTypes.bool,\r\n\r\n    /**\r\n     * Any children used to display the button. When the button type is `icon` or `floating`,\r\n     * this can be used to render the `FontIcon` instead of the `iconChildren` prop.\r\n     *\r\n     * When the button type is `raised` or `flat`, this will be the label or any other elements\r\n     * you'd like to display in the button. This can work hand-in-hand with the `iconClassName`\r\n     * and `iconChildren` to make a button with an icon and text.\r\n     */\r\n    children: PropTypes.node,\r\n\r\n    /**\r\n     * An icon className to use in an optional `FontIcon` in any version of the button. This will\r\n     * be used with the `children` prop. If the `floating` or `icon` props are set to true, this or\r\n     * the children are required.\r\n     *\r\n     * @see {@link #iconEl}\r\n     */\r\n    iconClassName: PropTypes.string,\r\n\r\n    /**\r\n     * Any children to use to display an icon in the button.\r\n     *\r\n     * @see {@link #iconEl}\r\n     */\r\n    iconChildren: PropTypes.node,\r\n\r\n    /**\r\n     * An optional icon to display. This prop is recommended over the `iconClassName` and `iconChildren`\r\n     * props since it allows more control for you. There is also better SVG support since it won't wrap\r\n     * the SVG with the `FontIcon` element.\r\n     */\r\n    iconEl: PropTypes.element,\r\n\r\n    /**\r\n     * The type for the button. This is required when the `component` prop is not\r\n     * the 'a' tag, a `function`, or when the `href` prop is defined.\r\n     */\r\n    type: (props, propName, component, ...args) => {\r\n      const c = props.component;\r\n      let validator = PropTypes.oneOf(['button', 'submit', 'reset']);\r\n      if (!props.href && c !== 'a' && typeof c !== 'function') {\r\n        validator = validator.isRequired;\r\n      }\r\n\r\n      return validator(props, propName, component, ...args);\r\n    },\r\n\r\n    /**\r\n     * Boolean if the button should be styled with the primary color.\r\n     */\r\n    primary: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the button should be styled with the secondary color.\r\n     */\r\n    secondary: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the button is disabled.\r\n     */\r\n    disabled: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional href for the button. This will style the `a` tag as a button.\r\n     */\r\n    href: PropTypes.string,\r\n\r\n    /**\r\n     * An optional component to render the button as. This allows you to get all the styles and functionality\r\n     * of the Button, but as a custom React component.\r\n     */\r\n    component: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.func,\r\n    ]),\r\n\r\n    /**\r\n     * An optional function to call when the `click` event is triggered.\r\n     */\r\n    onClick: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `touchstart` event is triggered.\r\n     */\r\n    onTouchStart: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `touchend` event is triggered.\r\n     */\r\n    onTouchEnd: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `mousedown` event is triggered.\r\n     */\r\n    onMouseDown: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `mouseup` event is triggered.\r\n     */\r\n    onMouseUp: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `keyup` event is triggered.\r\n     */\r\n    onKeyUp: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `keydown` event is triggered.\r\n     */\r\n    onKeyDown: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `mouseenter` event is triggered.\r\n     */\r\n    onMouseEnter: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `mouseleave` event is triggered.\r\n     */\r\n    onMouseLeave: PropTypes.func,\r\n\r\n    /**\r\n     * Boolean if the `FloatingButton` should be fixed to the page. This prop can\r\n     * only be enabled if the `floating` prop is true.\r\n     */\r\n    fixed: invalidIf(PropTypes.bool, 'flat', 'raised', 'icon'),\r\n\r\n    /**\r\n     * The position that the `FloatingButton` should be fixed to the page. It will\r\n     * either be fixed to the top right, top left, bottom right, or bottom left of\r\n     * the page. This prop is only used if the `floating` prop and `fixed` prop are\r\n     * `true`.\r\n     */\r\n    fixedPosition: PropTypes.oneOf(['tr', 'tl', 'br', 'bl']).isRequired,\r\n\r\n    /**\r\n     * Boolean if the `FloatingButton` should be `mini`. This prop can only be used\r\n     * when the `floating` prop is true.\r\n     */\r\n    mini: invalidIf(PropTypes.bool, 'flat', 'raised', 'icon'),\r\n\r\n    /**\r\n     * Boolean if the `Button` should be styled as a `FlatButton`.\r\n     */\r\n    flat: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the `Button` should be styled as a `RaisedButton`.\r\n     */\r\n    raised: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the `Button` should be styled as a `IconButton`.\r\n     *\r\n     * @see {@link #svg}\r\n     */\r\n    icon: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the `Button` should be styled as a `FloatingButton`.\r\n     *\r\n     * @see {@link #svg}\r\n     */\r\n    floating: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the theming of `primary` or `secondary` should be swapped. By default,\r\n     * only flat and icon buttons can gain the theme colors as text color while the raised\r\n     * and floating buttons can gain the theme colors as background color.\r\n     *\r\n     * If this prop is enabled, the flat and icon buttons will gain the theme background colors\r\n     * while the raised and icon will gain the theme text colors instead.\r\n     *\r\n     * @see {@link #primary}\r\n     * @see {@link #secondary}\r\n     */\r\n    swapTheming: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional label to use for the tooltip. This is normally only used for\r\n     * `IconButton`s or `FloatingButton`s, but can be used on `FlatButton`s and\r\n     * `RaisedButton`s if you wish. Knock yourself out!\r\n     *\r\n     * If this prop is omitted, no tooltip will be included.\r\n     */\r\n    tooltipLabel: PropTypes.node,\r\n\r\n    /**\r\n     * An optional delay before the tooltip appears on mouse over.\r\n     */\r\n    tooltipDelay: PropTypes.number,\r\n\r\n    /**\r\n     * The position for the tooltip.\r\n     */\r\n    tooltipPosition: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\r\n\r\n    /**\r\n     * An ink from `injectInk`.\r\n     * @access private\r\n     */\r\n    ink: PropTypes.node,\r\n\r\n    /**\r\n     * A tooltip from `injectTooltip`\r\n     * @access private\r\n     */\r\n    tooltip: PropTypes.node,\r\n\r\n    /**\r\n     * Custom validator for verifying that only one type is defined and that\r\n     * at one type is defined.\r\n     */\r\n    _typeValidator: (props, propName, component) => {\r\n      const { flat, raised, icon, floating } = props;\r\n\r\n      const defined = [raised, flat, icon, floating].filter(d => d);\r\n      const len = defined.length;\r\n      if (len === 0) {\r\n        return new Error(\r\n          `A material design button type must be specified in the \\`${component}\\` but none were ` +\r\n          'given. Valid types are `flat`, `raised`, `icon`, or `floating`.'\r\n        );\r\n      } else if (len !== 1) {\r\n        return new Error(\r\n          `Only one material design button type may be specified in the \\`${component}\\` but \\`${len}\\` ` +\r\n          'were given. Select only one of `flat`, `raised`, `icon`, or `floating`.'\r\n        );\r\n      }\r\n\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * Either a boolean that will enforce the 24x24 size of the font icon or a number of the size\r\n     * to enforce. This is useful when using other font icon libraries that do not have a consistent\r\n     * size.\r\n     */\r\n    forceIconSize: FontIcon.propTypes.forceSize,\r\n\r\n    /**\r\n     * Boolean if the `forceIconSize` prop should also force the `font-size` instead of only `width` and `height`.\r\n     */\r\n    forceIconFontSize: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the child is an SVGIcon or FontIcon when using the `icon` or `floating` props. This is only needed\r\n     * until the next release when the `label` migration can be removed.\r\n     */\r\n    svg: PropTypes.bool,\r\n\r\n    label: deprecated(PropTypes.node, 'Use the `children` prop instead'),\r\n    noIcon: deprecated(\r\n      PropTypes.bool,\r\n      'This has been removed during the alpha release. Children will always attempt to be rendered outside of an ' +\r\n      'icon by default for flat and raised buttons'\r\n    ),\r\n  };\r\n\r\n  static defaultProps = {\r\n    type: 'button',\r\n    iconBefore: true,\r\n    fixedPosition: 'br',\r\n  };\r\n\r\n  state = {\r\n    pressed: false,\r\n    snackbar: false,\r\n    snackbarType: null,\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (this.props.disabled && !nextProps.disabled && this.state.hover) {\r\n      this.setState({ hover: false });\r\n    }\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    if (!this.state.pressed && nextState.pressed) {\r\n      this._timeout = setTimeout(() => {\r\n        this._timeout = null;\r\n        if (this._attemptedBlur) {\r\n          this._attemptedBlur = false;\r\n\r\n          this.setState({ pressed: false });\r\n        }\r\n      }, 450);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this._timeout) {\r\n      clearTimeout(this._timeout);\r\n    }\r\n\r\n    if (this._snackbarTimeout) {\r\n      clearTimeout(this._snackbarTimeout);\r\n    }\r\n\r\n    window.removeEventListener('click', this._blur);\r\n  }\r\n\r\n  _blur = () => {\r\n    if (this.props.disabled) {\r\n      return;\r\n    }\r\n\r\n    if (this._timeout) {\r\n      this._attemptedBlur = true;\r\n    } else {\r\n      this.setState({ pressed: false });\r\n    }\r\n  };\r\n\r\n  _handleMouseUp = (e) => {\r\n    if (this.props.onMouseUp) {\r\n      this.props.onMouseUp(e);\r\n    }\r\n\r\n    this._blur();\r\n  };\r\n\r\n  _handleMouseDown = (e) => {\r\n    if (this.props.onMouseDown) {\r\n      this.props.onMouseDown(e);\r\n    }\r\n\r\n    if (!this.props.disabled) {\r\n      this.setState({ pressed: true });\r\n    }\r\n  };\r\n\r\n  _handleTouchStart = (e) => {\r\n    if (this.props.onTouchStart) {\r\n      this.props.onTouchStart(e);\r\n    }\r\n\r\n    if (!this.props.disabled) {\r\n      this.setState({ pressed: true });\r\n    }\r\n  };\r\n\r\n  _handleTouchEnd = (e) => {\r\n    if (this.props.onTouchEnd) {\r\n      this.props.onTouchEnd(e);\r\n    }\r\n\r\n    this._blur();\r\n    captureNextEvent('mouseover');\r\n  };\r\n\r\n  _handleKeyUp = (e) => {\r\n    if (this.props.onKeyUp) {\r\n      this.props.onKeyUp(e);\r\n    }\r\n\r\n\r\n    if ((e.which || e.keyCode) === TAB) {\r\n      window.addEventListener('click', this._blur);\r\n      this.setState({ pressed: true });\r\n    }\r\n  };\r\n\r\n  _handleKeyDown = (e) => {\r\n    if (this.props.onKeyDown) {\r\n      this.props.onKeyDown(e);\r\n    }\r\n\r\n    if ((e.which || e.keyCode) === TAB) {\r\n      window.removeEventListener('click', this._blur);\r\n      this.setState({ pressed: false });\r\n    }\r\n  };\r\n\r\n  _handleMouseEnter = (e) => {\r\n    if (this.props.onMouseEnter) {\r\n      this.props.onMouseEnter(e);\r\n    }\r\n\r\n    if (!this.props.disabled) {\r\n      this.setState({ hover: true });\r\n    }\r\n  };\r\n\r\n  _handleMouseLeave = (e) => {\r\n    if (this.props.onMouseLeave) {\r\n      this.props.onMouseLeave(e);\r\n    }\r\n\r\n    if (!this.props.disabled) {\r\n      this.setState({ hover: false });\r\n    }\r\n  };\r\n\r\n  _animateForSnackbar = (multiline, leaveTimeout) => {\r\n    if (typeof leaveTimeout === 'number') {\r\n      this._snackbarTimeout = setTimeout(() => {\r\n        this._snackbarTimeout = setTimeout(() => {\r\n          this._snackbarTimeout = null;\r\n\r\n          this.setState({ snackbar: false });\r\n        }, leaveTimeout + 150);\r\n\r\n        this.setState({ snackbarType: null });\r\n      }, TICK);\r\n    } else {\r\n      this._snackbarTimeout = setTimeout(() => {\r\n        this._snackbarTimeout = null;\r\n\r\n        this.setState({ snackbar: true, snackbarType: multiline ? 'multiline-' : '' });\r\n      }, TICK);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      className,\r\n      iconClassName,\r\n      iconChildren,\r\n      iconBefore,\r\n      href,\r\n      primary,\r\n      secondary,\r\n      flat,\r\n      raised,\r\n      floating,\r\n      mini,\r\n      fixed,\r\n      fixedPosition,\r\n      disabled,\r\n      component,\r\n      ink,\r\n      tooltip,\r\n      icon,\r\n      forceIconSize,\r\n      forceIconFontSize,\r\n      type,\r\n      children,\r\n      swapTheming,\r\n      svg,\r\n      iconEl: propIconEl, // eslint-disable-line no-unused-vars\r\n      label, // deprecated\r\n      ...props\r\n    } = this.props;\r\n    let { iconEl } = this.props;\r\n\r\n    if (!href) {\r\n      props.type = type;\r\n    }\r\n\r\n    const { pressed, hover, snackbar, snackbarType } = this.state;\r\n    const iconBtnType = icon || floating;\r\n\r\n    let visibleChildren;\r\n    if (!iconEl && !svg && (iconClassName || iconChildren || iconBtnType || (label && children))) {\r\n      let resolvedIconChildren = iconChildren;\r\n      if (typeof iconChildren === 'undefined') {\r\n        resolvedIconChildren = iconBtnType || label ? children : null;\r\n      }\r\n\r\n      iconEl = (\r\n        <FontIcon iconClassName={iconClassName} forceSize={forceIconSize} forceFontSize={forceIconFontSize} inherit>\r\n          {resolvedIconChildren}\r\n        </FontIcon>\r\n      );\r\n    } else if (iconEl || svg) {\r\n      const el = React.Children.only(iconEl || children);\r\n      iconEl = React.cloneElement(el, { inherit: !el.props.error });\r\n    }\r\n\r\n    if (!iconBtnType) {\r\n      visibleChildren = label || children;\r\n      if (iconEl) {\r\n        visibleChildren = <IconSeparator label={visibleChildren} iconBefore={iconBefore}>{iconEl}</IconSeparator>;\r\n      }\r\n    } else {\r\n      visibleChildren = iconEl;\r\n    }\r\n\r\n    const Component = component || (href ? 'a' : 'button');\r\n    return (\r\n      <Component\r\n        {...props}\r\n        disabled={disabled}\r\n        onTouchStart={this._handleTouchStart}\r\n        onTouchEnd={this._handleTouchEnd}\r\n        onMouseDown={this._handleMouseDown}\r\n        onMouseUp={this._handleMouseUp}\r\n        onKeyDown={this._handleKeyDown}\r\n        onKeyUp={this._handleKeyUp}\r\n        onMouseEnter={this._handleMouseEnter}\r\n        onMouseLeave={this._handleMouseLeave}\r\n        href={href}\r\n        className={getBtnStyles({\r\n          flat,\r\n          raised,\r\n          icon,\r\n          floating,\r\n          disabled,\r\n          primary,\r\n          secondary,\r\n          hover,\r\n          swapTheming,\r\n          pressed,\r\n          mini,\r\n          fixed,\r\n          fixedPosition,\r\n        }, {\r\n          'md-btn--tooltip': tooltip,\r\n          'md-btn--snackbar-floating': snackbar,\r\n          [`md-btn--snackbar-floating-${snackbarType}adjust`]: snackbar && snackbarType !== null,\r\n        }, 'md-inline-block', className)}\r\n      >\r\n        {ink}\r\n        {tooltip}\r\n        {visibleChildren}\r\n      </Component>\r\n    );\r\n  }\r\n}\r\n\r\nexport default injectInk(injectTooltip(Button));\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default {\r\n  onExpandClick: PropTypes.func,\r\n  expanded: PropTypes.bool,\r\n  icon: PropTypes.element,\r\n  tooltipPosition: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\r\n  tooltipLabel: PropTypes.node,\r\n  tooltipDelay: PropTypes.number,\r\n};\r\n","import React, { PureComponent, Children } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport deprecated from 'react-prop-types/lib/deprecated';\r\n\r\nimport controlled from '../utils/PropTypes/controlled';\r\nimport getField from '../utils/getField';\r\nimport contextTypes from './contextTypes';\r\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\r\nimport FontIcon from '../FontIcons/FontIcon';\r\nimport Paper from '../Papers/Paper';\r\nimport Collapse from '../Helpers/Collapse';\r\n\r\nexport default class Card extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * An optional style to apply.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the card.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * Any Card parts that should be rendered.\r\n     */\r\n    children: PropTypes.node,\r\n\r\n    /**\r\n     * Boolean if the card is expanded by default when there is an expander\r\n     * component.\r\n     */\r\n    defaultExpanded: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the card should raise on hover when on a desktop display.\r\n     */\r\n    raise: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the card is currently expanded. This will require the `onExpanderClick` function\r\n     * to toggle the state. The card will become controlled if this is not `undefined`.\r\n     */\r\n    expanded: controlled(PropTypes.bool, 'onExpanderClick', 'defaultExpanded'),\r\n\r\n    /**\r\n     * An optional function to call when the expander is clicked.\r\n     */\r\n    onExpanderClick: PropTypes.func,\r\n\r\n    /**\r\n     * The icon to use for the expander button. It is recommended to use this prop over\r\n     * the `expaderIconChildren` and `expanderIconClassName` since it provides more control.\r\n     */\r\n    expanderIcon: PropTypes.element,\r\n\r\n    /**\r\n     * The tooltip position for the expander icon.\r\n     */\r\n    expanderTooltipPosition: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\r\n\r\n    /**\r\n     * The optional tooltip to display for the expander icon.\r\n     */\r\n    expanderTooltipLabel: PropTypes.node,\r\n\r\n    /**\r\n     * An optional delay before the tooltip appears for the expander icon on hover.\r\n     */\r\n    expanderTooltipDelay: PropTypes.number,\r\n\r\n    /**\r\n     * Boolean if the card contains a table. It will update the styling accordingly.\r\n     * When using the `DataTable` component, do not wrap it in a `CardText` component.\r\n     *\r\n     * ```js\r\n     * <Card tableCard={true}>\r\n     *   <CardTitle title=\"Example />\r\n     *   <DataTable>\r\n     *     ...\r\n     *   </DataTable>\r\n     * </Card>\r\n     * ```\r\n     */\r\n    tableCard: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional function to call when the mouseover event is triggered.\r\n     */\r\n    onMouseOver: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the mouseleave event is triggered.\r\n     */\r\n    onMouseLeave: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the touchstart event is triggered.\r\n     */\r\n    onTouchStart: PropTypes.func,\r\n\r\n    /**\r\n     * Boolean if the card expansion should be animated.\r\n     */\r\n    animate: PropTypes.bool,\r\n\r\n    expanderIconClassName: deprecated(PropTypes.string, 'Use `expanderIcon` instead'),\r\n    expanderIconChildren: deprecated(PropTypes.node, 'Use `expanderIcon` instead'),\r\n    initiallyExpanded: deprecated(PropTypes.bool, 'Use `defaultExpanded` instead'),\r\n    isExpanded: deprecated(PropTypes.bool, 'Use `expanded` instead'),\r\n    iconChildren: deprecated(PropTypes.node, 'Use the `expanderIconChildren` prop instead'),\r\n    iconClassName: deprecated(PropTypes.string, 'Use the `expanderIconClassName` prop instead'),\r\n  };\r\n\r\n  static defaultProps = {\r\n    animate: true,\r\n    expanderIcon: <FontIcon>keyboard_arrow_down</FontIcon>,\r\n    expanderTooltipPosition: 'left',\r\n  };\r\n\r\n  static childContextTypes = contextTypes;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      zDepth: 1,\r\n      expanded: typeof props.initiallyExpanded !== 'undefined' ? props.initiallyExpanded : !!props.defaultExpanded,\r\n    };\r\n  }\r\n\r\n  getChildContext() {\r\n    const {\r\n      expanderTooltipLabel,\r\n      expanderTooltipDelay,\r\n      expanderTooltipPosition,\r\n      expanderIcon,\r\n\r\n      // deprecated\r\n      iconClassName,\r\n      iconChildren,\r\n      expanderIconClassName,\r\n      expanderIconChildren,\r\n    } = this.props;\r\n\r\n    const expanded = typeof this.props.isExpanded !== 'undefined'\r\n      ? this.props.isExpanded\r\n      : getField(this.props, this.state, 'expanded');\r\n\r\n    return {\r\n      expanded,\r\n      onExpandClick: this._handleExpandClick,\r\n      icon: getDeprecatedIcon(\r\n        iconChildren || expanderIconChildren,\r\n        iconClassName || expanderIconClassName,\r\n        expanderIcon\r\n      ),\r\n      tooltipLabel: expanderTooltipLabel,\r\n      tooltipDelay: expanderTooltipDelay,\r\n      tooltipPosition: expanderTooltipPosition,\r\n    };\r\n  }\r\n\r\n  _handleMouseOver = (e) => {\r\n    if (this.props.onMouseOver) {\r\n      this.props.onMouseOver(e);\r\n    }\r\n\r\n    if (this.props.raise && !this._touched) {\r\n      this.setState({ zDepth: 4 });\r\n    }\r\n  };\r\n\r\n  _handleMouseLeave = (e) => {\r\n    if (this.props.onMouseLeave) {\r\n      this.props.onMouseLeave(e);\r\n    }\r\n\r\n\r\n    this._touched = false;\r\n    if (this.props.raise && this.state.zDepth !== 1) {\r\n      this.setState({ zDepth: 1 });\r\n    }\r\n  };\r\n\r\n  _handleTouchStart = (e) => {\r\n    if (this.props.onTouchStart) {\r\n      this.props.onTouchStart(e);\r\n    }\r\n\r\n    this._touched = true;\r\n  };\r\n\r\n  _handleExpandClick = (e) => {\r\n    const { onExpanderClick } = this.props;\r\n    const expanded = !getField(this.props, this.state, 'expanded');\r\n    if (onExpanderClick) {\r\n      onExpanderClick(expanded, e);\r\n    }\r\n\r\n    if (typeof this.props.expanded === 'undefined') {\r\n      this.setState({ expanded });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { zDepth } = this.state;\r\n    const {\r\n      className,\r\n      raise,\r\n      tableCard,\r\n      children,\r\n      animate,\r\n      /* eslint-disable no-unused-vars */\r\n      expanded: propExpanded,\r\n      onExpanderClick,\r\n      defaultExpanded,\r\n      expanderIcon,\r\n      expanderIconChildren,\r\n      expanderIconClassName,\r\n      expanderTooltipLabel,\r\n      expanderTooltipDelay,\r\n      expanderTooltipPosition,\r\n\r\n      // deprecated\r\n      iconChildren,\r\n      iconClassName,\r\n      isExpanded,\r\n      initiallyExpanded,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n\r\n    const expanded = typeof this.props.isExpanded !== 'undefined'\r\n      ? this.props.isExpanded\r\n      : getField(this.props, this.state, 'expanded');\r\n    let expanderIndex = -1;\r\n    const parts = Children.map(Children.toArray(children), (child, i) => {\r\n      if (!child || !child.props) {\r\n        return child;\r\n      } else if (expanderIndex < 0 && (child.props.isExpander || child.props.expander)) {\r\n        expanderIndex = i;\r\n      }\r\n\r\n      if (!child.props.expandable) {\r\n        return child;\r\n      }\r\n\r\n      const collapsed = expanderIndex === -1 || expanderIndex === i || !expanded;\r\n      return <Collapse collapsed={collapsed} animate={animate}>{child}</Collapse>;\r\n    });\r\n\r\n    return (\r\n      <Paper\r\n        {...props}\r\n        zDepth={zDepth}\r\n        className={cn('md-card', {\r\n          'md-card--raise': raise,\r\n          'md-card--table': tableCard,\r\n        }, 'md-background--card', className)}\r\n        onMouseOver={this._handleMouseOver}\r\n        onMouseLeave={this._handleMouseLeave}\r\n        onTouchStart={this._handleTouchStart}\r\n      >\r\n        {parts}\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport contextTypes from './contextTypes';\r\nimport Button from '../Buttons/Button';\r\nimport getCollapserStyles from '../utils/getCollapserStyles';\r\n\r\n/**\r\n * The CardExpander component is just a simple `IconButton` that\r\n * gets generated through the `Card`'s `contextTypes`. Props are not used\r\n * at all.\r\n *\r\n * Any component below a component that has this component inject into it\r\n * and has the prop `expandable={true}` will be toggleable when this is clicked.\r\n *\r\n * You can manually inject the `CardExpander` component yourself if you want to\r\n * use a component that is not a `CardActions` or a `CardTitle`.\r\n */\r\nexport default class CardExpander extends Component {\r\n  static contextTypes = contextTypes;\r\n\r\n  render() {\r\n    const {\r\n      expanded,\r\n      onExpandClick,\r\n      icon,\r\n      tooltipPosition,\r\n      tooltipLabel,\r\n      tooltipDelay,\r\n    } = this.context;\r\n\r\n    return (\r\n      <Button\r\n        icon\r\n        className={getCollapserStyles({ flipped: expanded }, 'md-collapser--card')}\r\n        onClick={onExpandClick}\r\n        tooltipLabel={tooltipLabel}\r\n        tooltipDelay={tooltipDelay}\r\n        tooltipPosition={tooltipPosition}\r\n        iconEl={icon}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport deprecated from 'react-prop-types/lib/deprecated';\r\n\r\nimport CardExpander from './CardExpander';\r\n\r\n/**\r\n * The `CardActions` component is used for adding actions on your card.\r\n * The actions should be `FlatButton`s or `IconButton`s.\r\n *\r\n * This component can act as a `CardExpander`.\r\n */\r\nexport default class CardActions extends Component {\r\n  static propTypes = {\r\n    /**\r\n     * Boolean if this component should act as an expander and inject the\r\n     * `CardExpander`.\r\n     */\r\n    expander: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional className to apply to the actions container.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * An actions to display.\r\n     */\r\n    children: PropTypes.node,\r\n\r\n    /**\r\n     * Boolean if the actions should be centered.\r\n     */\r\n    centered: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the actions should be stacked.\r\n     */\r\n    stacked: PropTypes.bool,\r\n\r\n    isExpander: deprecated(PropTypes.bool, 'Use `expander` instead'),\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      className,\r\n      children,\r\n      isExpander,\r\n      expander,\r\n      centered,\r\n      stacked,\r\n      ...props\r\n    } = this.props;\r\n    return (\r\n      <section\r\n        {...props}\r\n        className={cn('md-dialog-footer--card', {\r\n          'md-dialog-footer--inline': !stacked,\r\n          'md-dialog-footer--stacked': stacked,\r\n          'md-dialog-footer--card-centered': centered,\r\n        }, className)}\r\n      >\r\n        {children}\r\n        {isExpander || expander && <CardExpander />}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport themeColors from '../utils/themeColors';\r\n\r\nexport default class CardTitleBlock extends PureComponent {\r\n  static propTypes = {\r\n    id: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n    title: PropTypes.node.isRequired,\r\n    subtitle: PropTypes.node,\r\n    avatar: PropTypes.bool,\r\n  };\r\n\r\n  render() {\r\n    const { id, subtitle, avatar } = this.props;\r\n    let { title } = this.props;\r\n    title = (\r\n      <h2\r\n        id={id}\r\n        className={cn('md-card-title--title', {\r\n          'md-card-title--large': !avatar,\r\n        }, themeColors({ text: true }))}\r\n        tabIndex={id ? -1 : null}\r\n      >\r\n        {title}\r\n      </h2>\r\n    );\r\n\r\n    if (!subtitle) {\r\n      return title;\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className={cn('md-card-title--title-block', {\r\n          'md-card-title--one-line': avatar,\r\n        })}\r\n      >\r\n        {title}\r\n        <h3 className={`md-card-title--title ${themeColors({ hint: true })}`}>{subtitle}</h3>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, Children, cloneElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport deprecated from 'react-prop-types/lib/deprecated';\r\n\r\nimport CardTitleBlock from './CardTitleBlock';\r\nimport CardExpander from './CardExpander';\r\n\r\n/**\r\n * The `CardTitle` component is used to render a title in a Card along\r\n * with an optional subtitle or avatar.\r\n */\r\nexport default class CardTitle extends Component {\r\n  static propTypes = {\r\n    /**\r\n     * An optional id to add to the `title`.\r\n     */\r\n    id: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * An optional style to apply.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * The title to display.\r\n     */\r\n    title: PropTypes.node.isRequired,\r\n\r\n    /**\r\n     * An optional subtitle to display.\r\n     */\r\n    subtitle: PropTypes.node,\r\n\r\n    /**\r\n     * Any additional children to display in the title block\r\n     * after the avatar, title, and subtitle.\r\n     */\r\n    children: PropTypes.node,\r\n\r\n    /**\r\n     * An optional avatar to display before the title and subtitle.\r\n     */\r\n    avatar: PropTypes.element,\r\n\r\n    /**\r\n     * Boolean if the `CardTitle` component should inject a button\r\n     * for expanding all children below it.\r\n     */\r\n    expander: PropTypes.bool,\r\n\r\n    isExpander: deprecated(PropTypes.bool, 'Use `expander` instead'),\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      style,\r\n      className,\r\n      title,\r\n      subtitle,\r\n      expander,\r\n      isExpander,\r\n      children,\r\n      avatar: propAvatar, // eslint-disable-line no-unused-vars\r\n      ...props\r\n    } = this.props;\r\n\r\n    let { avatar } = this.props;\r\n    if (avatar) {\r\n      const { className: avatarClassName } = Children.only(avatar).props;\r\n      avatar = cloneElement(avatar, {\r\n        className: cn('md-avatar--card', avatarClassName),\r\n      });\r\n    }\r\n    return (\r\n      <div\r\n        {...props}\r\n        style={style}\r\n        className={cn('md-card-title', {\r\n          'md-card-title--primary': !avatar,\r\n        }, className)}\r\n      >\r\n        {avatar}\r\n        <CardTitleBlock id={id} title={title} subtitle={subtitle} avatar={!!avatar} />\r\n        {children}\r\n        {isExpander || expander && <CardExpander />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\n/**\r\n * The `CardText` component is a simple wrapper for text or any content in a `Card`.\r\n * It really just adds correct padding and font color.\r\n */\r\nexport default class CardText extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * An optional style to apply.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * The children to display.\r\n     */\r\n    children: PropTypes.node,\r\n\r\n    /**\r\n     * The component to render as.\r\n     */\r\n    component: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.func,\r\n    ]).isRequired,\r\n\r\n    /**\r\n     * Boolean if this component should be expandable when there is a `CardExpander`\r\n     * above it in the `Card`.\r\n     */\r\n    expandable: PropTypes.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    component: 'section',\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      component: Component,\r\n      className,\r\n      expandable, // eslint-disable-line no-unused-vars\r\n      ...props\r\n    } = this.props;\r\n\r\n    return <Component {...props} className={cn('md-card-text', className)} />;\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport deprecated from 'react-prop-types/lib/deprecated';\r\n\r\nimport FontIcon from '../FontIcons/FontIcon';\r\n\r\nexport default class Chip extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * An optional style to apply.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the chip's label.\r\n     */\r\n    labelStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the chip's label.\r\n     */\r\n    labelClassName: PropTypes.string,\r\n\r\n    /**\r\n     * Boolean if the `.md-chip-icon--rotate` style should be applied to the remove icon.\r\n     * The `.md-chip-icon--rotate` just rotates the icon 45 degrees.\r\n     */\r\n    rotateIcon: PropTypes.bool,\r\n\r\n    /**\r\n     * Any children used to display the remove icon when `removable`.\r\n     */\r\n    children: PropTypes.node,\r\n\r\n    /**\r\n     * The label to display on the chip.\r\n     */\r\n    label: PropTypes.node.isRequired,\r\n\r\n    /**\r\n     * Boolean if the chip is removable.\r\n     */\r\n    removable: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional avatar to display on the chip.\r\n     */\r\n    avatar: PropTypes.element,\r\n\r\n    /**\r\n     * An optional function to call when the `click` event is triggered.\r\n     */\r\n    onClick: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `mouseenter` event is triggered.\r\n     */\r\n    onMouseEnter: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `mouseleave` event is triggered.\r\n     */\r\n    onMouseLeave: PropTypes.func,\r\n\r\n    iconClassName: deprecated(PropTypes.string, 'Use the `children` prop as a single FontIcon or SVGIcon instead'),\r\n    remove: deprecated(PropTypes.func, 'Use `removable` and `onClick` instead'),\r\n    removeIconChildren: deprecated(PropTypes.node, 'Use `children` instead'),\r\n    removeIconClassName: deprecated(PropTypes.string, 'Use `children` prop as a single FontIcon or SVGIcon instead'),\r\n  };\r\n\r\n  static defaultProps = {\r\n    rotateIcon: true,\r\n    children: <FontIcon>add_circle</FontIcon>,\r\n  };\r\n\r\n  state = { hover: false };\r\n\r\n  _handleMouseEnter = (e) => {\r\n    if (this.props.onMouseEnter) {\r\n      this.props.onMouseEnter(e);\r\n    }\r\n\r\n    this.setState({ hover: true });\r\n  };\r\n\r\n  _handleMouseLeave = (e) => {\r\n    if (this.props.onMouseLeave) {\r\n      this.props.onMouseLeave(e);\r\n    }\r\n\r\n    this.setState({ hover: false });\r\n  };\r\n\r\n  render() {\r\n    const { hover } = this.state;\r\n    const {\r\n      label,\r\n      className,\r\n      labelStyle,\r\n      labelClassName,\r\n      avatar,\r\n      children,\r\n      removable,\r\n      remove,\r\n      onClick,\r\n      rotateIcon,\r\n\r\n      /* eslint-disable no-unused-vars */\r\n      // deprecated\r\n      iconClassName,\r\n      removeIconChildren,\r\n      removeIconClassName,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n\r\n    let icon;\r\n    if (removable || remove) {\r\n      const chipIconCN = cn('md-chip-icon', {\r\n        'md-chip-icon--rotate': rotateIcon,\r\n        'md-chip-text--hover': hover,\r\n      });\r\n\r\n      if (React.isValidElement(children)) {\r\n        icon = React.Children.only(children);\r\n        icon = React.cloneElement(icon, { className: cn(chipIconCN, icon.props.className) });\r\n      } else {\r\n        icon = (\r\n          <FontIcon className={chipIconCN} iconClassName={iconClassName}>\r\n            {children}\r\n          </FontIcon>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <button\r\n        type=\"button\"\r\n        {...props}\r\n        className={cn('md-chip', {\r\n          'md-chip--avatar': avatar,\r\n          'md-chip--remove': removable,\r\n          'md-chip--hover': hover,\r\n        }, className)}\r\n        onClick={remove || onClick}\r\n        onMouseEnter={this._handleMouseEnter}\r\n        onMouseLeave={this._handleMouseLeave}\r\n      >\r\n        {avatar}\r\n        <span\r\n          style={labelStyle}\r\n          className={cn('md-chip-text', {\r\n            'md-chip-text--hover': hover,\r\n          }, labelClassName)}\r\n        >\r\n          {label}\r\n        </span>\r\n        {icon}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default {\r\n  checkedIcon: PropTypes.element,\r\n  uncheckedIcon: PropTypes.element,\r\n  indeterminateIcon: PropTypes.element,\r\n  indeterminate: PropTypes.bool,\r\n  plain: PropTypes.bool,\r\n  selectableRows: PropTypes.bool.isRequired,\r\n  allSelected: PropTypes.bool.isRequired,\r\n  selectedRows: PropTypes.arrayOf(PropTypes.bool).isRequired,\r\n  createCheckbox: PropTypes.func.isRequired,\r\n  removeCheckbox: PropTypes.func.isRequired,\r\n  toggleSelectedRow: PropTypes.func.isRequired,\r\n  baseId: PropTypes.oneOfType([\r\n    PropTypes.number,\r\n    PropTypes.string,\r\n  ]),\r\n  baseName: PropTypes.string,\r\n  checkboxHeaderLabel: PropTypes.string.isRequired,\r\n  checkboxLabelTemplate: PropTypes.string.isRequired,\r\n  fixedHeader: PropTypes.bool.isRequired,\r\n  fixedFooter: PropTypes.bool.isRequired,\r\n};\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport deprecated from 'react-prop-types/lib/deprecated';\r\n\r\nimport requiredForA11yIfNot from '../utils/PropTypes/requiredForA11yIfNot';\r\nimport invalidIf from '../utils/PropTypes/invalidIf';\r\nimport FontIcon from '../FontIcons/FontIcon';\r\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\r\nimport contextTypes from './contextTypes';\r\n\r\n/**\r\n * The `DataTable` component is used to manage the state of all rows.\r\n * This can either be a __plain__ table or a __data__ table.\r\n *\r\n * A __data__ table will include checkboxes on each row while a __plain__ table\r\n * will not.\r\n */\r\nexport default class DataTable extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * A base id to use for every checkbox or `EditDialogColumn` in the data table. This is\r\n     * required for a11y if the data table is not plain. It is recommended to always provide\r\n     * this prop if you are using any of the advanced table components to auto-generate unique\r\n     * ids for each element.\r\n     *\r\n     * @see {@link DataTables/EditDialogColumn}\r\n     * @see {@link DataTables/SelectFieldColumn}\r\n     * @see {@link DataTables/DropdownMenuColumn}\r\n     * @see {@link DataTables/MenuButtonColumn}\r\n     * @see {@link DataTables/TablePagination}\r\n     */\r\n    baseId: requiredForA11yIfNot(PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]), 'plain'),\r\n\r\n    /**\r\n     * Optional style to apply to the table. If the table is `responsive`, this will be applied to the surrounding `div`\r\n     * instead of the table itself. Use the `tableStyle` in this case.\r\n     *\r\n     * @see {@link #tableStyle}\r\n     * @see {@link #responsive}\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the table. If the table is `responsive`, this will be applied to the\r\n     * surrounding `div` instead of the table itself. Use the `tableClassName` in this case.\r\n     *\r\n     * @see {@link #tableClassName}\r\n     * @see {@link #responsive}\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the `table` itself when the `responsive` prop is enabled. If the table is not\r\n     * `responsive`, use the `style` prop.\r\n     *\r\n     * @see {@link #style}\r\n     * @see {@link #responsive}\r\n     */\r\n    tableStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the `table` itself when the `responsive` prop is enabled. If the table is not\r\n     * `responsive`, use the `className` prop.\r\n     *\r\n     * @see {@link #className}\r\n     * @see {@link #responsive}\r\n     */\r\n    tableClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the fixed table wrapper that appears when there is a fixed\r\n     * header or a fixed footer.\r\n     *\r\n     * @see {@link #fixedHeader}\r\n     * @see {@link #fixedFooter}\r\n     * @see {@link #fixedWrapperClassName}\r\n     * @see {@link #fixedScrollWrapperStyle}\r\n     * @see {@link #fixedScrollWrapperClassName}\r\n     */\r\n    fixedWrapperStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the fixed table wrapper that appears when there is a fixed\r\n     * header or a fixed footer.\r\n     *\r\n     * @see {@link #fixedHeader}\r\n     * @see {@link #fixedFooter}\r\n     * @see {@link #fixedWrapperStyle}\r\n     * @see {@link #fixedScrollWrapperStyle}\r\n     * @see {@link #fixedScrollWrapperClassName}\r\n     */\r\n    fixedWrapperClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the fixed table wrapper's scroll container that appears when there is a fixed\r\n     * header or a fixed footer.\r\n     *\r\n     * @see {@link #fixedHeader}\r\n     * @see {@link #fixedFooter}\r\n     * @see {@link #fixedWrapperStyle}\r\n     * @see {@link #fixedWrapperClassName}\r\n     * @see {@link #fixedScrollWrapperStyle}\r\n     */\r\n    fixedScrollWrapperStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the fixed table wrapper's scroll container that appears when there is a fixed\r\n     * header or a fixed footer.\r\n     *\r\n     * @see {@link #fixedHeader}\r\n     * @see {@link #fixedFooter}\r\n     * @see {@link #fixedWrapperStyle}\r\n     * @see {@link #fixedWrapperClassName}\r\n     * @see {@link #fixedScrollWrapperStyle}\r\n     */\r\n    fixedScrollWrapperClassName: PropTypes.string,\r\n\r\n    /**\r\n     * The table contents to display. This *should* be a list of `TableHeader` and `TableBody`\r\n     * components.\r\n     */\r\n    children: PropTypes.node.isRequired,\r\n\r\n    /**\r\n     * An optional array of booleans denoting if a row is selected.\r\n     * This is an associative array so the index must match the row\r\n     * number in the `TableBody` component.\r\n     */\r\n    defaultSelectedRows: PropTypes.arrayOf(PropTypes.bool).isRequired,\r\n\r\n    /**\r\n     * Boolean if the table is responsive. This will wrap the table in a container\r\n     * that allows scrolling to the right if overflow exists.\r\n     */\r\n    responsive: PropTypes.bool.isRequired,\r\n\r\n    /**\r\n     * Boolean if this table should not include the checkboxes on each row.\r\n     * This really means that the entire table is unselectable and you wish\r\n     * to display as a normal table.\r\n     */\r\n    plain: PropTypes.bool,\r\n\r\n    /**\r\n     * The checked checkbox icon to display when a row is selected. This really defaults\r\n     * to the `checkedCheckboxIcon` prop from the `SelectionControl`.\r\n     *\r\n     * @see {@link SelectionControls/SelectionControl#checkedCheckboxIcon}\r\n     */\r\n    checkedIcon: PropTypes.element,\r\n\r\n    /**\r\n     * The unchecked checkbox icon to display when a row is selected. This really defaults\r\n     * to the `uncheckedCheckboxIcon` prop from the `SelectionControl`.\r\n     *\r\n     * @see {@link SelectionControls/SelectionControl#uncheckedCheckboxIcon}\r\n     */\r\n    uncheckedIcon: PropTypes.element,\r\n\r\n    /**\r\n     * An optional function to call when a non-plain data table has a row toggled. The callback\r\n     * will include:\r\n     * - the row id\r\n     * - boolean if the row is now checked\r\n     * - the total count of rows selected\r\n     * - the change event\r\n     *\r\n     * All rows will be toggled on or off when the row id is 0 and a `thead` exists in the table.\r\n     */\r\n    onRowToggle: invalidIf(PropTypes.func, 'plain'),\r\n\r\n    /**\r\n     * Boolean if the `DataTable` should inject checkboxes at the start of each row.\r\n     */\r\n    selectableRows: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the checkboxes in the table should also include an _indeterminate_ state.\r\n     * It will use the `indeterminateIconChildren` and `indeterminateIconClassName` when at least\r\n     * 1 row has been checked, but not all rows.\r\n     */\r\n    indeterminate: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional icon to display when the selected state is indeterminate.\r\n     *\r\n     * @see {@link #indeterminate}\r\n     */\r\n    indeterminateIcon: PropTypes.element,\r\n\r\n    /**\r\n     * This is the aria-label to apply to the checkbox in the table's header. This\r\n     * is just used for accessibility since the checkboxes have no visible label.\r\n     */\r\n    checkboxHeaderLabel: PropTypes.string.isRequired,\r\n\r\n    /**\r\n     * This is the aria-label to apply to a checkbox in the table's body. This can either\r\n     * be a constant string that will replace `{{row}}` with the current row index, or\r\n     * a function that takes the row index and returns a string.\r\n     *\r\n     * ```js\r\n     * checkboxLabelTemplate={rowIndex => `Toggle row ${row}`}\r\n     * ```\r\n     */\r\n    checkboxLabelTemplate: PropTypes.oneOfType([\r\n      PropTypes.func,\r\n      PropTypes.string,\r\n    ]).isRequired,\r\n\r\n    /**\r\n     * Boolean if the table should include a fixed header. This will allow the `TableHeader` component\r\n     * to stay fixed to the top of the table while the `TableBody` scrolls horizontally.\r\n     *\r\n     * @see {@link #fixedFooter}\r\n     * @see [react-md-make-fixed-table](/components/data-tables?tab=2#mixin-react-md-make-fixed-table)\r\n     */\r\n    fixedHeader: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the table should include a fixed footer. This will allow the `TableFooter` component\r\n     * to stay fixed to the bottom of the table while the `TableBody` scrolls horizontally.\r\n     *\r\n     * @see {@link #fixedHeader}\r\n     * @see [react-md-make-fixed-table](/components/data-tables?tab=2#mixin-react-md-make-fixed-table)\r\n     */\r\n    fixedFooter: PropTypes.bool,\r\n\r\n    /**\r\n     * Either a boolean or a shape of booleans for if a divider should appear at the top or bottom of the table\r\n     * when there is a fixed header/footer. By default, this will automatically create dividers.\r\n     *\r\n     * @see {@link #fixedHeader}\r\n     * @see {@link #fixedFooter}\r\n     */\r\n    fixedDividers: PropTypes.oneOfType([\r\n      PropTypes.bool,\r\n      PropTypes.shape({\r\n        header: PropTypes.bool,\r\n        footer: PropTypes.bool,\r\n      }),\r\n    ]),\r\n\r\n    /**\r\n     * An optional height to set for a table with a fixed header and/or a fixed footer. It is recommended to use\r\n     * the related `react-md-make-fixed-table` mixin instead.\r\n     *\r\n     * @see {@link #headerHeight}\r\n     * @see {@link #footerHeight}\r\n     */\r\n    fixedHeight: PropTypes.number,\r\n\r\n    /**\r\n     * An optional width to set for a table with a fixed header and/or a fixed footer. It is recommended to use\r\n     * the related `react-md-make-fixed-table` mixin instead.\r\n     */\r\n    fixedWidth: PropTypes.number,\r\n\r\n    /**\r\n     * This is the height of the table's header columns. This should be equal to the `md-data-table-header-height`\r\n     * variable.\r\n     *\r\n     * @see [md-data-table-header-height](/components/data-tables?tab=2#variable-md-data-table-header-height)\r\n     * @see {@link #fixedHeight}\r\n     */\r\n    headerHeight: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * This is the height of the table's header columns. This should be equal to the `md-data-table-header-height`\r\n     * variable.\r\n     *\r\n     * @see [md-data-table-column-height](/components/data-tables?tab=2#variable-md-data-table-column-height)\r\n     * @see {@link #fixedHeight}\r\n     */\r\n    footerHeight: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * Boolean if the `<table>` element should always span the entire width of its container.\r\n     */\r\n    fullWidth: PropTypes.bool,\r\n\r\n    indeterminateIconChildren: deprecated(PropTypes.node, 'Use the `indeterminateIcon` prop instead'),\r\n    indeterminateIconClassName: deprecated(PropTypes.string, 'Use the `indeterminateIcon` prop instead'),\r\n    checkedIconClassName: deprecated(PropTypes.string, 'Use the `checkedIcon` prop instead'),\r\n    checkedIconChildren: deprecated(PropTypes.node, 'Use the `checkedIcon` prop instead'),\r\n    uncheckedIconClassName: deprecated(PropTypes.string, 'Use the `uncheckedIcon` prop instead'),\r\n    uncheckedIconChildren: deprecated(PropTypes.node, 'Use the `uncheckedIcon` prop instead'),\r\n  };\r\n\r\n  static defaultProps = {\r\n    indeterminateIcon: <FontIcon>indeterminate_check_box</FontIcon>,\r\n    defaultSelectedRows: [],\r\n    responsive: true,\r\n    selectableRows: true,\r\n    checkboxHeaderLabel: 'Toggle All Rows',\r\n    checkboxLabelTemplate: 'Toggle row {{row}}',\r\n    fixedHeader: false,\r\n    fixedFooter: false,\r\n    fixedDividers: true,\r\n    headerHeight: 56,\r\n    footerHeight: 48,\r\n    fullWidth: true,\r\n  };\r\n\r\n  static childContextTypes = contextTypes;\r\n\r\n  constructor(props) {\r\n    super();\r\n\r\n    const rows = props.defaultSelectedRows;\r\n    this.state = {\r\n      header: false,\r\n      indeterminate: props.indeterminate ? false : undefined,\r\n      allSelected: this._allSelected(rows),\r\n      selectedRows: rows,\r\n    };\r\n\r\n    this._removed = 0;\r\n    this._initial = true;\r\n  }\r\n\r\n  getChildContext() {\r\n    const {\r\n      checkedIcon,\r\n      uncheckedIcon,\r\n      indeterminateIcon,\r\n      plain,\r\n      baseId,\r\n      selectableRows,\r\n      checkboxHeaderLabel,\r\n      checkboxLabelTemplate,\r\n      fixedHeader,\r\n      fixedFooter,\r\n\r\n      // deprecated\r\n      checkedIconChildren,\r\n      checkedIconClassName,\r\n      uncheckedIconChildren,\r\n      uncheckedIconClassName,\r\n      indeterminateIconChildren,\r\n      indeterminateIconClassName,\r\n    } = this.props;\r\n\r\n    return {\r\n      checkedIcon: getDeprecatedIcon(checkedIconClassName, checkedIconChildren, checkedIcon),\r\n      uncheckedIcon: getDeprecatedIcon(uncheckedIconClassName, uncheckedIconChildren, uncheckedIcon),\r\n      indeterminateIcon: getDeprecatedIcon(indeterminateIconClassName, indeterminateIconChildren, indeterminateIcon),\r\n      indeterminate: this.state.indeterminate,\r\n      plain,\r\n      allSelected: this.state.allSelected,\r\n      selectedRows: this.state.selectedRows,\r\n      toggleSelectedRow: this._toggleSelectedRow,\r\n      createCheckbox: this._createCheckbox,\r\n      removeCheckbox: this._removeCheckbox,\r\n      baseId,\r\n      baseName: `${baseId}-control`,\r\n      selectableRows,\r\n      checkboxHeaderLabel,\r\n      checkboxLabelTemplate,\r\n      fixedHeader,\r\n      fixedFooter,\r\n    };\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this._removed = 0;\r\n    this._initial = false;\r\n  }\r\n\r\n  _allSelected(rows) {\r\n    let all = rows.length !== 0;\r\n    rows.some(checked => {\r\n      if (!checked) {\r\n        all = false;\r\n      }\r\n\r\n      return !all;\r\n    });\r\n\r\n    return all;\r\n  }\r\n\r\n  _setTable = (table) => {\r\n    this._table = table;\r\n  };\r\n\r\n  _createCheckbox = (index) => {\r\n    this.setState((state, props) => {\r\n      const selectedRows = state.selectedRows.slice();\r\n      // Only use the default selected rows prop on first mount. If other changes occur after,\r\n      // default to false.\r\n      const selected = this._initial && props.defaultSelectedRows[index] || false;\r\n      selectedRows.splice(index, 0, selected);\r\n      return { selectedRows, allSelected: this._allSelected(selectedRows) };\r\n    });\r\n  };\r\n\r\n  _removeCheckbox = (index) => {\r\n    this.setState((state) => {\r\n      // When multiple checkboxes are removed in a render cycle, they are removed in list order.\r\n      // So to keep the index correct while removing, need to keep subtract the provided index by\r\n      // the current number of removed elements. This value gets reset to 0 after a finished cycle.\r\n      const selectedRows = state.selectedRows.slice();\r\n\r\n      // This is really ugly. React 16 doesn't need to track all this while React 15 does\r\n      if (React.version && React.version.match(/^16\\./)) {\r\n        selectedRows.splice(index, 1);\r\n      } else {\r\n        selectedRows.splice(index - this._removed, 1);\r\n        this._removed += 1;\r\n      }\r\n      return { selectedRows, allSelected: this._allSelected(selectedRows) };\r\n    });\r\n  };\r\n\r\n  _toggleSelectedRow = (row, header, e) => {\r\n    let selectedRows;\r\n    let allSelected = this.state.allSelected;\r\n    let selectedCount = 0;\r\n    const i = this._table && this._table.querySelector('.md-table-header') ? row - 1 : row;\r\n    const { checked } = e.target;\r\n    if (header) {\r\n      selectedRows = this.state.selectedRows.map(() => checked);\r\n      allSelected = checked;\r\n      selectedCount = !checked ? 0 : selectedRows.length;\r\n    } else {\r\n      selectedRows = this.state.selectedRows.slice();\r\n      selectedRows[i] = !selectedRows[i];\r\n      selectedCount = selectedRows.filter(b => b).length;\r\n      allSelected = selectedCount === selectedRows.length;\r\n    }\r\n\r\n    if (this.props.onRowToggle) {\r\n      this.props.onRowToggle(row, checked, selectedCount, e);\r\n    }\r\n\r\n    const indeterminate = this.props.indeterminate && !allSelected && selectedCount > 0;\r\n\r\n    this.setState({ selectedRows, allSelected, indeterminate });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      style,\r\n      className,\r\n      tableStyle,\r\n      tableClassName,\r\n      fixedWrapperStyle,\r\n      fixedWrapperClassName,\r\n      fixedScrollWrapperStyle,\r\n      fixedScrollWrapperClassName,\r\n      children,\r\n      plain,\r\n      responsive,\r\n      fixedHeader,\r\n      fixedFooter,\r\n      fixedDividers,\r\n      fixedHeight,\r\n      fixedWidth,\r\n      headerHeight,\r\n      footerHeight,\r\n      fullWidth,\r\n      /* eslint-disable no-unused-vars */\r\n      indeterminate,\r\n      indeterminateIcon,\r\n      checkedIcon,\r\n      uncheckedIcon,\r\n      defaultSelectedRows,\r\n      baseId,\r\n      onRowToggle,\r\n      selectableRows,\r\n      checkboxHeaderLabel,\r\n      checkboxLabelTemplate,\r\n\r\n      // deprecated\r\n      checkedIconChildren,\r\n      checkedIconClassName,\r\n      uncheckedIconChildren,\r\n      uncheckedIconClassName,\r\n      indeterminateIconChildren,\r\n      indeterminateIconClassName,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n\r\n    const table = (\r\n      <table\r\n        {...props}\r\n        ref={this._setTable}\r\n        style={responsive ? tableStyle : style}\r\n        className={cn('md-data-table', {\r\n          'md-data-table--plain': plain,\r\n          'md-data-table--full-width': fullWidth,\r\n          [className]: !responsive && className,\r\n          [tableClassName]: responsive && tableClassName,\r\n        })}\r\n      >\r\n        {children}\r\n      </table>\r\n    );\r\n\r\n    if (!responsive) {\r\n      return table;\r\n    }\r\n\r\n    let content = table;\r\n    if (fixedHeader || fixedFooter) {\r\n      let height = fixedHeight;\r\n      if (fixedHeight) {\r\n        if (fixedHeader) {\r\n          height -= headerHeight;\r\n        }\r\n\r\n        if (fixedFooter) {\r\n          height -= footerHeight;\r\n        }\r\n      }\r\n\r\n      let borderTop = fixedHeader;\r\n      let borderBot = fixedFooter;\r\n      if (typeof fixedDividers === 'boolean') {\r\n        borderTop = borderTop && fixedDividers;\r\n        borderBot = borderBot && fixedDividers;\r\n      } else {\r\n        borderTop = borderTop && (typeof fixedDividers.header === 'undefined' || fixedDividers.header);\r\n        borderBot = borderBot && (typeof fixedDividers.footer === 'undefined' || fixedDividers.footer);\r\n      }\r\n\r\n      content = (\r\n        <div\r\n          style={fixedWrapperStyle}\r\n          className={cn('md-data-table__fixed-wrapper', {\r\n            'md-data-table__fixed-wrapper--header': fixedHeader,\r\n            'md-data-table__fixed-wrapper--footer': fixedFooter,\r\n          }, fixedWrapperClassName)}\r\n        >\r\n          <div\r\n            style={{ height, ...fixedScrollWrapperStyle }}\r\n            className={cn('md-data-table__scroll-wrapper', {\r\n              'md-divider-border': fixedDividers,\r\n              'md-divider-border--top': borderTop,\r\n              'md-divider-border--bottom': borderBot,\r\n            }, fixedScrollWrapperClassName)}\r\n          >\r\n            {table}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div\r\n        style={{ width: fixedWidth, ...style }}\r\n        className={cn('md-data-table--responsive', {\r\n          'md-data-table--fixed': fixedHeader || fixedFooter,\r\n        }, className)}\r\n      >\r\n        {content}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport contextTypes from './contextTypes';\r\n\r\nexport default { ...contextTypes, header: PropTypes.bool };\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport contextTypes from './contextTypes';\r\nimport headerContextTypes from './headerContextTypes';\r\n\r\n/**\r\n * A `thead` component to use in the `DataTable` component. This\r\n * will automatically update the header row to check if it is selected\r\n * and inject a function to toggle all rows selected if the row is\r\n * uncontrolled. It will also automatically attempt to set the `TableColumn`\r\n * components to be the header type.\r\n */\r\nexport default class TableHeader extends Component {\r\n  static contextTypes = contextTypes;\r\n  static childContextTypes = headerContextTypes;\r\n  static propTypes = {\r\n    /**\r\n     * An optional style to apply.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the table header\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * This should be a single `TableRow` component. The `custom` validation will\r\n     * warn you if there are more than one children given or none at all.\r\n     */\r\n    children: (props, propName, component) => {\r\n      try {\r\n        React.Children.only(props.children);\r\n        return null;\r\n      } catch (e) {\r\n        const amt = props.children ? props.children.length : 0;\r\n        return new Error(\r\n          `There must only be one child in a '${component}', but ${amt} were given.`\r\n        );\r\n      }\r\n    },\r\n  };\r\n\r\n  getChildContext() {\r\n    return {\r\n      ...this.context,\r\n      header: true,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { className, children, ...props } = this.props;\r\n    const { allSelected } = this.context;\r\n    const header = React.Children.only(children);\r\n    const selected = typeof header.props.selected === 'undefined'\r\n      ? allSelected\r\n      : header.props.selected;\r\n\r\n    const row = React.cloneElement(header, { selected });\r\n\r\n    return (\r\n      <thead {...props} className={cn('md-table-header', className)}>\r\n        {row}\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, Children } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport contextTypes from './contextTypes';\r\n\r\n/**\r\n * The `TableBody` component is used for managing the state of all\r\n * `TableRow` inside of it.\r\n */\r\nexport default class TableBody extends Component {\r\n  static propTypes = {\r\n    /**\r\n     * An optional style to apply to the tbody.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the tbody.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * A list or a single item of `TableRow` components to render.\r\n     */\r\n    children: PropTypes.oneOfType([\r\n      PropTypes.element,\r\n      PropTypes.arrayOf(PropTypes.element),\r\n    ]),\r\n  };\r\n\r\n  static contextTypes = contextTypes;\r\n\r\n  render() {\r\n    const { children, className, ...props } = this.props;\r\n    const { selectedRows } = this.context;\r\n\r\n    const rows = children ? Children.map(Children.toArray(children), (row, i) => {\r\n      const uncontrolled = typeof row.props.selected === 'undefined';\r\n      return React.cloneElement(row, {\r\n        selected: uncontrolled ? selectedRows[i] : row.props.selected,\r\n      });\r\n    }) : null;\r\n\r\n    return (\r\n      <tbody {...props} className={cn('md-table-body', className)}>\r\n        {rows}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport headerContextTypes from './headerContextTypes';\r\nimport omit from '../utils/omit';\r\n\r\nconst rowContextTypes = omit({\r\n  ...headerContextTypes,\r\n  rowId: PropTypes.oneOfType([\r\n    PropTypes.number,\r\n    PropTypes.string,\r\n  ]),\r\n}, ['baseId']);\r\n\r\nexport default rowContextTypes;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport AccessibleFakeInkedButton from '../Helpers/AccessibleFakeInkedButton';\r\n\r\nconst DISABLED_INTERACTIONS = ['mouse'];\r\n\r\n/**\r\n * This is the `Thumb` for the switch. The `ink` in the Thumb is only active on touch and keyboard\r\n * interactions, so the `AccessibleFakeInkButton` does not work for this case.\r\n *\r\n * This component really just is used for custom inkage.\r\n */\r\nexport default class SwitchThumb extends PureComponent {\r\n  static propTypes = {\r\n    className: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    checked: PropTypes.bool,\r\n    onClick: PropTypes.func,\r\n    disabledInteractions: PropTypes.arrayOf(PropTypes.oneOf(['keyboard', 'touch', 'mouse'])),\r\n  };\r\n\r\n  render() {\r\n    const { disabled, checked, className, disabledInteractions, ...props } = this.props;\r\n    return (\r\n      <AccessibleFakeInkedButton\r\n        {...props}\r\n        disabled={disabled}\r\n        disabledInteractions={disabledInteractions || DISABLED_INTERACTIONS}\r\n        inkContainerClassName=\"md-ink-container--2x\"\r\n        className={cn('md-switch-thumb', {\r\n          'md-switch-thumb--disabled': disabled,\r\n          'md-switch-thumb--on': checked,\r\n          'md-switch-thumb--off': !checked,\r\n        }, className)}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport SwitchThumb from './SwitchThumb';\r\n\r\nexport default class SwitchTrack extends PureComponent {\r\n  static propTypes = {\r\n    className: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    checked: PropTypes.bool,\r\n    inkDisabled: PropTypes.bool,\r\n    disabledInteractions: PropTypes.arrayOf(PropTypes.oneOf(['keyboard', 'touch', 'mouse'])),\r\n  };\r\n\r\n  render() {\r\n    const { disabled, checked, className, inkDisabled, disabledInteractions, ...props } = this.props;\r\n    return (\r\n      <div\r\n        {...props}\r\n        className={cn('md-switch-track', {\r\n          'md-pointer--hover': !disabled,\r\n          'md-switch-track--disabled': disabled,\r\n          'md-switch-track--on': checked,\r\n          'md-switch-track--off': !checked,\r\n        }, className)}\r\n      >\r\n        <SwitchThumb\r\n          disabled={disabled}\r\n          checked={checked}\r\n          onClick={props.onClick}\r\n          inkDisabled={inkDisabled}\r\n          disabledInteractions={disabledInteractions}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport deprecated from 'react-prop-types/lib/deprecated';\r\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\r\n\r\nimport { SPACE } from '../constants/keyCodes';\r\nimport getField from '../utils/getField';\r\nimport themeColors from '../utils/themeColors';\r\nimport oneRequiredForA11y from '../utils/PropTypes/oneRequiredForA11y';\r\nimport capitalizeFirst from '../utils/StringUtils/capitalizeFirst';\r\nimport AccessibleFakeInkedButton from '../Helpers/AccessibleFakeInkedButton';\r\nimport FontIcon from '../FontIcons/FontIcon';\r\nimport SwitchTrack from './SwitchTrack';\r\n\r\n/**\r\n * Prevents a second warning from appearing when using the deprecated or a11y required\r\n * props by using the `__superSecretProp`.... So secret!\r\n */\r\nfunction preventDouble(validator) {\r\n  return function validate(props, propName, ...others) {\r\n    let err = validator(props, propName, ...others);\r\n    if (err && props.__superSecreteProp) {\r\n      err = null;\r\n    }\r\n\r\n    return err;\r\n  };\r\n}\r\n\r\n/**\r\n * The `SelectionControl` component is used to render any of the `Radio`, `Checkbox`, or `Switch`\r\n * selection control type. This component might eventually replace all three since they use this\r\n * anyways. I am not sure yet though.\r\n */\r\nexport default class SelectionControl extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * An id to use with the selection control. This is used for accessibility and so that the label\r\n     * triggers the selection control toggle.\r\n     */\r\n    id: preventDouble(isRequiredForA11y(PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number,\r\n    ]))),\r\n\r\n    /**\r\n     * An optional label to apply to the checkbox when there is no visible label.\r\n     */\r\n    'aria-label': oneRequiredForA11y(PropTypes.string, 'label', 'aria-labelledby'),\r\n\r\n    /**\r\n     * An optional id that points to a label for the selection control when there is no visible label.\r\n     */\r\n    'aria-labelledby': PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * An optional style to apply to the selection control's container.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the selection control's container.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * The type of selection control to render.\r\n     */\r\n    type: PropTypes.oneOf(['checkbox', 'radio', 'switch']).isRequired,\r\n\r\n    /**\r\n     * A label to display with the selection control. This is required for accessibility and triggering\r\n     * the toggle.\r\n     */\r\n    label: PropTypes.node,\r\n\r\n    /**\r\n     * Boolean if the label should appear before the checkbox/radio icon or switch.\r\n     */\r\n    labelBefore: PropTypes.bool,\r\n\r\n    /**\r\n     * A name to use for the `SelectionControl`. This is required for accessibility. If the `type`\r\n     * is a `checkbox` and it is part of a group, it is recommended to make this a string ending\r\n     * in `[]` so that the value can be found from `document.querySelector('input[name=\"someName[]\"]').value`.\r\n     */\r\n    name: preventDouble(isRequiredForA11y(PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]))),\r\n\r\n    /**\r\n     * Boolean if the `Radio` is disabled.\r\n     */\r\n    disabled: PropTypes.bool,\r\n\r\n    /**\r\n     * A function to call when the `SelectionControl` triggers the `change` event. The `onChange`\r\n     * callback will either include:\r\n     * - the currently changed radio's value\r\n     * - the next checked state for the `Switch` or `Checkbox`.\r\n     *\r\n     * as the first parameter followed by the change event.\r\n     *\r\n     * ```js\r\n     * // Radio\r\n     * onChange(changeEvent.target.value, changeEvent);\r\n     *\r\n     * // Checkbox or Switch\r\n     * onChange(changeEvent.target.checked, changeEvent);\r\n     * ```\r\n     */\r\n    onChange: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `keydown` event is triggered.\r\n     */\r\n    onKeyDown: PropTypes.func,\r\n\r\n    /**\r\n     * The value for the `SelectionControl`. It is not required for `Checkbox` and `Switch`,\r\n     * but it is recommended.\r\n     */\r\n    value: PropTypes.oneOfType([\r\n      PropTypes.bool,\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * A boolean if the `SelectionControl` is currently checked. This _really_ makes the `onChange`\r\n     * prop required, but since there are cases you might want to have the `onChange` listener on a\r\n     * `fieldset` or something above the component, it is never set to `required`. It will however\r\n     * prevent updates if there is no change listener.\r\n     */\r\n    checked: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the `Checkbox` or `Switch` are checked by default. This prop is invalid for a\r\n     * `Radio`.\r\n     */\r\n    defaultChecked: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the `SelectionControl` should be displayed inline instead of a block.\r\n     */\r\n    inline: PropTypes.bool,\r\n\r\n    /**\r\n     * The icon to use for a checked `checkbox` selection control.\r\n     */\r\n    checkedCheckboxIcon: PropTypes.element,\r\n\r\n    /**\r\n     * The icon to use for an unchecked `checkbox` selection control.\r\n     */\r\n    uncheckedCheckboxIcon: PropTypes.element,\r\n\r\n    /**\r\n     * The icon to use for a checked `radio` selection control.\r\n     */\r\n    checkedRadioIcon: PropTypes.element,\r\n\r\n    /**\r\n     * The icon to use for an unchecked `radio` selection control.\r\n     */\r\n    uncheckedRadioIcon: PropTypes.element,\r\n\r\n    /**\r\n     * An optional tooltip to render with the control. This is only used if you inject the\r\n     * tooltip manually yourself.\r\n     *\r\n     * `const TooltippedSelectionControl = injectTooltip(SelectionControl);`\r\n     */\r\n    tooltip: PropTypes.node,\r\n\r\n    /**\r\n     * Boolean if the ink should be disabled for radios or checkboxes.\r\n     *\r\n     * @see {@link Inks#inkDisabled}\r\n     */\r\n    inkDisabled: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional list of ink interactions that should be disabled.\r\n     *\r\n     * @see {@link Inks#disabledInteractions}\r\n     */\r\n    disabledInteractions: PropTypes.arrayOf(PropTypes.oneOf(['keyboard', 'touch', 'mouse'])),\r\n\r\n    /**\r\n     * An optional tab index to apply to the selection control.\r\n     */\r\n    tabIndex: PropTypes.number,\r\n\r\n    checkedIcon: preventDouble(deprecated(\r\n      PropTypes.node,\r\n      'Use the `checkedCheckboxIconChildren` and `checkedCheckboxIconClassName`  or the ' +\r\n      '`checkedRadioIconChildren` and `checkedRadioIconClassName` props instead'\r\n    )),\r\n    uncheckedIcon: preventDouble(deprecated(\r\n      PropTypes.node,\r\n      'Use the `uncheckedCheckboxIconChildren` and `uncheckedCheckboxIconClassName`  or the ' +\r\n      '`uncheckedRadioIconChildren` and `uncheckedRadioIconClassName` props instead'\r\n    )),\r\n    checkedCheckboxIconChildren: deprecated(PropTypes.node, 'Use the `checkedCheckboxIcon` prop instead'),\r\n    checkedCheckboxIconClassName: deprecated(PropTypes.string, 'Use the `checkedCheckboxIcon` prop instead'),\r\n    uncheckedCheckboxIconChildren: deprecated(PropTypes.node, 'Use the `uncheckedCheckboxIcon` prop instead'),\r\n    uncheckedCheckboxIconClassName: deprecated(PropTypes.string, 'Use the `uncheckedCheckboxIcon` prop instead'),\r\n    checkedRadioIconChildren: deprecated(PropTypes.node, 'Use the `checkedRadioIcon` prop instead'),\r\n    checkedRadioIconClassName: deprecated(PropTypes.string, 'Use the `checkedRadioIcon` prop instead'),\r\n    uncheckedRadioIconChildren: deprecated(PropTypes.node, 'Use the `uncheckedRadioIcon` prop instead'),\r\n    uncheckedRadioIconClassName: deprecated(PropTypes.string, 'Use the `uncheckedRadioIcon` prop instead'),\r\n\r\n    /* maybe removed once upgrade again? */\r\n    __superSecreteProp: PropTypes.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    checkedCheckboxIcon: <FontIcon>check_box</FontIcon>,\r\n    uncheckedCheckboxIcon: <FontIcon>check_box_outline_blank</FontIcon>,\r\n    checkedRadioIcon: <FontIcon>radio_button_checked</FontIcon>,\r\n    uncheckedRadioIcon: <FontIcon>radio_button_unchecked</FontIcon>,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n    if (typeof props.checked === 'undefined') {\r\n      this.state.checked = !!props.defaultChecked;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the current checked value from the selection control. This is used when you have\r\n   * an uncontrolled selection control and simply need the checked state from a ref callback.\r\n   *\r\n   * @return {boolean} the checked state for the selection control.\\\r\n   */\r\n  get checked() {\r\n    return getField(this.props, this.state, 'checked');\r\n  }\r\n\r\n  _setInput = (input) => {\r\n    this._input = input;\r\n  };\r\n\r\n  _setControl = (control) => {\r\n    this._control = control;\r\n  };\r\n\r\n  _setContainer = (container) => {\r\n    this._container = container;\r\n  };\r\n\r\n  _getIcon = () => {\r\n    const { checkedIcon, uncheckedIcon, type } = this.props;\r\n    const checked = getField(this.props, this.state, 'checked');\r\n    if (checkedIcon || uncheckedIcon) {\r\n      return checked ? checkedIcon : uncheckedIcon;\r\n    }\r\n\r\n    const prefix = `${checked ? '' : 'un'}checked${capitalizeFirst(type)}Icon`;\r\n    const iconClassName = this.props[`${prefix}ClassName`];\r\n    const children = this.props[`${prefix}Children`];\r\n\r\n    if (iconClassName || children) {\r\n      return <FontIcon iconClassName={iconClassName} inherit>{children}</FontIcon>;\r\n    }\r\n\r\n    const icon = this.props[prefix];\r\n    return icon ? React.cloneElement(icon, { inherit: true }) : null;\r\n  };\r\n\r\n  _handleKeyDown = (e) => {\r\n    if (this.props.onKeyDown) {\r\n      this.props.onKeyDown(e);\r\n    }\r\n\r\n    const key = e.which || e.keyCode;\r\n    if (key === SPACE) {\r\n      this._input.click();\r\n    }\r\n  }\r\n\r\n  _handleChange = (e) => {\r\n    const { type, onChange } = this.props;\r\n    const checked = !getField(this.props, this.state, 'checked');\r\n    if (onChange) {\r\n      onChange(type === 'radio' ? e.target.value : checked, e);\r\n    }\r\n\r\n    if (typeof this.props.checked === 'undefined') {\r\n      this.setState({ checked });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      style,\r\n      className,\r\n      inline,\r\n      type,\r\n      name,\r\n      value,\r\n      disabled,\r\n      labelBefore,\r\n      tabIndex,\r\n      inkDisabled,\r\n      disabledInteractions,\r\n      'aria-label': ariaLabel,\r\n      'aria-labelledby': ariaLabelledBy,\r\n      /* eslint-disable no-unused-vars */\r\n      label: propLabel,\r\n      checked: propChildren,\r\n      onChange,\r\n      tooltip,\r\n      checkedCheckboxIcon,\r\n      uncheckedCheckboxIcon,\r\n      checkedRadioIcon,\r\n      uncheckedRadioIcon,\r\n      __superSecreteProp,\r\n\r\n      // deprecated\r\n      checkedIcon,\r\n      uncheckedIcon,\r\n      checkedRadioIconChildren,\r\n      checkedRadioIconClassName,\r\n      uncheckedRadioIconChildren,\r\n      uncheckedRadioIconClassName,\r\n      checkedCheckboxIconChildren,\r\n      checkedCheckboxIconClassName,\r\n      uncheckedCheckboxIconChildren,\r\n      uncheckedCheckboxIconClassName,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n\r\n    const checked = getField(this.props, this.state, 'checked');\r\n    const isSwitch = type === 'switch';\r\n    const label = this.props.label && <span>{this.props.label}</span>;\r\n\r\n    let control;\r\n    if (isSwitch) {\r\n      control = <SwitchTrack disabled={disabled} checked={checked} />;\r\n    } else {\r\n      control = (\r\n        <AccessibleFakeInkedButton\r\n          inkDisabled={inkDisabled}\r\n          disabledInteractions={disabledInteractions}\r\n          role={type}\r\n          className={cn('md-selection-control-toggle md-btn md-btn--icon', themeColors({\r\n            disabled,\r\n            hint: !checked,\r\n            secondary: checked,\r\n          }))}\r\n          aria-checked={checked}\r\n          tabIndex={tabIndex}\r\n          disabled={disabled}\r\n        >\r\n          {tooltip}\r\n          {this._getIcon()}\r\n        </AccessibleFakeInkedButton>\r\n      );\r\n    }\r\n\r\n\r\n    return (\r\n      <div\r\n        {...props}\r\n        style={style}\r\n        className={cn('md-selection-control-container', {\r\n          'md-selection-control-container--inline': inline,\r\n          'md-switch-container': isSwitch,\r\n        }, className)}\r\n        onKeyDown={this._handleKeyDown}\r\n      >\r\n        <input\r\n          ref={this._setInput}\r\n          id={id}\r\n          type={isSwitch ? 'checkbox' : type}\r\n          checked={checked}\r\n          onChange={this._handleChange}\r\n          disabled={disabled}\r\n          className=\"md-selection-control-input\"\r\n          name={name}\r\n          value={value}\r\n          aria-hidden\r\n          aria-label={ariaLabel}\r\n          aria-labelledby={ariaLabelledBy}\r\n        />\r\n        <label\r\n          htmlFor={id}\r\n          className={cn('md-selection-control-label', {\r\n            'md-pointer--hover': !disabled,\r\n          }, themeColors({ disabled, text: !disabled }))}\r\n        >\r\n          {labelBefore && label}\r\n          {control}\r\n          {!labelBefore && label}\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/** @module utils/StringUtils/capitlizeFirst */\r\n\r\n/**\r\n * Capitalizes the first letter of a string. If the string is falsish, it will be\r\n * returned as is. If the string is only one letter long, it will be capitalized;\r\n *\r\n * @param {String} str - The string to capitalize.\r\n * @return {String} the updated string or false-ish self.\r\n */\r\nexport default function capitalizeFirst(str) {\r\n  if (!str) {\r\n    return str;\r\n  } else if (str.length === 1) {\r\n    return str.toUpperCase();\r\n  }\r\n\r\n  return `${str.charAt(0).toUpperCase()}${str.substring(1, str.length)}`;\r\n}\r\n","/**\r\n * Attempts fo find the base table component from an element in the table.\r\n * This will either be the wrapper for responsive data tables, or the table element.\r\n *\r\n * @param {Object} el - The element to traverse from\r\n * @param {Object} the table or null.\r\n */\r\nexport default function findTable(el) {\r\n  let table;\r\n  let node = el;\r\n  while (node && node.parentNode) {\r\n    if (node.classList) {\r\n      if (node.classList.contains('md-data-table')) {\r\n        table = node;\r\n      } else if (node.classList.contains('md-data-table--responsive')) {\r\n        return node;\r\n      } else if (node.classList.contains('md-data-table__scroll-wrapper')) {\r\n        // fixed-wrapper then responsive\r\n        return node.parentNode.parentNode;\r\n      } else if (table) {\r\n        return table;\r\n      }\r\n    }\r\n\r\n    node = node.parentNode;\r\n  }\r\n\r\n  return null;\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport SelectionControl from '../SelectionControls/SelectionControl';\r\n\r\nimport findTable from './findTable';\r\n\r\nexport default class TableCheckbox extends Component {\r\n  static propTypes = {\r\n    index: PropTypes.number,\r\n    checked: PropTypes.bool,\r\n  };\r\n\r\n  static contextTypes = {\r\n    rowId: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]).isRequired,\r\n    baseName: PropTypes.string.isRequired,\r\n    indeterminate: PropTypes.bool,\r\n    checkedIcon: PropTypes.element,\r\n    uncheckedIcon: PropTypes.element,\r\n    indeterminateIcon: PropTypes.element,\r\n    checkboxHeaderLabel: PropTypes.string.isRequired,\r\n    checkboxLabelTemplate: PropTypes.oneOfType([\r\n      PropTypes.func,\r\n      PropTypes.string,\r\n    ]).isRequired,\r\n    createCheckbox: PropTypes.func.isRequired,\r\n    removeCheckbox: PropTypes.func.isRequired,\r\n    header: PropTypes.bool,\r\n    footer: PropTypes.bool,\r\n    fixedHeader: PropTypes.bool.isRequired,\r\n    fixedFooter: PropTypes.bool.isRequired,\r\n  };\r\n\r\n  _td = null;\r\n  _header = false;\r\n\r\n  _handleMount = (td) => {\r\n    if (td) {\r\n      const header = findTable(td).querySelector('thead');\r\n      const index = td.parentNode.rowIndex - (header ? 1 : 0);\r\n\r\n      if (td.parentNode.parentNode.tagName === 'TBODY') {\r\n        this.context.createCheckbox(index);\r\n      }\r\n      this._td = td;\r\n      this._header = header;\r\n    } else if (this._td) {\r\n      const index = this._td.parentNode.rowIndex;\r\n      this.context.removeCheckbox(index - (this._header ? 1 : 0));\r\n      this._td = null;\r\n      this._header = false;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { checked, index, ...props } = this.props;\r\n    const {\r\n      checkedIcon,\r\n      uncheckedIcon,\r\n      indeterminateIcon,\r\n      indeterminate,\r\n      header,\r\n      footer,\r\n      rowId,\r\n      baseName,\r\n      checkboxHeaderLabel,\r\n      checkboxLabelTemplate,\r\n    } = this.context;\r\n\r\n    const Cell = header ? 'th' : 'td';\r\n    let label;\r\n    if (header) {\r\n      label = checkboxHeaderLabel;\r\n    } else if (typeof checkboxLabelTemplate === 'function') {\r\n      label = checkboxLabelTemplate(index);\r\n    } else {\r\n      label = checkboxLabelTemplate.replace(/{{row}}/g, index);\r\n    }\r\n\r\n    let content = (\r\n      <SelectionControl\r\n        {...props}\r\n        id={rowId}\r\n        name={`${baseName}-checkbox`}\r\n        type=\"checkbox\"\r\n        checked={checked}\r\n        checkedCheckboxIcon={checkedIcon}\r\n        uncheckedCheckboxIcon={header && indeterminate ? indeterminateIcon : uncheckedIcon}\r\n        aria-label={label}\r\n      />\r\n    );\r\n    const fixedHeader = header && this.context.fixedHeader;\r\n    const fixedFooter = footer && this.context.fixedFooter;\r\n\r\n    if (fixedHeader) {\r\n      content = (\r\n        <div\r\n          className={cn('md-table-column__fixed', {\r\n            'md-table-column__fixed--header': fixedHeader,\r\n            'md-table-column__fixed--footer': fixedFooter,\r\n          })}\r\n        >\r\n          {React.cloneElement(content, {\r\n            className: cn({\r\n              'md-table-checkbox--header': header,\r\n              'md-table-checkbox--footer': footer,\r\n            }),\r\n          })}\r\n        </div>\r\n      );\r\n    }\r\n\r\n\r\n    return (\r\n      <Cell\r\n        className={cn('md-table-checkbox', {\r\n          'md-table-column--fixed': fixedHeader,\r\n        })}\r\n        scope={header ? 'col' : undefined}\r\n        ref={this._handleMount}\r\n      >\r\n        {content}\r\n      </Cell>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, Children, cloneElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport deprecated from 'react-prop-types/lib/deprecated';\r\nimport cn from 'classnames';\r\n\r\nimport getField from '../utils/getField';\r\nimport headerContextTypes from './headerContextTypes';\r\nimport rowContextTypes from './rowContextTypes';\r\nimport TableCheckbox from './TableCheckbox';\r\n\r\n/**\r\n * A component for displaying a row in a `DataTable`. This will\r\n * automatically add a `Checkbox` component to the row if it is not\r\n * a `plain` table.\r\n */\r\nexport default class TableRow extends Component {\r\n  static propTypes = {\r\n    /**\r\n     * An optional style to apply.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the row.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * A single or list of `TableColumn` to display in the table.\r\n     *\r\n     * > The specs \"require\" at least 3 columns for a non-plain data table, but that isn't\r\n     * strictly enforced here.\r\n     */\r\n    children: PropTypes.oneOfType([\r\n      PropTypes.element,\r\n      PropTypes.arrayOf(PropTypes.element),\r\n    ]).isRequired,\r\n\r\n    /**\r\n     * An optional onClick function to call when a row is clicked.\r\n     */\r\n    onClick: PropTypes.func,\r\n\r\n    /**\r\n     * A function to call when the checkbox is clicked. This\r\n     * function will will be called with `(rowIndex, checked, event)`.\r\n     * The `TableBody` and `TableHeader` components will automatically\r\n     * merge in a function to toggle the checkbox.\r\n     */\r\n    onCheckboxClick: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call onMouseOver.\r\n     */\r\n    onMouseOver: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call onMouseLeave.\r\n     */\r\n    onMouseLeave: PropTypes.func,\r\n\r\n    /**\r\n     * Boolean if the row is currently selected. If this value will be\r\n     * injected by the `TableHeader` or `TableBody` component.\r\n     */\r\n    selected: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the current row is selectable. This value will take precedence over anything inherited\r\n     * by the `DataTable`.\r\n     */\r\n    selectable: PropTypes.bool,\r\n\r\n    autoAdjust: deprecated(PropTypes.bool, 'Manually specify `grow` on one of the columns instead'),\r\n  };\r\n\r\n  static contextTypes = headerContextTypes;\r\n  static childContextTypes = rowContextTypes;\r\n\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.state = { hover: false };\r\n  }\r\n\r\n  getChildContext() {\r\n    const { baseId, ...context } = this.context;\r\n    const id = `${baseId}-${this._row ? this._row.rowIndex : null}`;\r\n    return {\r\n      ...context,\r\n      rowId: context.header ? `${baseId}-toggle-all` : id,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Need to ignore adding the hover state if the mouse is over a menu/menu item\r\n   * or the edit dialog is open.\r\n   *\r\n   * @param {Function} classList - the classList to use for checking cn\r\n   * @return {Boolean} true if the hover state should be ignored for this classList\r\n   */\r\n  _ignoreHoverState(classList) {\r\n    return classList.contains('md-list--menu') || classList.contains('md-edit-dialog');\r\n  }\r\n\r\n  _handleMouseOver = (e) => {\r\n    if (this.props.onMouseOver) {\r\n      this.props.onMouseOver(e);\r\n    }\r\n\r\n    if (this.context.header) {\r\n      return;\r\n    }\r\n\r\n    let target = e.target;\r\n    while (target && target.parentNode) {\r\n      if (target.classList && this._ignoreHoverState(target.classList)) {\r\n        this.setState({ hover: false });\r\n        return;\r\n      }\r\n\r\n      target = target.parentNode;\r\n    }\r\n\r\n    this.setState({ hover: true });\r\n  };\r\n\r\n  _handleMouseLeave = (e) => {\r\n    if (this.props.onMouseLeave) {\r\n      this.props.onMouseLeave(e);\r\n    }\r\n\r\n    if (this.context.header) {\r\n      return;\r\n    }\r\n\r\n    this.setState({ hover: false });\r\n  };\r\n\r\n  _handleCheckboxClick = (checked, e) => {\r\n    const { rowIndex } = this._row;\r\n    if (this.props.onCheckboxClick) {\r\n      this.props.onCheckboxClick(rowIndex, checked, e);\r\n    }\r\n\r\n    this.context.toggleSelectedRow(rowIndex, this.context.header, e);\r\n  };\r\n\r\n  _setRow = (row) => {\r\n    this._row = row;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      className,\r\n      children,\r\n      selected,\r\n      selectable,\r\n      /* eslint-disable no-unused-vars */\r\n      onCheckboxClick,\r\n      // deprecated\r\n      autoAdjust,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n\r\n    const { hover } = this.state;\r\n\r\n    let checkbox;\r\n    if (typeof selectable !== 'undefined' ? selectable : (!this.context.plain && this.context.selectableRows)) {\r\n      checkbox = (\r\n        <TableCheckbox\r\n          key=\"checkbox\"\r\n          checked={selected}\r\n          onChange={this._handleCheckboxClick}\r\n          index={this._row ? this._row.rowIndex : null}\r\n        />\r\n      );\r\n    }\r\n\r\n    const length = Children.count(children) - 1;\r\n    const columns = Children.map(Children.toArray(children), (col, i) => {\r\n      let adjusted = col.props.adjusted;\r\n      if (typeof adjusted === 'undefined') {\r\n        adjusted = i === length ? false : undefined;\r\n      }\r\n\r\n      return cloneElement(col, {\r\n        cellIndex: i + (checkbox ? 1 : 0),\r\n        header: getField(col.props, this.context, 'header'),\r\n        adjusted,\r\n      });\r\n    });\r\n\r\n    return (\r\n      <tr\r\n        {...props}\r\n        ref={this._setRow}\r\n        className={cn('md-table-row', className, {\r\n          'md-table-row--hover': hover,\r\n          'md-table-row--active': !this.context.header && selected,\r\n        })}\r\n        onMouseOver={this._handleMouseOver}\r\n        onMouseLeave={this._handleMouseLeave}\r\n      >\r\n        {checkbox}\r\n        {columns}\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport deprecated from 'react-prop-types/lib/deprecated';\r\n\r\nimport themeColors from '../utils/themeColors';\r\nimport getCollapserStyles from '../utils/getCollapserStyles';\r\nimport getField from '../utils/getField';\r\nimport injectTooltip from '../Tooltips/injectTooltip';\r\nimport FontIcon from '../FontIcons/FontIcon';\r\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\r\nimport IconSeparator from '../Helpers/IconSeparator';\r\n\r\nconst CELL_SCOPE = {\r\n  header: {\r\n    scope: 'col',\r\n  },\r\n  noop: {},\r\n};\r\n\r\n/**\r\n * A column in a table. This is either the `th` or `td` component.\r\n */\r\nclass TableColumn extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * An optional style to apply.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * The optional className for the table column\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the surrounding div when the DataTable has been\r\n     * set to include a fixed header or a fixed footer.\r\n     */\r\n    fixedStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the surrounding div when the DataTable has been\r\n     * set to include a fixed header or a fixed footer.\r\n     */\r\n    fixedClassName: PropTypes.string,\r\n\r\n    /**\r\n     * The children to display in the column.\r\n     */\r\n    children: PropTypes.node,\r\n\r\n    /**\r\n     * Boolean if the column is currently sorted. If this prop is not `undefined`,\r\n     * it will add the sort icon unto this column. You will also need to use the\r\n     * `onClick` function to toggle the `sorted` prop as well as handling the sorting\r\n     * of data.\r\n     *\r\n     * This value should really only be set in the `TableHeader` component.\r\n     */\r\n    sorted: PropTypes.bool,\r\n\r\n    /**\r\n     * The icon to show when a column is sortable.\r\n     */\r\n    sortIcon: PropTypes.element,\r\n\r\n    /**\r\n     * Boolean if the sortIcon should appear before the text in the column.\r\n     */\r\n    sortIconBefore: PropTypes.bool,\r\n\r\n    /**\r\n     * A boolean if the column has numeric data. It will right-align the data.\r\n     */\r\n    numeric: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the table column should gain the `.md-data-table--adjusted` class name. By default,\r\n     * every column will gain this class name unless it is an `EditDialogColumn`, a `SelectFieldColumn`,\r\n     * or the `grow` prop is enabled.\r\n     */\r\n    adjusted: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the column should expand to fill any remaining width in the container. There should\r\n     * really only be one column with the `grow` prop enabled. In addition, it should really only be\r\n     * applied to one of the columns in the TableHeader.\r\n     */\r\n    grow: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if this column is the `th` for a column of `SelectFieldColumn`. This will apply\r\n     * additional styling to the column to position with the select field.\r\n     */\r\n    selectColumnHeader: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if this is a `th` component. This value **should** be set\r\n     * automatically for you if it is in the `TableHeader` component.\r\n     */\r\n    header: PropTypes.bool.isRequired,\r\n\r\n    /**\r\n     * The optional tooltip to render on hover.\r\n     */\r\n    tooltipLabel: PropTypes.node,\r\n\r\n    /**\r\n     * An optional delay to apply to the tooltip before it appears.\r\n     */\r\n    tooltipDelay: PropTypes.number,\r\n\r\n    /**\r\n     * The position of the tooltip.\r\n     */\r\n    tooltipPosition: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\r\n\r\n    /**\r\n     * The injected tooltip.\r\n     * @access private\r\n     */\r\n    tooltip: PropTypes.node,\r\n\r\n    /**\r\n     * Boolean if the `TableColumn` should gain the `plain` styles. This means that the text\r\n     * in the column can wrap and there is no height limit enforced with some additional padding.\r\n     */\r\n    plain: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional scope to apply to the table column. If omitted, the scope will be set to\r\n     * `'col'` if inside of the `TableHeader` component. This is really only needed for\r\n     * header columns.\r\n     */\r\n    scope: PropTypes.oneOf(['row', 'col']),\r\n\r\n    /**\r\n     * This is injected by the `TableRow` component to help with generating ids\r\n     * @access private\r\n     */\r\n    cellIndex: PropTypes.number,\r\n    sortIconChildren: deprecated(PropTypes.node, 'Use the `sortIcon` prop instead'),\r\n    sortIconClassName: deprecated(PropTypes.string, 'Use the `sortIcon` prop instead'),\r\n  };\r\n\r\n  static defaultProps = {\r\n    header: false,\r\n    adjusted: true,\r\n    sortIcon: <FontIcon>arrow_upward</FontIcon>,\r\n    sortIconBefore: true,\r\n  };\r\n\r\n  static contextTypes = {\r\n    plain: PropTypes.bool,\r\n    footer: PropTypes.bool,\r\n    fixedHeader: PropTypes.bool,\r\n    fixedFooter: PropTypes.bool,\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      className,\r\n      fixedStyle,\r\n      fixedClassName,\r\n      numeric,\r\n      header,\r\n      children,\r\n      sorted,\r\n      sortIcon,\r\n      tooltip,\r\n      selectColumnHeader,\r\n      adjusted,\r\n      grow,\r\n      sortIconBefore,\r\n      /* eslint-disable no-unused-vars */\r\n      plain: propPlain,\r\n      scope: propScope,\r\n      cellIndex,\r\n\r\n      // deprecated\r\n      sortIconChildren,\r\n      sortIconClassName,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n\r\n    const sortable = typeof sorted === 'boolean';\r\n    const plain = getField(this.props, this.context, 'plain');\r\n    const Component = header ? 'th' : 'td';\r\n    const scope = getField(this.props, CELL_SCOPE[header ? 'header' : 'noop'], 'scope');\r\n\r\n    let displayedChildren = children;\r\n    let ariaSort;\r\n    if (sortable) {\r\n      ariaSort = sorted ? 'ascending' : 'descending';\r\n      const icon = React.Children.only(getDeprecatedIcon(sortIconClassName, sortIconChildren, sortIcon));\r\n      displayedChildren = (\r\n        <IconSeparator label={children} iconBefore={sortIconBefore}>\r\n          {React.cloneElement(icon, { className: getCollapserStyles({ flipped: !sorted }, icon.props.className) })}\r\n        </IconSeparator>\r\n      );\r\n    }\r\n\r\n    const fixedHeader = header && this.context.fixedHeader;\r\n    const fixedFooter = this.context.footer && this.context.fixedFooter;\r\n    const fixed = fixedHeader || fixedFooter;\r\n    const baseClassNames = themeColors({ text: !header, hint: header }, {\r\n      'md-table-column--relative': tooltip,\r\n      'md-table-column--select-field': selectColumnHeader,\r\n    });\r\n\r\n    const mergedClassNames = cn({\r\n      'md-table-column--header': header,\r\n      'md-table-column--data': !header && !plain,\r\n      'md-table-column--plain': !header && plain,\r\n      'md-table-column--adjusted': adjusted && !grow && !selectColumnHeader,\r\n      'md-table-column--grow': grow,\r\n      'md-table-column--sortable md-pointer--hover': sortable,\r\n      [baseClassNames]: !fixed,\r\n    }, className);\r\n\r\n    if (fixed) {\r\n      displayedChildren = (\r\n        <div\r\n          className={cn('md-table-column__fixed', {\r\n            'md-table-column__fixed--header': fixedHeader,\r\n            'md-table-column__fixed--footer': fixedFooter,\r\n          })}\r\n        >\r\n          <div\r\n            style={fixedStyle}\r\n            className={cn(baseClassNames, mergedClassNames, 'md-table-column__fixed--flex', {\r\n              'md-table-column__fixed--flex-right': numeric,\r\n            }, fixedClassName)}\r\n          >\r\n            {tooltip}\r\n            {displayedChildren}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Component\r\n        aria-sort={ariaSort}\r\n        {...props}\r\n        scope={scope}\r\n        className={cn('md-table-column', {\r\n          'md-table-column--fixed': fixed,\r\n          'md-text-left': !numeric && !fixed,\r\n          'md-text-right': numeric && !fixed,\r\n        }, mergedClassNames)}\r\n      >\r\n        {!fixedHeader && !fixedFooter && tooltip}\r\n        {displayedChildren}\r\n      </Component>\r\n    );\r\n  }\r\n}\r\n\r\nexport default injectTooltip(TableColumn);\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport TICK from '../constants/CSSTransitionGroupTick';\r\nimport themeColors from '../utils/themeColors';\r\nimport FontIcon from '../FontIcons/FontIcon';\r\nimport AccessibleFakeInkedButton from '../Helpers/AccessibleFakeInkedButton';\r\nimport IconSeparator from '../Helpers/IconSeparator';\r\nimport Paper from '../Papers/Paper';\r\nimport TextFieldDivider from '../TextFields/TextFieldDivider';\r\n\r\nexport default class SelectFieldInput extends PureComponent {\r\n  static propTypes = {\r\n    id: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    name: PropTypes.string,\r\n    value: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]).isRequired,\r\n    disabled: PropTypes.bool,\r\n    required: PropTypes.bool,\r\n    label: PropTypes.node,\r\n    placeholder: PropTypes.string,\r\n    active: PropTypes.bool,\r\n    activeLabel: PropTypes.node,\r\n    below: PropTypes.bool,\r\n    error: PropTypes.bool,\r\n    toolbar: PropTypes.bool,\r\n    dropdownIcon: PropTypes.element,\r\n    iconClassName: PropTypes.string,\r\n    iconChildren: PropTypes.node,\r\n    transitionName: PropTypes.string.isRequired,\r\n    transitionTime: PropTypes.number.isRequired,\r\n    lineDirection: TextFieldDivider.propTypes.lineDirection,\r\n  };\r\n\r\n  static defaultProps = {\r\n    transitionName: 'md-drop',\r\n    transitionTime: 300,\r\n  };\r\n\r\n  state = { transition: null };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (this.props.value !== nextProps.value) {\r\n      this._transitionNewValue();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this._timeout) {\r\n      clearTimeout(this._timeout);\r\n    }\r\n  }\r\n\r\n  _timeout = null;\r\n  _transitionNewValue = () => {\r\n    const { transitionTime, transitionName } = this.props;\r\n    if (this._timeout) {\r\n      clearTimeout(this._timeout);\r\n    }\r\n\r\n    this._timeout = setTimeout(() => {\r\n      this._timeout = setTimeout(() => {\r\n        this._timeout = null;\r\n        this.setState({ transition: null });\r\n      }, transitionTime);\r\n\r\n      this.setState({ transition: `${this.state.transition} ${transitionName}-enter-active` });\r\n    }, TICK);\r\n\r\n    this.setState({ transition: `${transitionName}-enter` });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      className,\r\n      name,\r\n      value,\r\n      label,\r\n      placeholder,\r\n      active,\r\n      activeLabel,\r\n      error,\r\n      disabled,\r\n      required,\r\n      toolbar,\r\n      below,\r\n      lineDirection,\r\n      dropdownIcon,\r\n\r\n      // deprecated\r\n      iconChildren,\r\n      iconClassName,\r\n      /* eslint-disable no-unused-vars */\r\n      transitionName,\r\n      transitionTime,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n\r\n    const { transition } = this.state;\r\n\r\n    let divider;\r\n    if (!below && !toolbar) {\r\n      divider = (\r\n        <TextFieldDivider\r\n          key=\"text-divider\"\r\n          active={active}\r\n          error={error}\r\n          lineDirection={lineDirection}\r\n          className=\"md-divider--select-field\"\r\n        />\r\n      );\r\n    }\r\n\r\n    let visibleLabel = activeLabel;\r\n    if (!activeLabel && activeLabel !== 0) {\r\n      visibleLabel = ((!label || active) && placeholder) || '';\r\n    }\r\n\r\n    const labelActive = !!activeLabel || activeLabel === 0;\r\n\r\n    let icon = dropdownIcon;\r\n    if (iconClassName || iconChildren) {\r\n      icon = <FontIcon iconClassName={iconClassName}>{iconChildren}</FontIcon>;\r\n    }\r\n    icon = React.cloneElement(icon, { disabled });\r\n\r\n    return (\r\n      <AccessibleFakeInkedButton\r\n        {...props}\r\n        id={`${id}-toggle`}\r\n        role=\"listbox\"\r\n        disabled={disabled}\r\n        component={Paper}\r\n        zDepth={below && active ? 1 : 0}\r\n        inkDisabled={!below}\r\n        className={cn('md-select-field', themeColors({\r\n          disabled,\r\n          hint: !labelActive && placeholder,\r\n          text: labelActive,\r\n        }), className)}\r\n      >\r\n        <IconSeparator\r\n          label={visibleLabel}\r\n          labelClassName={transition}\r\n          className={cn('md-text-field', {\r\n            'md-text-field--margin': !below && !label,\r\n            'md-text-field--floating-margin': label,\r\n            'md-text-field--toolbar': toolbar && !below,\r\n            'md-select-field--text-field': !below,\r\n            'md-select-field--btn': below,\r\n          })}\r\n        >\r\n          {icon}\r\n        </IconSeparator>\r\n        {divider}\r\n        <input\r\n          key=\"value\"\r\n          type=\"hidden\"\r\n          id={id}\r\n          name={name}\r\n          value={value}\r\n          required={required}\r\n          disabled={disabled}\r\n        />\r\n      </AccessibleFakeInkedButton>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport addSuffix from '../utils/StringUtils/addSuffix';\r\nimport isValued from '../utils/isValued';\r\nimport FloatingLabel from '../TextFields/FloatingLabel';\r\nimport TextFieldMessage from '../TextFields/TextFieldMessage';\r\n\r\nimport SelectFieldInput from './SelectFieldInput';\r\n\r\nexport default class SelectFieldToggle extends PureComponent {\r\n  static propTypes = {\r\n    id: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    inputStyle: PropTypes.object,\r\n    inputClassName: PropTypes.string,\r\n    activeLabel: PropTypes.node,\r\n    value: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n    required: PropTypes.bool,\r\n    disabled: PropTypes.bool,\r\n    label: PropTypes.string,\r\n    placeholder: PropTypes.string,\r\n    active: PropTypes.bool,\r\n    error: PropTypes.bool,\r\n    errorText: PropTypes.node,\r\n    helpText: PropTypes.node,\r\n    helpOnFocus: PropTypes.bool,\r\n    below: PropTypes.bool,\r\n    visible: PropTypes.bool,\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      style,\r\n      className,\r\n      inputStyle,\r\n      inputClassName,\r\n      required,\r\n      disabled,\r\n      active,\r\n      error,\r\n      errorText,\r\n      helpText,\r\n      helpOnFocus,\r\n      visible,\r\n      activeLabel,\r\n      /* eslint-disable no-unused-vars */\r\n      label: propLabel,\r\n      placeholder: propPlaceholder,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n\r\n    let { label, placeholder } = this.props;\r\n    if (required) {\r\n      if (label) {\r\n        label = addSuffix(label, '*');\r\n      }\r\n\r\n      if (placeholder && !label) {\r\n        placeholder = addSuffix(placeholder, '*');\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div style={style} className={cn('md-select-field__toggle', className)}>\r\n        <FloatingLabel\r\n          label={label}\r\n          htmlFor={id}\r\n          active={active || visible}\r\n          error={error}\r\n          floating={isValued(activeLabel) || active || visible}\r\n          disabled={disabled}\r\n        />\r\n        <SelectFieldInput\r\n          {...props}\r\n          id={id}\r\n          style={inputStyle}\r\n          className={inputClassName}\r\n          label={label}\r\n          placeholder={placeholder}\r\n          activeLabel={activeLabel}\r\n          active={active}\r\n          error={error}\r\n          disabled={disabled}\r\n        />\r\n        <TextFieldMessage\r\n          active={active || visible}\r\n          error={error}\r\n          errorText={errorText}\r\n          helpText={helpText}\r\n          helpOnFocus={helpOnFocus}\r\n          leftIcon={false}\r\n          rightIcon={false}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { findDOMNode } from 'react-dom';\r\nimport cn from 'classnames';\r\nimport deprecated from 'react-prop-types/lib/deprecated';\r\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\r\n\r\nimport { UP, DOWN, ESC, TAB, ZERO, NINE, KEYPAD_ZERO, KEYPAD_NINE } from '../constants/keyCodes';\r\nimport omit from '../utils/omit';\r\nimport isValued from '../utils/isValued';\r\nimport getField from '../utils/getField';\r\nimport isBetween from '../utils/NumberUtils/isBetween';\r\nimport handleKeyboardAccessibility from '../utils/EventUtils/handleKeyboardAccessibility';\r\nimport controlled from '../utils/PropTypes/controlled';\r\nimport FontIcon from '../FontIcons/FontIcon';\r\nimport anchorShape from '../Helpers/anchorShape';\r\nimport fixedToShape from '../Helpers/fixedToShape';\r\nimport positionShape from '../Helpers/positionShape';\r\nimport Menu from '../Menus/Menu';\r\nimport ListItem from '../Lists/ListItem';\r\n\r\nimport SelectFieldToggle from './SelectFieldToggle';\r\n\r\nconst MOBILE_LIST_PADDING = 8;\r\nconst ARIA_ACTIVE = 'aria-activedescendant';\r\n\r\nexport default class SelectField extends PureComponent {\r\n  static HorizontalAnchors = Menu.HorizontalAnchors;\r\n  static VerticalAnchors = Menu.VerticalAnchors;\r\n  static Positions = Menu.Positions;\r\n\r\n  static propTypes = {\r\n    /**\r\n     * An id to give the select field. This is required for accessibility.\r\n     */\r\n    id: isRequiredForA11y(PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ])),\r\n\r\n    /**\r\n     * An optional name to give to the select field.\r\n     */\r\n    name: PropTypes.string,\r\n\r\n    /**\r\n     * An optional id to provide to the select field's menu. If this is omitted,\r\n     * it will default to `${id}-menu`.\r\n     */\r\n    menuId: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * An optional id to provide to the select field's list.\r\n     *\r\n     * @see {@link #menuId}\r\n     * @see {@link Menus/Menu#menuId}\r\n     */\r\n    listId: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * An optional style to apply to the select field's container (the menu).\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the select field's container (the menu).\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the menu's list.\r\n     */\r\n    listStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the menu's list.\r\n     */\r\n    listClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the select field's toggle.\r\n     */\r\n    toggleStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the select field's toggle.\r\n     */\r\n    toggleClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the `AccessibleFakeInkedButton` that is the trigger\r\n     * for the select field.\r\n     */\r\n    inputStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the `AccessibleFakeInkedButton` that is the trigger\r\n     * for the select field.\r\n     */\r\n    inputClassName: PropTypes.string,\r\n\r\n    /**\r\n     * Boolean if the select field should be have the menu's list visible by default.\r\n     */\r\n    defaultVisible: PropTypes.bool.isRequired,\r\n\r\n    /**\r\n     * Boolean if the select field should have the menu's list visible. This will make\r\n     * the select field controlled and require the `onVisibilityChange` prop to be defined,\r\n     */\r\n    visible: controlled(PropTypes.bool, 'onVisibilityChange', 'defaultVisible'),\r\n\r\n    /**\r\n     * An optional function to call when the select field's menu has it's visibility changed. The callback\r\n     * will include the next visible state and the event that triggered it.\r\n     */\r\n    onVisibilityChange: PropTypes.func,\r\n\r\n    /**\r\n     * A list of `number`, `string`, or `object` that should be used to create `ListItem`\r\n     * in the menu's list. When it is an `object`, it will use the `itemLabel` prop as the\r\n     * `primaryText` and use the value of `itemValue`.\r\n     *\r\n     * @see {@link #itemLabel}\r\n     * @see {@link #itemValue}\r\n     */\r\n    menuItems: PropTypes.arrayOf(PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n      PropTypes.object,\r\n      PropTypes.element,\r\n    ])).isRequired,\r\n\r\n    /**\r\n     * The amount of time that a list of letters should be used when finding a menu item\r\n     * while typing. Since a user can select items by typing multiple letters in a row,\r\n     * this will be used as the timeout for clearing those letters.\r\n     *\r\n     * For example:\r\n     * - User types `g`\r\n     *\r\n     * Full match is now `'g'`.\r\n     *\r\n     * - User delays 200ms and types `u`\r\n     *\r\n     * Full match is now `'gu'`\r\n     *\r\n     * - User delays 1000ms and types `a`.\r\n     *\r\n     * Full match is now `'a'`\r\n     */\r\n    keyboardMatchingTimeout: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * The key to use for extracting a menu item's label if the menu item is an object.\r\n     *\r\n     * Example:\r\n     *\r\n     * ```js\r\n     * const item = { something: 'My Label', somethingElse: 'value' };\r\n     * const itemLabel = 'something';\r\n     * const itemValue = 'somethingElse';\r\n     * ```\r\n     */\r\n    itemLabel: PropTypes.string.isRequired,\r\n\r\n    /**\r\n     * The key to use for extracting a menu item's value if the menu item is an object.\r\n     *\r\n     * Example:\r\n     *\r\n     * ```js\r\n     * const item = { something: 'My Label', somethingElse: 'value' };\r\n     * const itemLabel = 'something';\r\n     * const itemValue = 'somethingElse';\r\n     * ```\r\n     */\r\n    itemValue: PropTypes.string.isRequired,\r\n\r\n    /**\r\n     * The key to use for extracting a menu item's function\r\n     * to get additional `ListItem` props if the menu item is an object.\r\n     *\r\n     * Example:\r\n     *\r\n     * ```js\r\n     * const item = { something: 'My Label', addProps: ({active}) => active ? {secondaryText: 'some text'} : null };\r\n     * const itemLabel = 'something';\r\n     * const itemProps = 'addProps';\r\n     * ```\r\n     *\r\n     * @see {@link #getItemProps}\r\n     */\r\n    itemProps: PropTypes.string.isRequired,\r\n\r\n    /**\r\n     * An optional function to get additional `ListItem` props if the menu item is an object.\r\n     *\r\n     * An object with the following fields will be passed into the function:\r\n     * - `index` - item's index\r\n     * - `active` - whether item is active\r\n     * - `disabled` - whether item is disabled\r\n     * - `itemValue` - item's value\r\n     * - `value` - current list value\r\n     * - `props` - default `ListItem` props\r\n     * - `item` - source item's data\r\n     * - `field` - reference to the component instance\r\n     */\r\n    getItemProps: PropTypes.func,\r\n\r\n    /**\r\n     * The default value to use for the select field. If this is set, it should either match\r\n     * one of the `number` or `string` in your `menuItems` list or be the empty string. If\r\n     * the `menuItems` is a list of `object`, this value should match one of the menu item's\r\n     * `itemValue` or be the empty string.\r\n     *\r\n     * ```js\r\n     * const menuItems = [{ label: 'Something': value: 0 }, { label: 'Something else', value: 1 }];\r\n     *\r\n     * // both valid\r\n     * defaultValue={0}\r\n     * defaultValue=\"\"\r\n     * ```\r\n     */\r\n    defaultValue: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]).isRequired,\r\n\r\n    /**\r\n     * The value to use for the select field. If this is defined, it becomes a controlled component\r\n     * and requires the `onChange` prop to be defined. See the `defaultValue` for more behavior info.\r\n     *\r\n     * @see {@link #defaultValue}\r\n     */\r\n    value: controlled(PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]), 'onChange', 'defaultValue'),\r\n\r\n    /**\r\n     * An optional function to call when the select field's value has been changed either when the user\r\n     * has click/touched/keyboard selected a value in the list, or the user has selected a value by typing\r\n     * in the select field while the menu's list is closed.\r\n     *\r\n     * The callback will include the next text field value, the selected item's index, the event that\r\n     * triggered the change, and the id, name, and value of the select field.\r\n     *\r\n     * ```js\r\n     * onChange(value, index, event, { id, name, value });\r\n     * ```\r\n     */\r\n    onChange: PropTypes.func,\r\n\r\n    /**\r\n     * An optional label to use with the select field. This will be a floating label as seen on the text field.\r\n     */\r\n    label: PropTypes.node,\r\n\r\n    /**\r\n     * An optional placeholder to use in the select field. This will only appear when no value has been selected.\r\n     */\r\n    placeholder: PropTypes.string,\r\n\r\n    /**\r\n     * Boolean if the select field should be disabled.\r\n     */\r\n    disabled: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the select field is required. This will update the label and placeholder to include a `*` suffix.\r\n     */\r\n    required: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the select field is considered to be in an `error` state.\r\n     *\r\n     * @see {@link TextFields/TextField#error}\r\n     */\r\n    error: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional text to display when the text select field is in an error state.\r\n     *\r\n     * @see {@link TextFields/TextField#errorText}\r\n     */\r\n    errorText: PropTypes.node,\r\n\r\n    /**\r\n     * An optional text to display below the select field to provide input help to the user.\r\n     * This will only be displayed if the select field is not in an error state.\r\n     *\r\n     * @see {@link #helpOnFocus}\r\n     * @see {@link TextFields/TextField#errorText}\r\n     */\r\n    helpText: PropTypes.node,\r\n\r\n    /**\r\n     * Boolean if the `helpText` should only appear on focus.\r\n     *\r\n     * @see {@link #helpText}\r\n     * @see {@link TextFields/TextField#helpOnFocus}\r\n     */\r\n    helpOnFocus: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional function to call when any element in the select field has been clicked.\r\n     */\r\n    onClick: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `keydown` event has been triggered anywhere in the\r\n     * select field.\r\n     */\r\n    onKeyDown: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the select field's toggle has gained focus.\r\n     */\r\n    onFocus: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the select field's toggle has been blurred. This\r\n     * will be triggered if the user hits the up or down arrow keys to traverse the list\r\n     * of items.\r\n     */\r\n    onBlur: PropTypes.func,\r\n\r\n    /**\r\n     * The icon to use to display the dropdown arrow.\r\n     */\r\n    dropdownIcon: PropTypes.element,\r\n\r\n    /**\r\n     * Boolean if the select field is in a toolbar. This should automatically be injected by the `Toolbar`\r\n     * component if being used as a `titleMenu` or one of the `actions`.\r\n     *\r\n     * @see {@link Toolbars/Toolbar#titleMenu}\r\n     * @see {@link Toolbars/Toolbar#actions}\r\n     */\r\n    toolbar: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the currently active item should be removed from the list of available `menuItems`.\r\n     * If this is `undefined`, it will strip out the active one only when the\r\n     * `position === SelectField.Positions.BELOW`.\r\n     */\r\n    stripActiveItem: PropTypes.bool,\r\n\r\n    /**\r\n     * The transition name to use when a new value has been selected. By default, it will have the\r\n     * new item _drop_ into the select field's input location.\r\n     */\r\n    transitionName: PropTypes.string.isRequired,\r\n\r\n    /**\r\n     * The transition time to use when a new value has been selected. If this value is `0`, there\r\n     * will be no transition.\r\n     */\r\n    transitionTime: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * This is how the menu's `List` gets anchored to the select field.\r\n     *\r\n     * @see {@link Helpers/Layover#anchor}\r\n     */\r\n    anchor: anchorShape,\r\n\r\n    /**\r\n     * This is the anchor to use when the `position` is set to `Autocomplete.Positions.BELOW`.\r\n     *\r\n     * @see {@link Helpers/Layover#belowAnchor}\r\n     */\r\n    belowAnchor: anchorShape,\r\n\r\n    /**\r\n     * This is the animation position for the list that appears.\r\n     *\r\n     * @see {@link Helpers/Layover#animationPosition}\r\n     */\r\n    position: positionShape,\r\n\r\n    /**\r\n     * This is how the menu's list will be \"fixed\" to the `toggle` component.\r\n     *\r\n     * @see {@link Helpers/Layover#fixedTo}\r\n     */\r\n    fixedTo: fixedToShape,\r\n\r\n    /**\r\n     * Boolean if the menu's list should appear horizontally instead of vertically.\r\n     */\r\n    listInline: PropTypes.bool,\r\n\r\n    /**\r\n     * The list's z-depth for applying box shadow. This should be a number from 0 to 5.\r\n     */\r\n    listZDepth: PropTypes.number,\r\n\r\n    /**\r\n     * Boolean if the list should have its height restricted to the `$md-menu-mobile-max-height`/\r\n     * `$md-menu-desktop-max-height` values.\r\n     *\r\n     * @see [md-menu-mobile-max-height](/components/menus?tab=1#variable-md-menu-mobile-max-height)\r\n     * @see [md-menu-desktop-max-height](/components/menus?tab=1#variable-md-menu-desktop-max-height)\r\n     */\r\n    listHeightRestricted: PropTypes.bool,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#xThreshold}\r\n     */\r\n    xThreshold: PropTypes.number,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#yThreshold}\r\n     */\r\n    yThreshold: PropTypes.number,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#closeOnOutsideClick}\r\n     */\r\n    closeOnOutsideClick: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional transition name to use for the list appearing/disappearing.\r\n     *\r\n     * @see {@link Menus/Menu#transitionName}\r\n     */\r\n    menuTransitionName: PropTypes.string,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#transitionEnterTimeout}\r\n     */\r\n    menuTransitionEnterTimeout: PropTypes.number,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#transitionLeaveTimeout}\r\n     */\r\n    menuTransitionLeaveTimeout: PropTypes.number,\r\n\r\n    /**\r\n     * @see {@link Menus/Menu#block}\r\n     */\r\n    block: PropTypes.bool,\r\n\r\n    /**\r\n     * @see {@link Menus/Menu#fullWidth}\r\n     */\r\n    fullWidth: PropTypes.bool,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#centered}\r\n     */\r\n    centered: Menu.propTypes.centered,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#sameWidth}\r\n     */\r\n    sameWidth: Menu.propTypes.sameWidth,\r\n\r\n    /**\r\n     * Since the `menuItems` get mapped into `ListItem`, this prop is used to remove\r\n     * any unnecessary props from the `ListItem` itself. This is where you\r\n     * would remove parts of your object such as `description` or `__metadata__`.\r\n     */\r\n    deleteKeys: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n      PropTypes.arrayOf(PropTypes.oneOfType([\r\n        PropTypes.number,\r\n        PropTypes.string,\r\n      ])),\r\n    ]),\r\n\r\n    /**\r\n     * Boolean if the menu should automatically try to reposition itself to stay within\r\n     * the viewport when the `fixedTo` element scrolls.\r\n     *\r\n     * @see {@link Helpers/Layover#repositionOnScroll}\r\n     */\r\n    repositionOnScroll: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the menu should automatically try to reposition itself to stay within\r\n     * the viewport when the window resizes.\r\n     *\r\n     * @see {@link Helpers/Layover#repositionOnResize}\r\n     */\r\n    repositionOnResize: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the menu logic should be simplified without any viewport logic and position\r\n     * based on the relative position of the menu. This will most like require some additional\r\n     * styles applied to the menu.\r\n     *\r\n     * @see {@link Helpers/Layover#simplified}\r\n     */\r\n    simplifiedMenu: PropTypes.bool,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#minLeft}\r\n     */\r\n    minLeft: Menu.propTypes.minLeft,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#minRight}\r\n     */\r\n    minRight: Menu.propTypes.minLeft,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#minBottom}\r\n     */\r\n    minBottom: Menu.propTypes.minBottom,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#fillViewportWidth}\r\n     */\r\n    fillViewportWidth: PropTypes.bool,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#fillViewportHeight}\r\n     */\r\n    fillViewportHeight: PropTypes.bool,\r\n\r\n    /**\r\n     * The direction that the underline should appear from.\r\n     */\r\n    lineDirection: PropTypes.oneOf(['left', 'center', 'right']).isRequired,\r\n\r\n    iconChildren: deprecated(PropTypes.node, 'Use `dropdownIcon` instead'),\r\n    iconClassName: deprecated(PropTypes.string, 'Use `dropdownIcon` instead'),\r\n    isOpen: deprecated(PropTypes.bool, 'Use `visible` instead'),\r\n    defaultOpen: deprecated(PropTypes.bool, 'Use `defaultVisible` instead'),\r\n    initiallyOpen: deprecated(PropTypes.bool, 'Use `defaultVisible` instead'),\r\n    onMenuToggle: deprecated(PropTypes.func, 'Use `onVisibilityChange` instead'),\r\n    stretchList: deprecated(\r\n      PropTypes.bool,\r\n      'No longer valid after the changes to the `Menu` component. Possibly use `sameWidth` instead'\r\n    ),\r\n    menuStyle: deprecated(PropTypes.object, 'Use `style` instead'),\r\n    menuClassName: deprecated(PropTypes.string, 'Use `className` instead'),\r\n    floatingLabel: deprecated(\r\n      PropTypes.bool,\r\n      'A select field can only have floating labels now. Only provide the `label` prop'\r\n    ),\r\n    noAutoAdjust: deprecated(PropTypes.bool, 'No longer valid to use since select fields are no longer text fields'),\r\n    adjustMinWidth: deprecated(PropTypes.bool, 'No longer valid to use since select fields are no longer text fields'),\r\n  };\r\n\r\n  static defaultProps = {\r\n    anchor: {\r\n      x: SelectField.HorizontalAnchors.INNER_LEFT,\r\n      y: SelectField.VerticalAnchors.OVERLAP,\r\n    },\r\n    fixedTo: Menu.defaultProps.fixedTo,\r\n    position: SelectField.Positions.TOP_LEFT,\r\n    itemLabel: 'label',\r\n    itemValue: 'value',\r\n    itemProps: 'getProps',\r\n    dropdownIcon: <FontIcon>arrow_drop_down</FontIcon>,\r\n    lineDirection: 'left',\r\n    menuItems: [],\r\n    defaultValue: '',\r\n    defaultVisible: false,\r\n    keyboardMatchingTimeout: 1000,\r\n    transitionName: 'md-drop',\r\n    transitionTime: 300,\r\n    repositionOnScroll: true,\r\n    repositionOnResize: false,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      error: false,\r\n      active: false,\r\n      ...this._getActive(props, { value: props.defaultValue }),\r\n      listProps: {\r\n        role: 'listbox',\r\n        ref: this._scrollActiveIntoView,\r\n        [ARIA_ACTIVE]: null,\r\n      },\r\n      match: null,\r\n      lastSearch: null,\r\n      value: props.defaultValue,\r\n      visible: props.defaultVisible,\r\n    };\r\n\r\n    this._items = [];\r\n    this._activeItem = null;\r\n    this._deleteKeys = this._getDeleteKeys(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._container = findDOMNode(this);\r\n    this._field = this._container.querySelector('.md-select-field');\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { itemLabel, itemValue, deleteKeys } = this.props;\r\n    if (deleteKeys !== nextProps.deleteKeys || itemLabel !== nextProps.itemLabel || itemValue !== nextProps.itemValue) {\r\n      this._deleteKeys = this._getDeleteKeys(nextProps);\r\n    }\r\n\r\n    if (this.props.value !== nextProps.value || this.props.menuItems !== nextProps.menuItems) {\r\n      this.setState(this._getActive(nextProps, this.state));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the current value from the select field. This is used when you have an uncontrolled\r\n   * text field and simply need the value from a ref callback.\r\n   *\r\n   * @return {String} the select field's value\r\n   */\r\n  get value() {\r\n    return getField(this.props, this.state, 'value');\r\n  }\r\n\r\n  _getItemPart(item, itemLabel, itemValue, preferLabel = false) {\r\n    const type = typeof item;\r\n    if (type === 'number' || type === 'string') {\r\n      return item;\r\n    } else if (type === 'object') {\r\n      const key1 = preferLabel ? itemLabel : itemValue;\r\n      const key2 = preferLabel ? itemValue : itemLabel;\r\n      return typeof item[key1] !== 'undefined' ? item[key1] : item[key2];\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  _getDeleteKeys({ itemLabel, itemValue, itemProps, deleteKeys }) {\r\n    const keys = [itemLabel, itemValue, itemProps];\r\n    if (deleteKeys) {\r\n      return keys.concat(Array.isArray(deleteKeys) ? deleteKeys : [deleteKeys]);\r\n    }\r\n\r\n    return keys;\r\n  }\r\n\r\n  _getActiveItemLabel = (item, value, itemLabel, itemValue) => {\r\n    const v = this._getItemPart(item, itemLabel, itemValue);\r\n    const label = this._getItemPart(item, itemLabel, itemValue, true);\r\n\r\n    return v === value || v === parseInt(value, 10) ? label : '';\r\n  };\r\n\r\n  _getActive = (props, state) => {\r\n    let activeLabel = '';\r\n    let activeIndex = -1;\r\n    const value = getField(props, state, 'value');\r\n    if (isValued(value)) {\r\n      const { menuItems, itemLabel, itemValue } = props;\r\n\r\n      menuItems.some((item, index) => {\r\n        activeLabel = this._getActiveItemLabel(item, value, itemLabel, itemValue);\r\n        const found = isValued(activeLabel);\r\n        if (found) {\r\n          activeIndex = index;\r\n        }\r\n\r\n        return found;\r\n      });\r\n    }\r\n\r\n    return { activeLabel, activeIndex };\r\n  };\r\n\r\n  _attemptItemFocus = (index) => {\r\n    if (index === -1) {\r\n      return;\r\n    }\r\n\r\n    const item = this._items[index];\r\n    if (item) {\r\n      item.focus();\r\n    }\r\n  };\r\n\r\n  _setListItem = (item) => {\r\n    if (!item) {\r\n      return;\r\n    }\r\n\r\n    if (item.props.active) {\r\n      this._activeItem = findDOMNode(item);\r\n      item.focus();\r\n\r\n      if (!this.state.listProps[ARIA_ACTIVE]) {\r\n        this.setState({ listProps: { ...this.state.listProps, [ARIA_ACTIVE]: `${this.props.id}-options-active` } });\r\n      }\r\n    }\r\n\r\n    this._items.push(item);\r\n  };\r\n\r\n  _scrollActiveIntoView = (listRef) => {\r\n    if (listRef === null) {\r\n      this._items = [];\r\n      return;\r\n    } else if (!this._activeItem) {\r\n      return;\r\n    }\r\n\r\n    const list = findDOMNode(listRef);\r\n    const { offsetTop } = this._activeItem;\r\n    list.scrollTop = offsetTop > MOBILE_LIST_PADDING ? offsetTop : 0;\r\n  };\r\n\r\n  _toggle = (e) => {\r\n    const { isOpen, onVisibilityChange, onMenuToggle } = this.props;\r\n    const visible = !(typeof isOpen !== 'undefined' ? isOpen : getField(this.props, this.state, 'visible'));\r\n    if (onMenuToggle || onVisibilityChange) {\r\n      (onMenuToggle || onVisibilityChange)(visible, e);\r\n    }\r\n\r\n    let state;\r\n    if (typeof isOpen === 'undefined' && typeof this.props.visible === 'undefined') {\r\n      state = { visible };\r\n    }\r\n\r\n    if (state) {\r\n      this.setState(state);\r\n    }\r\n  };\r\n\r\n  _close = (e) => {\r\n    if (this.props.onVisibilityChange) {\r\n      this.props.onVisibilityChange(false, e);\r\n    }\r\n\r\n    if (e.type === 'keydown' && this._field) {\r\n      this._field.focus();\r\n    }\r\n\r\n    let state;\r\n    if (this.props.required && !getField(this.props, this.state, 'value')) {\r\n      state = { error: true };\r\n    }\r\n\r\n    if (typeof this.props.visible === 'undefined') {\r\n      state = state || {};\r\n      state.visible = false;\r\n    }\r\n\r\n    if (state) {\r\n      this.setState(state);\r\n    }\r\n  };\r\n\r\n  _handleClick = (e) => {\r\n    if (this.props.onClick) {\r\n      this.props.onClick(e);\r\n    }\r\n\r\n    const { isOpen } = this.props;\r\n    const visible = typeof isOpen !== 'undefined' ? isOpen : getField(this.props, this.state, 'visible');\r\n    if (visible && this._container) {\r\n      let node = e.target;\r\n      while (this._container.contains(node)) {\r\n        if (node.dataset && typeof node.dataset.id !== 'undefined') {\r\n          const { id, value } = node.dataset;\r\n          this._selectItem(parseInt(id, 10), value, e);\r\n          return;\r\n        }\r\n\r\n        node = node.parentNode;\r\n      }\r\n    }\r\n  };\r\n\r\n  _selectItem = (dataIndex, dataValue, e) => {\r\n    const { required, menuItems, itemLabel, itemValue, onChange, id, name } = this.props;\r\n    const value = this._getItemPart(menuItems[dataIndex], itemLabel, itemValue);\r\n    const prevValue = getField(this.props, this.state, 'value');\r\n    if (prevValue !== value && onChange) {\r\n      onChange(value, dataIndex, e, { id, name, value });\r\n    }\r\n\r\n    const state = {\r\n      ...this._getActive({ value, itemLabel, itemValue, menuItems }, {}),\r\n      error: !!required && !value && value !== 0,\r\n    };\r\n\r\n    if (typeof this.props.value === 'undefined') {\r\n      state.value = value;\r\n    }\r\n\r\n    this.setState(state);\r\n  };\r\n\r\n  _handleFocus = (e) => {\r\n    if (this.props.onFocus) {\r\n      this.props.onFocus(e);\r\n    }\r\n\r\n    this.setState({ active: true });\r\n  };\r\n\r\n  _handleBlur = (e) => {\r\n    if (this.props.onBlur) {\r\n      this.props.onBlur(e);\r\n    }\r\n\r\n    let { error } = this.state;\r\n    const { isOpen, required } = this.props;\r\n    const visible = typeof isOpen !== 'undefined' ? isOpen : getField(this.props, this.state, 'visible');\r\n    const value = getField(this.props, this.state, 'value');\r\n\r\n    if (required && !visible) {\r\n      error = !value;\r\n    }\r\n\r\n    this.setState({ active: false, error });\r\n  };\r\n\r\n  _handleKeyDown = (e) => {\r\n    const { isOpen, onKeyDown } = this.props;\r\n    if (onKeyDown) {\r\n      onKeyDown(e);\r\n    }\r\n\r\n    const key = e.which || e.keyCode;\r\n    const up = key === UP;\r\n    const down = key === DOWN;\r\n    const visible = typeof isOpen !== 'undefined' ? isOpen : getField(this.props, this.state, 'visible');\r\n\r\n    if (up || down) {\r\n      e.preventDefault();\r\n\r\n      if (!visible) {\r\n        this._toggle(e);\r\n        return;\r\n      }\r\n\r\n      this._advanceFocus(up);\r\n    } else if (!visible && handleKeyboardAccessibility(e, this._toggle, true, true)) {\r\n      return;\r\n    } else if (visible && (key === ESC || key === TAB)) {\r\n      if (this._field && key === ESC) {\r\n        this._field.focus();\r\n      }\r\n\r\n      this._close(e);\r\n      return;\r\n    } else {\r\n      this._selectItemByLetter(key, e);\r\n    }\r\n  };\r\n\r\n  _advanceFocus = (decrement) => {\r\n    const { position, stripActiveItem } = this.props;\r\n    const { activeIndex } = this.state;\r\n\r\n    const below = position === SelectField.Positions.BELOW;\r\n    const value = getField(this.props, this.state, 'value');\r\n    const valued = isValued(value);\r\n    const itemStripped = (typeof stripActiveItem !== 'undefined' ? stripActiveItem : below) && valued;\r\n\r\n    // If the select field is positioned below and there is no value, need to increment the last index\r\n    // by one since this select field removes the active item. Need to account for that here when there\r\n    // is no value.\r\n    const lastIndex = this._items.length - (itemStripped ? 0 : 1);\r\n    if ((decrement && activeIndex <= 0) || (!decrement && activeIndex >= lastIndex)) {\r\n      return;\r\n    }\r\n\r\n    const nextIndex = Math.max(-1, Math.min(lastIndex, activeIndex + (decrement ? -1 : 1)));\r\n    if (nextIndex === activeIndex) {\r\n      return;\r\n    }\r\n\r\n    this._attemptItemFocus(nextIndex - (itemStripped ? 1 : 0));\r\n    this.setState({ activeIndex: nextIndex });\r\n  };\r\n\r\n  _selectItemByLetter = (key, e) => {\r\n    const charCode = String.fromCharCode(key);\r\n    const isLetter = charCode && charCode.match(/[A-Za-z0-9-_ ]/);\r\n    const isKeypad = isBetween(key, KEYPAD_ZERO, KEYPAD_NINE);\r\n    if (!isBetween(key, ZERO, NINE) && !isKeypad && !isLetter) {\r\n      return;\r\n    }\r\n\r\n    const letter = isLetter ? charCode : String(key - (isKeypad ? KEYPAD_ZERO : ZERO));\r\n\r\n    if (this._matchingTimeout) {\r\n      clearTimeout(this._matchingTimeout);\r\n    }\r\n\r\n    this._matchingTimeout = setTimeout(() => {\r\n      this._matchingTimeout = null;\r\n\r\n      this.setState({ match: null, lastSearch: null });\r\n    }, this.props.keyboardMatchingTimeout);\r\n\r\n    this._selectFirstMatch(letter, e);\r\n  };\r\n\r\n  _selectFirstMatch = (letter, e) => {\r\n    const { menuItems, itemLabel, itemValue, isOpen, onChange, id, name } = this.props;\r\n    const { lastSearch } = this.state;\r\n    let match = -1;\r\n    const search = `${lastSearch || ''}${letter}`.toUpperCase();\r\n    menuItems.some((item, index) => {\r\n      if (item && typeof item === 'object' && item.disabled) {\r\n        return false;\r\n      }\r\n\r\n      const label = String(this._getItemPart(item, itemLabel, itemValue, true));\r\n      if (label && label.toUpperCase().replace(/\\s/g, '').indexOf(search) === 0) {\r\n        match = index;\r\n      }\r\n\r\n      return match > -1;\r\n    });\r\n\r\n    const state = {\r\n      match,\r\n      lastSearch: search,\r\n    };\r\n\r\n    if (match !== -1) {\r\n      const activeItem = menuItems[match];\r\n      state.activeLabel = this._getItemPart(activeItem, itemLabel, itemValue, true);\r\n      state.activeIndex = match;\r\n\r\n      const visible = typeof isOpen !== 'undefined' ? isOpen : getField(this.props, this.state, 'visible');\r\n      if (visible) {\r\n        if (state.match !== this.state.match) {\r\n          this._attemptItemFocus(state.activeIndex);\r\n        }\r\n      } else {\r\n        const value = this._getItemPart(activeItem, itemLabel, itemValue);\r\n        const prevValue = getField(this.props, this.state, 'value');\r\n\r\n        if (value !== prevValue && onChange) {\r\n          onChange(value, match, e, { id, name, value });\r\n        }\r\n\r\n        if (typeof this.props.value === 'undefined') {\r\n          state.value = value;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setState(state);\r\n  };\r\n\r\n  _reduceItems = (items, item, i) => {\r\n    if (item === null) {\r\n      return items;\r\n    } else if (React.isValidElement(item)) {\r\n      items.push(item);\r\n      return items;\r\n    }\r\n\r\n    const { getItemProps, id, itemLabel, itemProps, itemValue, position, stripActiveItem } = this.props;\r\n    const below = position === SelectField.Positions.BELOW;\r\n    const value = getField(this.props, this.state, 'value');\r\n\r\n    const dataValue = this._getItemPart(item, itemLabel, itemValue);\r\n    const primaryText = this._getItemPart(item, itemLabel, itemValue, true);\r\n\r\n    const active = dataValue === value || dataValue === parseInt(value, 10);\r\n    const stripped = (typeof stripActiveItem !== 'undefined' ? stripActiveItem : below) && active;\r\n    if (!stripped) {\r\n      const objectType = typeof item === 'object';\r\n      const props = objectType ? omit(item, this._deleteKeys) : {};\r\n      const disabled = props.disabled || false;\r\n      props.ref = disabled ? null : this._setListItem;\r\n      props.id = active ? `${id}-options-active` : null;\r\n      props.active = active;\r\n      props.tabIndex = -1;\r\n      props.primaryText = primaryText;\r\n      props.key = item.key || dataValue;\r\n      props.role = 'option';\r\n      props['data-id'] = disabled ? null : i;\r\n      props['data-value'] = disabled ? null : dataValue;\r\n\r\n      const getProps = (objectType && item[itemProps]) || getItemProps;\r\n      if (typeof getProps === 'function') {\r\n        Object.assign(props, getProps({\r\n          index: i,\r\n          active,\r\n          disabled,\r\n          itemValue,\r\n          value,\r\n          props,\r\n          item,\r\n          field: this,\r\n        }));\r\n      }\r\n\r\n      items.push(<ListItem {...props} />);\r\n    }\r\n\r\n    return items;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      style,\r\n      className,\r\n      listStyle,\r\n      listClassName,\r\n      toggleStyle,\r\n      toggleClassName,\r\n      menuItems,\r\n      anchor,\r\n      belowAnchor,\r\n      fixedTo,\r\n      position,\r\n      xThreshold,\r\n      yThreshold,\r\n      listZDepth,\r\n      listInline,\r\n      listHeightRestricted,\r\n      block,\r\n      centered,\r\n      sameWidth,\r\n      fullWidth,\r\n      repositionOnScroll,\r\n      repositionOnResize,\r\n      simplifiedMenu,\r\n      minLeft,\r\n      minRight,\r\n      minBottom,\r\n      fillViewportWidth,\r\n      fillViewportHeight,\r\n      menuTransitionName,\r\n      menuTransitionEnterTimeout,\r\n      menuTransitionLeaveTimeout,\r\n      isOpen, // deprecated\r\n      /* eslint-disable no-unused-vars */\r\n      error: propError,\r\n      menuId: propMenuId,\r\n      visible: propVisible,\r\n      itemLabel,\r\n      itemValue,\r\n      itemProps,\r\n      getItemProps,\r\n      defaultValue,\r\n      defaultVisible,\r\n      onClick,\r\n      onKeyDown,\r\n      onVisibilityChange,\r\n      deleteKeys,\r\n      stripActiveItem,\r\n      keyboardMatchingTimeout,\r\n\r\n      // Deprecated\r\n      defaultOpen,\r\n      initiallyOpen,\r\n      onMenuToggle,\r\n      stretchList,\r\n      menuStyle,\r\n      menuClassName,\r\n      floatingLabel,\r\n      noAutoAdjust,\r\n      adjustMinWidth,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n\r\n    let { menuId, listId, error } = this.props;\r\n    error = error || this.state.error;\r\n    if (!menuId) {\r\n      menuId = `${id}-menu`;\r\n    }\r\n\r\n    if (!listId) {\r\n      listId = `${menuId}-options`;\r\n    }\r\n\r\n    const { listProps, active, activeLabel } = this.state;\r\n    const below = position === SelectField.Positions.BELOW;\r\n    const visible = typeof isOpen !== 'undefined' ? isOpen : getField(this.props, this.state, 'visible');\r\n    const value = getField(this.props, this.state, 'value');\r\n    const useSameWidth = typeof sameWidth !== 'undefined' ? sameWidth : below;\r\n\r\n    const toggle = (\r\n      <SelectFieldToggle\r\n        {...props}\r\n        id={id}\r\n        style={toggleStyle}\r\n        className={toggleClassName}\r\n        visible={visible}\r\n        value={value}\r\n        below={below}\r\n        error={error}\r\n        active={active}\r\n        activeLabel={activeLabel}\r\n        onClick={this._toggle}\r\n        onFocus={this._handleFocus}\r\n        onBlur={this._handleBlur}\r\n      />\r\n    );\r\n\r\n    return (\r\n      <Menu\r\n        id={menuId}\r\n        listId={listId}\r\n        style={style}\r\n        className={cn('md-menu--select-field', className)}\r\n        listProps={listProps}\r\n        listStyle={listStyle}\r\n        listClassName={listClassName}\r\n        toggle={toggle}\r\n        visible={visible}\r\n        onClose={this._close}\r\n        onKeyDown={this._handleKeyDown}\r\n        onClick={this._handleClick}\r\n        simplified={simplifiedMenu}\r\n        anchor={anchor}\r\n        belowAnchor={belowAnchor}\r\n        fixedTo={fixedTo}\r\n        position={position}\r\n        xThreshold={xThreshold}\r\n        yThreshold={yThreshold}\r\n        listZDepth={listZDepth}\r\n        listInline={listInline}\r\n        listHeightRestricted={listHeightRestricted}\r\n        sameWidth={useSameWidth}\r\n        block={block}\r\n        centered={centered}\r\n        fullWidth={fullWidth}\r\n        minLeft={minLeft}\r\n        minRight={minRight}\r\n        minBottom={minBottom}\r\n        fillViewportWidth={fillViewportWidth}\r\n        fillViewportHeight={fillViewportHeight}\r\n        repositionOnScroll={repositionOnScroll}\r\n        repositionOnResize={repositionOnResize}\r\n        transitionName={menuTransitionName}\r\n        transitionEnterTimeout={menuTransitionEnterTimeout}\r\n        transitionLeaveTimeout={menuTransitionLeaveTimeout}\r\n      >\r\n        {menuItems.reduce(this._reduceItems, [])}\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\n/**\r\n * This is just a simple <tfoot> component.\r\n */\r\nexport default class TableFooter extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * An optional style to apply.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * The children to display. This should really be one or a list of `TableRow`\r\n     * components.\r\n     */\r\n    children: PropTypes.node,\r\n  };\r\n\r\n  static childContextTypes = {\r\n    footer: PropTypes.bool,\r\n  }\r\n\r\n  getChildContext() {\r\n    return { footer: true };\r\n  }\r\n\r\n  render() {\r\n    const { className, children, ...props } = this.props;\r\n\r\n    return (\r\n      <tfoot className={cn('md-table-footer', className)} {...props}>\r\n        {children}\r\n      </tfoot>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport deprecated from 'react-prop-types/lib/deprecated';\r\n\r\nimport getField from '../utils/getField';\r\nimport ResizeObserver from '../Helpers/ResizeObserver';\r\nimport SelectField from '../SelectFields/SelectField';\r\nimport Button from '../Buttons/Button';\r\nimport FontIcon from '../FontIcons/FontIcon';\r\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\r\nimport findTable from './findTable';\r\nimport TableFooter from './TableFooter';\r\nimport TableColumn from './TableColumn';\r\n\r\n/**\r\n * The `TablePagination` component is used to generate the table footer that helps\r\n * pagination through a large dataset by limiting the number of rows per page.\r\n * The pagination will always be placed persistently at the bottom of the table\r\n * so that when a user scrolls to the right, they will always be able to use the\r\n * pagination.\r\n */\r\nexport default class TablePagination extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * An optional id to provide to the select field. If this is omitted, it will be\r\n     * the `DataTable`'s `baseId` with '-pagination'.\r\n     *\r\n     * @see {@link DataTables/DataTable#baseId}\r\n     */\r\n    id: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * An optional id to provide to the increment icon button. If this is omitted, it will be\r\n     * the `id` with '-increment-btn'.\r\n     *\r\n     * @see {@link #id}\r\n     */\r\n    incrementId: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * An optional id to provide to the decrement icon button. If this is omitted, it will be\r\n     * the `id` with '-decrement-btn'.\r\n     *\r\n     * @see {@link #id}\r\n     */\r\n    decrementId: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * An optional style to apply to the `tfoot` tag.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the `tfoot` tag.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the select field.\r\n     *\r\n     * @see {@link SelectFields/SelectField#style}\r\n     */\r\n    selectFieldStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the select field.\r\n     *\r\n     * @see {@link SelectFields/SelectField#className}\r\n     */\r\n    selectFieldClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the select field's input.\r\n     *\r\n     * @see {@link SelectFields/SelectField#inputStyle}\r\n     */\r\n    selectFieldInputStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the select field's input.\r\n     *\r\n     * @see {@link SelectFields/SelectField#inputClassName}\r\n     */\r\n    selectFieldInputClassName: PropTypes.string,\r\n\r\n    /**\r\n     * Boolean if the select field should use the simplified menu logic.\r\n     *\r\n     * @see {@link Helpers/Layover#simplified}\r\n     */\r\n    simplifiedMenu: PropTypes.bool,\r\n\r\n    /**\r\n     * A function to call when a user clicks the increment or decrement pagination\r\n     * icon button. This function will be given the new start index and the number\r\n     * or rows per page as well as the current page.\r\n     *\r\n     * ```js\r\n     * onPagination(newStart, rowsPerPage, currentPage);\r\n     * ```\r\n     */\r\n    onPagination: PropTypes.func.isRequired,\r\n\r\n    /**\r\n     * The current value for the select field holding the number of rows per page.\r\n     */\r\n    rowsPerPage: PropTypes.number,\r\n\r\n    /**\r\n     * The current page for the pagination. This will make the component controlled, so the only way to get pagination\r\n     * is making sure you are updating this prop after the `onPagination` callback is called.\r\n     *\r\n     * Pages start from 1 instead of 0.\r\n     */\r\n    page: PropTypes.number,\r\n\r\n    /**\r\n     * The default page to start from for the pagination. Pages start from 1 instead of 0.\r\n     */\r\n    defaultPage: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * The default number of rows per page to display. This will be the value for the\r\n     * `SelectField`.\r\n     */\r\n    defaultRowsPerPage: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * The label to use for the rows per page `SelectField`.\r\n     */\r\n    rowsPerPageLabel: PropTypes.node.isRequired,\r\n\r\n    /**\r\n     * A list of numbers for the amount of rows per page to display at a time.\r\n     * This will be rendered into the `SelectField`.\r\n     */\r\n    rowsPerPageItems: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n\r\n    /**\r\n     * The total number of rows that can be displayed. This is the unfiltered/non-subset\r\n     * number of rows. This is used to help calculate the increment/decrement values to\r\n     * display and determine if the user can increment/decrement again.\r\n     */\r\n    rows: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * The icon to use for the increment icon button.\r\n     */\r\n    incrementIcon: PropTypes.element,\r\n\r\n    /**\r\n     * The icon to use for the decrement icon button.\r\n     */\r\n    decrementIcon: PropTypes.element,\r\n\r\n    incrementIconChildren: deprecated(PropTypes.node, 'Use the `incrementIcon` prop instead'),\r\n    incrementIconClassName: deprecated(PropTypes.string, 'Use the `incrementIcon` prop instead'),\r\n    decrementIconChildren: deprecated(PropTypes.node, 'Use the `decrementIcon` prop instead'),\r\n    decrementIconClassName: deprecated(PropTypes.string, 'Use the `decrementIcon` prop instead'),\r\n  };\r\n\r\n  static contextTypes = {\r\n    baseId: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]).isRequired,\r\n    fixedFooter: PropTypes.bool,\r\n  }\r\n\r\n  static defaultProps = {\r\n    defaultPage: 1,\r\n    defaultRowsPerPage: 10,\r\n    rowsPerPageLabel: 'Rows per page:',\r\n    rowsPerPageItems: [10, 20, 30, 40, 50, 100],\r\n    incrementIcon: <FontIcon>keyboard_arrow_right</FontIcon>,\r\n    decrementIcon: <FontIcon>keyboard_arrow_left</FontIcon>,\r\n    simplifiedMenu: false,\r\n  };\r\n\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    const controlledPage = typeof props.page !== 'undefined';\r\n    const controlledRowsPerPage = typeof props.rowsPerPage !== 'undefined';\r\n    const rowsPerPage = controlledRowsPerPage ? props.rowsPerPage : props.defaultRowsPerPage;\r\n    const page = controlledPage ? props.page : props.defaultPage;\r\n    this.state = {\r\n      start: (page - 1) * rowsPerPage,\r\n      controlsMarginLeft: 0,\r\n    };\r\n\r\n    if (!controlledPage) {\r\n      this.state.page = page;\r\n    }\r\n\r\n    if (!controlledRowsPerPage) {\r\n      this.state.rowsPerPage = props.defaultRowsPerPage;\r\n    }\r\n\r\n    this._table = null;\r\n    this._ticking = false;\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { rowsPerPage, page } = this.props;\r\n    if (page !== nextProps.page || rowsPerPage !== nextProps.rowsPerPage) {\r\n      const rpp = getField(nextProps, this.state, 'rowsPerPage');\r\n      const p = getField(nextProps, this.state, 'page');\r\n\r\n      this.setState({ start: (p - 1) * rpp });\r\n    }\r\n  }\r\n\r\n  _setControls = (controls) => {\r\n    this._controls = controls;\r\n    this._table = findTable(controls);\r\n\r\n    if (this._table && this.context.fixedFooter) {\r\n      this._table.addEventListener('scroll', this._throttledPosition);\r\n    }\r\n  };\r\n\r\n  _position = () => {\r\n    if (this._table) {\r\n      const { fixedFooter } = this.context;\r\n      const { offsetWidth, scrollLeft } = this._table;\r\n\r\n      let controlsMarginLeft = offsetWidth - this._controls.offsetWidth;\r\n      if (fixedFooter) {\r\n        controlsMarginLeft += scrollLeft;\r\n      }\r\n\r\n      this.setState({\r\n        controlsMarginLeft: Math.max(24, controlsMarginLeft),\r\n      });\r\n    }\r\n  };\r\n\r\n  _throttledPosition = () => {\r\n    if (!this._ticking) {\r\n      requestAnimationFrame(() => {\r\n        this._ticking = false;\r\n        this._position();\r\n      });\r\n    }\r\n\r\n    this._ticking = true;\r\n  };\r\n\r\n  _increment = () => {\r\n    const { rows, onPagination } = this.props;\r\n    const { start } = this.state;\r\n    const rowsPerPage = getField(this.props, this.state, 'rowsPerPage');\r\n    const page = getField(this.props, this.state, 'page');\r\n\r\n    // Only correct multiple of rows per page\r\n    const max = rows - (rows % rowsPerPage);\r\n\r\n    const newStart = Math.min(start + rowsPerPage, max);\r\n    const nextPage = page + 1;\r\n\r\n    onPagination(newStart, rowsPerPage, nextPage);\r\n    if (typeof this.props.page === 'undefined') {\r\n      this.setState({ start: newStart, page: nextPage });\r\n    }\r\n  };\r\n\r\n  _decrement = () => {\r\n    const { start } = this.state;\r\n    const page = getField(this.props, this.state, 'page');\r\n    const rowsPerPage = getField(this.props, this.state, 'rowsPerPage');\r\n    const newStart = Math.max(0, start - rowsPerPage);\r\n    const nextPage = page - 1;\r\n\r\n    this.props.onPagination(newStart, rowsPerPage, nextPage);\r\n    if (typeof this.props.page === 'undefined') {\r\n      this.setState({ start: newStart, page: nextPage });\r\n    }\r\n  };\r\n\r\n  _setRowsPerPage = (rowsPerPage) => {\r\n    const page = 1;\r\n    const newStart = 0;\r\n    this.props.onPagination(newStart, rowsPerPage, page);\r\n    let nextState;\r\n    if (typeof this.props.rowsPerPage === 'undefined') {\r\n      nextState = { rowsPerPage };\r\n    }\r\n\r\n    if (typeof this.props.page === 'undefined') {\r\n      nextState = nextState || {};\r\n      nextState.start = newStart;\r\n    }\r\n\r\n    if (nextState) {\r\n      this.setState(nextState);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { controlsMarginLeft, start } = this.state;\r\n    const {\r\n      className,\r\n      selectFieldStyle,\r\n      selectFieldClassName,\r\n      selectFieldInputStyle,\r\n      selectFieldInputClassName,\r\n      rows,\r\n      rowsPerPageLabel,\r\n      rowsPerPageItems,\r\n      incrementIcon,\r\n      decrementIcon,\r\n      simplifiedMenu,\r\n\r\n      // deprecated\r\n      incrementIconChildren,\r\n      incrementIconClassName,\r\n      decrementIconChildren,\r\n      decrementIconClassName,\r\n      /* eslint-disable no-unused-vars */\r\n      id: propId,\r\n      incrementId: propIncrementId,\r\n      decrementId: propDecrementId,\r\n      onPagination,\r\n      rowsPerPage: propRowsPerPage,\r\n      page: propPage,\r\n      defaultPage,\r\n      defaultRowsPerPage,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n\r\n    const { baseId } = this.context;\r\n    const rowsPerPage = getField(this.props, this.state, 'rowsPerPage');\r\n    let { id, incrementId, decrementId } = this.props;\r\n    if (!id) {\r\n      id = `${baseId}-pagination`;\r\n    }\r\n\r\n    if (!incrementId) {\r\n      incrementId = `${id}-increment-btn`;\r\n    }\r\n\r\n    if (!decrementId) {\r\n      decrementId = `${id}-decrement-btn`;\r\n    }\r\n\r\n    const pagination = `${start + 1}-${Math.min(rows, start + rowsPerPage)} of ${rows}`;\r\n    return (\r\n      <TableFooter {...props} className={cn('md-table-footer--pagination', className)}>\r\n        <ResizeObserver watchWidth component=\"tr\" onResize={this._throttledPosition} />\r\n        <ResizeObserver watchWidth component=\"tr\" target={this._table} onResize={this._throttledPosition} />\r\n        <tr>\r\n          {/* colspan 100% so footer columns do not align with body and header */}\r\n          <TableColumn colSpan=\"100%\">\r\n            <div\r\n              ref={this._setControls}\r\n              className=\"md-table-pagination md-table-pagination--controls md-text\"\r\n              style={{ marginLeft: controlsMarginLeft }}\r\n            >\r\n              <span className=\"md-table-pagination__label\">\r\n                {rowsPerPageLabel}\r\n              </span>\r\n              <SelectField\r\n                id={id}\r\n                menuItems={rowsPerPageItems}\r\n                position={SelectField.Positions.BELOW}\r\n                style={selectFieldStyle}\r\n                className={selectFieldClassName}\r\n                inputStyle={selectFieldInputStyle}\r\n                inputClassName={cn('md-select-field--pagination', selectFieldInputClassName)}\r\n                value={rowsPerPage}\r\n                onChange={this._setRowsPerPage}\r\n                simplifiedMenu={simplifiedMenu}\r\n              />\r\n              <span className=\"md-table-pagination--label\">{pagination}</span>\r\n              <Button\r\n                id={decrementId}\r\n                icon\r\n                onClick={this._decrement}\r\n                disabled={start === 0}\r\n                iconEl={getDeprecatedIcon(decrementIconClassName, decrementIconChildren, decrementIcon)}\r\n              />\r\n              <Button\r\n                id={incrementId}\r\n                icon\r\n                onClick={this._increment}\r\n                disabled={start + rowsPerPage >= rows}\r\n                iconEl={getDeprecatedIcon(incrementIconClassName, incrementIconChildren, incrementIcon)}\r\n              />\r\n            </div>\r\n            {/*\r\n              * Since the footer controls is positioned absolutely for a persistent footer,\r\n              * we have a mask to correctly set the height of the footer.\r\n              */}\r\n            <div className=\"md-table-pagination\" />\r\n          </TableColumn>\r\n        </tr>\r\n      </TableFooter>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { findDOMNode } from 'react-dom';\r\n\r\nimport isValidFocusKeypress from '../utils/EventUtils/isValidFocusKeypress';\r\n\r\nconst hrefables = ['a', 'area'].map(tag => `${tag}[href],`).join('');\r\nconst disableables = ['button', 'input', 'textarea', 'select'].map(tag => `${tag}:not([disabled]),`).join('');\r\nconst FOCUSABLE_QUERY = `${hrefables}${disableables}*[tabIndex]`;\r\n\r\n/**\r\n * This component is used for keeping the focus within some container. When the container\r\n * is mounted and the `focusOnMount` prop is `true`, it will attempt to focus either:\r\n * - an element that matches `document.getElementById(this.props.initialFocus)`\r\n * - an element that matches `this._container.querySelector(this.props.initialFocus)`\r\n * - the first focusable element in it's children (if `this.props.initialFocus` is omitted)\r\n */\r\nexport default class FocusContainer extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * The component to render as. This can be a React DOM element or\r\n     * a react Component.\r\n     */\r\n    component: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.func,\r\n    ]).isRequired,\r\n\r\n    /**\r\n     * An optional style to apply.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * The children to display.\r\n     */\r\n    children: PropTypes.node,\r\n\r\n    /**\r\n     * An optional id string or a query selector string to use for the initial focus.\r\n     * This will only be triggered if the `focusOnMount` prop is `true`. If this is\r\n     * omitted and the `focusOnMount` prop is `true`, the first focusable element in the\r\n     * container will be focused.\r\n     *\r\n     * Examples:\r\n     *\r\n     * ```js\r\n     * initialFocus=\"#someAmazingId\"\r\n     * // or\r\n     * initialFocus=\".md-btn,.md-list-tile\"\r\n     * ```\r\n     */\r\n    initialFocus: PropTypes.string,\r\n\r\n    /**\r\n     * Boolean if an element in the container should be focused when mounted.\r\n     */\r\n    focusOnMount: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional list of additional key codes to use for focus events.\r\n     */\r\n    additionalFocusKeys: PropTypes.arrayOf(PropTypes.number),\r\n\r\n    /**\r\n     * Boolean if the focus container should start or stop containing the focus within the container.\r\n     * This is useful for changing the focus requirements after mount.\r\n     */\r\n    containFocus: PropTypes.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    component: 'div',\r\n    containFocus: true,\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (this.props.containFocus === nextProps.containFocus) {\r\n      return;\r\n    }\r\n\r\n    if (nextProps.containFocus) {\r\n      this._enableFocusTrap();\r\n      this._attemptInitialFocus();\r\n    } else {\r\n      this._disableFocusTrap();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.props.containFocus && this._container) {\r\n      this._focusables = Array.prototype.slice.call(this._container.querySelectorAll(FOCUSABLE_QUERY))\r\n        .filter(el => el.tabIndex !== -1);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.props.containFocus) {\r\n      this._disableFocusTrap();\r\n    }\r\n  }\r\n\r\n  _enableFocusTrap = () => {\r\n    window.addEventListener('keydown', this._handleKeyDown, true);\r\n  };\r\n\r\n  _disableFocusTrap = () => {\r\n    window.removeEventListener('keydown', this._handleKeyDown, true);\r\n  };\r\n\r\n  _attemptInitialFocus = () => {\r\n    if (!this._container) {\r\n      return;\r\n    }\r\n\r\n    const { initialFocus } = this.props;\r\n\r\n    const toFocus = initialFocus\r\n      ? document.getElementById(initialFocus) || this._container.querySelector(initialFocus)\r\n      : this._focusables[0];\r\n\r\n    let debugError;\r\n    if (!toFocus && initialFocus) {\r\n      debugError = ' The `initialFocus` did not match a document\\'s `id` or was an invalid ';\r\n      debugError += `\\`querySelector\\` for the container. \\`initialFocus\\`: \\`${initialFocus}\\`. `;\r\n      debugError += 'If this was supposed to be an `id`, make sure to prefix with the `#` symbol.';\r\n    }\r\n\r\n    if (process.env.NODE_ENV !== 'production' && !toFocus) {\r\n      throw new Error(\r\n        'You specified that the `FocusContainer` should focus an element on mount, ' +\r\n        'but a focusable element was not found in the children. This could be because ' +\r\n        'the `initialFocus` prop is an invalid id or query selector, or the children ' +\r\n        `do not contain a valid focusable element.${debugError}`\r\n      );\r\n    }\r\n\r\n    if (toFocus) {\r\n      toFocus.focus();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Manages the event listeners to contain the focus within some container.  When the container\r\n   * ref is not null, the container has mounted and then attempts to focus an element inside\r\n   * if the `focusOnMount` prop is `true`.\r\n   */\r\n  _containFocus = (containerRef) => {\r\n    if (containerRef === null) {\r\n      this._container = null;\r\n      this._disableFocusTrap();\r\n      return;\r\n    }\r\n\r\n    const { focusOnMount, containFocus } = this.props;\r\n    this._container = findDOMNode(containerRef);\r\n    this._focusables = Array.prototype.slice.call(this._container.querySelectorAll(FOCUSABLE_QUERY))\r\n      .filter(el => el.tabIndex !== -1);\r\n\r\n    if (focusOnMount) {\r\n      this._attemptInitialFocus();\r\n    }\r\n\r\n    if (containFocus) {\r\n      this._enableFocusTrap();\r\n    }\r\n  };\r\n\r\n  _handleKeyDown = (e) => {\r\n    this._shifted = e.shiftKey;\r\n    if (!isValidFocusKeypress(e, this.props.additionalFocusKeys)) {\r\n      return;\r\n    } else if (this._focusables.length === 1) {\r\n      e.preventDefault();\r\n      return;\r\n    }\r\n\r\n    const { target, shiftKey } = e;\r\n    const [first, ...focusables] = this._focusables;\r\n    const last = focusables[focusables.length - 1];\r\n\r\n    if (shiftKey && target === first) {\r\n      e.preventDefault();\r\n      last.focus();\r\n    } else if (!shiftKey && target === last) {\r\n      e.preventDefault();\r\n      first.focus();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      component: Component,\r\n      /* eslint-disable no-unused-vars */\r\n      initialFocus,\r\n      focusOnMount,\r\n      containFocus,\r\n      additionalFocusKeys,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n\r\n    return <Component {...props} ref={this._containFocus} />;\r\n  }\r\n}\r\n","/** @module utils/EventUtils/isValidFocusKeypress */\r\nimport { TAB } from '../../constants/keyCodes';\r\n\r\n/**\r\n * Checks if a keydown or keyup event's key was the TAB key or any additional valid\r\n * keys that were passed in.\r\n *\r\n * @param {Object} event - The event to check.\r\n * @param {Array.<number>=} additionalKeys - An optional array of additional key codes\r\n *    that are considered valid for a focus event.\r\n */\r\nexport default function isValidFocusKeypress(event, additionalKeys) {\r\n  const key = event.which || event.keyCode;\r\n  return key === TAB ||\r\n    (additionalKeys && additionalKeys.indexOf(key) !== -1);\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nexport default class DialogTitle extends PureComponent {\r\n  static propTypes = {\r\n    id: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n    className: PropTypes.string,\r\n    children: PropTypes.node,\r\n  };\r\n\r\n  render() {\r\n    const { children, className, ...props } = this.props;\r\n\r\n    if (!children) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <h2 {...props} className={cn('md-title md-title--dialog', className)}>\r\n        {children}\r\n      </h2>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent, Children, cloneElement, isValidElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport Button from '../Buttons/Button';\r\n\r\nconst FOOTER_PADDING = 8;\r\n\r\nexport default class DialogFooter extends PureComponent {\r\n  static propTypes = {\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    children: PropTypes.node,\r\n    actions: PropTypes.oneOfType([\r\n      PropTypes.element,\r\n      PropTypes.object,\r\n      PropTypes.arrayOf(PropTypes.oneOfType([\r\n        PropTypes.element,\r\n        PropTypes.object,\r\n      ])),\r\n    ]),\r\n    stacked: PropTypes.bool,\r\n  };\r\n\r\n  state = { stacked: false };\r\n\r\n  _toElement(action, index) {\r\n    if (isValidElement(action)) {\r\n      const button = Children.only(action);\r\n\r\n      return cloneElement(action, {\r\n        key: button.key || index,\r\n        className: cn('md-btn--dialog', button.props.className),\r\n      });\r\n    }\r\n\r\n    // Both label and children are valid for dialog actions\r\n    const { label, children, ...remaining } = action;\r\n    return (\r\n      <Button\r\n        key={index}\r\n        flat\r\n        {...remaining}\r\n        className={cn('md-btn--dialog', action.className)}\r\n      >\r\n        {label || children}\r\n      </Button>\r\n    );\r\n  }\r\n\r\n  _setContainer = (container) => {\r\n    if (container !== null) {\r\n      this._container = container;\r\n      const maxWidth = (this._container.offsetWidth - (FOOTER_PADDING * 3)) / 2;\r\n\r\n      let stacked = false;\r\n      Array.prototype.slice.call(this._container.querySelectorAll('.md-btn'))\r\n        .some(({ offsetWidth }) => {\r\n          stacked = offsetWidth > maxWidth;\r\n          return stacked;\r\n        });\r\n\r\n      this.setState({ stacked });\r\n    }\r\n  };\r\n\r\n  _generateActions = () => {\r\n    const { actions } = this.props;\r\n    if (!actions) {\r\n      return null;\r\n    } else if (Array.isArray(actions)) {\r\n      return actions.map(this._toElement);\r\n    }\r\n\r\n    return this._toElement(actions);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      actions,\r\n      className,\r\n      children,\r\n      stacked: propStacked,\r\n      ...props\r\n    } = this.props;\r\n\r\n    if (!children && (!actions || (Array.isArray(actions) && !actions.length))) {\r\n      return null;\r\n    }\r\n\r\n    let { stacked } = this.props;\r\n    const stackedDefined = typeof propStacked !== 'undefined';\r\n    if (!stackedDefined) {\r\n      stacked = this.state.stacked;\r\n    }\r\n\r\n    return (\r\n      <footer\r\n        {...props}\r\n        className={cn('md-dialog-footer', {\r\n          'md-dialog-footer--inline': !stacked,\r\n          'md-dialog-footer--stacked': stacked,\r\n        }, className)}\r\n        ref={!stackedDefined ? this._setContainer : null}\r\n      >\r\n        {this._generateActions()}\r\n        {children}\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { findDOMNode } from 'react-dom';\r\nimport cn from 'classnames';\r\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\r\n\r\nimport oneRequiredForA11y from '../utils/PropTypes/oneRequiredForA11y';\r\nimport FocusContainer from '../Helpers/FocusContainer';\r\nimport ResizeObserver from '../Helpers/ResizeObserver';\r\nimport Paper from '../Papers/Paper';\r\nimport DialogTitle from './DialogTitle';\r\nimport DialogFooter from './DialogFooter';\r\n\r\nconst DIFF_KEYS = ['style', 'height', 'width', 'contentStyle'];\r\n\r\n/**\r\n * The `Dialog` is just a static component for creating dialogs. Dialogs\r\n * seemed like they could be used outside of the `DialogContainer` component,\r\n * so it was exposed as well. In *most* cases, you will still want to use\r\n * the `DialogContainer` component.\r\n */\r\nexport default class Dialog extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * @see {@link Dialogs/DialogContainer#id}\r\n     */\r\n    id: isRequiredForA11y(PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ])),\r\n\r\n    /**\r\n     * @see {@link Dialogs/DialogContainer#aria-describedby}\r\n     */\r\n    'aria-describedby': oneRequiredForA11y(PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]), 'title', 'aria-labelledby', 'aria-label'),\r\n\r\n    /**\r\n     * @see {@link Dialogs/DialogContainer#aria-labelledby}\r\n     */\r\n    'aria-labelledby': PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * @see {@link Dialogs/DialogContainer#aria-label}\r\n     */\r\n    'aria-label': PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the dialog.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the dialog.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * An optional styke to apply to the title.\r\n     */\r\n    titleStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the title.\r\n     */\r\n    titleClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the footer. This is used when the `actions`\r\n     * prop is defined.\r\n     */\r\n    footerStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the footer. This is used when the `actions`\r\n     * prop is defined.\r\n     */\r\n    footerClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the dialog's content.\r\n     */\r\n    contentStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the dialog's content.\r\n     */\r\n    contentClassName: PropTypes.string,\r\n\r\n    /**\r\n     * The component to render the content as. This is helpful if you would like to use\r\n     * the CSSTransitionGroup. This really just saves a tiny bit of markup.\r\n     *\r\n     * ```js\r\n     * <Dialog\r\n     *   contentComponent={CSSTransitionGroup}\r\n     *   contentProps={{\r\n     *     transitionName: 'md-cross-fade',\r\n     *     transitionLeave: false,\r\n     *     transitionEnterTimeout: 150,\r\n     *   }}\r\n     * >\r\n     *   {dynamicContent}\r\n     * </Dialog>\r\n     * ```\r\n     */\r\n    contentComponent: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.func,\r\n    ]).isRequired,\r\n\r\n    /**\r\n     * Any additional props to pass to the content component.\r\n     */\r\n    contentProps: PropTypes.object,\r\n\r\n    /**\r\n     * An optional title to display in the dialog.\r\n     */\r\n    title: PropTypes.node,\r\n\r\n    /**\r\n     * Any children to display in the content of the dialog.\r\n     */\r\n    children: PropTypes.node,\r\n\r\n    /**\r\n     * A single action or a list of actions to display in the dialog. This can either be a list\r\n     * of `FlatButton` props or `<Button flat {...props} />` elements.\r\n     */\r\n    actions: PropTypes.oneOfType([\r\n      PropTypes.element,\r\n      PropTypes.object,\r\n      PropTypes.arrayOf(PropTypes.oneOfType([\r\n        PropTypes.element,\r\n        PropTypes.object,\r\n      ])),\r\n    ]),\r\n\r\n    /**\r\n     * @see {@link Helpers/FocusContainer#additionalFocusKeys}\r\n     */\r\n    additionalFocusKeys: FocusContainer.propTypes.additionalFocusKeys,\r\n\r\n    /**\r\n     * @see {@link Helpers/FocusContainer#initialFocus}\r\n     */\r\n    initialFocus: FocusContainer.propTypes.initialFocus,\r\n\r\n    /**\r\n     * @see {@link Helpers/FocusContainer#focusOnMount}\r\n     */\r\n    focusOnMount: FocusContainer.propTypes.focusOnMount,\r\n\r\n    /**\r\n     * @see {@link Helpers/FocusContainer#containFocus}\r\n     */\r\n    containFocus: FocusContainer.propTypes.containFocus,\r\n\r\n    /**\r\n     * An optional x coordinate on the page that caused a full page dialog\r\n     * to be created. This is really just used for a `transformOrigin` style.\r\n     */\r\n    pageX: PropTypes.number,\r\n\r\n    /**\r\n     * An optional y coordinate on the page that caused a full page dialog\r\n     * to be created. This is really just used for a `transformOrigin` style.\r\n     */\r\n    pageY: PropTypes.number,\r\n\r\n    /**\r\n     * An optional x scroll position of the container holding the dialog. This\r\n     * is really just used for a `transformOrigin` style on full page dialogs.\r\n     */\r\n    containerX: PropTypes.number,\r\n\r\n    /**\r\n     * An optional y scroll position of the container holding the dialog. This\r\n     * is really just used for a `transformOrigin` style on full page dialogs.\r\n     */\r\n    containerY: PropTypes.number,\r\n\r\n    /**\r\n     * Boolean if the dialog should be rendered as a full page dialog.\r\n     */\r\n    fullPage: PropTypes.bool,\r\n\r\n    /**\r\n     * The zDepth to use for the dialog.\r\n     */\r\n    zDepth: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * An optional function to call when the dialog has been opened. This is\r\n     * really just used for the `DialogContainer`.\r\n     */\r\n    onOpen: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the dialog has been closed. This is\r\n     * really just used for the `DialogContainer`.\r\n     */\r\n    onLeave: PropTypes.func,\r\n\r\n    /**\r\n     * Boolean if the dialog should be centered in the page.\r\n     */\r\n    centered: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the content should be padded. This will take precedence\r\n     * over the `autopadContent` prop. So if this is defined, that value\r\n     * will be used instead of any thing that was was calculated in this\r\n     * component.\r\n     *\r\n     * @see {@link #autopadContent}\r\n     */\r\n    paddedContent: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the dialog should automatically try to determine if the content\r\n     * should be padded. It will be padded if the dialog does not contain a `List`.\r\n     */\r\n    autopadContent: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the dialog content's size should automatically be resized to overflow\r\n     * correctly when there is a lot of content. This will calculate and apply some `maxHeight`\r\n     * to the `contentStyle`.\r\n     */\r\n    autosizeContent: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional height to apply to the dialog. This is used if it is easier to just apply height/width\r\n     * with for specific dialogs instead of in CSS.\r\n     *\r\n     * **This prop should not be used if the `fullPage` prop is enabled.**\r\n     *\r\n     * @see {@link #fullPage}\r\n     * @see {@link #width}\r\n     */\r\n    height: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * An optional width to apply to the dialog. This is used if it is easier to just apply height/width\r\n     * with for specific dialogs instead of in CSS.\r\n     *\r\n     * **This prop should not be used if the `fullPage` prop is enabled.**\r\n     *\r\n     * @see {@link #fullPage}\r\n     * @see {@link #height}\r\n     */\r\n    width: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * Boolean if the actions should be stacked on top of each other. If this value is `undefined`, it will\r\n     * automatically attempt to guess if the items should be stacked.\r\n     */\r\n    stackedActions: PropTypes.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    autopadContent: true,\r\n    autosizeContent: true,\r\n    contentComponent: 'section',\r\n    zDepth: 5,\r\n  };\r\n\r\n  static childContextTypes = {\r\n    renderNode: PropTypes.object,\r\n  };\r\n\r\n  constructor(props) {\r\n    super();\r\n\r\n    const { height, width } = props;\r\n    let styles = props.style;\r\n    if (height || width) {\r\n      styles = styles || {};\r\n      styles = { height, width, ...styles };\r\n    }\r\n\r\n    this.state = {\r\n      styles,\r\n      contentStyles: props.contentStyle,\r\n      contentPadded: false,\r\n    };\r\n  }\r\n\r\n  getChildContext() {\r\n    return { renderNode: this._renderNode };\r\n  }\r\n\r\n  componentWillMount() {\r\n    const { pageX, pageY } = this.props;\r\n    if (!pageX || !pageY) {\r\n      return;\r\n    }\r\n\r\n    this.setState({ styles: this._getStyles(this.props) });\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.onOpen) {\r\n      this.props.onOpen();\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (DIFF_KEYS.some(key => nextProps[key] !== this.props[key])) {\r\n      this.setState({\r\n        styles: this._getStyles(nextProps),\r\n        contentStyles: { ...this.state.contentStyles, ...nextProps.contentStyle },\r\n      });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.props.onLeave) {\r\n      this.props.onLeave();\r\n    }\r\n  }\r\n\r\n  _getStyles = ({ pageX, containerX, pageY, containerY, height, width, style } = this.props) => ({\r\n    height: typeof height !== 'undefined' ? height : null,\r\n    width: typeof width !== 'undefined' ? width : null,\r\n    transformOrigin: pageX || pageY ? `${pageX - containerX}px ${pageY - containerY}px` : null,\r\n    ...style,\r\n  });\r\n\r\n  _setRenderNode = (dialog) => {\r\n    this._renderNode = findDOMNode(dialog);\r\n  };\r\n\r\n  _setContent = (content) => {\r\n    if (content !== null) {\r\n      this._content = findDOMNode(content);\r\n      const contentPadded = this._content.querySelectorAll('.md-list').length === 0;\r\n\r\n      this.setState({ contentPadded });\r\n    }\r\n  };\r\n\r\n  _handleContentResize = ({ scrollHeight, el: content }) => {\r\n    const maxHeight = content.style.maxHeight;\r\n    const dialog = content.parentNode;\r\n    content.style.maxHeight = 'none';\r\n    const title = this.props.title ? dialog.querySelector('.md-title--dialog') : null;\r\n    const footer = this.props.actions ? dialog.querySelector('.md-dialog-footer') : null;\r\n\r\n    const totalHeight = dialog.offsetHeight - (title ? title.offsetHeight : 0) - (footer ? footer.offsetHeight : 0);\r\n    content.style.maxHeight = maxHeight;\r\n    const equalHeight = totalHeight === scrollHeight;\r\n    if (equalHeight) {\r\n      const currentHeight = (this.state.contentStyles && this.state.contentStyles.maxHeight) || null;\r\n      if (currentHeight && currentHeight !== scrollHeight) {\r\n        this.setState({ contentStyles: this.props.contentStyle });\r\n      }\r\n    } else {\r\n      this.setState({ contentStyles: { maxHeight: totalHeight, ...this.props.contentStyle } });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { contentPadded, styles, contentStyles } = this.state;\r\n    const {\r\n      id,\r\n      className,\r\n      titleStyle,\r\n      titleClassName,\r\n      footerStyle,\r\n      footerClassName,\r\n      contentClassName,\r\n      title,\r\n      contentComponent: Content,\r\n      contentProps,\r\n      actions,\r\n      children,\r\n      fullPage,\r\n      centered,\r\n      autopadContent,\r\n      paddedContent,\r\n      autosizeContent,\r\n      stackedActions,\r\n      /* eslint-disable no-unused-vars */\r\n      style,\r\n      contentStyle,\r\n      pageX,\r\n      pageY,\r\n      containerX,\r\n      containerY,\r\n      onOpen,\r\n      onLeave,\r\n      height,\r\n      width,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n\r\n    let { 'aria-labelledby': labelledBy } = this.props;\r\n    const titleId = `${id}-title`;\r\n    if (!labelledBy && title) {\r\n      labelledBy = titleId;\r\n    }\r\n\r\n    const padDefined = typeof paddedContent !== 'undefined';\r\n    const dialogChildren = fullPage ? children : [\r\n      <DialogTitle\r\n        key=\"title\"\r\n        id={titleId}\r\n        style={titleStyle}\r\n        className={titleClassName}\r\n      >\r\n        {title}\r\n      </DialogTitle>,\r\n      <Content\r\n        ref={!padDefined && autopadContent ? this._setContent : null}\r\n        key=\"content\"\r\n        {...contentProps}\r\n        style={contentStyles}\r\n        className={cn('md-dialog-content', {\r\n          'md-dialog-content--padded': padDefined ? paddedContent : contentPadded,\r\n        }, contentClassName)}\r\n      >\r\n        {autosizeContent ? <ResizeObserver watchHeight watchWidth onResize={this._handleContentResize} /> : null}\r\n        {children}\r\n      </Content>,\r\n      <DialogFooter\r\n        key=\"footer\"\r\n        style={footerStyle}\r\n        className={footerClassName}\r\n        actions={actions}\r\n        stacked={stackedActions}\r\n      />,\r\n    ];\r\n\r\n    return (\r\n      <Paper\r\n        {...props}\r\n        id={id}\r\n        component={FocusContainer}\r\n        ref={this._setRenderNode}\r\n        style={styles}\r\n        className={cn('md-dialog', {\r\n          'md-dialog--full-page': fullPage,\r\n          'md-dialog--centered': centered,\r\n        }, className)}\r\n        role=\"dialog\"\r\n        aria-labelledby={labelledBy}\r\n      >\r\n        {dialogChildren}\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport themeColors from '../utils/themeColors';\r\nimport AccessibleFakeButton from '../Helpers/AccessibleFakeButton';\r\nimport Layover from '../Helpers/Layover';\r\nimport Dialog from '../Dialogs/Dialog';\r\n\r\nexport default class EditDialog extends PureComponent {\r\n  static propTypes = {\r\n    id: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n    textFieldId: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    dialogStyle: PropTypes.object,\r\n    dialogClassName: PropTypes.string,\r\n    dialogContentStyle: PropTypes.object,\r\n    dialogContentClassName: PropTypes.string,\r\n    children: PropTypes.node,\r\n    onOpen: PropTypes.func.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    visible: PropTypes.bool.isRequired,\r\n    label: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]).isRequired,\r\n    placeholder: PropTypes.bool,\r\n    title: PropTypes.node,\r\n    large: PropTypes.bool,\r\n    actions: Dialog.propTypes.actions,\r\n    dialogZDepth: PropTypes.number,\r\n    header: PropTypes.bool,\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      dialogStyle,\r\n      dialogClassName,\r\n      dialogContentStyle,\r\n      dialogContentClassName,\r\n      textFieldId,\r\n      visible,\r\n      header,\r\n      onOpen,\r\n      children,\r\n      label,\r\n      title,\r\n      large,\r\n      actions,\r\n      placeholder,\r\n      dialogZDepth,\r\n      ...props\r\n    } = this.props;\r\n\r\n    const field = (\r\n      <AccessibleFakeButton\r\n        className={cn('md-edit-dialog__label', {\r\n          'md-edit-dialog__header': header,\r\n        }, themeColors({ hint: placeholder || header }))}\r\n        noFocusOutline={visible}\r\n        onClick={onOpen}\r\n        onFocus={onOpen}\r\n      >\r\n        {label}\r\n      </AccessibleFakeButton>\r\n    );\r\n\r\n    return (\r\n      <Layover\r\n        {...props}\r\n        id={`${id}-layover`}\r\n        toggle={field}\r\n        visible={visible}\r\n        block\r\n        belowAnchor={null}\r\n      >\r\n        <Dialog\r\n          id={id}\r\n          aria-labelledby={!large ? textFieldId : undefined}\r\n          style={dialogStyle}\r\n          className={cn('md-edit-dialog', themeColors({ background: true, themeText: false }), dialogClassName)}\r\n          contentStyle={dialogContentStyle}\r\n          contentClassName={cn('md-edit-dialog__content', dialogContentClassName)}\r\n          title={large ? title : null}\r\n          focusOnMount\r\n          containFocus={!!large}\r\n          paddedContent={false}\r\n          actions={large ? actions : null}\r\n          zDepth={dialogZDepth}\r\n        >\r\n          {children}\r\n        </Dialog>\r\n      </Layover>\r\n    );\r\n  }\r\n}\r\n","export default function findFixedTo(table) {\r\n  if (table && table.firstChild.firstChild.classList.contains('md-data-table__scroll-wrapper')) {\r\n    return {\r\n      x: table,\r\n      y: table.firstChild.firstChild,\r\n    };\r\n  }\r\n\r\n  return table;\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { findDOMNode } from 'react-dom';\r\nimport cn from 'classnames';\r\nimport deprecated from 'react-prop-types/lib/deprecated';\r\n\r\nimport { ENTER, ESC, TAB } from '../constants/keyCodes';\r\nimport getField from '../utils/getField';\r\nimport themeColors from '../utils/themeColors';\r\nimport viewport from '../utils/Positioning/viewport';\r\nimport controlled from '../utils/PropTypes/controlled';\r\nimport anchorShape from '../Helpers/anchorShape';\r\nimport fixedToShape from '../Helpers/fixedToShape';\r\nimport positionShape from '../Helpers/positionShape';\r\nimport Layover from '../Helpers/Layover';\r\nimport FontIcon from '../FontIcons/FontIcon';\r\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\r\nimport TextField from '../TextFields/TextField';\r\nimport TableColumn from './TableColumn';\r\nimport EditDialog from './EditDialog';\r\nimport findTable from './findTable';\r\nimport findFixedTo from './findFixedTo';\r\n\r\n/**\r\n * The `EditDialogColumn` is used when there should be used when a table column's value\r\n * can be changed. It can either be displayed as a dialog or inline.\r\n *\r\n * All props that are not documented but provided will be passed on to the `TextField`\r\n * component.\r\n */\r\nexport default class EditDialogColumn extends PureComponent {\r\n  static VerticalAnchors = Layover.VerticalAnchors;\r\n  static HorizontalAnchors = Layover.HorizontalAnchors;\r\n  static Positions = Layover.Positions;\r\n\r\n  static propTypes = {\r\n    /**\r\n     * An optional id to use for the text field in the column. If this is omitted,\r\n     * the id will be `${dialogId}-field`.\r\n     *\r\n     * @see {@link #dialogId}\r\n     */\r\n    id: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * An optional id to use for the dialog that appears in the column. If this is omitted,\r\n     * the id will be `${rowId}-${cellIndex}-edit-dialog-field`.\r\n     */\r\n    dialogId: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * The optional style to apply to the edit dialog's column.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * The optional className to apply to the edit dialog's column.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the dialog's surrounding `Layover` component.\r\n     */\r\n    layoverStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to the dialog's surrounding `Layover` component.\r\n     */\r\n    layoverClassName: PropTypes.string,\r\n\r\n    /**\r\n     * The optional style to apply to the edit dialog.\r\n     */\r\n    dialogStyle: PropTypes.object,\r\n\r\n    /**\r\n     * The optional className to apply to the edit dialog.\r\n     */\r\n    dialogClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the dialog's content area. This is the area\r\n     * that holds the text field.\r\n     */\r\n    dialogContentStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional class name to apply to the dialog's content area. This is the area\r\n     * that holds the text field.\r\n     */\r\n    dialogContentClassName: PropTypes.string,\r\n\r\n    /**\r\n     * The zDepth to apply to the dialog when not inline.\r\n     *\r\n     * @see {@link Papers/Paper#zDepth}\r\n     */\r\n    dialogZDepth: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * An optional style to apply to the text field.\r\n     */\r\n    textFieldStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional class name to apply to the text field.\r\n     */\r\n    textFieldClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the text field's input.\r\n     */\r\n    inputStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional class name to apply to the text field's input.\r\n     */\r\n    inputClassName: PropTypes.string,\r\n\r\n    /**\r\n     * Boolean if the edit dialog is currently disabled.\r\n     */\r\n    disabled: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the text field should be editable inline instead of in a dialog.\r\n     *\r\n     * @see {@link #inlineIcon}\r\n     */\r\n    inline: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional icon to set for the inline edit dialog column. Setting this prop to null\r\n     * will not render an icon.\r\n     */\r\n    inlineIcon: PropTypes.element,\r\n\r\n    /**\r\n     * The default value to use for the text field.\r\n     */\r\n    defaultValue: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]).isRequired,\r\n\r\n    /**\r\n     * A value to use for the edit dialog text field. This will make the component controlled\r\n     * so you will need to provide an `onChange` function.\r\n     */\r\n    value: controlled(PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]), 'onChange', 'defaultValue'),\r\n\r\n    /**\r\n     * An optional function to call when the text field's value has changed. This is required\r\n     * if the `value` prop has been defined.\r\n     *\r\n     * @see {@link TextFields/TextField#onChange}\r\n     */\r\n    onChange: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the text field gains focus.\r\n     */\r\n    onFocus: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the keydown event is triggered on the text field.\r\n     */\r\n    onKeyDown: PropTypes.func,\r\n\r\n    /**\r\n     * An optional label for the text field. When displaying an `inline` edit dialog column,\r\n     * the `placeholder` prop should be used instead. This is because the text field changes\r\n     * to the `block` type when `inline`.\r\n     *\r\n     * @see {@link #inline}\r\n     * @see {@link #placeholder}\r\n     * @see {@link TextFields/TextField#block}\r\n     */\r\n    label: PropTypes.node,\r\n\r\n    /**\r\n     * An optional placeholder for the text field.\r\n     */\r\n    placeholder: PropTypes.string,\r\n\r\n    /**\r\n     * Boolean if the edit dialog should become a large dialog. When the dialog is large,\r\n     * the `title` prop is required.\r\n     *\r\n     * A large dialog has a Title followed by the text field, and then a cancel and ok action\r\n     * buttons below.\r\n     */\r\n    large: PropTypes.bool,\r\n\r\n    /**\r\n     * The title to use for the large edit dialog. This prop is required if the `large` prop\r\n     * is enabled.\r\n     */\r\n    title: PropTypes.node,\r\n\r\n    /**\r\n     * An optional `maxLength` to apply to the text field.\r\n     *\r\n     * @see {@link TextFields/TextField#maxLength}\r\n     */\r\n    maxLength: PropTypes.number,\r\n\r\n    /**\r\n     * An optional function to call when the \"Ok\" button has been clicked, the user presses enter\r\n     * on * the text field or when the `okOnOutsideClick` prop has been enabled and the user clicks\r\n     * somewhere on the page.\r\n     *\r\n     * The callback will include the current value and the click or keypress event.\r\n     * ```js\r\n     * onOkClick(value, event)\r\n     * ```\r\n     *\r\n     * @see {@link #large}\r\n     */\r\n    onOkClick: PropTypes.func,\r\n\r\n    /**\r\n     * The label to use for the \"Ok\" button in large dialogs.\r\n     *\r\n     * @see {@link #large}\r\n     */\r\n    okLabel: PropTypes.node.isRequired,\r\n\r\n    /**\r\n     * Boolean if the \"Ok\" button in large dialogs should be styled with the primary color.\r\n     * To get a `default` styled button, set both `okPrimary` and `okSecondary` (or omit `okSecondary`)\r\n     * to `false`.\r\n     *\r\n     * @see {@link #large}\r\n     * @see {@link #okSecondary}\r\n     */\r\n    okPrimary: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the \"Ok\" button in large dialogs should be styled with the secondary color.\r\n     *\r\n     * @see {@link #large}\r\n     * @see {@link #okPrimary}\r\n     */\r\n    okSecondary: PropTypes.bool,\r\n\r\n    /**\r\n     * Any additional props to apply to the \"Ok\" button. This will override any of the other\r\n     * button props.\r\n     *\r\n     * @see {@link #okLabel}\r\n     * @see {@link #okPrimary}\r\n     * @see {@link #okSecondary}\r\n     */\r\n    okProps: PropTypes.object,\r\n\r\n    /**\r\n     * An optional function to call when the \"Cancel\" button has been clicked in large edit dialogs.\r\n     * The callback will include the text field's value before any edits occurred and the click event.\r\n     *\r\n     * ```js\r\n     * onCancelClick(previousValue, event)\r\n     * ```\r\n     *\r\n     * @see {@link #large}\r\n     */\r\n    onCancelClick: PropTypes.func,\r\n\r\n    /**\r\n     * The label to give to the \"Cancel\" button in large edit dialogs.\r\n     *\r\n     * @see {@link #large}\r\n     */\r\n    cancelLabel: PropTypes.node.isRequired,\r\n\r\n    /**\r\n     * Boolean if the \"Cancel\" button in large dialogs should be styled with the primary color.\r\n     * To get a `default` styled button, set both `cancelPrimary` and `cancelSecondary` (or\r\n     * omit `cancelSecondary`) to `false`.\r\n     *\r\n     * @see {@link #large}\r\n     * @see {@link #cancelSecondary}\r\n     */\r\n    cancelPrimary: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the \"Cancel\" button in large dialogs should be styled with the secondary color.\r\n     *\r\n     * @see {@link #large}\r\n     * @see {@link #cancelPrimary}\r\n     */\r\n    cancelSecondary: PropTypes.bool,\r\n\r\n    /**\r\n     * Any additional props to apply to the \"Cancel\" button. This will override any of the other\r\n     * button props.\r\n     *\r\n     * @see {@link #cancelLabel}\r\n     * @see {@link #cancelPrimary}\r\n     * @see {@link #cancelSecondary}\r\n     */\r\n    cancelProps: PropTypes.object,\r\n\r\n    /**\r\n     * Boolean if the action for clicking somewhere on on the page while the dialog is open\r\n     * saves the changes or cancels to the previous value before opening the dialog.\r\n     *\r\n     * @see {@link #onOkClick}\r\n     * @see {@link #onCancelClick}\r\n     */\r\n    okOnOutsideClick: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional function to call when a user clicks out of the text field.\r\n     */\r\n    onOutsideClick: PropTypes.func,\r\n\r\n    /**\r\n     * Boolean if the edit dialog should be closed if the user clicks somewhere else on the page\r\n     * while the dialog is open.\r\n     */\r\n    closeOnOutsideClick: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the Edit Dialog should be visible by default. This only applies when the `inline` prop\r\n     * is not enabled.\r\n     */\r\n    defaultVisible: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the edit dialog should automatically open when the text field is focused for non-inline\r\n     * dialogs. This is enabled by default for backwards compatibility.\r\n     */\r\n    visibleOnFocus: PropTypes.bool,\r\n\r\n    /**\r\n     * The type for the text field in the edit dialog.\r\n     *\r\n     * @see {@link TextFields/TextField#type}\r\n     */\r\n    type: PropTypes.string,\r\n\r\n    /**\r\n     * This is how the dialog gets \"anchored\" to the table column.\r\n     *\r\n     * @see {@link Helpers/Layover#anchor}\r\n     */\r\n    anchor: anchorShape,\r\n\r\n    /**\r\n     * This is the anchor to use when the `position` is set to `Autocomplete.Positions.BELOW`.\r\n     *\r\n     * @see {@link Helpers/Layover#belowAnchor}\r\n     */\r\n    belowAnchor: anchorShape,\r\n\r\n    /**\r\n     * This is the animation position to use for the dialog.\r\n     *\r\n     * @see {@link Helpers/Layover#animationPosition}\r\n     */\r\n    animationPosition: positionShape,\r\n\r\n    /**\r\n     * This is how the dialog should be fixed within the table. When this is omitted, it will\r\n     * automatically use the responsive table as the fixture so that the dialog will close/adjust itself\r\n     * to the scrolling of the table.\r\n     *\r\n     * @see {@link Helpers/Layover#fixedTo}\r\n     */\r\n    fixedTo: fixedToShape,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#xThreshold}\r\n     */\r\n    xThreshold: PropTypes.number,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#yThreshold}\r\n     */\r\n    yThreshold: PropTypes.number,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#centered}\r\n     */\r\n    centered: PropTypes.bool,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#sameWidth}\r\n     */\r\n    sameWidth: PropTypes.bool,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#transitionName}\r\n     */\r\n    transitionName: PropTypes.string,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#transitionEnterTimeout}\r\n     */\r\n    transitionEnterTimeout: PropTypes.number,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#transitionLeaveTimeout}\r\n     */\r\n    transitionLeaveTimeout: PropTypes.number,\r\n\r\n    /**\r\n     * The optional tooltip to render on hover.\r\n     */\r\n    tooltipLabel: PropTypes.node,\r\n\r\n    /**\r\n     * An optional delay to apply to the tooltip before it appears.\r\n     */\r\n    tooltipDelay: PropTypes.number,\r\n\r\n    /**\r\n     * The position of the tooltip.\r\n     */\r\n    tooltipPosition: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\r\n\r\n    /**\r\n     * Boolean if the menu should automatically try to reposition itself to stay within\r\n     * the viewport when the `fixedTo` element scrolls.\r\n     *\r\n     * @see {@link Helpers/Layover#repositionOnScroll}\r\n     */\r\n    repositionOnScroll: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the menu should automatically try to reposition itself to stay within\r\n     * the viewport when the window resizes.\r\n     *\r\n     * @see {@link Helpers/Layover#repositionOnResize}\r\n     */\r\n    repositionOnResize: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the dialog logic should be simplified without any viewport logic and position\r\n     * based on the relative position of the menu. This will most like require some additional\r\n     * styles applied to the dialog.\r\n     *\r\n     * @see {@link Helpers/Layover#simplified}\r\n     */\r\n    simplifiedDialog: PropTypes.bool,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#minLeft}\r\n     */\r\n    minLeft: Layover.propTypes.minLeft,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#minRight}\r\n     */\r\n    minRight: Layover.propTypes.minLeft,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#minBottom}\r\n     */\r\n    minBottom: Layover.propTypes.minBottom,\r\n\r\n    /**\r\n     * Boolean if the edit dialog should attempt to scroll into view if the full\r\n     * dialog can not be displayed in the viewport when it was toggled open.\r\n     *\r\n     * @see {@link #scrollIntoViewPadding}\r\n     */\r\n    scrollIntoView: PropTypes.bool,\r\n\r\n    /**\r\n     * The amount of padding that should be applied when the cell is scrolled into view.\r\n     * This will be applied to the left of the cell.\r\n     */\r\n    scrollIntoViewPadding: PropTypes.number,\r\n\r\n    /**\r\n     * An optional function to call when the `click` event is triggered in the column.\r\n     */\r\n    onClick: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `mousedown` event is triggered in the column.\r\n     */\r\n    onMouseDown: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `mouseup` event is triggered in the column.\r\n     */\r\n    onMouseUp: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `touchstart` event is triggered in the column.\r\n     */\r\n    onTouchStart: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `touchend` event is triggered in the column.\r\n     */\r\n    onTouchEnd: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `mouseenter` event is triggered in the column.\r\n     */\r\n    onMouseEnter: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `mouseover` event is triggered in the column.\r\n     */\r\n    onMouseOver: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `mouseleave` event is triggered in the column.\r\n     */\r\n    onMouseLeave: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `touchmove` event is triggered in the column.\r\n     */\r\n    onTouchMove: PropTypes.func,\r\n\r\n    /**\r\n     * This is injected by the `TableRow` component.\r\n     * @access private\r\n     */\r\n    header: PropTypes.bool,\r\n\r\n    /**\r\n     * This is injected by the `TableRow` component and used to help generate the unique id for the text\r\n     * field.\r\n     *\r\n     * @access private\r\n     */\r\n    cellIndex: PropTypes.number,\r\n\r\n    /**\r\n     * @access private\r\n     */\r\n    adjusted: PropTypes.bool,\r\n\r\n    inlineIconChildren: deprecated(PropTypes.node, 'Use the `inlineIcon` prop instead'),\r\n    inlineIconClassName: deprecated(PropTypes.string, 'Use the `inlineIcon` prop instead'),\r\n    noIcon: deprecated(PropTypes.bool, 'Set the `inlineIcon` prop to `null` instead'),\r\n    enforceMinWidth: deprecated(\r\n      PropTypes.bool,\r\n      'The min width will always be enforced based on the `$md-edit-dialog-min-width` Sass variable'\r\n    ),\r\n    scrollThreshold: deprecated(\r\n      PropTypes.number,\r\n      'Use `xThreshold` and `yThreshold` instead'\r\n    ),\r\n    transitionDuration: deprecated(\r\n      PropTypes.number,\r\n      'use `transitionEnterTimeout` and `transitionLeaveTimeout` instead'\r\n    ),\r\n  };\r\n\r\n  static defaultProps = {\r\n    type: 'text',\r\n    defaultValue: '',\r\n    okOnOutsideClick: true,\r\n    inlineIcon: <FontIcon>edit</FontIcon>,\r\n    okLabel: 'Save',\r\n    okPrimary: true,\r\n    cancelLabel: 'Cancel',\r\n    cancelPrimary: true,\r\n    animationPosition: EditDialogColumn.Positions.BELOW,\r\n    dialogZDepth: 1,\r\n    repositionOnScroll: true,\r\n    repositionOnResize: false,\r\n    scrollIntoView: true,\r\n    scrollIntoViewPadding: 16,\r\n    minLeft: 0,\r\n    minRight: 0,\r\n    minBottom: 0,\r\n    visibleOnFocus: true,\r\n    defaultVisible: false,\r\n  };\r\n\r\n  static contextTypes = {\r\n    rowId: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      visible: props.defaultVisible,\r\n      value: props.defaultValue,\r\n      cancelValue: props.defaultValue,\r\n      actions: this._makeActions(props),\r\n      cellIndex: undefined,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._column = findDOMNode(this);\r\n    this._table = findTable(this._column);\r\n    this._fixedTo = findFixedTo(this._table);\r\n\r\n    // If a developer creates their own component to wrap the EditDialogColumn, the cellIndex prop\r\n    // might not be defined if they don't pass ...props\r\n    const { cellIndex } = this.props;\r\n    if (!cellIndex && cellIndex !== 0) {\r\n      const columns = [].slice.call(this._column.parentNode.querySelectorAll('th,td'));\r\n      this.setState({ cellIndex: columns.indexOf(this._column) }); // eslint-disable-line react/no-did-mount-set-state\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const {\r\n      okLabel,\r\n      okPrimary,\r\n      okSecondary,\r\n      okProps,\r\n      cancelLabel,\r\n      cancelPrimary,\r\n      cancelSecondary,\r\n      cancelProps,\r\n    } = this.props;\r\n\r\n    if (okLabel !== nextProps.okLabel || okPrimary !== nextProps.okPrimary\r\n      || okSecondary !== nextProps.okSecondary || cancelLabel !== nextProps.cancelLabel\r\n      || cancelPrimary !== nextProps.cancelPrimary || cancelSecondary !== nextProps.cancelSecondary\r\n      || okProps !== nextProps.okProps || cancelProps !== nextProps.cancelProps\r\n    ) {\r\n      this.setState({ actions: this._makeActions(nextProps) });\r\n    }\r\n  }\r\n\r\n  _setField = (field) => {\r\n    this._field = field;\r\n  };\r\n\r\n  _makeActions = (props) => {\r\n    const {\r\n      okLabel,\r\n      okPrimary,\r\n      okSecondary,\r\n      okProps,\r\n      cancelLabel,\r\n      cancelPrimary,\r\n      cancelSecondary,\r\n      cancelProps,\r\n    } = props;\r\n\r\n    return [{\r\n      key: 'cancel',\r\n      children: cancelLabel,\r\n      primary: cancelPrimary && !cancelSecondary,\r\n      secondary: cancelSecondary,\r\n      ...cancelProps,\r\n      onClick: this._handleCancel,\r\n    }, {\r\n      key: 'ok',\r\n      children: okLabel,\r\n      primary: okPrimary && !okSecondary,\r\n      secondary: okSecondary,\r\n      ...okProps,\r\n      onClick: this._handleOk,\r\n    }];\r\n  };\r\n\r\n  _handleOpen = (e) => {\r\n    if (this._skipNextOpen) {\r\n      this._skipNextOpen = false;\r\n    } else if (this.props.visibleOnFocus || !e || e.type !== 'focus') {\r\n      const { scrollIntoView, scrollIntoViewPadding } = this.props;\r\n      if (scrollIntoView) {\r\n        const vp = viewport(this._column);\r\n        if (vp !== true && this._table && this._column && !this.props.inline) {\r\n          this._table.scrollLeft = this._column.offsetLeft - scrollIntoViewPadding;\r\n        }\r\n      }\r\n\r\n      this.setState({ visible: true, cancelValue: getField(this.props, this.state, 'value') });\r\n    }\r\n  };\r\n\r\n  _handleClose = (e) => {\r\n    const { onOutsideClick, okOnOutsideClick } = this.props;\r\n    if (onOutsideClick) {\r\n      onOutsideClick(e);\r\n    }\r\n\r\n    if (okOnOutsideClick) {\r\n      this._handleOk(e);\r\n    } else {\r\n      this._handleCancel(e);\r\n    }\r\n  };\r\n\r\n  _handleChange = (value, e) => {\r\n    if (this.props.onChange) {\r\n      this.props.onChange(value, e);\r\n    }\r\n\r\n    if (typeof this.props.value === 'undefined') {\r\n      this.setState({ value });\r\n    }\r\n  };\r\n\r\n  _handleFocus = (e) => {\r\n    if (this.props.onFocus) {\r\n      this.props.onFocus(e);\r\n    }\r\n\r\n    if (this.props.inline) {\r\n      this.setState({ cancelValue: e.target.value });\r\n    }\r\n  };\r\n\r\n  _handleKeyDown = (e) => {\r\n    const { onKeyDown, okOnOutsideClick, large } = this.props;\r\n    if (onKeyDown) {\r\n      onKeyDown(e);\r\n    }\r\n\r\n    const key = e.which || e.keyCode;\r\n    if (key === ENTER) {\r\n      this._handleOk(e);\r\n    } else if (key === ESC) {\r\n      this._handleCancel(e);\r\n    } else if (key === TAB && !large) {\r\n      // infinitely opens otherwise...\r\n      this._skipNextOpen = e.shiftKey;\r\n\r\n      if (okOnOutsideClick) {\r\n        this._handleOk(e);\r\n      } else {\r\n        this._handleCancel(e);\r\n      }\r\n    }\r\n  };\r\n\r\n  _handleOk = (e) => {\r\n    if (this.props.onOkClick) {\r\n      this.props.onOkClick(getField(this.props, this.state, 'value'), e);\r\n    }\r\n\r\n    this.setState({ visible: false });\r\n  };\r\n\r\n  _handleCancel = (e) => {\r\n    const value = this.state.cancelValue;\r\n    if (this.props.onCancelClick) {\r\n      this.props.onCancelClick(value, e);\r\n    }\r\n\r\n    const state = { visible: false };\r\n    if (typeof this.props.value === 'undefined') {\r\n      state.value = value;\r\n    }\r\n\r\n    this.setState(state);\r\n  };\r\n\r\n  render() {\r\n    const { rowId } = this.context;\r\n    const {\r\n      style,\r\n      className,\r\n      layoverStyle,\r\n      layoverClassName,\r\n      dialogStyle,\r\n      dialogClassName,\r\n      dialogContentStyle,\r\n      dialogContentClassName,\r\n      dialogZDepth,\r\n      textFieldStyle,\r\n      textFieldClassName,\r\n      inputClassName,\r\n      large,\r\n      title,\r\n      inline,\r\n      inlineIcon,\r\n      maxLength,\r\n      label,\r\n      placeholder,\r\n      header,\r\n      anchor,\r\n      belowAnchor,\r\n      fixedTo,\r\n      animationPosition,\r\n      xThreshold,\r\n      yThreshold,\r\n      centered,\r\n      sameWidth,\r\n      repositionOnScroll,\r\n      repositionOnResize,\r\n      transitionName,\r\n      transitionEnterTimeout,\r\n      transitionLeaveTimeout,\r\n      tooltipLabel,\r\n      tooltipDelay,\r\n      tooltipPosition,\r\n      onClick,\r\n      onMouseDown,\r\n      onMouseUp,\r\n      onTouchStart,\r\n      onTouchEnd,\r\n      onMouseEnter,\r\n      onMouseOver,\r\n      onMouseLeave,\r\n      onTouchMove,\r\n      simplifiedDialog,\r\n      minLeft,\r\n      minRight,\r\n      minBottom,\r\n\r\n      // deprecated\r\n      noIcon,\r\n      inlineIconChildren,\r\n      inlineIconClassName,\r\n      /* eslint-disable no-unused-vars */\r\n      id: propId,\r\n      dialogId: propDialogId,\r\n      cellIndex: propCellIndex,\r\n      onOkClick,\r\n      okLabel,\r\n      okPrimary,\r\n      okSecondary,\r\n      okProps,\r\n      onCancelClick,\r\n      cancelLabel,\r\n      cancelPrimary,\r\n      cancelSecondary,\r\n      cancelProps,\r\n      okOnOutsideClick,\r\n      defaultValue,\r\n      adjusted,\r\n      scrollIntoView,\r\n      scrollIntoViewPadding,\r\n      defaultVisible,\r\n      visibleOnFocus,\r\n\r\n      // deprecated\r\n      scrollThreshold,\r\n      enforceMinWidth,\r\n      transitionDuration,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n    const { visible, actions } = this.state;\r\n    const value = getField(this.props, this.state, 'value');\r\n    const cellIndex = getField(this.props, this.state, 'cellIndex');\r\n\r\n    let { id, dialogId } = this.props;\r\n    if (!dialogId) {\r\n      dialogId = `${id || `${rowId}-${cellIndex}`}-edit-dialog`;\r\n    }\r\n\r\n    if (!id) {\r\n      id = `${dialogId}-field`;\r\n    }\r\n\r\n    let inlineEditIcon;\r\n    if (inline && !noIcon) {\r\n      const icon = getDeprecatedIcon(inlineIconClassName, inlineIconChildren, inlineIcon);\r\n      if (icon) {\r\n        inlineEditIcon = React.cloneElement(icon, { key: 'edit-icon' });\r\n      }\r\n    }\r\n\r\n    const numeric = props.type === 'number';\r\n    const field = (\r\n      <TextField\r\n        {...props}\r\n        ref={this._setField}\r\n        style={textFieldStyle}\r\n        className={cn({ 'md-edit-dialog__blocked-field': inline }, textFieldClassName)}\r\n        inputClassName={cn({\r\n          'md-edit-dialog__header': header && inline,\r\n          'md-text-right': numeric,\r\n        }, themeColors({ hint: header && inline }), inputClassName)}\r\n        id={id}\r\n        label={label}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onFocus={this._handleFocus}\r\n        onChange={this._handleChange}\r\n        onKeyDown={this._handleKeyDown}\r\n        block={inline}\r\n        maxLength={visible ? maxLength : null}\r\n        rightIcon={inlineEditIcon}\r\n      />\r\n    );\r\n\r\n    let children;\r\n    if (inline) {\r\n      children = field;\r\n    } else {\r\n      const dialogLabel = value || value === 0 ? value : placeholder || label;\r\n      children = (\r\n        <EditDialog\r\n          style={layoverStyle}\r\n          className={layoverClassName}\r\n          dialogStyle={dialogStyle}\r\n          dialogClassName={dialogClassName}\r\n          dialogContentStyle={dialogContentStyle}\r\n          dialogContentClassName={dialogContentClassName}\r\n          id={dialogId}\r\n          textFieldId={id}\r\n          visible={visible}\r\n          onOpen={this._handleOpen}\r\n          onClose={this._handleClose}\r\n          label={dialogLabel}\r\n          actions={actions}\r\n          large={large}\r\n          title={title}\r\n          header={header}\r\n          placeholder={dialogLabel === placeholder || dialogLabel === label}\r\n          simplified={simplifiedDialog}\r\n          anchor={anchor}\r\n          belowAnchor={belowAnchor}\r\n          animationPosition={animationPosition}\r\n          xThreshold={xThreshold}\r\n          yThreshold={yThreshold}\r\n          centered={centered}\r\n          sameWidth={sameWidth}\r\n          minLeft={minLeft}\r\n          minRight={minRight}\r\n          minBottom={minBottom}\r\n          fixedTo={typeof fixedTo !== 'undefined' ? fixedTo : this._fixedTo}\r\n          dialogZDepth={dialogZDepth}\r\n          repositionOnScroll={repositionOnScroll}\r\n          repositionOnResize={repositionOnResize}\r\n          transitionName={transitionName}\r\n          transitionEnterTimeout={transitionEnterTimeout}\r\n          transitionLeaveTimeout={transitionLeaveTimeout}\r\n        >\r\n          {field}\r\n        </EditDialog>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <TableColumn\r\n        style={style}\r\n        numeric={numeric}\r\n        className={cn('md-edit-dialog-column', className)}\r\n        header={header}\r\n        adjusted={false}\r\n        tooltipLabel={tooltipLabel}\r\n        tooltipDelay={tooltipDelay}\r\n        tooltipPosition={tooltipPosition}\r\n        onClick={onClick}\r\n        onMouseDown={onMouseDown}\r\n        onMouseUp={onMouseUp}\r\n        onTouchStart={onTouchStart}\r\n        onTouchMove={onTouchMove}\r\n        onMouseEnter={onMouseEnter}\r\n        onMouseOver={onMouseOver}\r\n        onMouseLeave={onMouseLeave}\r\n        onTouchEnd={onTouchEnd}\r\n      >\r\n        {children}\r\n      </TableColumn>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport { findDOMNode } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport getField from '../utils/getField';\r\nimport fixedToShape from '../Helpers/fixedToShape';\r\nimport findTable from './findTable';\r\nimport findFixedTo from './findFixedTo';\r\nimport getDisplayName from '../utils/StringUtils/getDisplayName';\r\n\r\n/**\r\n * This is a utility HOC to fix the components that use the `Menu` component behind the scenes. This will\r\n * correctly add the `id` and `fixedTo` props if they are omitted from the child component's props.\r\n *\r\n * If the id prop is omitted, it will default to the `${rowId}-${cellIndex}-${suffix}` and when the\r\n * `fixedTo` prop is omitted, it will automatically set it to the responsive table wrapper so that\r\n * it will stay in viewport as expected.\r\n *\r\n * This component also attempts to find the `cellIndex` prop if it is not correctly cloned into the\r\n * component.\r\n *\r\n * @param {function|Class} ComposedComponent - the component to compose with the tooltip functionality.\r\n * @param {String} suffix - the id suffix to apply.\r\n * @return {Class} the ComposedComponent with some fixes applied.\r\n */\r\nexport default function withTableFixes(ComposedComponent, suffix) {\r\n  return class TableFixesComponent extends PureComponent {\r\n    static Positions = ComposedComponent.Positions;\r\n    static HorizontalAnchors = ComposedComponent.HorizontalAnchors;\r\n    static VerticalAnchors = ComposedComponent.VerticalAnchors;\r\n    static displayName = getDisplayName(ComposedComponent, 'TableFixes');\r\n    static propTypes = {\r\n      id: PropTypes.oneOfType([\r\n        PropTypes.number,\r\n        PropTypes.string,\r\n      ]),\r\n      cellIndex: PropTypes.number,\r\n      fixedTo: fixedToShape,\r\n    };\r\n\r\n    static contextTypes = {\r\n      rowId: PropTypes.oneOfType([\r\n        PropTypes.number,\r\n        PropTypes.string,\r\n      ]),\r\n    }\r\n\r\n    state = { cellIndex: undefined };\r\n\r\n    componentDidMount() {\r\n      const { cellIndex, fixedTo, id } = this.props;\r\n      const isIndexed = !!id || cellIndex === 0 || !!cellIndex;\r\n      const isFixed = fixedTo === null || !!fixedTo;\r\n      if (isIndexed && isFixed) {\r\n        // all is good\r\n        return;\r\n      }\r\n\r\n      const column = findDOMNode(this);\r\n      const table = findTable(column);\r\n      this._fixedTo = findFixedTo(table);\r\n\r\n      // If a developer creates their own component to wrap the component that uses a menu, the cellIndex prop\r\n      // might not be defined if they don't pass ...props\r\n      if (!isIndexed) {\r\n        const columns = [].slice.call(column.parentNode.querySelectorAll('th,td'));\r\n        this.setState({ cellIndex: columns.indexOf(column) }); // eslint-disable-line react/no-did-mount-set-state\r\n      } else if (this._fixedTo) {\r\n        // need to apply the _fixedTo for the select field\r\n        this.forceUpdate();\r\n      }\r\n    }\r\n\r\n    _fixedTo = null;\r\n\r\n    render() {\r\n      const { rowId } = this.context;\r\n      const {\r\n        /* eslint-disable no-unused-vars */\r\n        id: propid,\r\n        fixedTo: propFixedTo,\r\n        cellIndex: propCellIndex,\r\n        /* eslint-enable no-unused-vars */\r\n        ...props\r\n      } = this.props;\r\n\r\n      let { id } = this.props;\r\n      const fixedTo = this._fixedTo === null || propFixedTo ? propFixedTo : this._fixedTo;\r\n      const cellIndex = getField(this.props, this.state, 'cellIndex');\r\n      if (!id) {\r\n        id = `${rowId}-${cellIndex}-${suffix}`;\r\n      }\r\n\r\n      return <ComposedComponent {...props} id={id} fixedTo={fixedTo} />;\r\n    }\r\n  };\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport deprecated from 'react-prop-types/lib/deprecated';\r\n\r\nimport fixedToShape from '../Helpers/fixedToShape';\r\nimport positionShape from '../Helpers/positionShape';\r\nimport SelectField from '../SelectFields/SelectField';\r\nimport withTableFixes from './withTableFixes';\r\nimport TableColumn from './TableColumn';\r\n\r\n/**\r\n * The `SelectFieldColumn` component is just a simple wrapper between a `SelectField` and\r\n * the `TableColumn` components.\r\n *\r\n * All props that are on the `SelectField` are also available here (except the naming of style or className).\r\n * See the [SelectField](/components/select-fields?tab=1#select-field-proptypes) for remaining prop descriptions.\r\n */\r\nclass SelectFieldColumn extends PureComponent {\r\n  static VerticalAnchors = SelectField.VerticalAnchors;\r\n  static HorizontalAnchors = SelectField.HorizontalAnchors;\r\n  static Positions = SelectField.Positions;\r\n  static propTypes = {\r\n    /**\r\n     * An optional id to use for the select field in the column. If this is omitted, it's value will be\r\n     * `${rowId}-${cellIndex}-select-field`\r\n     */\r\n    id: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * This is the optional style to apply to the `TableColumn`.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * This is the optional className to apply to the `TableColumn`.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * The is the optional style to apply to the select field's menu container.\r\n     *\r\n     * @see {@link SelectFields/SelectField#style}\r\n     */\r\n    menuStyle: PropTypes.object,\r\n\r\n    /**\r\n     * The is the optional class name to apply to the select field's menu container.\r\n     *\r\n     * @see {@link SelectFields/SelectField#className}\r\n     */\r\n    menuClassName: PropTypes.string,\r\n\r\n    /**\r\n     * This is how the select field should be fixed within the table. When this is omitted,\r\n     * it will automatically use the responsive table as the fixture so that the select field\r\n     * will close/adjust itself to the scrolling of the table.\r\n     *\r\n     * @see {@link Helpers/Layover#fixedTo}\r\n     */\r\n    fixedTo: fixedToShape,\r\n\r\n    /**\r\n     * Boolean if the select field should span the entire width of the column.\r\n     */\r\n    fullWidth: PropTypes.bool,\r\n\r\n    /**\r\n     * The position for the select field.\r\n     *\r\n     * @see {@link SelectFields/SelectField#position}\r\n     */\r\n    position: positionShape,\r\n\r\n    /**\r\n     * This is injected by the `TableRow` component.\r\n     * @access private\r\n     */\r\n    header: PropTypes.bool,\r\n\r\n    /**\r\n     * @access private\r\n     */\r\n    adjusted: PropTypes.bool,\r\n\r\n    /**\r\n     * The optional tooltip to render on hover.\r\n     *\r\n     * @see {@link DataTables/TableColumn#tooltipLabel}\r\n     */\r\n    tooltipLabel: PropTypes.string,\r\n\r\n    /**\r\n     * An optional delay to apply to the tooltip before it appears.\r\n     *\r\n     * @see {@link DataTables/TableColumn#tooltipDelay}\r\n     */\r\n    tooltipDelay: PropTypes.number,\r\n\r\n    /**\r\n     * The position of the tooltip.\r\n     *\r\n     * @see {@link DataTables/TableColumn#tooltipPosition}\r\n     */\r\n    tooltipPosition: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\r\n\r\n    /**\r\n     * Boolean if the menu should automatically try to reposition itself to stay within\r\n     * the viewport when the `fixedTo` element scrolls.\r\n     *\r\n     * @see {@link Helpers/Layover#repositionOnScroll}\r\n     */\r\n    repositionOnScroll: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the menu should automatically try to reposition itself to stay within\r\n     * the viewport when the window resizes.\r\n     *\r\n     * @see {@link Helpers/Layover#repositionOnResize}\r\n     */\r\n    repositionOnResize: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the menu logic should be simplified without any viewport logic and position\r\n     * based on the relative position of the menu. This will most like require some additional\r\n     * styles applied to the menu.\r\n     *\r\n     * @see {@link Helpers/Layover#simplified}\r\n     */\r\n    simplifiedMenu: PropTypes.bool,\r\n\r\n    wrapperStyle: deprecated(PropTypes.object, 'There is no longer a wrapper'),\r\n    wrapperClassName: deprecated(PropTypes.string, 'There is no longer a wrapper'),\r\n  };\r\n\r\n  static defaultProps = {\r\n    position: SelectFieldColumn.Positions.BELOW,\r\n    fullWidth: true,\r\n    repositionOnScroll: true,\r\n    repositionOnResize: false,\r\n    simplifiedMenu: false,\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      style,\r\n      className,\r\n      menuStyle,\r\n      menuClassName,\r\n      header,\r\n      tooltipLabel,\r\n      tooltipDelay,\r\n      tooltipPosition,\r\n      /* eslint-disable no-unused-vars */\r\n      adjusted,\r\n\r\n      // deprecated\r\n      wrapperStyle,\r\n      wrapperClassName,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n\r\n    return (\r\n      <TableColumn\r\n        header={header}\r\n        style={style}\r\n        className={cn('md-select-field-column', className)}\r\n        adjusted={false}\r\n        tooltipLabel={tooltipLabel}\r\n        tooltipDelay={tooltipDelay}\r\n        tooltipPosition={tooltipPosition}\r\n      >\r\n        <SelectField {...props} style={menuStyle} className={menuClassName} />\r\n      </TableColumn>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTableFixes(SelectFieldColumn, 'select-field');\r\n","/** @module utils/mapToListParts */\r\n\r\nimport { createElement, isValidElement } from 'react';\r\nimport Divider from '../Dividers/Divider';\r\nimport Subheader from '../Subheaders/Subheader';\r\nimport ListItem from '../Lists/ListItem';\r\n\r\n/**\r\n * A utility function to convert any \"item\" into a valid React element that is used\r\n * within the `List` component.\r\n *\r\n * Use cases:\r\n * - is a valid React element -> item returned unmodified\r\n * - `number` or `string` -> `ListItem` with the item as the `primaryText`\r\n * - an `object` with a key `divider: true` -> a `Divider` component with the remaining\r\n *    keys applied as props.\r\n * - an `object` with a key `subheader: true` -> a `Subheader` component with the remianing\r\n *    keys applied as props. This one technically requires the `primaryText` key to be defined.\r\n * - an `object` -> all keys passed into the `ListItem` component.\r\n *\r\n * Examples:\r\n * ```js\r\n * mapToListParts('Hello') == <ListItem primaryText=\"Hello\" />\r\n * mapToListParts(100)     == <ListItem primaryText={100} />\r\n * mapToListParts({ primaryText: 'Item' }) == <ListItem primaryText=\"Item\" />\r\n * mapToListParts({ divider: true }) == <Divider />\r\n * mapToListParts({ subheader: true, primaryText: 'Subheader' }) == <Subheader primaryText=\"Subheader\" />\r\n * ```\r\n *\r\n * @param {string|number|Object} item - the item to convert\r\n * @param {number|string=} index - the current index in the array (if used in an array)\r\n * @return {Object} a React element\r\n */\r\nexport default function mapToListParts(item, index) {\r\n  if (typeof item === 'string' || typeof item === 'number') {\r\n    return createElement(ListItem, { key: item, primaryText: item });\r\n  } else if (isValidElement(item)) {\r\n    return item;\r\n  }\r\n\r\n  const { divider, subheader, nestedItems, ...remainingProps } = item;\r\n  let component;\r\n  if (divider) {\r\n    component = Divider;\r\n  } else if (subheader) {\r\n    component = Subheader;\r\n  } else {\r\n    component = ListItem;\r\n  }\r\n\r\n  const props = { ...remainingProps, key: item.key || index };\r\n  if (nestedItems) {\r\n    props.nestedItems = nestedItems.map(mapToListParts);\r\n  }\r\n\r\n  return createElement(component, props);\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport controlled from '../utils/PropTypes/controlled';\r\nimport mapToListParts from '../utils/mapToListParts';\r\nimport getField from '../utils/getField';\r\nimport anchorShape from '../Helpers/anchorShape';\r\nimport fixedToShape from '../Helpers/fixedToShape';\r\nimport positionShape from '../Helpers/positionShape';\r\nimport Menu from './Menu';\r\n\r\n/**\r\n * The `DropdownMenu` is just a simple wrapper to the `Menu` component. The main differences\r\n * is that the `toggle` component will now be the children and the list of items to display\r\n * will be the `menuItems` prop.\r\n *\r\n * The dropdown menu is mostly used to control the state of the menu and render a single element\r\n * as the toggle.\r\n */\r\nexport default class DropdownMenu extends PureComponent {\r\n  static Positions = Menu.Positions;\r\n  static HorizontalAnchors = Menu.HorizontalAnchors;\r\n  static VerticalAnchors = Menu.VerticalAnchors;\r\n  static propTypes = {\r\n    /**\r\n     * An id to use for the menu. This is required for accessibility.\r\n     *\r\n     * @see {@link Menus/Menu#id}\r\n     */\r\n    id: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * An optional id to provide to the menu's list.\r\n     *\r\n     * @see {@link Menus/Menu#listId}\r\n     */\r\n    listId: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * An optional style to apply to the menu.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the menu.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the list.\r\n     */\r\n    listStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional class name to apply to the list.\r\n     */\r\n    listClassName: PropTypes.string,\r\n\r\n    /**\r\n     * Any additional props to provide to the list.\r\n     *\r\n     * @see {@link Menus/Menu#listProps}\r\n     */\r\n    listProps: PropTypes.object,\r\n\r\n    /**\r\n     * The z-depth to use for the list.\r\n     *\r\n     * @see {@link Menus/Menu/listZDepth}\r\n     */\r\n    listZDepth: PropTypes.number,\r\n\r\n    /**\r\n     * Boolean if the list should be displayed inline.\r\n     *\r\n     * @see {@link Lists/List#inline}\r\n     */\r\n    listInline: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the list's height should be restricted.\r\n     *\r\n     * @see {@link Menus/Menu#listHeightRestricted}\r\n     */\r\n    listHeightRestricted: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the menu's list is currently visible. If this is defined, it will\r\n     * require the `onVisibilityChange` function to be defined since it will become\r\n     * a controlled component.\r\n     */\r\n    visible: controlled(PropTypes.bool, 'onVisibilityChange', 'defaultVisible'),\r\n\r\n    /**\r\n     * Boolean if the menu's list should be visible by default.\r\n     */\r\n    defaultVisible: PropTypes.bool.isRequired,\r\n\r\n    /**\r\n     * An optional function to call when the button is clicked.\r\n     */\r\n    onClick: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the visibility changes for the menu. The callback will\r\n     * include the next visibility state and the event that triggered the change.\r\n     *\r\n     * ```js\r\n     * onVisibilityChange(visible, event);\r\n     * ```\r\n     */\r\n    onVisibilityChange: PropTypes.func,\r\n\r\n    /**\r\n     * This is a 0 to many relationship of `ListItem` to display in the menu's `List`. If the type\r\n     * of the item is a number or string, it will be passed to the `ListItem` as the `primaryText`.\r\n     * If it is an object, it should be the shape of the `ListItem` props. If it is a node, it will\r\n     * just be rendered in the `List`.\r\n     *\r\n     * @see {@link Lists/ListItem}\r\n     * @see {@link Menus/Menu#children}\r\n     */\r\n    menuItems: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n      PropTypes.object,\r\n      PropTypes.node,\r\n      PropTypes.arrayOf(PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number,\r\n        PropTypes.object,\r\n        PropTypes.node,\r\n      ])),\r\n    ]),\r\n\r\n    /**\r\n     * @see {@link Menus/Menu#toggle}\r\n     */\r\n    children: PropTypes.element.isRequired,\r\n\r\n    /**\r\n     * The anchor position of the menu's list.\r\n     *\r\n     * @see {@link Helpers/Layover#anchor}\r\n     */\r\n    anchor: anchorShape,\r\n\r\n    /**\r\n     * This is the anchor to use when the `position` is set to `Autocomplete.Positions.BELOW`.\r\n     *\r\n     * @see {@link Helpers/Layover#belowAnchor}\r\n     */\r\n    belowAnchor: anchorShape,\r\n\r\n    /**\r\n     * This is how the menu's list is fixed to the toggle.\r\n     *\r\n     * @see {@link Menus/Menu#fixedTo}\r\n     */\r\n    fixedTo: fixedToShape,\r\n\r\n    /**\r\n     * This is the animation position for the menu's list.\r\n     *\r\n     * @see {@link Menus/Menu#position}\r\n     */\r\n    position: positionShape,\r\n\r\n    /**\r\n     * Boolean if the menu's list should gain the cascading styles.\r\n     *\r\n     * @see {@link Menus/Menu#cascading}\r\n     */\r\n    cascading: PropTypes.bool,\r\n\r\n    /**\r\n     * The zDepth to use for the lists that appear in cascading menus.\r\n     *\r\n     * @see {@link Menus/Menu#cascadingZDepth}\r\n     */\r\n    cascadingZDepth: PropTypes.number,\r\n\r\n    /**\r\n     * The anchor position for the cascading lists.\r\n     *\r\n     * @see {@link Menus/Menu#cascadingAnchor}\r\n     */\r\n    cascadingAnchor: anchorShape,\r\n\r\n    /**\r\n     * Boolean if the menu should display as a full width container. This will *not* update the button\r\n     * to be full width as well.\r\n     *\r\n     * @see {@link Menus/Menu#fullWidth}\r\n     */\r\n    fullWidth: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the menu's container should display as `block` instead of `inline-block`.\r\n     *\r\n     * @see {@link Menus/Menu#block}\r\n     */\r\n    block: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the list should appear centered related to the button.\r\n     *\r\n     * @see {@link Menus/Menu#centered}\r\n     */\r\n    centered: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the menu's list should be the same width as the button.\r\n     *\r\n     * @see {@link Menus/Menu#sameWidth}\r\n     */\r\n    sameWidth: PropTypes.bool,\r\n\r\n    /**\r\n     * @see {@link Menus/Menu#xThreshold}\r\n     */\r\n    xThreshold: PropTypes.number,\r\n\r\n    /**\r\n     * @see {@link Menus/Menu#yThreshold}\r\n     */\r\n    yThreshold: PropTypes.number,\r\n\r\n    /**\r\n     * Boolean if the menu's list should be closed when an element outside of the menu has been clicked.\r\n     *\r\n     * @see {@link Menus/Menu#closeOnOutsideClick}\r\n     */\r\n    closeOnOutsideClick: PropTypes.bool,\r\n\r\n    /**\r\n     * The transition name to use for the menu's list visibility changes.\r\n     *\r\n     * @see {@link Menus/Menu#transitionName}\r\n     */\r\n    transitionName: PropTypes.string,\r\n\r\n    /**\r\n     * The transition name to use when the menu's list gains visibility.\r\n     *\r\n     * @see {@link Menus/Menu#transitionEnterTimeout}\r\n     */\r\n    transitionEnterTimeout: PropTypes.number,\r\n\r\n    /**\r\n     * The transition timeout to use when the menu's list loses visibility.\r\n     *\r\n     * @see {@link Menus/Menu#transitionLeaveTimeout}\r\n     */\r\n    transitionLeaveTimeout: PropTypes.number,\r\n\r\n    /**\r\n     * Boolean if the menu should automatically try to reposition itself to stay within\r\n     * the viewport when the `fixedTo` element scrolls.\r\n     *\r\n     * @see {@link Helpers/Layover#repositionOnScroll}\r\n     */\r\n    repositionOnScroll: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the menu should automatically try to reposition itself to stay within\r\n     * the viewport when the window resizes.\r\n     *\r\n     * @see {@link Helpers/Layover#repositionOnResize}\r\n     */\r\n    repositionOnResize: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the menu logic should be simplified without any viewport logic and position\r\n     * based on the relative position of the menu. This will most like require some additional\r\n     * styles applied to the menu.\r\n     *\r\n     * @see {@link Helpers/Layover#simplified}\r\n     */\r\n    simplifiedMenu: PropTypes.bool,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#minLeft}\r\n     */\r\n    minLeft: Menu.propTypes.minLeft,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#minRight}\r\n     */\r\n    minRight: Menu.propTypes.minLeft,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#minBottom}\r\n     */\r\n    minBottom: Menu.propTypes.minBottom,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#fillViewportWidth}\r\n     */\r\n    fillViewportWidth: PropTypes.bool,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#fillViewportHeight}\r\n     */\r\n    fillViewportHeight: PropTypes.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    defaultVisible: false,\r\n    repositionOnScroll: true,\r\n    repositionOnResize: false,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n    if (typeof props.visible === 'undefined') {\r\n      this.state.visible = props.defaultVisible;\r\n    }\r\n  }\r\n\r\n  _handleClick = (e) => {\r\n    const { onVisibilityChange, children } = this.props;\r\n    const visible = !getField(this.props, this.state, 'visible');\r\n    if (onVisibilityChange) {\r\n      onVisibilityChange(visible, e);\r\n    }\r\n\r\n    const toggle = React.Children.only(children);\r\n    if (toggle.props.onClick) {\r\n      toggle.props.onClick(e);\r\n    }\r\n\r\n    if (typeof this.props.visible === 'undefined') {\r\n      this.setState({ visible });\r\n    }\r\n  };\r\n\r\n  _handleClose = (e) => {\r\n    const { onVisibilityChange } = this.props;\r\n    const visible = false;\r\n    if (onVisibilityChange) {\r\n      onVisibilityChange(visible, e);\r\n    }\r\n\r\n    if (typeof this.props.visible === 'undefined') {\r\n      this.setState({ visible });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      listId,\r\n      menuItems,\r\n      children: propChildren,\r\n      simplifiedMenu,\r\n      /* eslint-disable no-unused-vars */\r\n      visible: propVisible,\r\n      onVisibilityChange,\r\n      defaultVisible,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n\r\n    const visible = getField(this.props, this.state, 'visible');\r\n\r\n    const children = React.Children.only(propChildren);\r\n    const toggle = React.cloneElement(children, {\r\n      id: children.props.id || `${id}-toggle`,\r\n      onClick: this._handleClick,\r\n    });\r\n\r\n    let items;\r\n    if (!Array.isArray(menuItems)) {\r\n      items = mapToListParts(menuItems);\r\n    } else {\r\n      items = menuItems.map(mapToListParts);\r\n    }\r\n\r\n    return (\r\n      <Menu\r\n        {...props}\r\n        simplified={simplifiedMenu}\r\n        id={id}\r\n        listId={listId}\r\n        toggle={toggle}\r\n        visible={visible}\r\n        onClose={this._handleClose}\r\n      >\r\n        {items}\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport deprecated from 'react-prop-types/lib/deprecated';\r\n\r\nimport controlled from '../utils/PropTypes/controlled';\r\nimport anchorShape from '../Helpers/anchorShape';\r\nimport fixedToShape from '../Helpers/fixedToShape';\r\nimport positionShape from '../Helpers/positionShape';\r\nimport Button from '../Buttons/Button';\r\nimport DropdownMenu from './DropdownMenu';\r\n\r\n/**\r\n * The `MenuButton` is a simple wrapper / combination of the `Button` and the `Menu`\r\n * components that can be uncontrolled.\r\n */\r\nexport default class MenuButton extends PureComponent {\r\n  static Positions = DropdownMenu.Positions;\r\n  static HorizontalAnchors = DropdownMenu.HorizontalAnchors;\r\n  static VerticalAnchors = DropdownMenu.VerticalAnchors;\r\n  static propTypes = {\r\n    /**\r\n     * An id to use for the menu button. This is required for accessibility.\r\n     *\r\n     * @see {@link Menus/Menu#id}\r\n     */\r\n    id: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * An optional id to provide to the menu's list.\r\n     *\r\n     * @see {@link Menus/Menu#listId}\r\n     */\r\n    listId: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * An optional id to provide to the button. If this is omitted, the button will automatically\r\n     * gain an id of `${id}-toggle`.\r\n     */\r\n    buttonId: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * An optional style to apply to the button.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the button.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the surrounding menu.\r\n     */\r\n    menuStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the surrounding menu.\r\n     */\r\n    menuClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the list.\r\n     */\r\n    listStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional class name to apply to the list.\r\n     */\r\n    listClassName: PropTypes.string,\r\n\r\n    /**\r\n     * Any additional props to provide to the list.\r\n     *\r\n     * @see {@link Menus/Menu#listProps}\r\n     */\r\n    listProps: PropTypes.object,\r\n\r\n    /**\r\n     * The z-depth to use for the list.\r\n     *\r\n     * @see {@link Menus/Menu/listZDepth}\r\n     */\r\n    listZDepth: PropTypes.number,\r\n\r\n    /**\r\n     * Boolean if the list should be displayed inline.\r\n     *\r\n     * @see {@link Lists/List#inline}\r\n     */\r\n    listInline: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the list's height should be restricted.\r\n     *\r\n     * @see {@link Menus/Menu#listHeightRestricted}\r\n     */\r\n    listHeightRestricted: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the menu's list is currently visible. If this is defined, it will\r\n     * require the `onVisibilityChange` function to be defined since it will become\r\n     * a controlled component.\r\n     */\r\n    visible: controlled(PropTypes.bool, 'onVisibilityChange', 'defaultVisible'),\r\n\r\n    /**\r\n     * Boolean if the menu's list should be visible by default.\r\n     */\r\n    defaultVisible: PropTypes.bool.isRequired,\r\n\r\n    /**\r\n     * An optional function to call when the button is clicked.\r\n     *\r\n     * @see {@link #onMenuClick}\r\n     */\r\n    onClick: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `mousedown` event is triggered by the button.\r\n     *\r\n     * @see {@link #onMenuMouseDown}\r\n     */\r\n    onMouseDown: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `mouseup` event is triggered by the button.\r\n     *\r\n     * @see {@link #onMenuMouseUp}\r\n     */\r\n    onMouseUp: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `mouseenter` event is triggered by the button.\r\n     *\r\n     * @see {@link #onMenuMouseEnter}\r\n     */\r\n    onMouseEnter: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `mousemove` event is triggered by the button.\r\n     *\r\n     * @see {@link #onMenuMouseMove}\r\n     */\r\n    onMouseMove: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `mouseleave` event is triggered by the button.\r\n     *\r\n     * @see {@link #onMenuMouseLeave}\r\n     */\r\n    onMouseLeave: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `touchstart` event is triggered by the button.\r\n     *\r\n     * @see {@link #onMenuTouchStart}\r\n     */\r\n    onTouchStart: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `touchmove` event is triggered by the button.\r\n     *\r\n     * @see {@link #onMenuTouchMove}\r\n     */\r\n    onTouchMove: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `touchend` event is triggered by the button.\r\n     *\r\n     * @see {@link #onMenuTouchEnd}\r\n     */\r\n    onTouchEnd: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `touchcancel` event is triggered by the button.\r\n     *\r\n     * @see {@link #onMenuTouchCancel}\r\n     */\r\n    onTouchCancel: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `focus` event is triggered by the button.\r\n     *\r\n     * @see {@link #onMenuFocus}\r\n     */\r\n    onFocus: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `blur` event is triggered by the button.\r\n     *\r\n     * @see {@link #onMenuBlur}\r\n     */\r\n    onBlur: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `keydown` event is triggered by the button.\r\n     *\r\n     * @see {@link #onMenuKeyDown}\r\n     */\r\n    onKeyDown: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `keyup` event is triggered by the button.\r\n     *\r\n     * @see {@link #onMenuKeyUp}\r\n     */\r\n    onKeyUp: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when any element in the entire `MenuButton` is clicked. This can be triggered\r\n     * by clicking the button or any list item that appears in the menu list.\r\n     *\r\n     * @see {@link #onClick}\r\n     */\r\n    onMenuClick: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when any element in the `MenuButton` triggers the `mousedown` event.\r\n     *\r\n     * @see {@link #onMouseDown}\r\n     */\r\n    onMenuMouseDown: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when any element in the `MenuButton` triggers the `mouseup` event.\r\n     *\r\n     * @see {@link #onMouseUp}\r\n     */\r\n    onMenuMouseUp: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when any element in the `MenuButton` triggers the `mouseenter` event.\r\n     *\r\n     * @see {@link #onMouseEnter}\r\n     */\r\n    onMenuMouseEnter: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when any element in the `MenuButton` triggers the `mousemove` event.\r\n     *\r\n     * @see {@link #onMouseMove}\r\n     */\r\n    onMenuMouseMove: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when any element in the `MenuButton` triggers the `mouseleave` event.\r\n     *\r\n     * @see {@link #onMouseLeave}\r\n     */\r\n    onMenuMouseLeave: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when any element in the `MenuButton` triggers the `touchstart` event.\r\n     *\r\n     * @see {@link @onTouchStart}\r\n     */\r\n    onMenuTouchStart: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when any element in the `MenuButton` triggers the `touchmove` event.\r\n     *\r\n     * @see {@link @onTouchMove}\r\n     */\r\n    onMenuTouchMove: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when any element in the `MenuButton` triggers the `touchend` event.\r\n     *\r\n     * @see {@link @onTouchEnd}\r\n     */\r\n    onMenuTouchEnd: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when any element in the `MenuButton` triggers the `touchcancel` event.\r\n     *\r\n     * @see {@link @onTouchCancel}\r\n     */\r\n    onMenuTouchCancel: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when any element in the `MenuButton` triggers the `focus` event.\r\n     *\r\n     * @see {@link #onFocus}\r\n     */\r\n    onMenuFocus: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when any element in the `MenuButton` triggers the `blur` event.\r\n     *\r\n     * @see {@link #onBlur}\r\n     */\r\n    onMenuBlur: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when any element in the `MenuButton` triggers the `keydown` event.\r\n     *\r\n     * @see {@link #onKeyDown}\r\n     */\r\n    onMenuKeyDown: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when any element in the `MenuButton` triggers the `keyup` event.\r\n     *\r\n     * @see {@link #onKeyUp}\r\n     */\r\n    onMenuKeyUp: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the visibility changes for the menu. The callback will\r\n     * include the next visibility state and the event that triggered the change.\r\n     *\r\n     * ```js\r\n     * onVisibilityChange(visible, event);\r\n     * ```\r\n     */\r\n    onVisibilityChange: PropTypes.func,\r\n\r\n    /**\r\n     * This is a 0 to many relationship of `ListItem` to display in the menu's `List`. If the type\r\n     * of the item is a number or string, it will be passed to the `ListItem` as the `primaryText`.\r\n     * If it is an object, it should be the shape of the `ListItem` props. If it is a node, it will\r\n     * just be rendered in the `List`.\r\n     *\r\n     * @see {@link Lists/ListItem}\r\n     * @see {@link Menus/Menu#children}\r\n     */\r\n    menuItems: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n      PropTypes.object,\r\n      PropTypes.node,\r\n      PropTypes.arrayOf(PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number,\r\n        PropTypes.object,\r\n        PropTypes.node,\r\n      ])),\r\n    ]),\r\n\r\n    /**\r\n     * This should be the children to use in the `Button` that gets created as the menu's toggle.\r\n     *\r\n     * @see {@link Buttons/Button}\r\n     * @see {@link Menus/Menu#toggle}\r\n     */\r\n    children: PropTypes.node,\r\n\r\n    /**\r\n     * The anchor position of the menu's list.\r\n     *\r\n     * @see {@link Helpers/Layover#anchor}\r\n     */\r\n    anchor: anchorShape,\r\n\r\n    /**\r\n     * This is the anchor to use when the `position` is set to `Autocomplete.Positions.BELOW`.\r\n     *\r\n     * @see {@link Helpers/Layover#belowAnchor}\r\n     */\r\n    belowAnchor: anchorShape,\r\n\r\n    /**\r\n     * This is how the menu's list is fixed to the toggle.\r\n     *\r\n     * @see {@link Menus/Menu#fixedTo}\r\n     */\r\n    fixedTo: fixedToShape,\r\n\r\n    /**\r\n     * This is the animation position for the menu's list.\r\n     *\r\n     * @see {@link Menus/Menu#position}\r\n     */\r\n    position: positionShape,\r\n\r\n    /**\r\n     * Boolean if the menu's list should gain the cascading styles.\r\n     *\r\n     * @see {@link Menus/Menu#cascading}\r\n     */\r\n    cascading: PropTypes.bool,\r\n\r\n    /**\r\n     * The zDepth to use for the lists that appear in cascading menus.\r\n     *\r\n     * @see {@link Menus/Menu#cascadingZDepth}\r\n     */\r\n    cascadingZDepth: PropTypes.number,\r\n\r\n    /**\r\n     * The anchor position for the cascading lists.\r\n     *\r\n     * @see {@link Menus/Menu#cascadingAnchor}\r\n     */\r\n    cascadingAnchor: anchorShape,\r\n\r\n    /**\r\n     * Boolean if the menu should display as a full width container. This will *not* update the button\r\n     * to be full width as well.\r\n     *\r\n     * @see {@link Menus/Menu#fullWidth}\r\n     */\r\n    fullWidth: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the menu's container should display as `block` instead of `inline-block`.\r\n     *\r\n     * @see {@link Menus/Menu#block}\r\n     */\r\n    block: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the list should appear centered related to the button.\r\n     *\r\n     * @see {@link Menus/Menu#centered}\r\n     */\r\n    centered: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the menu's list should be the same width as the button.\r\n     *\r\n     * @see {@link Menus/Menu#sameWidth}\r\n     */\r\n    sameWidth: PropTypes.bool,\r\n\r\n    /**\r\n     * @see {@link Menus/Menu#xThreshold}\r\n     */\r\n    xThreshold: PropTypes.number,\r\n\r\n    /**\r\n     * @see {@link Menus/Menu#yThreshold}\r\n     */\r\n    yThreshold: PropTypes.number,\r\n\r\n    /**\r\n     * Boolean if the menu's list should be closed when an element outside of the menu has been clicked.\r\n     *\r\n     * @see {@link Menus/Menu#closeOnOutsideClick}\r\n     */\r\n    closeOnOutsideClick: PropTypes.bool,\r\n\r\n    /**\r\n     * The transition name to use for the menu's list visibility changes.\r\n     *\r\n     * @see {@link Menus/Menu#transitionName}\r\n     */\r\n    transitionName: PropTypes.string,\r\n\r\n    /**\r\n     * The transition name to use when the menu's list gains visibility.\r\n     *\r\n     * @see {@link Menus/Menu#transitionEnterTimeout}\r\n     */\r\n    transitionEnterTimeout: PropTypes.number,\r\n\r\n    /**\r\n     * The transition timeout to use when the menu's list loses visibility.\r\n     *\r\n     * @see {@link Menus/Menu#transitionLeaveTimeout}\r\n     */\r\n    transitionLeaveTimeout: PropTypes.number,\r\n\r\n    /**\r\n     * Boolean if the menu should automatically try to reposition itself to stay within\r\n     * the viewport when the `fixedTo` element scrolls.\r\n     *\r\n     * @see {@link Helpers/Layover#repositionOnScroll}\r\n     */\r\n    repositionOnScroll: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the menu should automatically try to reposition itself to stay within\r\n     * the viewport when the window resizes.\r\n     *\r\n     * @see {@link Helpers/Layover#repositionOnResize}\r\n     */\r\n    repositionOnResize: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the menu logic should be simplified without any viewport logic and position\r\n     * based on the relative position of the menu. This will most like require some additional\r\n     * styles applied to the menu.\r\n     *\r\n     * @see {@link Helpers/Layover#simplified}\r\n     */\r\n    simplifiedMenu: PropTypes.bool,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#minLeft}\r\n     */\r\n    minLeft: DropdownMenu.propTypes.minLeft,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#minRight}\r\n     */\r\n    minRight: DropdownMenu.propTypes.minLeft,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#minBottom}\r\n     */\r\n    minBottom: DropdownMenu.propTypes.minBottom,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#fillViewportWidth}\r\n     */\r\n    fillViewportWidth: PropTypes.bool,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#fillViewportHeight}\r\n     */\r\n    fillViewportHeight: PropTypes.bool,\r\n\r\n    buttonChildren: deprecated(\r\n      PropTypes.node,\r\n      'To build a button, put any elements in the `children`. The `ListItem` have been moved to the `menuItems` prop'\r\n    ),\r\n    onMenuToggle: deprecated(PropTypes.bool, 'Use `onVisibilityChange` instead'),\r\n    isOpen: deprecated(PropTypes.bool, 'Use `visible` instead'),\r\n    defaultOpen: deprecated(PropTypes.bool, 'Use `defaultVisible` instead'),\r\n  };\r\n\r\n  static defaultProps = {\r\n    defaultVisible: false,\r\n    repositionOnScroll: true,\r\n    repositionOnResize: false,\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      listId,\r\n      buttonId,\r\n      menuStyle,\r\n      menuClassName,\r\n      listStyle,\r\n      listClassName,\r\n      listProps,\r\n      listZDepth,\r\n      listInline,\r\n      listHeightRestricted,\r\n      menuItems,\r\n      buttonChildren,\r\n      children,\r\n      anchor,\r\n      belowAnchor,\r\n      fixedTo,\r\n      position,\r\n      cascading,\r\n      cascadingAnchor,\r\n      cascadingZDepth,\r\n      fullWidth,\r\n      block,\r\n      centered,\r\n      sameWidth,\r\n      repositionOnScroll,\r\n      repositionOnResize,\r\n      xThreshold,\r\n      yThreshold,\r\n      closeOnOutsideClick,\r\n      transitionName,\r\n      transitionEnterTimeout,\r\n      transitionLeaveTimeout,\r\n      visible,\r\n      defaultVisible,\r\n      onVisibilityChange,\r\n      simplifiedMenu,\r\n      minLeft,\r\n      minRight,\r\n      minBottom,\r\n      fillViewportWidth,\r\n      fillViewportHeight,\r\n      onMenuClick,\r\n      onMenuMouseDown,\r\n      onMenuMouseUp,\r\n      onMenuMouseEnter,\r\n      onMenuMouseMove,\r\n      onMenuMouseLeave,\r\n      onMenuTouchStart,\r\n      onMenuTouchMove,\r\n      onMenuTouchCancel,\r\n      onMenuTouchEnd,\r\n      onMenuFocus,\r\n      onMenuBlur,\r\n      onMenuKeyDown,\r\n      onMenuKeyUp,\r\n      isOpen, // deprecated\r\n      defaultOpen, // deprecated\r\n      onMenuToggle, // deprecated\r\n      ...props\r\n    } = this.props;\r\n\r\n    let items = children;\r\n    let toggleChildren = buttonChildren;\r\n    if (typeof menuItems !== 'undefined') {\r\n      toggleChildren = children;\r\n      items = menuItems;\r\n    }\r\n\r\n    return (\r\n      <DropdownMenu\r\n        id={id}\r\n        listId={listId}\r\n        style={menuStyle}\r\n        className={menuClassName}\r\n        listStyle={listStyle}\r\n        listClassName={listClassName}\r\n        listProps={listProps}\r\n        listInline={listInline}\r\n        listZDepth={listZDepth}\r\n        listHeightRestricted={listHeightRestricted}\r\n        visible={typeof isOpen !== 'undefined' ? isOpen : visible}\r\n        defaultVisible={typeof defaultOpen !== 'undefined' ? defaultOpen : defaultVisible}\r\n        menuItems={items}\r\n        simplifiedMenu={simplifiedMenu}\r\n        anchor={anchor}\r\n        belowAnchor={belowAnchor}\r\n        fixedTo={fixedTo}\r\n        position={position}\r\n        cascading={cascading}\r\n        cascadingAnchor={cascadingAnchor}\r\n        cascadingZDepth={cascadingZDepth}\r\n        fullWidth={fullWidth}\r\n        block={block}\r\n        centered={centered}\r\n        sameWidth={sameWidth}\r\n        minLeft={minLeft}\r\n        minRight={minRight}\r\n        minBottom={minBottom}\r\n        fillViewportWidth={fillViewportWidth}\r\n        fillViewportHeight={fillViewportHeight}\r\n        repositionOnScroll={repositionOnScroll}\r\n        repositionOnResize={repositionOnResize}\r\n        xThreshold={xThreshold}\r\n        yThreshold={yThreshold}\r\n        closeOnOutsideClick={closeOnOutsideClick}\r\n        transitionName={transitionName}\r\n        transitionEnterTimeout={transitionEnterTimeout}\r\n        transitionLeaveTimeout={transitionLeaveTimeout}\r\n        onVisibilityChange={onMenuToggle || onVisibilityChange}\r\n        onClick={onMenuClick}\r\n        onMouseDown={onMenuMouseDown}\r\n        onMouseUp={onMenuMouseUp}\r\n        onMouseEnter={onMenuMouseEnter}\r\n        onMouseMove={onMenuMouseMove}\r\n        onMouseLeave={onMenuMouseLeave}\r\n        onTouchStart={onMenuTouchStart}\r\n        onTouchMove={onMenuTouchMove}\r\n        onTouchCancel={onMenuTouchCancel}\r\n        onTouchEnd={onMenuTouchEnd}\r\n        onFocus={onMenuFocus}\r\n        onBlur={onMenuBlur}\r\n        onKeyDown={onMenuKeyDown}\r\n        onKeyUp={onMenuKeyUp}\r\n      >\r\n        <Button {...props} id={buttonId}>\r\n          {toggleChildren}\r\n        </Button>\r\n      </DropdownMenu>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport fixedToShape from '../Helpers/fixedToShape';\r\nimport withTableFixes from './withTableFixes';\r\nimport MenuButton from '../Menus/MenuButton';\r\nimport TableColumn from './TableColumn';\r\n\r\nclass MenuButtonColumn extends PureComponent {\r\n  static Positions = MenuButton.Positions;\r\n  static HorizontalAnchors = MenuButton.HorizontalAnchors;\r\n  static VerticalAnchors = MenuButton.VerticalAnchors;\r\n  static propTypes = {\r\n    /**\r\n     * An optional id to use for the menu button in the column. If this is omitted, it's value will be\r\n     * `${rowId}-${cellIndex}-menu-button`\r\n     */\r\n    id: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * This is the optional style to apply to the `TableColumn`.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * This is the optional className to apply to the `TableColumn`.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * The is the optional style to apply to the menu button's menu container.\r\n     *\r\n     * @see {@link Menus/MenuButton#style}\r\n     */\r\n    menuStyle: PropTypes.object,\r\n\r\n    /**\r\n     * The is the optional class name to apply to the menu button's menu container.\r\n     *\r\n     * @see {@link Menus/MenuButton#className}\r\n     */\r\n    menuClassName: PropTypes.string,\r\n\r\n    /**\r\n     * This is how the select field should be fixed within the table. When this is omitted,\r\n     * it will automatically use the responsive table as the fixture so that the select field\r\n     * will close/adjust itself to the scrolling of the table.\r\n     *\r\n     * @see {@link Helpers/Layover#fixedTo}\r\n     */\r\n    fixedTo: fixedToShape,\r\n\r\n    /**\r\n     * The optional tooltip to render on hover.\r\n     *\r\n     * @see {@link DataTables/TableColumn#tooltipLabel}\r\n     */\r\n    tooltipLabel: PropTypes.string,\r\n\r\n    /**\r\n     * An optional delay to apply to the tooltip before it appears.\r\n     *\r\n     * @see {@link DataTables/TableColumn#tooltipDelay}\r\n     */\r\n    tooltipDelay: PropTypes.number,\r\n\r\n    /**\r\n     * The position of the tooltip.\r\n     *\r\n     * @see {@link DataTables/TableColumn#tooltipPosition}\r\n     */\r\n    tooltipPosition: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\r\n\r\n    /**\r\n     * Boolean if the menu should automatically try to reposition itself to stay within\r\n     * the viewport when the `fixedTo` element scrolls.\r\n     *\r\n     * @see {@link Helpers/Layover#repositionOnScroll}\r\n     */\r\n    repositionOnScroll: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the menu should automatically try to reposition itself to stay within\r\n     * the viewport when the window resizes.\r\n     *\r\n     * @see {@link Helpers/Layover#repositionOnResize}\r\n     */\r\n    repositionOnResize: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the menu logic should be simplified without any viewport logic and position\r\n     * based on the relative position of the menu. This will most like require some additional\r\n     * styles applied to the menu.\r\n     *\r\n     * @see {@link Helpers/Layover#simplified}\r\n     */\r\n    simplifiedMenu: PropTypes.bool,\r\n\r\n    /**\r\n     * This is injected by the `TableRow` component.\r\n     * @access private\r\n     */\r\n    header: PropTypes.bool,\r\n\r\n    /**\r\n     * @access private\r\n     */\r\n    adjusted: PropTypes.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    simplifiedMenu: false,\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      style,\r\n      className,\r\n      menuStyle,\r\n      menuClassName,\r\n      header,\r\n      adjusted,\r\n      tooltipLabel,\r\n      tooltipDelay,\r\n      tooltipPosition,\r\n      ...props\r\n    } = this.props;\r\n    return (\r\n      <TableColumn\r\n        style={style}\r\n        className={className}\r\n        header={header}\r\n        adjusted={adjusted}\r\n        tooltipLabel={tooltipLabel}\r\n        tooltipDelay={tooltipDelay}\r\n        tooltipPosition={tooltipPosition}\r\n      >\r\n        <MenuButton {...props} style={menuStyle} className={menuClassName} />\r\n      </TableColumn>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTableFixes(MenuButtonColumn, 'menu-button');\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport fixedToShape from '../Helpers/fixedToShape';\r\nimport withTableFixes from './withTableFixes';\r\nimport DropdownMenu from '../Menus/DropdownMenu';\r\nimport TableColumn from './TableColumn';\r\n\r\nclass DropdownMenuColumn extends PureComponent {\r\n  static Positions = DropdownMenu.Positions;\r\n  static HorizontalAnchors = DropdownMenu.HorizontalAnchors;\r\n  static VerticalAnchors = DropdownMenu.VerticalAnchors;\r\n  static propTypes = {\r\n    /**\r\n     * An optional id to use for the menu button in the column. If this is omitted, it's value will be\r\n     * `${rowId}-${cellIndex}-menu-button`\r\n     */\r\n    id: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * This is the optional style to apply to the `TableColumn`.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * This is the optional className to apply to the `TableColumn`.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * The is the optional style to apply to the menu button's menu container.\r\n     *\r\n     * @see {@link Menus/DropdownMenu#style}\r\n     */\r\n    menuStyle: PropTypes.object,\r\n\r\n    /**\r\n     * The is the optional class name to apply to the menu button's menu container.\r\n     *\r\n     * @see {@link Menus/DropdownMenu#className}\r\n     */\r\n    menuClassName: PropTypes.string,\r\n\r\n    /**\r\n     * This is how the select field should be fixed within the table. When this is omitted,\r\n     * it will automatically use the responsive table as the fixture so that the select field\r\n     * will close/adjust itself to the scrolling of the table.\r\n     *\r\n     * @see {@link Helpers/Layover#fixedTo}\r\n     */\r\n    fixedTo: fixedToShape,\r\n\r\n    /**\r\n     * The optional tooltip to render on hover.\r\n     *\r\n     * @see {@link DataTables/TableColumn#tooltipLabel}\r\n     */\r\n    tooltipLabel: PropTypes.string,\r\n\r\n    /**\r\n     * An optional delay to apply to the tooltip before it appears.\r\n     *\r\n     * @see {@link DataTables/TableColumn#tooltipDelay}\r\n     */\r\n    tooltipDelay: PropTypes.number,\r\n\r\n    /**\r\n     * The position of the tooltip.\r\n     *\r\n     * @see {@link DataTables/TableColumn#tooltipPosition}\r\n     */\r\n    tooltipPosition: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\r\n\r\n    /**\r\n     * Boolean if the menu should automatically try to reposition itself to stay within\r\n     * the viewport when the `fixedTo` element scrolls.\r\n     *\r\n     * @see {@link Helpers/Layover#repositionOnScroll}\r\n     */\r\n    repositionOnScroll: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the menu should automatically try to reposition itself to stay within\r\n     * the viewport when the window resizes.\r\n     *\r\n     * @see {@link Helpers/Layover#repositionOnResize}\r\n     */\r\n    repositionOnResize: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the menu logic should be simplified without any viewport logic and position\r\n     * based on the relative position of the menu. This will most like require some additional\r\n     * styles applied to the menu.\r\n     *\r\n     * @see {@link Helpers/Layover#simplified}\r\n     */\r\n    simplifiedMenu: PropTypes.bool,\r\n\r\n    /**\r\n     * This is injected by the `TableRow` component.\r\n     * @access private\r\n     */\r\n    header: PropTypes.bool,\r\n\r\n    /**\r\n     * @access private\r\n     */\r\n    adjusted: PropTypes.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    simplifiedMenu: false,\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      style,\r\n      className,\r\n      menuStyle,\r\n      menuClassName,\r\n      header,\r\n      adjusted,\r\n      tooltipLabel,\r\n      tooltipDelay,\r\n      tooltipPosition,\r\n      ...props\r\n    } = this.props;\r\n    return (\r\n      <TableColumn\r\n        style={style}\r\n        className={className}\r\n        header={header}\r\n        adjusted={adjusted}\r\n        tooltipLabel={tooltipLabel}\r\n        tooltipDelay={tooltipDelay}\r\n        tooltipPosition={tooltipPosition}\r\n      >\r\n        <DropdownMenu {...props} style={menuStyle} className={menuClassName} />\r\n      </TableColumn>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTableFixes(DropdownMenuColumn, 'menu-button');\r\n","import React, { PureComponent, Children, cloneElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CSSTransitionGroup from 'react-transition-group/CSSTransitionGroup';\r\nimport cn from 'classnames';\r\n\r\nimport TICK from '../constants/CSSTransitionGroupTick';\r\nimport oneRequired from '../utils/PropTypes/oneRequired';\r\nimport invalidIf from '../utils/PropTypes/invalidIf';\r\nimport CardTitleBlock from '../Cards/CardTitleBlock';\r\n\r\n/**\r\n * The `TableCardHeader` is used when contextual actions should appear when\r\n * a user selects a row.\r\n */\r\nexport default class TableCardHeader extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * An optional style to apply.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * The component to render as.\r\n     */\r\n    component: PropTypes.oneOfType([\r\n      PropTypes.func,\r\n      PropTypes.string,\r\n    ]).isRequired,\r\n\r\n    /**\r\n     * The transition name to use when the contextual header appears.\r\n     */\r\n    transitionName: PropTypes.string.isRequired,\r\n\r\n    /**\r\n     * The transition time to use when the contextual header appears.\r\n     */\r\n    transitionEnterTimeout: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * The transition time to use when the contextual header disappears.\r\n     */\r\n    transitionLeaveTimeout: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * An optional title to display. It is invalid to have both `title` and `leftChildren`\r\n     * defined as only one will be used.\r\n     */\r\n    title: oneRequired(PropTypes.node, 'leftChildren', 'children'),\r\n\r\n    /**\r\n     * An optional id to provide to the title.\r\n     */\r\n    titleId: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * An optional title to display in the contextual header. This will get wrapped in an `h2`\r\n     * tag and additional styles applied.\r\n     */\r\n    contextualTitle: PropTypes.node,\r\n\r\n    /**\r\n     * An optional id to provide to the contextual title.\r\n     */\r\n    contextualTitleId: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * Any additional children to display in the contextual header. This will be displayed after\r\n     * the optional `contextualTile` and before the `actions`.\r\n     */\r\n    contextualChildren: PropTypes.node,\r\n\r\n    /**\r\n     * An optional button or list of buttons to display instead of a title.\r\n     */\r\n    leftChildren: invalidIf(PropTypes.oneOfType([\r\n      PropTypes.element,\r\n      PropTypes.arrayOf(PropTypes.element),\r\n    ]), 'title'),\r\n\r\n    /**\r\n     * An additional children to display after the `title` or `leftChildren` prop.\r\n     * This is _normally_ a list of icon button or menu button.\r\n     */\r\n    children: PropTypes.oneOfType([\r\n      PropTypes.element,\r\n      PropTypes.arrayOf(PropTypes.element),\r\n    ]),\r\n\r\n    /**\r\n     * An optional button/menu button or a list of button/menu button to display in the\r\n     * contextual header once the user has selected a row or multiple rows.\r\n     */\r\n    actions: PropTypes.oneOfType([\r\n      PropTypes.element,\r\n      PropTypes.arrayOf(PropTypes.element),\r\n    ]),\r\n\r\n    /**\r\n     * Boolean if the `actions` prop should not have each element cloned with additional\r\n     * class names.\r\n     */\r\n    noActionsAdjust: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the `children` prop should not have each element cloned with additional\r\n     * class names.\r\n     */\r\n    noChildrenAdjust: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the `leftChildren` prop should not have each element cloned with additional\r\n     * class names.\r\n     */\r\n    noLeftChildrenClone: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the contextual header is currently visible.\r\n     */\r\n    visible: PropTypes.bool.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    component: 'header',\r\n    transitionName: 'md-drop-down',\r\n    transitionEnterTimeout: 150,\r\n    transitionLeaveTimeout: 150,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { animating: false };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { visible } = this.props;\r\n    const { visible: nVisible, transitionEnterTimeout, transitionLeaveTimeout } = nextProps;\r\n    const timeout = !nVisible ? transitionLeaveTimeout : transitionEnterTimeout;\r\n    if (visible !== nVisible) {\r\n      if (this._timeout) {\r\n        clearTimeout(this._timeout);\r\n      }\r\n\r\n      this._timeout = setTimeout(() => {\r\n        this._timeout = setTimeout(() => {\r\n          this._timeout = null;\r\n          this.setState({ animating: false });\r\n        }, timeout);\r\n      }, TICK);\r\n\r\n      if (!this.state.animating) {\r\n        this.setState({ animating: true });\r\n      }\r\n    }\r\n  }\r\n\r\n  _cloneCellRight(noAdjust, children) {\r\n    if (noAdjust || !children) {\r\n      return children;\r\n    }\r\n\r\n    return Children.map(Children.toArray(children), (child, i) => {\r\n      if (i === 0) {\r\n        return cloneElement(child, { className: cn('md-cell--right', child.props.className) });\r\n      }\r\n\r\n      return child;\r\n    });\r\n  }\r\n\r\n  _cloneLeftChildren(noClone, children) {\r\n    if (noClone || !children) {\r\n      return children;\r\n    }\r\n\r\n    return Children.map(Children.toArray(children), child => cloneElement(child, {\r\n      className: cn('md-btn--dialog', child.props.className),\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    const { animating } = this.state;\r\n    const {\r\n      style,\r\n      className,\r\n      title,\r\n      titleId,\r\n      actions,\r\n      contextualTitleId,\r\n      contextualChildren,\r\n      noActionsAdjust,\r\n      noChildrenAdjust,\r\n      noLeftChildrenClone,\r\n      visible,\r\n      /* eslint-disable no-unused-vars */\r\n      children: propChildren,\r\n      leftChildren: propLeftChildren,\r\n      contextualTitle: propContextualTitle,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n\r\n    let { children, leftChildren, contextualTitle } = this.props;\r\n    children = this._cloneCellRight(noChildrenAdjust, children);\r\n    leftChildren = this._cloneLeftChildren(noLeftChildrenClone, leftChildren);\r\n\r\n    if (title) {\r\n      children = (\r\n        <div className=\"md-card-title\" key=\"main-title\">\r\n          <CardTitleBlock id={titleId} title={title} />\r\n          {children}\r\n        </div>\r\n      );\r\n    } else if (leftChildren) {\r\n      leftChildren = Children.toArray(leftChildren);\r\n\r\n      if (children) {\r\n        children = leftChildren.concat(Children.toArray(children));\r\n      } else {\r\n        children = leftChildren;\r\n      }\r\n    }\r\n\r\n    if (contextualTitle) {\r\n      contextualTitle = (\r\n        <h2\r\n          id={contextualTitleId}\r\n          className=\"md-card-title--title md-card-title--title-contextual\"\r\n          tabIndex={contextualTitleId ? -1 : null}\r\n        >\r\n          {contextualTitle}\r\n        </h2>\r\n      );\r\n    }\r\n\r\n    const contextualHeader = (\r\n      <div key=\"contextual-header\" className=\"md-card-title md-card-title--contextual\">\r\n        {contextualTitle}\r\n        {contextualChildren}\r\n        {this._cloneCellRight(noActionsAdjust, actions)}\r\n      </div>\r\n    );\r\n\r\n    let mergedStyles = style;\r\n    if (animating) {\r\n      mergedStyles = Object.assign({}, style, { overflow: 'hidden' });\r\n    }\r\n\r\n    return (\r\n      <CSSTransitionGroup\r\n        {...props}\r\n        style={mergedStyles}\r\n        className={cn('md-table-card-header', {\r\n          'md-table-card-header--no-title': !title,\r\n        }, className)}\r\n      >\r\n        {children}\r\n        {visible ? contextualHeader : null}\r\n      </CSSTransitionGroup>\r\n    );\r\n  }\r\n}\r\n","/** @module utils/toggleScroll */\r\nimport getPagePosition from './Positioning/getPagePosition';\r\n\r\n/**\r\n * A utility function for toggling the overflow visibility on an element. This will either target\r\n * the given `selector`, or the `body` tag to set a `className`.\r\n *\r\n * If the `visible` param is `undefined`, the className will be toggled.\r\n * If the `visible` param is `true`, the className will be added.\r\n * If the `visible` param is `false`, the className will be removed.\r\n *\r\n *\r\n * > This depends on the `classList` attribute on elements.\r\n *\r\n * @param {bool=} visible - An optional boolean to determine how the `className` will be applied.\r\n * @param {string|Object=} selector - An optional query selector string to use to select an element.\r\n * @param {string=} className - The className to apply. Defaults to 'md-overflow-hidden'\r\n */\r\nexport default function toggleScroll(scrollable, selector, className = 'md-no-scroll') {\r\n  const queryable = !selector || typeof selector === 'string';\r\n  let el;\r\n  if (queryable) {\r\n    el = selector ? document.querySelector(selector) : document.querySelector('html');\r\n  } else {\r\n    el = selector;\r\n  }\r\n\r\n  if (!el) {\r\n    return;\r\n  }\r\n\r\n  if (typeof scrollable === 'undefined') {\r\n    scrollable = !el.classList.contains(className);\r\n  }\r\n\r\n  if (scrollable && !el.classList.contains(className)) {\r\n    el.style.top = `-${queryable ? getPagePosition('y') : el.scrollTop}px`;\r\n    el.classList.add(className);\r\n  } else if (!scrollable && el.classList.contains(className)) {\r\n    const scrollTop = Math.abs(parseInt(el.style.top, 10));\r\n    el.classList.remove(className);\r\n    el.style.top = null;\r\n\r\n    if (!selector) {\r\n      window.scrollTo(0, scrollTop);\r\n    } else {\r\n      el.scrollTop = scrollTop;\r\n    }\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { findDOMNode } from 'react-dom';\r\nimport CSSTransitionGroup from 'react-transition-group/CSSTransitionGroup';\r\nimport cn from 'classnames';\r\nimport deprecated from 'react-prop-types/lib/deprecated';\r\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\r\n\r\nimport { ESC } from '../constants/keyCodes';\r\nimport TICK from '../constants/CSSTransitionGroupTick';\r\nimport getField from '../utils/getField';\r\nimport toggleScroll from '../utils/toggleScroll';\r\nimport oneRequiredForA11y from '../utils/PropTypes/oneRequiredForA11y';\r\nimport Dialog from './Dialog';\r\nimport Portal from '../Helpers/Portal';\r\n\r\n/**\r\n * The `DialogContainer` component is used for dynamically creating the `Dialog` with\r\n * transitions.\r\n */\r\nexport default class DialogContainer extends PureComponent {\r\n  /* eslint-disable max-len */\r\n  static propTypes = {\r\n    /**\r\n     * An id to use for the `Dialog` once it has been opened. This is used for the\r\n     * [dialog role](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_dialog_role).\r\n     * This is used to generate an `id` for the `title` prop when it has been defined.\r\n     */\r\n    id: isRequiredForA11y(PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ])),\r\n    /* eslint-enable max-len */\r\n\r\n    /**\r\n     * An optional accessibility prop to use when the `Dialog` is opened. This should be an id\r\n     * pointing to some text that describes the content of the dialog. For accessibility\r\n     * reasons, one of the following props must be defined:\r\n     * - `title`\r\n     * - `aria-describedby`\r\n     * - `aria-labelledby`\r\n     * - `aria-label`\r\n     *\r\n     * An example usage:\r\n     *\r\n     * ```js\r\n     * <Dialog id=\"accessible-example\" visible aria-describedby=\"accessible-content\">\r\n     *   <p id=\"accessible-content\">This is some content that describes the dialog.</p>\r\n     * </Dialog>\r\n     * ```\r\n     */\r\n    'aria-describedby': oneRequiredForA11y(PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]), 'title', 'aria-labelledby', 'aria-label'),\r\n\r\n    /**\r\n     * An optional accessibility prop to use when the `title` prop is not given. This should be\r\n     * an id pointing to a `h` tag that labels the dialog.\r\n     *\r\n     * An example usage:\r\n     *\r\n     * ```js\r\n     * <Dialog visible id=\"accessible-example\" aria-labelledby=\"accessible-dialog-label\">\r\n     *   <h2 id=\"accessible-dialog-label\">Some Accessible Dialog</h2>\r\n     * </Dialog>\r\n     * ```\r\n     */\r\n    'aria-labelledby': PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * An optional accessibility prop to use when the `title` and `aria-labelledby` props are\r\n     * not defined. This should be a string that describes what is in the `Dialog`.\r\n     *\r\n     * An example usage:\r\n     *\r\n     * ```js\r\n     * <Dialog visible id=\"accessible-example\" aria-label=\"Some Accessible Dialog\">\r\n     *   <p>Lorem Ipsum</p>\r\n     * </Dialog>\r\n     * ```\r\n     */\r\n    'aria-label': PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the dialog's container.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the dialog's container.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the dialog itself when the `visible` prop is `true`.\r\n     */\r\n    dialogStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the dialog itself when the `visible` prop is `true`.\r\n     */\r\n    dialogClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional styke to apply to the title.\r\n     */\r\n    titleStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the title.\r\n     */\r\n    titleClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the footer. This is used when the `actions`\r\n     * prop is defined.\r\n     */\r\n    footerStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the footer. This is used when the `actions`\r\n     * prop is defined.\r\n     */\r\n    footerClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the dialog's content.\r\n     */\r\n    contentStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the dialog's content.\r\n     */\r\n    contentClassName: PropTypes.string,\r\n\r\n    /**\r\n     * The component to render the dialog's container in.\r\n     */\r\n    component: PropTypes.oneOfType([\r\n      PropTypes.func,\r\n      PropTypes.string,\r\n    ]).isRequired,\r\n\r\n    /**\r\n     * The component to render the dialog's content in.\r\n     */\r\n    contentComponent: PropTypes.oneOfType([\r\n      PropTypes.func,\r\n      PropTypes.string,\r\n    ]).isRequired,\r\n\r\n    /**\r\n     * The content to display in the dialog once open.\r\n     */\r\n    children: PropTypes.node,\r\n\r\n    /**\r\n     * A single action or a list of actions to display in the dialog. This can either be a list\r\n     * of `FlatButton` props or `<Button flat {...props} />` elements.\r\n     */\r\n    actions: PropTypes.oneOfType([\r\n      PropTypes.element,\r\n      PropTypes.object,\r\n      PropTypes.arrayOf(PropTypes.oneOfType([\r\n        PropTypes.element,\r\n        PropTypes.object,\r\n      ])),\r\n    ]),\r\n\r\n    /**\r\n     * Boolean if the `Dialog` is current visible.\r\n     */\r\n    visible: PropTypes.bool.isRequired,\r\n\r\n    /**\r\n     * An optional function to call when the `visible` prop is changed from `false` to `true`.\r\n     */\r\n    onShow: PropTypes.func,\r\n\r\n    /**\r\n     * A function to call that will close the dialog. This is required when the `modal` and `fullPage`\r\n     * props are not `true`.\r\n     */\r\n    onHide: (props, propName, ...args) => {\r\n      let validator = PropTypes.func;\r\n      if (!props.modal && !props.fullPage) {\r\n        validator = validator.isRequired;\r\n      }\r\n\r\n      return validator(props, propName, ...args);\r\n    },\r\n\r\n    /**\r\n     * Boolean if the dialog should behave like a modal. This means that the dialog can only\r\n     * be closed by clicking on an action instead of also clicking on the overlay.\r\n     */\r\n    modal: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the dialog should be displayed as a full page dialog.\r\n     */\r\n    fullPage: (props, propName, componentName, ...args) => {\r\n      const componentNameSafe = componentName || '<<anonymous>>';\r\n      let err = PropTypes.bool(props, propName, componentName, ...args);\r\n\r\n      if (!err && props[propName] && typeof props.title !== 'undefined') {\r\n        err = new Error(\r\n          `You provided a \\`title\\` ${location} to the \\`${componentNameSafe}\\` when \\`fullPage\\` ` +\r\n          'has been set to true. A title for a full page dialog should be rendered as a child instead.'\r\n        );\r\n      }\r\n\r\n      return err;\r\n    },\r\n\r\n    /**\r\n     * An optional pageX location to use when rendering a full page dialog. This is used to set the location\r\n     * the dialog should appear from.\r\n     */\r\n    pageX: PropTypes.number,\r\n\r\n    /**\r\n     * An optional pageY location to use when rendering a full page dialog. This is used to set the location\r\n     * the dialog should appear from.\r\n     */\r\n    pageY: PropTypes.number,\r\n\r\n    /**\r\n     * @see {@link Helpers/FocusContainer#additionalFocusKeys}\r\n     */\r\n    additionalFocusKeys: Dialog.propTypes.additionalFocusKeys,\r\n\r\n    /**\r\n     * @see {@link Helpers/FocusContainer#initialFocus}\r\n     */\r\n    initialFocus: Dialog.propTypes.initialFocus,\r\n\r\n    /**\r\n     * @see {@link Helpers/FocusContainer#focusOnMount}\r\n     */\r\n    focusOnMount: Dialog.propTypes.focusOnMount,\r\n\r\n    /**\r\n     * @see {@link Helpers/FocusContainer#containFocus}\r\n     */\r\n    containFocus: Dialog.propTypes.containFocus,\r\n\r\n    /**\r\n     * The transition enter timeout for the dialog.\r\n     */\r\n    transitionEnterTimeout: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * The transition leave timeout for the dialog.\r\n     */\r\n    transitionLeaveTimeout: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * Boolean if the dialog should be closable by pressing the escape key.\r\n     * This will always be considered `false` of the `modal` props is `true`.\r\n     */\r\n    closeOnEsc: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the Portal's functionality of rendering in a separate react tree should be applied\r\n     * to the dialog.\r\n     *\r\n     * @see {@link Helpers/Portal}\r\n     */\r\n    portal: PropTypes.bool,\r\n\r\n    /**\r\n     * Since the `Dialog` uses the `Portal` component, you can pass an optional HTML Node to render\r\n     * the dialog in instead of the `document.body`.\r\n     */\r\n    renderNode: PropTypes.object,\r\n\r\n    /**\r\n     * Boolean if the dialog should be rendered as the last child in the `renderNode` or `body` instead\r\n     * of as the first.\r\n     */\r\n    lastChild: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional title for the dialog.\r\n     */\r\n    title: PropTypes.node,\r\n\r\n    /**\r\n     * Boolean if the dialog should animate into view if it is constructed with `visible` enabled.\r\n     *\r\n     * This basically means that if the `Dialog` has `visible` enabled on initial page load, does it animate?\r\n     * In some cases, it can also mean if the `Dialog` is added to the render tree with `visible` enabled,\r\n     * does it animate?\r\n     */\r\n    defaultVisibleTransitionable: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the Dialog should no longer try to prevent the parent container from scrolling while visible.\r\n     * In most cases, this will attempt to prevent the main window scrolling. If this dialog is nested in another\r\n     * dialog, it will attempt to prevent the parent dialog from scrolling.\r\n     */\r\n    disableScrollLocking: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the dialog should automatically try to determine if the content\r\n     * should be padded. It will be padded if the dialog does not contain a `List`.\r\n     */\r\n    autopadContent: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the dialog content's size should automatically be resized to overflow\r\n     * correctly when there is a lot of content. This will calculate and apply some `maxHeight`\r\n     * to the `contentStyle`.\r\n     */\r\n    autosizeContent: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional height to apply to the dialog. This is used if it is easier to just apply height/width\r\n     * with for specific dialogs instead of in CSS.\r\n     *\r\n     * **This prop should not be used if the `fullPage` prop is enabled.**\r\n     *\r\n     * @see {@link #fullPage}\r\n     * @see {@link #width}\r\n     */\r\n    height: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * An optional width to apply to the dialog. This is used if it is easier to just apply height/width\r\n     * with for specific dialogs instead of in CSS.\r\n     *\r\n     * **This prop should not be used if the `fullPage` prop is enabled.**\r\n     *\r\n     * @see {@link #fullPage}\r\n     * @see {@link #height}\r\n     */\r\n    width: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * Boolean if the actions should be stacked on top of each other. If this value is `undefined`, it will\r\n     * automatically attempt to guess if the items should be stacked.\r\n     */\r\n    stackedActions: PropTypes.bool,\r\n\r\n    isOpen: deprecated(PropTypes.bool, 'Use `visible` instead'),\r\n    transitionName: deprecated(PropTypes.string, 'The transition name will be managed by the component'),\r\n    transitionEnter: deprecated(PropTypes.bool, 'The transition will always be enforced'),\r\n    transitionLeave: deprecated(PropTypes.bool, 'The transition will always be enforced'),\r\n    actionLeft: deprecated(PropTypes.node, 'Use the `fullPage` prop instead'),\r\n    actionRight: deprecated(PropTypes.node, 'Use the `fullPage` prop instead'),\r\n    close: deprecated(PropTypes.func, 'Use `onHide` instead'),\r\n  };\r\n\r\n  static defaultProps = {\r\n    autopadContent: true,\r\n    autosizeContent: true,\r\n    component: 'span',\r\n    closeOnEsc: true,\r\n    contentComponent: 'section',\r\n    focusOnMount: true,\r\n    transitionEnterTimeout: 300,\r\n    transitionLeaveTimeout: 300,\r\n    defaultVisibleTransitionable: false,\r\n  };\r\n\r\n  static contextTypes = {\r\n    renderNode: PropTypes.object,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const visible = typeof props.isOpen !== 'undefined' ? props.isOpen : props.visible;\r\n    const dialogVisible = visible && !props.defaultVisibleTransitionable;\r\n\r\n    this.state = {\r\n      active: visible && !props.fullPage,\r\n      portalVisible: visible,\r\n      dialogVisible,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!this.props.isOpen && !this.props.visible) {\r\n      return;\r\n    }\r\n\r\n    this._mountDialog(this.props);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const visible = typeof nextProps.isOpen !== 'undefined' ? nextProps.isOpen : nextProps.visible;\r\n    if (this.props.isOpen === visible || this.props.visible === visible) {\r\n      return;\r\n    }\r\n\r\n    const el = getField(this.props, this.context, 'renderNode') || window;\r\n    let { scrollX: pageX, scrollY: pageY } = el;\r\n    if (typeof el.scrollTop !== 'undefined' && typeof el.scrollLeft !== 'undefined') {\r\n      pageX = el.scrollLeft;\r\n      pageY = el.scrollTop;\r\n    } else if (typeof el.scrollY !== 'undefined' && typeof el.scrollX !== 'undefined') {\r\n      pageX = el.scrollX;\r\n      pageY = el.scrollY;\r\n    }\r\n\r\n    this._pageX = pageX;\r\n    this._pageY = pageY;\r\n\r\n    if (this._inTimeout) {\r\n      clearTimeout(this._inTimeout);\r\n      this._inTimeout = null;\r\n    }\r\n\r\n    if (visible) {\r\n      this._activeElement = document.activeElement;\r\n      this._mountPortal(nextProps);\r\n    } else {\r\n      this.setState({ dialogVisible: false, active: false });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { visible, closeOnEsc, modal } = this.props;\r\n    const escapable = !modal && closeOnEsc;\r\n    const prevEscapable = !prevProps.modal && prevProps.closeOnEsc;\r\n\r\n    // Only going to support visible here since it was not implemented before.\r\n    if (visible === prevProps.visible && escapable === prevEscapable) {\r\n      return;\r\n    }\r\n\r\n    let add = false;\r\n    let remove = false;\r\n\r\n    if (escapable !== prevEscapable) {\r\n      add = visible && escapable;\r\n      remove = !visible || (prevEscapable && !escapable);\r\n    } else if (escapable) {\r\n      add = visible;\r\n      remove = !visible;\r\n    }\r\n\r\n    if (add) {\r\n      window.addEventListener('keydown', this._handleEscClose);\r\n    } else if (remove) {\r\n      window.removeEventListener('keydown', this._handleEscClose);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.props.isOpen || this.props.visible) {\r\n      toggleScroll(false);\r\n    }\r\n\r\n    if (this.props.visible && (this.props.closeOnEsc && !this.props.modal)) {\r\n      window.removeEventListener('keydown', this._handleEscClose);\r\n    }\r\n\r\n    if (this._inTimeout) {\r\n      clearTimeout(this._inTimeout);\r\n    }\r\n  }\r\n\r\n  _setContainer = (container) => {\r\n    if (container !== null) {\r\n      this._container = findDOMNode(container);\r\n    }\r\n  };\r\n\r\n  _handleEscClose = (e) => {\r\n    if ((e.which || e.keyCode) === ESC) {\r\n      (this.props.onHide || this.props.close)(e);\r\n    }\r\n  };\r\n\r\n  _mountPortal = (props) => {\r\n    this._mountDialog(props);\r\n    this.setState({ portalVisible: true });\r\n  };\r\n\r\n  _mountDialog = (props) => {\r\n    const { fullPage, onShow } = props;\r\n    this._inTimeout = setTimeout(() => {\r\n      this._inTimeout = fullPage ? null : setTimeout(() => {\r\n        this._inTimeout = null;\r\n        this.setState({ active: true });\r\n      }, TICK);\r\n      this.setState({ dialogVisible: true }, onShow);\r\n    }, TICK);\r\n  };\r\n\r\n  _unmountPortal = () => {\r\n    this.setState({ portalVisible: false });\r\n  };\r\n\r\n  _handleClick = (e) => {\r\n    const visible = typeof this.props.isOpen !== 'undefined' ? this.props.isOpen : this.props.visible;\r\n    if (this.props.modal || !visible || e.target !== this._container) {\r\n      return;\r\n    }\r\n\r\n    (this.props.onHide || this.props.close)(e);\r\n  };\r\n\r\n  _handleDialogMounting = (dialog) => {\r\n    const { disableScrollLocking } = this.props;\r\n    if (dialog === null) {\r\n      if (this._activeElement) {\r\n        this._activeElement.focus();\r\n      }\r\n\r\n      if (!disableScrollLocking) {\r\n        toggleScroll(false, this.scrollEl);\r\n      }\r\n\r\n      this._activeElement = null;\r\n    } else {\r\n      const container = document.getElementById(this.props.id);\r\n      if (!container || disableScrollLocking) {\r\n        return;\r\n      }\r\n\r\n      let el = getField(this.props, this.context, 'renderNode');\r\n      let node = container.parentNode;\r\n      while (node && node.classList && !el) {\r\n        if (node.classList.contains('md-dialog')) {\r\n          el = node;\r\n        }\r\n\r\n        node = node.parentNode;\r\n      }\r\n\r\n      this.scrollEl = el;\r\n      toggleScroll(true, el);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { active, dialogVisible, portalVisible } = this.state;\r\n    const {\r\n      style,\r\n      className,\r\n      dialogStyle,\r\n      dialogClassName,\r\n      modal,\r\n      fullPage,\r\n      component,\r\n      transitionEnterTimeout,\r\n      transitionLeaveTimeout,\r\n      lastChild,\r\n      portal,\r\n      /* eslint-disable no-unused-vars */\r\n      visible: propVisible,\r\n      renderNode: propRenderNode,\r\n      closeOnEsc,\r\n      onShow,\r\n      onHide,\r\n      disableScrollLocking,\r\n      defaultVisibleTransitionable,\r\n\r\n      // deprecated\r\n      close,\r\n      isOpen,\r\n      actionLeft,\r\n      actionRight,\r\n      transitionName,\r\n      transitionEnter,\r\n      transitionLeave,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n\r\n    const renderNode = getField(this.props, this.context, 'renderNode');\r\n    const dialog = (\r\n      <Dialog\r\n        key=\"dialog\"\r\n        style={dialogStyle}\r\n        className={cn('md-background--card', dialogClassName)}\r\n        ref={this._handleDialogMounting}\r\n        centered={!fullPage}\r\n        fullPage={fullPage}\r\n        {...props}\r\n        containerX={this._pageX}\r\n        containerY={this._pageY}\r\n        onLeave={this._unmountPortal}\r\n      />\r\n    );\r\n\r\n    const container = (\r\n      <CSSTransitionGroup\r\n        component={component}\r\n        ref={this._setContainer}\r\n        style={style}\r\n        className={cn('md-dialog-container', {\r\n          'md-overlay': !fullPage,\r\n          'md-overlay--active': !fullPage && active && propVisible,\r\n          'md-pointer--hover': !fullPage && !modal && propVisible,\r\n        }, className)}\r\n        transitionName={`md-dialog--${fullPage ? 'full-page' : 'centered'}`}\r\n        transitionEnterTimeout={transitionEnterTimeout}\r\n        transitionLeaveTimeout={transitionLeaveTimeout}\r\n        tabIndex={-1}\r\n        onClick={this._handleClick}\r\n      >\r\n        {dialogVisible ? dialog : null}\r\n      </CSSTransitionGroup>\r\n    );\r\n\r\n    if (!portal) {\r\n      return portalVisible ? container : null;\r\n    }\r\n\r\n    return (\r\n      <Portal visible={portalVisible} renderNode={renderNode} lastChild={lastChild}>\r\n        {container}\r\n      </Portal>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport Portal from '../Helpers/Portal';\r\n\r\nexport default class Overlay extends PureComponent {\r\n  static propTypes = {\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    active: PropTypes.bool,\r\n    visible: PropTypes.bool.isRequired,\r\n    renderNode: PropTypes.object,\r\n    onClick: PropTypes.func,\r\n  };\r\n\r\n  static childContextTypes = {\r\n    isInPortal: PropTypes.bool,\r\n  };\r\n\r\n  getChildContext() {\r\n    // Always want the overlay to render in a separate subtree until 1.1.0\r\n    return { isInPortal: false };\r\n  }\r\n\r\n  render() {\r\n    const { active, visible, renderNode, onClick, style, className } = this.props;\r\n    return (\r\n      <Portal visible={visible} renderNode={renderNode}>\r\n        <div\r\n          style={style}\r\n          className={cn('md-overlay md-overlay--drawer md-pointer--hover', {\r\n            'md-overlay--active': active,\r\n          }, className)}\r\n          onClick={onClick}\r\n        />\r\n      </Portal>\r\n    );\r\n  }\r\n}\r\n","/** @module Drawers/DrawerTypes */\r\n\r\n/**\r\n * An enum for all the different type of drawers.\r\n *\r\n * @readonly\r\n * @enum {string}\r\n */\r\nconst DrawerTypes = {\r\n  // Permanent drawers\r\n  /**\r\n   * This is the default drawer type. It will always be on the screen and takes\r\n   * up the entire height. This is very helpful for main navigation on desktops\r\n   * when you do not need an expandable workspace.\r\n   */\r\n  FULL_HEIGHT: 'full-height',\r\n\r\n  /**\r\n   * This drawer type will always be on the screen, but it will appear under the\r\n   * main toolbar.\r\n   */\r\n  CLIPPED: 'clipped',\r\n\r\n  /**\r\n   * This drawer type will always be on the screen, but it will appear under the\r\n   * main toolbar and have a transparent background. This is useful if you want\r\n   * a persistent drawer on desktop screens, but do not want the main focus to be\r\n   * the drawer.\r\n   */\r\n  FLOATING: 'floating',\r\n\r\n  // Persistent drawers\r\n  /**\r\n   * A persistent drawer changes between being hidden and being fixed on the page like\r\n   * a permanent drawer. When it is visible, it will take up the same amount of room\r\n   * as a permanent drawer, and will not go away until closed.\r\n   *\r\n   * This drawer type is helpful when you need to have a dynamic workspace size.\r\n   */\r\n  PERSISTENT: 'persistent',\r\n\r\n  /**\r\n   * This is a modification of the persistent drawer. It will behave as the persistent drawer\r\n   * but it will always have a \"mini\" drawer visible. This is helpful when you want to have\r\n   * a dynamic workspace size and keep certain actions available at all times.\r\n   */\r\n  PERSISTENT_MINI: 'persistent-mini',\r\n\r\n  // Temporary\r\n  /**\r\n   * A temporary drawer will not be visible by default. When it is visible, it will overlay\r\n   * the page to get the main focus on the drawer. When the user touches the overlay or\r\n   * one of the navigation items, the drawer will be closed. The overlay can be disabled on\r\n   * desktop and tablets.\r\n   */\r\n  TEMPORARY: 'temporary',\r\n\r\n  /**\r\n   * This is a modification of the temporary drawer. It will behave like a temporary drawer,\r\n   * but it will always have a \"mini\" drawer visible. Just like the `PERSISTENT_MINI` drawer\r\n   * type, this is useful when certain actions should be available at all times but additional\r\n   * actions are available when the drawer is visible.\r\n   */\r\n  TEMPORARY_MINI: 'temporary-mini',\r\n};\r\n\r\nexport default DrawerTypes;\r\n","import DrawerTypes from './DrawerTypes';\r\nconst {\r\n  FULL_HEIGHT,\r\n  CLIPPED,\r\n  FLOATING,\r\n  PERSISTENT,\r\n  PERSISTENT_MINI,\r\n  TEMPORARY,\r\n  TEMPORARY_MINI,\r\n} = DrawerTypes;\r\n\r\nexport function isTemporary(type) {\r\n  return [TEMPORARY, TEMPORARY_MINI].indexOf(type) !== -1;\r\n}\r\n\r\nexport function isPersistent(type) {\r\n  return [PERSISTENT, PERSISTENT_MINI].indexOf(type) !== -1;\r\n}\r\n\r\nexport function isPermanent(type) {\r\n  return [FULL_HEIGHT, CLIPPED, FLOATING].indexOf(type) !== -1;\r\n}\r\n\r\nexport function isMini(type) {\r\n  return [PERSISTENT_MINI, TEMPORARY_MINI].indexOf(type) !== -1;\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { findDOMNode } from 'react-dom';\r\nimport cn from 'classnames';\r\nimport deprecated from 'react-prop-types/lib/deprecated';\r\n\r\nimport { MOBILE_MIN_WIDTH, TABLET_MIN_WIDTH, DESKTOP_MIN_WIDTH } from '../constants/media';\r\nimport TICK from '../constants/CSSTransitionGroupTick';\r\nimport getField from '../utils/getField';\r\nimport mapToListParts from '../utils/mapToListParts';\r\nimport controlled from '../utils/PropTypes/controlled';\r\nimport Paper from '../Papers/Paper';\r\nimport Portal from '../Helpers/Portal';\r\nimport List from '../Lists/List';\r\nimport Overlay from './Overlay';\r\n\r\nimport { isTemporary, isPermanent, isMini } from './isType';\r\nimport DrawerTypes from './DrawerTypes';\r\n\r\nconst oneOfDrawerTypes = PropTypes.oneOf([\r\n  DrawerTypes.FULL_HEIGHT,\r\n  DrawerTypes.CLIPPED,\r\n  DrawerTypes.FLOATING,\r\n  DrawerTypes.PERSISTENT,\r\n  DrawerTypes.PERSISTENT_MINI,\r\n  DrawerTypes.TEMPORARY,\r\n  DrawerTypes.TEMPORARY_MINI,\r\n]);\r\n\r\n/**\r\n * The `Drawer` component is used for having a sliding panel of content or navigation\r\n * that appears from the side of a screen.\r\n *\r\n * If the `Drawer` uses any of the `_MINI` drawer types, you will need to also create another\r\n * `Drawer` that is not `_MINI`. Transitioning the `width` on mobile devices is very sluggish,\r\n * and it isn't much more work to create another drawer.\r\n */\r\nexport default class Drawer extends PureComponent {\r\n  static DrawerTypes = DrawerTypes;\r\n  static propTypes = {\r\n    /**\r\n     * An optional id to provide to the drawer. This is generally a good idea to provide if\r\n     * there are any `navItems` defined.\r\n     *\r\n     * @see {@link #navItemsId}\r\n     */\r\n    id: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * An optional id to provide to the navItems list. If this is omitted and the `id` prop is\r\n     * defined, it will be defaulted to `${id}-nav-items`.\r\n     */\r\n    navItemsId: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * An optional style to apply.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the `List` surrounding the `navItems`.\r\n     */\r\n    navStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the `List` surrounding the `navItems`.\r\n     */\r\n    navClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the overlay.\r\n     */\r\n    overlayStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the overlay.\r\n     */\r\n    overlayClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional component to render the drawer in. When this prop is undefined, the drawer\r\n     * will be rendered as a `nav` if the `navItems` prop is defined, otherwise an `aside`.\r\n     */\r\n    component: PropTypes.oneOfType([\r\n      PropTypes.func,\r\n      PropTypes.element,\r\n    ]),\r\n\r\n    /**\r\n     * An optional list of navigation items to display in the drawer. This list can either contain\r\n     * a valid child component for a `List` or an object used to create a `Divider`, `Subheader`,\r\n     * or `ListItem`.\r\n     *\r\n     * - To create a divider in the list, set a `divider` key to `true`. Any other keys will be\r\n     * passed to the `Divider` component.\r\n     * - To create a subheader in the list, set the `subheader` key to `true`. Any other keys will\r\n     * be passed to the `Subheader` component.\r\n     * - To create a list item, just create an object with any normal `ListItem` props.\r\n     */\r\n    navItems: PropTypes.arrayOf(PropTypes.oneOfType([\r\n      PropTypes.element,\r\n      PropTypes.shape({\r\n        divider: PropTypes.bool,\r\n        subheader: PropTypes.bool,\r\n        primaryText: PropTypes.node,\r\n      }),\r\n    ])),\r\n\r\n    /**\r\n     * Boolean if a temporary drawer should close when a nav item is clicked.\r\n     */\r\n    autoclose: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional header to display. This _should_ normally be a toolbar.\r\n     */\r\n    header: PropTypes.node,\r\n\r\n    /**\r\n     * Any additional children to display after the `header` and `navItems`.\r\n     */\r\n    children: PropTypes.node,\r\n\r\n    /**\r\n     * The drawer type to use when the current device matches the mobile\r\n     * media query.\r\n     */\r\n    mobileType: PropTypes.oneOf([\r\n      Drawer.DrawerTypes.TEMPORARY,\r\n      Drawer.DrawerTypes.TEMPORARY_MINI,\r\n    ]).isRequired,\r\n\r\n    /**\r\n     * The min-width to use for the mobile media query.\r\n     */\r\n    mobileMinWidth: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * The drawer type to use when the current device matches the tablet\r\n     * media query.\r\n     */\r\n    tabletType: oneOfDrawerTypes.isRequired,\r\n\r\n    /**\r\n     * The min-width to use for the tablet media query.\r\n     */\r\n    tabletMinWidth: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * The drawer type to use when the current device matches the desktop media\r\n     * query.\r\n     */\r\n    desktopType: oneOfDrawerTypes.isRequired,\r\n\r\n    /**\r\n     * The min-width for a desktop screen.\r\n     */\r\n    desktopMinWidth: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * An optional type to enforce across all media sizes. Since `mobile` devices are\r\n     * included, you are required to manually specify when the `type` should be `temporary`.\r\n     *\r\n     * When the `type` is not one of the `temporary` types, the `onMediaTypeChange` prop\r\n     * must be provided.\r\n     */\r\n    type: (props, propName, component, ...others) => {\r\n      const type = props[propName];\r\n      if (isTemporary(type)) {\r\n        return oneOfDrawerTypes(props, propName, component, ...others);\r\n      }\r\n\r\n      let err = oneOfDrawerTypes(props, propName, component, ...others);\r\n      if (!err && typeof type !== 'undefined' && !isMini(type) && typeof props.onMediaTypeChange === 'undefined') {\r\n        err = new Error(\r\n          `You provided a \\`${propName}\\` prop to the ${component} without the \\`onMediaTypeChange\\` ` +\r\n          `handler. The \\`onMediaTypeChange\\` prop must be specified when the \\`${propName}\\` is not ` +\r\n          'one of the `temporary` types.'\r\n        );\r\n      }\r\n\r\n      return err;\r\n    },\r\n\r\n    /**\r\n     * An optional function to call when the drawer's type changes when the screen resizes.\r\n     * The callback will include the new `type` that should be used for the screen size,\r\n     * and an object containing the media matches for `mobile`, `tablet`, and `desktop`.\r\n     *\r\n     * ```js\r\n     * this.props.onMediaTypeChange(Drawer.DrawerTypes.TEMPORARY, {\r\n     *   mobile: true,\r\n     *   tablet: false,\r\n     *   desktop: false,\r\n     * });\r\n     * ```\r\n     */\r\n    onMediaTypeChange: PropTypes.func,\r\n\r\n    /**\r\n     * The default drawer type to display on initial render. The drawer will automatically\r\n     * adjust itself to the correct media once it has mounted. This prop is really only useful\r\n     * for server side rendering.\r\n     */\r\n    defaultMedia: PropTypes.oneOf(['mobile', 'tablet', 'desktop']).isRequired,\r\n\r\n    /**\r\n     * Boolean if there should be a visible overlay when the drawer is visible. The default behavior\r\n     * is to only include a visible overlay when the `type` is `TEMPORARY` or `TEMPORARY_MINI` and\r\n     * the device is not a desktop.\r\n     *\r\n     * Definining this variable as `true` or `false` will override any default behavior. This means that\r\n     * if this is enabled for a full-height drawer, an overlay will still be created.\r\n     */\r\n    overlay: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the Portal's functionality of rendering in a separate react tree should be applied\r\n     * to the drawer. The overlay that appears for temporary type drawers will still appear in the\r\n     * separate subtree.\r\n     *\r\n     * @see {@link Helpers/Portal}\r\n     */\r\n    portal: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional DOM Node to render the drawer into. The default is to render as\r\n     * the first child in the `body`.\r\n     *\r\n     * > This prop will not be used when the drawer is of the permanent type or `inline` is specified\r\n     * since the `Portal` component will not be used.\r\n     */\r\n    renderNode: PropTypes.object,\r\n\r\n    /**\r\n     * Boolean if the drawer should be rendered as the last child instead of the first child\r\n     * in the `renderNode` or `body`.\r\n     *\r\n     * > This prop will not be used when the drawer is of the permanent type or `inline` is specified\r\n     * since the `Portal` component will not be used.\r\n     */\r\n    lastChild: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the drawer is visible by default. If this is omitted, the drawer will be visible\r\n     * if the current drawer type is NOT `Drawer.DrawerTypes.TEMPORARY` or `Drawer.DrawerTypes.TEMPORARY_MINI`.\r\n     *\r\n     * This basically means that if you are using the default configuration, a mobile device's drawer\r\n     * will be hidden while tablets and desktops will be visible.\r\n     */\r\n    defaultVisible: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the drawer is visible. This will force the component to define the `onVisibilityChange`\r\n     * prop as well as manually updating the drawer's visibility.\r\n     */\r\n    visible: controlled(PropTypes.bool, 'onVisibilityChange', 'defaultVisible'),\r\n\r\n    /**\r\n     * An optional function to call when the visibility of the drawer is changed. The function will\r\n     * be called with the new visibility state.\r\n     *\r\n     * ```js\r\n     * onVisibilityChange(!currentlyVisible);\r\n     * ```\r\n     */\r\n    onVisibilityChange: PropTypes.func,\r\n\r\n    /**\r\n     * The drawer's position on the page when it is not `inline`. When the drawer's position is `left`,\r\n     * the width will be `calc(100vw - 56px)` on mobile devices and `$md-drawer-desktop-width` on desktops.\r\n     *\r\n     * When the position is `right`, the width will be `100vw` for mobile devices and scaling to the drawer's\r\n     * children width on desktops.\r\n     */\r\n    position: PropTypes.oneOf(['left', 'right']).isRequired,\r\n\r\n    /**\r\n     * Boolean if the drawer should be displayed inline instead of fixed to the page. When this prop\r\n     * is enabled, the `position` prop will not be used.\r\n     */\r\n    inline: PropTypes.bool,\r\n\r\n    /**\r\n     * The `$md-drawer-transition-time` value from sass.\r\n     */\r\n    transitionDuration: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * Boolean if the temporary drawer's overlay should be created on desktop screens. This is really used so that\r\n     * the drawer will close when a user clicks anywhere on the page except in the drawer.\r\n     */\r\n    clickableDesktopOverlay: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the `autoclose` feature should wait for the ink transition to finish before automatically\r\n     * closing the drawer. This will add a `300ms` delay. If this is `false`, there will only be a `17ms` delay.\r\n     *\r\n     * > The delay is required so that any event listeners will still be correctly invoked when an item is clicked.\r\n     */\r\n    autocloseAfterInk: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the `type` prop should be constant across all media sizes. This is only valid if the `type` is\r\n     * one of the temporary types.\r\n     *\r\n     * This will basically mean that when attempting to do a media adjustment, it will use the `type` prop instead of\r\n     * `mobileType`, `tabletType`, and `desktopType` to determine the next drawer type.\r\n     */\r\n    constantType: PropTypes.bool.isRequired,\r\n\r\n    /**\r\n     * An optional zDepth to apply to the drawer. If this is omitted, the value will be set as follows:\r\n     * - floating || inline = 1\r\n     * - temporary = 5\r\n     * - all others = 1\r\n     *\r\n     * @see {@link Papers/Paper#zDepth}\r\n     */\r\n    zDepth: PropTypes.number,\r\n\r\n    closeOnNavItemClick: deprecated(PropTypes.bool, 'Use `autoclose` instead'),\r\n    onVisibilityToggle: deprecated(PropTypes.func, 'Use `onVisibilityChange` instead'),\r\n  };\r\n\r\n  static defaultProps = {\r\n    defaultMedia: 'mobile',\r\n    mobileType: Drawer.DrawerTypes.TEMPORARY,\r\n    mobileMinWidth: MOBILE_MIN_WIDTH,\r\n    tabletType: Drawer.DrawerTypes.PERSISTENT,\r\n    tabletMinWidth: TABLET_MIN_WIDTH,\r\n    desktopType: Drawer.DrawerTypes.FULL_HEIGHT,\r\n    desktopMinWidth: DESKTOP_MIN_WIDTH,\r\n    position: 'left',\r\n    transitionDuration: 300,\r\n    autoclose: true,\r\n    clickableDesktopOverlay: true,\r\n    constantType: true,\r\n  };\r\n\r\n  /**\r\n   * Determines the current media and returns an object containing matches for `mobile`, `tablet`, `desktop`,\r\n   * and the current drawer type. This expects a `props` object of the drawer.\r\n   *\r\n   * If this is used server side, it will default to only matching mobile.\r\n   *\r\n   * @param {Object=} props - The current drawer's prop shape to extract the mobile, tablet,\r\n   *    and desktop type/min widths. This defaults to the drawer's default props.\r\n   * @return {Object} an object containing the media matches and the current type to use for the drawer.\r\n   */\r\n  static getCurrentMedia(props = Drawer.defaultProps) {\r\n    const {\r\n      mobileMinWidth,\r\n      tabletMinWidth,\r\n      desktopMinWidth,\r\n      mobileType,\r\n      tabletType,\r\n      desktopType,\r\n      constantType,\r\n    } = props;\r\n    if (typeof window === 'undefined') {\r\n      const type = constantType && props.type ? props.type : mobileType;\r\n      return { mobile: true, tablet: false, desktop: false, type };\r\n    }\r\n\r\n    const mobile = Drawer.matchesMedia(mobileMinWidth, tabletMinWidth - 1);\r\n    const tablet = Drawer.matchesMedia(tabletMinWidth, desktopMinWidth);\r\n    const desktop = Drawer.matchesMedia(desktopMinWidth);\r\n\r\n    let type;\r\n    if (constantType && props.type && isTemporary(props.type)) {\r\n      type = props.type;\r\n    } else if (desktop) {\r\n      type = desktopType;\r\n    } else if (tablet) {\r\n      type = tabletType;\r\n    } else {\r\n      type = mobileType;\r\n    }\r\n\r\n    return { type, mobile, tablet, desktop };\r\n  }\r\n\r\n  /**\r\n   * Simply does a `window.matchMedia(query)` where the query gets defined as a min width\r\n   * and optional max width.\r\n   *\r\n   * @param {number} min - The min width for the media query.\r\n   * @param {number=} max - An optional max width to include for the media query.\r\n   * @return {boolean} true if the media matches.\r\n   */\r\n  static matchesMedia(min, max) {\r\n    let media = `screen and (min-width: ${min}px)`;\r\n    if (max) {\r\n      media += ` and (max-width: ${max}px)`;\r\n    }\r\n\r\n    return window.matchMedia(media).matches;\r\n  }\r\n\r\n  static contextTypes = {\r\n    renderNode: PropTypes.object,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { defaultVisible, defaultMedia, overlay } = props;\r\n\r\n    this.state = {\r\n      mobile: defaultMedia === 'mobile',\r\n      tablet: defaultMedia === 'tablet',\r\n      desktop: defaultMedia === 'desktop',\r\n      animating: false,\r\n      overlayActive: false,\r\n      drawerActive: false,\r\n    };\r\n\r\n    if (typeof props.type === 'undefined') {\r\n      this.state.type = props[`${defaultMedia}Type`];\r\n    }\r\n\r\n    const type = getField(props, this.state, 'type');\r\n    this._initialFix = true;\r\n\r\n    if (typeof props.visible === 'undefined') {\r\n      let visible = isPermanent(type) || isMini(type);\r\n      if (!visible && typeof defaultVisible !== 'undefined') {\r\n        visible = defaultVisible;\r\n      }\r\n\r\n      this.state.visible = visible;\r\n    }\r\n\r\n    const visible = getField(props, this.state, 'visible');\r\n\r\n    this.state.overlayActive = (typeof overlay !== 'undefined' ? overlay : isTemporary(type) && !this.state.desktop)\r\n      && visible;\r\n    this.state.drawerActive = visible;\r\n  }\r\n\r\n  componentWillMount() {\r\n    if (typeof window !== 'undefined') {\r\n      this._updateType(this.props);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!isMini(getField(this.props, this.state, 'type'))) {\r\n      window.addEventListener('resize', this._updateMedia);\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const {\r\n      mobileMinWidth,\r\n      mobileType,\r\n      tabletMinWidth,\r\n      tabletType,\r\n      desktopMinWidth,\r\n      desktopType,\r\n    } = this.props;\r\n\r\n    if (nextProps.mobileMinWidth !== mobileMinWidth || nextProps.mobileType !== mobileType\r\n      || nextProps.tabletMinWidth !== tabletMinWidth || nextProps.tabletType !== tabletType\r\n      || nextProps.desktopMinWidth !== desktopMinWidth || nextProps.desktopType !== desktopType) {\r\n      this._updateType(nextProps);\r\n    }\r\n\r\n    const { visible, transitionDuration, overlay } = nextProps;\r\n    if (this.props.visible === nextProps.visible) {\r\n      return;\r\n    }\r\n\r\n    const type = getField(nextProps, this.state, 'type');\r\n    this._animate(visible, type, transitionDuration, overlay, this.state.desktop);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this._timeout) {\r\n      clearTimeout(this._timeout);\r\n    }\r\n\r\n    if (this._closeTimeout) {\r\n      clearTimeout(this._closeTimeout);\r\n    }\r\n\r\n    window.removeEventListener('resize', this._updateMedia);\r\n  }\r\n\r\n  _updateType = (props) => {\r\n    const {\r\n      onMediaTypeChange,\r\n      overlay,\r\n      transitionDuration,\r\n    } = props;\r\n\r\n    const onVisibilityChange = props.onVisibilityToggle || props.onVisibilityChange;\r\n\r\n    let state = Drawer.getCurrentMedia(props);\r\n    const diffType = getField(props, this.state, 'type') !== state.type;\r\n    const diffMedia = state.mobile !== this.state.mobile\r\n      || state.tablet !== this.state.tablet\r\n      || state.desktop !== this.state.desktop;\r\n\r\n    if (onMediaTypeChange && (diffType || diffMedia)) {\r\n      onMediaTypeChange(state.type, { mobile: state.mobile, tablet: state.tablet, desktop: state.desktop });\r\n    }\r\n\r\n    if (diffType) {\r\n      let visible = isPermanent(state.type);\r\n      if (this._initialFix) {\r\n        if (props.defaultVisible) {\r\n          visible = props.defaultVisible;\r\n        } else if (props.visible) {\r\n          visible = props.visible;\r\n        }\r\n      }\r\n\r\n      const prevVisible = getField(props, this.state, 'visible');\r\n      if (onVisibilityChange && (visible !== prevVisible)) {\r\n        onVisibilityChange(visible);\r\n      }\r\n\r\n      if (typeof props.visible === 'undefined') {\r\n        state.visible = visible;\r\n        this._animate(visible, state.type, transitionDuration, overlay, state.desktop);\r\n      }\r\n    } else if (this._initialFix && diffMedia) {\r\n      state.overlayActive = (typeof overlay !== 'undefined' ? overlay : isTemporary(state.type) && !state.desktop)\r\n        && getField(props, this.state, 'visible');\r\n    }\r\n\r\n    if (typeof props.type !== 'undefined') {\r\n      const { type, ...realState } = state; // eslint-disable-line no-unused-vars\r\n      state = realState;\r\n    }\r\n\r\n    this._initialFix = false;\r\n    this.setState(state);\r\n  };\r\n\r\n  _updateMedia = () => {\r\n    this._updateType(this.props);\r\n  };\r\n\r\n  _animate = (visible, type, timeout, overlay, desktop) => {\r\n    if (this._timeout) {\r\n      clearTimeout(this._timeout);\r\n    }\r\n\r\n    if (visible) {\r\n      this._timeout = setTimeout(() => {\r\n        this._timeout = null;\r\n\r\n        this.setState({\r\n          overlayActive: overlay || (isTemporary(type) && !desktop),\r\n          drawerActive: true,\r\n          animating: true,\r\n        });\r\n      }, TICK);\r\n    } else {\r\n      this._timeout = setTimeout(() => {\r\n        this._timeout = null;\r\n\r\n        this.setState({ animating: false });\r\n      }, timeout);\r\n      this.setState({ animating: true, overlayActive: false, drawerActive: false });\r\n    }\r\n  };\r\n\r\n  _setNavigation = (navigation) => {\r\n    this._navigation = findDOMNode(navigation);\r\n  };\r\n\r\n  _handleNavClick = (e) => {\r\n    const { closeOnNavItemClick, autoclose, autocloseAfterInk } = this.props;\r\n    const enabled = typeof closeOnNavItemClick !== 'undefined' ? closeOnNavItemClick : autoclose;\r\n    if (!enabled || !isTemporary(getField(this.props, this.state, 'type'))) {\r\n      return;\r\n    }\r\n\r\n    let { target } = e;\r\n    while (target && this._navigation.contains(target)) {\r\n      if (target.classList.contains('md-list-tile')) {\r\n        // Clicked a nav item that has a nested list\r\n        if (target.getAttribute('aria-expanded') !== null) {\r\n          return;\r\n        }\r\n\r\n        this._closeTimeout = setTimeout(() => {\r\n          this._closeTimeout = null;\r\n\r\n          this._closeDrawer(e);\r\n        }, autocloseAfterInk ? 300 : TICK);\r\n        return;\r\n      }\r\n\r\n      target = target.parentNode;\r\n    }\r\n  };\r\n\r\n  _closeDrawer = () => {\r\n    const { onVisibilityChange, onVisibilityToggle, transitionDuration, overlay } = this.props;\r\n    const callback = onVisibilityToggle || onVisibilityChange;\r\n    if (callback) {\r\n      callback(false);\r\n    }\r\n\r\n    if (typeof this.props.visible === 'undefined') {\r\n      this.setState({ visible: false });\r\n      this._animate(false, getField(this.props, this.state, 'type'), transitionDuration, overlay, this.state.desktop);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { overlayActive, drawerActive, animating } = this.state;\r\n    const {\r\n      id,\r\n      style,\r\n      className,\r\n      navStyle,\r\n      navClassName,\r\n      component,\r\n      navItems,\r\n      header,\r\n      children,\r\n      inline,\r\n      position,\r\n      overlay,\r\n      clickableDesktopOverlay,\r\n      lastChild,\r\n      portal,\r\n      overlayStyle,\r\n      overlayClassName,\r\n      /* eslint-disable no-unused-vars */\r\n      type: propType,\r\n      visible: propVisible,\r\n      renderNode: propRenderNode,\r\n      navItemsId: propNavItemsId,\r\n      zDepth: propZDepth,\r\n      constantType,\r\n      defaultVisible,\r\n      defaultMedia,\r\n      mobileType,\r\n      mobileMinWidth,\r\n      tabletType,\r\n      tabletMinWidth,\r\n      desktopType,\r\n      desktopMinWidth,\r\n      transitionDuration,\r\n      onMediaTypeChange,\r\n      onVisibilityChange,\r\n      autoclose,\r\n      autocloseAfterInk,\r\n      // deprecated\r\n      onVisibilityToggle,\r\n      closeOnNavItemClick,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n\r\n    let { navItemsId, zDepth } = this.props;\r\n    if (!navItemsId && id) {\r\n      navItemsId = `${id}-nav-items`;\r\n    }\r\n\r\n    const { desktop } = this.state;\r\n    const renderNode = getField(this.props, this.context, 'renderNode');\r\n    const type = getField(this.props, this.state, 'type');\r\n    const visible = getField(this.props, this.state, 'visible');\r\n    const mini = isMini(type);\r\n    const temporary = isTemporary(type);\r\n    const floating = DrawerTypes.FLOATING === type;\r\n    const permanent = isPermanent(type);\r\n\r\n    let Component;\r\n    if (component) {\r\n      Component = component;\r\n    } else if (navItems) {\r\n      Component = 'nav';\r\n    } else {\r\n      Component = 'aside';\r\n    }\r\n\r\n    let navigation;\r\n    if (navItems) {\r\n      navigation = (\r\n        <List\r\n          ref={this._setNavigation}\r\n          key=\"navigation\"\r\n          id={navItemsId}\r\n          style={navStyle}\r\n          className={cn('md-list--drawer', {\r\n            'md-toolbar-relative': mini && !visible,\r\n            'md-background': floating,\r\n          }, navClassName)}\r\n          onClick={this._handleNavClick}\r\n        >\r\n          {navItems.map(mapToListParts)}\r\n        </List>\r\n      );\r\n    }\r\n\r\n    if (typeof zDepth === 'undefined') {\r\n      zDepth = 1;\r\n      if (floating || inline) {\r\n        zDepth = 0;\r\n      } else if (!mini && temporary) {\r\n        zDepth = 5;\r\n      }\r\n    }\r\n\r\n    let overlayVisible = overlay;\r\n    if (typeof overlayVisible !== 'boolean') {\r\n      overlayVisible = temporary && !mini && (!desktop || clickableDesktopOverlay) && (animating || visible);\r\n    }\r\n\r\n    const drawer = (\r\n      <Paper\r\n        {...props}\r\n        id={id}\r\n        key=\"drawer\"\r\n        component={Component}\r\n        zDepth={zDepth}\r\n        raiseOnHover={false}\r\n        style={style}\r\n        className={cn('md-drawer', {\r\n          [`md-drawer--${position}`]: !inline,\r\n          'md-drawer--fixed': !inline,\r\n          'md-drawer--inline': inline,\r\n          'md-drawer--active': mini || drawerActive,\r\n          'md-drawer--mini': mini,\r\n          'md-transition--deceleration': !mini && !permanent && visible,\r\n          'md-transition--acceleration': !mini && !permanent && !visible,\r\n          'md-background': inline || floating,\r\n          'md-background--card': !floating && !inline,\r\n        }, className)}\r\n      >\r\n        {header}\r\n        {navigation}\r\n        {children}\r\n        <Overlay\r\n          style={overlayStyle}\r\n          className={overlayClassName}\r\n          active={overlayActive}\r\n          onClick={this._closeDrawer}\r\n          visible={overlayVisible}\r\n          renderNode={renderNode}\r\n        />\r\n      </Paper>\r\n    );\r\n\r\n    if (inline || permanent) {\r\n      return drawer;\r\n    } else if (!portal) {\r\n      return mini || animating || visible ? drawer : null;\r\n    }\r\n\r\n    return (\r\n      <Portal visible={animating || visible} renderNode={renderNode} lastChild={lastChild}>\r\n        {drawer}\r\n      </Portal>\r\n    );\r\n  }\r\n}\r\n","export const MOBILE_MIN_WIDTH = 320;\r\nexport const TABLET_MIN_WIDTH = 768;\r\nexport const DESKTOP_MIN_WIDTH = 1025;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport DialogFooter from '../Dialogs/DialogFooter';\r\n\r\n/**\r\n * The `PanelContent` component is for displaying the expanded content\r\n * for an `ExpansionPanel`. It will display any children in a `md-panel-content`\r\n * container followed by a `Divider` and the `PanelControls` .\r\n */\r\nexport default class PanelContent extends PureComponent {\r\n  static propTypes = {\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    footerStyle: PropTypes.object,\r\n    footerClassName: PropTypes.string,\r\n    contentStyle: PropTypes.object,\r\n    children: PropTypes.node,\r\n    onSave: PropTypes.func.isRequired,\r\n    onCancel: PropTypes.func.isRequired,\r\n    saveProps: PropTypes.object,\r\n    saveType: PropTypes.string,\r\n    saveLabel: PropTypes.node.isRequired,\r\n    savePrimary: PropTypes.bool,\r\n    saveSecondary: PropTypes.bool,\r\n    cancelProps: PropTypes.object,\r\n    cancelType: PropTypes.string,\r\n    cancelLabel: PropTypes.node.isRequired,\r\n    cancelPrimary: PropTypes.bool,\r\n    cancelSecondary: PropTypes.bool,\r\n    footer: PropTypes.node,\r\n    footerChildren: PropTypes.node,\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      style,\r\n      footerStyle,\r\n      footerClassName,\r\n      contentStyle,\r\n      className,\r\n      children,\r\n      onSave,\r\n      onCancel,\r\n      saveProps,\r\n      saveType,\r\n      saveLabel,\r\n      savePrimary,\r\n      saveSecondary,\r\n      cancelProps,\r\n      cancelType,\r\n      cancelLabel,\r\n      cancelPrimary,\r\n      cancelSecondary,\r\n      footer,\r\n      footerChildren,\r\n    } = this.props;\r\n\r\n    const actions = [{\r\n      type: cancelType,\r\n      label: cancelLabel,\r\n      primary: cancelPrimary,\r\n      secondary: cancelSecondary,\r\n      ...cancelProps,\r\n      onClick: onCancel,\r\n    }, {\r\n      type: saveType,\r\n      label: saveLabel,\r\n      primary: savePrimary,\r\n      secondary: saveSecondary,\r\n      ...saveProps,\r\n      onClick: onSave,\r\n    }];\r\n\r\n    let actionFooter = null;\r\n    if (typeof footer === 'undefined') {\r\n      actionFooter = (\r\n        <DialogFooter\r\n          actions={actions}\r\n          style={footerStyle}\r\n          className={cn('md-divider-border md-divider-border--top', footerClassName)}\r\n        >\r\n          {footerChildren}\r\n        </DialogFooter>\r\n      );\r\n    } else if (footer !== null) {\r\n      actionFooter = footer;\r\n    }\r\n\r\n    return (\r\n      <div style={style}>\r\n        <div className={cn('md-panel-content', className)} style={contentStyle}>\r\n          {children}\r\n        </div>\r\n        {actionFooter}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent, Children } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { findDOMNode } from 'react-dom';\r\nimport cn from 'classnames';\r\nimport deprecated from 'react-prop-types/lib/deprecated';\r\n\r\nimport getField from '../utils/getField';\r\nimport themeColors from '../utils/themeColors';\r\nimport getCollapserStyles from '../utils/getCollapserStyles';\r\nimport controlled from '../utils/PropTypes/controlled';\r\nimport Paper from '../Papers/Paper';\r\nimport AccessibleFakeButton from '../Helpers/AccessibleFakeButton';\r\nimport Collapse from '../Helpers/Collapse';\r\nimport FontIcon from '../FontIcons/FontIcon';\r\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\r\nimport PanelContent from './PanelContent';\r\n\r\nconst LABEL_FONT_SIZE = 15;\r\nconst LINE_HEIGHT = 1.42857;\r\nconst SINGLE_LINE_HEIGHT = LABEL_FONT_SIZE * LINE_HEIGHT;\r\n\r\n/**\r\n * The `ExpansionPanel` component needs to be used with the `ExpansionList`\r\n * component. The only reason is that the `ExpansionPanel` should really\r\n * be rendered as a table, but it was a bit hard to have a single component\r\n * dynamically rendering another row when expanded. It couldn't be in the\r\n * same row since the expanded content might not have the same columns.\r\n */\r\nexport default class ExpansionPanel extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * An optional style to apply to the panel.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the panel.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * An options style to apply to the panel's header content. This is the\r\n     * section that toggles the children to be visible and label columns.\r\n     */\r\n    headerStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the panel's header content. This is the\r\n     * section that toggles the children to be visible and label columns.\r\n     */\r\n    headerClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the element surrounding the children when expanded.\r\n     */\r\n    contentStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the element surrounding the children when expanded.\r\n     */\r\n    contentClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the footer when the `footer` prop is `undefined`.\r\n     *\r\n     * @see {@link #footer}\r\n     */\r\n    footerStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the footer when the `footer` prop is `undefined`.\r\n     *\r\n     * @see {@link #footer}\r\n     */\r\n    footerClassName: PropTypes.string,\r\n\r\n    /**\r\n     * The main label to display in the unexpanded panel.\r\n     */\r\n    label: PropTypes.node.isRequired,\r\n\r\n    /**\r\n     * Any additional columns to display after the main label. If this is a `list`\r\n     * instead of a singular item, they will each be formatted as a column.\r\n     */\r\n    secondaryLabel: PropTypes.node,\r\n\r\n    /**\r\n     * Any additional columns to display after the main label when the panel is\r\n     * expanded. If this is omitted, the default `secondaryLabel` will be displayed\r\n     * instead.\r\n     */\r\n    expandedSecondaryLabel: PropTypes.node,\r\n\r\n    /**\r\n     * The component to render the panel as.\r\n     */\r\n    component: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.func,\r\n    ]).isRequired,\r\n\r\n    /**\r\n     * The content to display once the panel is toggled open.\r\n     */\r\n    children: PropTypes.node,\r\n\r\n    /**\r\n     * A boolean if the panel is currently expanded. This will force the component\r\n     * to be controlled and require's the `onExpandToggle` function to be defined.\r\n     */\r\n    expanded: controlled(PropTypes.bool, 'onExpandToggle', 'defaultExpanded'),\r\n\r\n    /**\r\n     * Boolean if an uncontrolled panel should be expanded by default.\r\n     */\r\n    defaultExpanded: PropTypes.bool.isRequired,\r\n\r\n    /**\r\n     * The icon to display for expanding the expansion panel.\r\n     */\r\n    expanderIcon: PropTypes.element,\r\n\r\n    /**\r\n     * Boolean if the `ExpansionPanel` is currently tab focused. This is injected\r\n     * and managed by the `ExpansionList` component. Do not set yourself.\r\n     */\r\n    focused: PropTypes.bool.isRequired,\r\n\r\n    /**\r\n     * A list of min-widths to apply to each column in the panel header. This is injected\r\n     * and managed by the `ExpansionList` component. Do not set yourself.\r\n     */\r\n    columnWidths: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n\r\n    /**\r\n     * Boolean if the panel has too much content so that it overflowns. This is injected\r\n     * and managed by the `ExpansionList` component. Do not set yourself.\r\n     *\r\n     * When this is active, it will truncate all columns except for the main label and the\r\n     * toggle icon.\r\n     */\r\n    overflown: PropTypes.bool,\r\n\r\n    /**\r\n     * A function to call when the expansion panel's expanded state is toggled.\r\n     * The callback for this function will include the new expanded state.\r\n     *\r\n     * `onExpandToggle(expanded)`\r\n     */\r\n    onExpandToggle: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the Save button is clicked on the expanded panel.\r\n     */\r\n    onSave: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the Cancel button is clicked on the expanded panel.\r\n     */\r\n    onCancel: PropTypes.func,\r\n\r\n    /**\r\n     * Boolean if the panel should close when the Save button is clicked.\r\n     */\r\n    closeOnSave: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the panel should close when the Cancel button is clicked.\r\n     */\r\n    closeOnCancel: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional button type to apply to the Save button. This will get\r\n     * passed to the `FlatButton`.\r\n     */\r\n    saveType: PropTypes.oneOf(['button', 'submit', 'reset']),\r\n\r\n    /**\r\n     * The label for the Save button.\r\n     */\r\n    saveLabel: PropTypes.node.isRequired,\r\n\r\n    /**\r\n     * Boolean if the Save button should be styled with the primary color.\r\n     */\r\n    savePrimary: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the Save button should be styled with the secondary color,\r\n     */\r\n    saveSecondary: PropTypes.bool,\r\n\r\n    /**\r\n     * Any additional props to provide/override for the save button in the\r\n     * footer of the panel.\r\n     */\r\n    saveProps: PropTypes.object,\r\n\r\n    /**\r\n     * An optional button type to apply to the Cancel button. This will get\r\n     * passed to the `FlatButton`.\r\n     */\r\n    cancelType: PropTypes.oneOf(['button', 'submit', 'reset']),\r\n\r\n    /**\r\n     * The label for the Cancel button.\r\n     */\r\n    cancelLabel: PropTypes.node.isRequired,\r\n\r\n    /**\r\n     * Boolean if the Cancel button should be styled with the primary color,\r\n     */\r\n    cancelPrimary: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the Cancel button should be styled with the secondary color,\r\n     */\r\n    cancelSecondary: PropTypes.bool,\r\n\r\n    /**\r\n     * Any additional props to provide/override for the cancel button in the\r\n     * footer of the panel.\r\n     */\r\n    cancelProps: PropTypes.object,\r\n\r\n    /**\r\n     * The tab index for the panel's header. This allows keyboard navigation.\r\n     */\r\n    tabIndex: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * Boolean if the panel's content should animate when the content's visibility changes. This\r\n     * can also be toggled from the `ExpansionList` component if all `ExpansionPanel` in the list\r\n     * should not animate. This only affects the height transition.\r\n     *\r\n     * > The default value is really `true` since it gets passed down to the `Collapse` component.\r\n     */\r\n    animateContent: PropTypes.bool,\r\n\r\n    /**\r\n     * This prop controls the footer for the expansion panel. If this prop is `undefined`, it will\r\n     * go with the default behavior of generating the save and cancel buttons with the save and cancel\r\n     * props.\r\n     *\r\n     * If this value is `null`, there will be no footer created.\r\n     *\r\n     * Finally, if this prop is defined as any renderable item, it will be displayed in place of the\r\n     * footer.\r\n     *\r\n     * @see {@link #footerChildren}\r\n     */\r\n    footer: PropTypes.node,\r\n\r\n    /**\r\n     * Any additional children that should be displayed in the footer of the panel. These children\r\n     * will be placed after the action buttons.\r\n     */\r\n    footerChildren: PropTypes.node,\r\n    expandIconChildren: deprecated(PropTypes.node, 'Use the `expanderIcon` instead'),\r\n    expandIconClassName: deprecated(PropTypes.string, 'Use the `expanderIcon` instead'),\r\n  };\r\n\r\n  static defaultProps = {\r\n    defaultExpanded: false,\r\n    expanderIcon: <FontIcon>keyboard_arrow_down</FontIcon>,\r\n    component: 'li',\r\n    saveLabel: 'Save',\r\n    cancelLabel: 'Cancel',\r\n    savePrimary: true,\r\n    tabIndex: 0,\r\n    closeOnSave: true,\r\n    closeOnCancel: true,\r\n    focused: false,\r\n    columnWidths: [],\r\n  };\r\n\r\n  static contextTypes = {\r\n    animateContent: PropTypes.bool,\r\n  };\r\n\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.state = {\r\n      received: false,\r\n      twoLine: false,\r\n    };\r\n\r\n    if (typeof props.expanded === 'undefined') {\r\n      this.state.expanded = props.defaultExpanded;\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._determineIfTwoLine();\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (process.env.NODE_ENV === 'development' && !this.state.received) {\r\n      if (nextProps.columnWidths.length === 0) {\r\n        // Hopefully a nice warning about fixing the missing props injected from ExpansionList\r\n        /* eslint-disable no-console */\r\n        console.error(\r\n          'The `ExpansionPanel` component expects the `columnWidths` prop to be injected from the ' +\r\n          '`ExpansionList` component. It could be missing because:' +\r\n          '\\n - you have a wrapper component with extra functionality' +\r\n          '\\n - the `ExpansionPanel` is not a direct child of the `ExpansionList` component' +\r\n          '\\n\\nYou can fix this by making sure to pass `this.props.focused` and `this.props.columnWidths` ' +\r\n          'within your wrapper component and making the `ExpansionPanel` a direct child of `ExpansionList`.'\r\n        );\r\n      }\r\n\r\n      this.setState({ received: true });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.label === prevProps.label && this.props.secondaryLabel === prevProps.secondaryLabel) {\r\n      return;\r\n    }\r\n\r\n    this._determineIfTwoLine();\r\n  }\r\n\r\n  _isExpanded(props, state) {\r\n    return typeof props.expanded === 'undefined' ? state.expanded : props.expanded;\r\n  }\r\n\r\n  _determineIfTwoLine = () => {\r\n    let twoLine = false;\r\n    Array.prototype.slice.call(findDOMNode(this).querySelectorAll('.md-panel-column'))\r\n      .some(el => (twoLine = el.offsetHeight > SINGLE_LINE_HEIGHT));\r\n\r\n    this.setState({ twoLine });\r\n  };\r\n\r\n  _handleClick = () => {\r\n    const expanded = !this._isExpanded(this.props, this.state);\r\n    if (this.props.onExpandToggle) {\r\n      this.props.onExpandToggle(expanded);\r\n    }\r\n\r\n\r\n    if (typeof this.props.expanded === 'undefined') {\r\n      this.setState({ expanded });\r\n    }\r\n  };\r\n\r\n  _handleSave = (e) => {\r\n    const { onSave, onExpandToggle, closeOnSave } = this.props;\r\n    if (onSave) {\r\n      onSave(e);\r\n    }\r\n\r\n    if (closeOnSave) {\r\n      if (onExpandToggle) {\r\n        onExpandToggle(false);\r\n      }\r\n\r\n      if (typeof this.props.expanded === 'undefined') {\r\n        this.setState({ expanded: false });\r\n      }\r\n    }\r\n  };\r\n\r\n  _handleCancel = (e) => {\r\n    const { onCancel, onExpandToggle, closeOnCancel } = this.props;\r\n    if (onCancel) {\r\n      onCancel(e);\r\n    }\r\n\r\n    if (closeOnCancel) {\r\n      if (onExpandToggle) {\r\n        onExpandToggle(false);\r\n      }\r\n\r\n      if (typeof this.props.expanded === 'undefined') {\r\n        this.setState({ expanded: false });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      className,\r\n      label,\r\n      secondaryLabel,\r\n      expandedSecondaryLabel,\r\n      children,\r\n      focused,\r\n      columnWidths,\r\n      saveType,\r\n      saveLabel,\r\n      savePrimary,\r\n      saveSecondary,\r\n      saveProps,\r\n      cancelType,\r\n      cancelLabel,\r\n      cancelPrimary,\r\n      cancelSecondary,\r\n      cancelProps,\r\n      headerStyle,\r\n      headerClassName,\r\n      contentStyle,\r\n      contentClassName,\r\n      tabIndex,\r\n      overflown,\r\n      footer,\r\n      footerChildren,\r\n      footerStyle,\r\n      footerClassName,\r\n\r\n      // deprecated\r\n      expandIconChildren,\r\n      expandIconClassName,\r\n      /* eslint-disable no-unused-vars */\r\n      animateContent: propAnimateContent,\r\n      expanded: propExpanded,\r\n      expanderIcon: propExpanderIcon,\r\n      defaultExpanded,\r\n      closeOnSave,\r\n      closeOnCancel,\r\n      onSave,\r\n      onCancel,\r\n      onExpandToggle,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n    const { twoLine } = this.state;\r\n    const expanded = this._isExpanded(this.props, this.state);\r\n    const animateContent = getField(this.props, this.context, 'animateContent');\r\n\r\n    let columns = Children.map(expanded && expandedSecondaryLabel || secondaryLabel, (panelLabel, i) => (\r\n      <div\r\n        style={{ [`${overflown ? 'width' : 'minWidth'}`]: columnWidths[i + 1] }}\r\n        className={cn('md-panel-column', {\r\n          'md-panel-column--overflown': overflown,\r\n        }, themeColors({ text: true }))}\r\n      >\r\n        {panelLabel}\r\n      </div>\r\n    ));\r\n\r\n    if (!Array.isArray(columns)) {\r\n      columns = [columns];\r\n    }\r\n\r\n    columns.unshift((\r\n      <div\r\n        key=\"main-label\"\r\n        style={{ minWidth: columnWidths[0] }}\r\n        className={cn('md-panel-column', themeColors({ text: true }))}\r\n      >\r\n        {label}\r\n      </div>\r\n    ));\r\n\r\n    let expanderIcon = getDeprecatedIcon(expandIconClassName, expandIconChildren, this.props.expanderIcon);\r\n    expanderIcon = React.Children.only(expanderIcon);\r\n    expanderIcon = React.cloneElement(expanderIcon, {\r\n      className: getCollapserStyles({\r\n        flipped: expanded,\r\n      }, 'md-expansion-panel__collapser md-cell--right', expanderIcon.props.className),\r\n    });\r\n\r\n    return (\r\n      <Paper\r\n        {...props}\r\n        className={cn('md-expansion-panel', {\r\n          'md-expansion-panel--expanded': expanded,\r\n        }, className)}\r\n        aria-expanded={expanded}\r\n      >\r\n        <AccessibleFakeButton\r\n          onClick={this._handleClick}\r\n          style={headerStyle}\r\n          className={cn('md-panel-header', {\r\n            'md-panel-header--expanded': expanded || twoLine,\r\n            'md-panel-header--focused': focused,\r\n          }, headerClassName)}\r\n          tabIndex={tabIndex}\r\n        >\r\n          {columns}\r\n          {expanderIcon}\r\n        </AccessibleFakeButton>\r\n        <Collapse collapsed={!expanded} animate={animateContent}>\r\n          <PanelContent\r\n            style={contentStyle}\r\n            className={contentClassName}\r\n            footerStyle={footerStyle}\r\n            footerClassName={footerClassName}\r\n            onSave={this._handleSave}\r\n            onCancel={this._handleCancel}\r\n            saveType={saveType}\r\n            saveLabel={saveLabel}\r\n            savePrimary={savePrimary}\r\n            saveSecondary={saveSecondary}\r\n            saveProps={saveProps}\r\n            cancelType={cancelType}\r\n            cancelLabel={cancelLabel}\r\n            cancelPrimary={cancelPrimary}\r\n            cancelSecondary={cancelSecondary}\r\n            cancelProps={cancelProps}\r\n            footer={footer}\r\n            footerChildren={footerChildren}\r\n          >\r\n            {children}\r\n          </PanelContent>\r\n        </Collapse>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent, cloneElement, Children } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { findDOMNode } from 'react-dom';\r\nimport cn from 'classnames';\r\n\r\nimport { TAB } from '../constants/keyCodes';\r\nimport handleWindowClickListeners from '../utils/EventUtils/handleWindowClickListeners';\r\nimport ResizeObserver from '../Helpers/ResizeObserver';\r\n\r\n/**\r\n * The `ExpansionList` component is a wrapper for the `ExpansionPanel` that helps\r\n * determine which `ExpansionPanel` currently has tab focus and adjusts the column\r\n * sizes in the header of the `ExpansionPanel`.\r\n *\r\n * The `ExpansionList` and `ExpansionPanel` components should have probably been\r\n * implemented as a `table` instead of a `ul || ol` since it is more column based,\r\n * but it would complicate the API to have dynamic row generation for the expanded\r\n * panels. The expanded panels _might_ not follow the same column widths as their labels\r\n * so a singular row with a div for expanded content might not work correctly.\r\n */\r\nexport default class ExpansionList extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * An optional style object to apply to the list.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the list.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * The children should be a list or singular `ExpansionPanel` component\r\n     * to render with some additional props injected.\r\n     */\r\n    children: PropTypes.node,\r\n\r\n    /**\r\n     * The component to render the list as.\r\n     */\r\n    component: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.func,\r\n    ]).isRequired,\r\n\r\n    /**\r\n     * Boolean if all the expansion panels in the list should animate when their content's visibility\r\n     * changes. This is just a quicker way to disable all animations instead of having to toggle it off\r\n     * on each panel.\r\n     *\r\n     * > The default value is really `true` since it gets passed down to the `Collapse` component.\r\n     */\r\n    animateContent: PropTypes.bool,\r\n\r\n    /**\r\n     * The threshold that should be used for when the list should recalculate the positioning of all\r\n     * the columns. This will only compare the difference between updates.\r\n     * So if the size changes from 80 -> 120 -> 160 -> 140. It will only update on the third resize (160)\r\n     */\r\n    recalculateThreshold: PropTypes.number.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    component: 'ul',\r\n    recalculateThreshold: 80,\r\n  };\r\n\r\n  static childContextTypes = {\r\n    animateContent: PropTypes.bool,\r\n  };\r\n\r\n  state = { columnWidths: [], focusedIndex: -1, overflown: false };\r\n\r\n  getChildContext() {\r\n    const { animateContent } = this.props;\r\n    return { animateContent };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (this.props.children !== nextProps.children) {\r\n      this._calcColumnWidths();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { focusedIndex } = this.state;\r\n    if (prevState.focusedIndex === focusedIndex || (prevState.focusedIndex > -1 && focusedIndex > -1)) {\r\n      return;\r\n    }\r\n\r\n    handleWindowClickListeners(this._removeFocus, this.state.focusedIndex !== -1);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.state.focusedIndex === -1) {\r\n      handleWindowClickListeners(this._removeFocus, false);\r\n    }\r\n\r\n    window.removeEventListener('keyup', this._determineTabFocus);\r\n  }\r\n\r\n  _setContainer = (container) => {\r\n    if (container !== null) {\r\n      this._container = findDOMNode(container);\r\n      window.addEventListener('keyup', this._determineTabFocus);\r\n\r\n      this._width = this._container.offsetWidth;\r\n      this._calcColumnWidths();\r\n    }\r\n  };\r\n\r\n  _determineTabFocus = (e) => {\r\n    if ((e.which || e.keyCode) === TAB) {\r\n      const panels = Array.prototype.slice.call(findDOMNode(this).querySelectorAll('.md-panel-header'));\r\n      this.setState({ focusedIndex: panels.indexOf(e.target) });\r\n    }\r\n  };\r\n\r\n  _removeFocus = () => {\r\n    this.setState({ focusedIndex: -1 });\r\n  };\r\n\r\n  _isOverflown = (widths) => {\r\n    if (!this._container) {\r\n      return false;\r\n    }\r\n\r\n    const panel = this._container.querySelector('.md-panel-header');\r\n    if (!panel) {\r\n      return false;\r\n    }\r\n\r\n    const collapser = this._container.querySelector('.md-expansion-panel__collapser');\r\n    const collapserWidth = collapser ? collapser.offsetWidth : 0;\r\n    const styles = window.getComputedStyle(panel);\r\n    const maxWidth = panel.offsetWidth\r\n      - parseFloat(styles.paddingLeft)\r\n      - parseFloat(styles.paddingRight)\r\n      - collapserWidth;\r\n\r\n    const totalWidth = widths.reduce((total, w) => total + w, 0);\r\n    return totalWidth > maxWidth;\r\n  };\r\n\r\n  /**\r\n   * Since this should really be rendered as a table, need to calculate the max width for each _column_\r\n   * on the panel's header and apply that as a min width for the other panels.\r\n   */\r\n  _getColumnWidths = () => {\r\n    if (!this._container) {\r\n      return this.state.columnWidths;\r\n    }\r\n\r\n    return [].slice.call(this._container.querySelectorAll('.md-panel-header'))\r\n      .reduce((maxes, row) => {\r\n        const columns = row.querySelectorAll('.md-panel-column');\r\n        for (let i = 0; i < columns.length; i++) {\r\n          const col = columns[i];\r\n          // Need to reset the widths if it has already been calculated to get a more accurate measurement.\r\n          const { width, minWidth } = col.style;\r\n          col.style.width = 'auto';\r\n          col.style.minWidth = 'auto';\r\n\r\n          // Only need to include the offsetWidth of the column because the child will really\r\n          // determine the width of the column. Since it has already been defined at this point,\r\n          // no additional work needs to be done.\r\n          maxes[i] = Math.max(col.offsetWidth, maxes[i] || 0);\r\n          col.style.width = width;\r\n          col.style.minWidth = minWidth;\r\n        }\r\n\r\n        return maxes;\r\n      }, [0]);\r\n  };\r\n\r\n  _calcColumnWidths = () => {\r\n    const { columnWidths } = this.state;\r\n    const nextWidths = this._getColumnWidths();\r\n    const overflown = this._isOverflown(nextWidths);\r\n    if (this.state.overflown !== overflown\r\n      || columnWidths.length !== nextWidths.length\r\n      || nextWidths.some((w, i) => w !== columnWidths[i])\r\n    ) {\r\n      this.setState({ columnWidths: nextWidths, overflown });\r\n    }\r\n  };\r\n\r\n  _handleResize = ({ width }) => {\r\n    const { recalculateThreshold } = this.props;\r\n    if (this._width !== width && (Math.abs(width - this._width) >= recalculateThreshold)) {\r\n      this._width = width;\r\n      this._calcColumnWidths();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { columnWidths, focusedIndex, overflown } = this.state;\r\n    const {\r\n      children,\r\n      className,\r\n      component: Component,\r\n      animateContent, // eslint-disable-line no-unused-vars\r\n      recalculateThreshold, // eslint-disable-line no-unused-vars\r\n      ...props\r\n    } = this.props;\r\n\r\n    const panels = Children.map(children, (child, i) => cloneElement(child, {\r\n      key: child.key || i,\r\n      overflown,\r\n      columnWidths,\r\n      focused: focusedIndex === i,\r\n    }));\r\n    return (\r\n      <Component\r\n        {...props}\r\n        ref={this._setContainer}\r\n        className={cn('md-expansion-panel-list', className)}\r\n      >\r\n        <ResizeObserver watchWidth onResize={this._handleResize} />\r\n        {panels}\r\n      </Component>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\r\nimport deprecated from 'react-prop-types/lib/deprecated';\r\n\r\nimport { TAB, SPACE, ENTER } from '../constants/keyCodes';\r\nimport captureNextEvent from '../utils/EventUtils/captureNextEvent';\r\nimport getBtnStyles from '../Buttons/getBtnStyles';\r\nimport FontIcon from '../FontIcons/FontIcon';\r\nimport IconSeparator from '../Helpers/IconSeparator';\r\nimport AccessibleFakeInkedButton from '../Helpers/AccessibleFakeInkedButton';\r\n\r\n/**\r\n * The `FileInput` component is used as simple styling for the `<input type=\"file\" />`.\r\n * It will style the input as a raised button by default.\r\n */\r\nexport default class FileInput extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * The id for the text field. This is required for a11y and to get the `input type=\"file\"` to\r\n     * open.\r\n     */\r\n    id: isRequiredForA11y(PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number,\r\n    ])),\r\n\r\n    /**\r\n     * An optional name to provide to the input.\r\n     */\r\n    name: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the label.\r\n     */\r\n    labelStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the label.\r\n     */\r\n    labelClassName: PropTypes.string,\r\n\r\n    /**\r\n     * Boolean if the `FileInput` should be styled with the primary color.\r\n     */\r\n    primary: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the `FileInput` should be styled with the secondary color.\r\n     */\r\n    secondary: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the `FileInput` should be styled as a flat button instead of a\r\n     * raised button.\r\n     */\r\n    flat: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the theming should be swapped from text to background or vice-versa.\r\n     *\r\n     * @see {@link Buttons/Button#swapTheming}\r\n     */\r\n    swapTheming: PropTypes.bool,\r\n\r\n    /**\r\n     * This should be a comma separated list of Media Types that the `FileInput` can\r\n     * accept. If this prop is left blank, any file will be accepted.\r\n     *\r\n     * The values can either be:\r\n     * - A file extension\r\n     * - audio/*\r\n     * - video/*\r\n     * - image/*\r\n     * - any valid [IANA Media Type](http://www.iana.org/assignments/media-types/media-types.xhtml)\r\n     *\r\n     * > NOTE: IE does not enforce this.\r\n     */\r\n    accept: PropTypes.string,\r\n\r\n    /**\r\n     * Boolean if the same file is allowed to be uploaded multiple times. This will basically make the\r\n     * `value` of the file input always blank.\r\n     */\r\n    allowDuplicates: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if multiple files will be accepted.\r\n     */\r\n    multiple: PropTypes.bool,\r\n\r\n    /**\r\n     * A label to display on the `FileInput`. This will be used with the `AccessibleFakeInkedButton` component to\r\n     * create a `<label>` for the `<input type=\"file\">`.\r\n     */\r\n    label: PropTypes.node,\r\n\r\n    /**\r\n     * Boolean if the icons should appear before the label.\r\n     */\r\n    iconBefore: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional icon to display with the file download. This can be a `FontIcon` or an `SVGIcon`.\r\n     */\r\n    icon: PropTypes.element,\r\n\r\n    /**\r\n     * A function to call when the value of the input changes. This will\r\n     * be triggered when the user selects a new file or cancels the new file selection.\r\n     *\r\n     * This function will be given the new [FileList](https://developer.mozilla.org/en-US/docs/Web/API/FileList)\r\n     * as an array and the change event. If this is not a multiple file input, only the\r\n     * newly selected File will be given instead of a list of one file. Since this is an\r\n     * `input` tag, the user will not be able to select the same file multiple times unless\r\n     * you manually clear the input's value.\r\n     *\r\n     * > NOTE: If the user hits cancel, null will be given for a single file input.\r\n     *\r\n     * ```js\r\n     * onChange(files, e);\r\n     * ```\r\n     */\r\n    onChange: PropTypes.func,\r\n\r\n    /**\r\n     * Boolean if the `FileInput` is currently disabled.\r\n     */\r\n    disabled: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional function to call when they keyup event is triggered on the file input's label.\r\n     */\r\n    onKeyUp: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when they keydown event is triggered on the file input's label.\r\n     */\r\n    onKeyDown: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when they mouseup event is triggered on the file input's label.\r\n     */\r\n    onMouseUp: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when they mousedown event is triggered on the file input's label.\r\n     */\r\n    onMouseDown: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when they mouseover event is triggered on the file input's label.\r\n     */\r\n    onMouseOver: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when they mouseleave event is triggered on the file input's label.\r\n     */\r\n    onMouseLeave: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when they touchend event is triggered on the file input's label.\r\n     */\r\n    onTouchEnd: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when they touchstart event is triggered on the file input's label.\r\n     */\r\n    onTouchStart: PropTypes.func,\r\n\r\n    iconChildren: deprecated(PropTypes.node, 'Use `icon` instead'),\r\n    iconClassName: deprecated(PropTypes.string, 'Use `icon` instead'),\r\n    value: deprecated(\r\n      PropTypes.string,\r\n      'There should\\'t be a reason to set the value manually. Check out {@link #allowDuplicates} instead'\r\n    ),\r\n  };\r\n\r\n  static defaultProps = {\r\n    label: 'Select a file',\r\n    icon: <FontIcon>file_upload</FontIcon>,\r\n    allowDuplicates: false,\r\n  };\r\n\r\n  state = { hover: false, pressed: false };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (this.props.disabled && !nextProps.disabled && this.state.hover) {\r\n      this.setState({ hover: false });\r\n    }\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    // I honestly don't remember why this was implemented, but it was copied from the Button\r\n    // component\r\n    if (!this.state.pressed && nextState.pressed) {\r\n      this._timeout = setTimeout(() => {\r\n        this._timeout = null;\r\n        if (this._attemptedBlur) {\r\n          this._attemptedBlur = false;\r\n\r\n          this.setState({ pressed: false });\r\n        }\r\n      }, 450);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this._timeout) {\r\n      clearTimeout(this._timeout);\r\n    }\r\n\r\n    window.removeEventListener('click', this._blur);\r\n  }\r\n\r\n  _handleChange = (e) => {\r\n    const { multiple, onChange } = this.props;\r\n    const { files } = e.target;\r\n    if (onChange) {\r\n      if (!multiple) {\r\n        onChange(files[0] || null, e);\r\n      } else {\r\n        onChange(Array.prototype.slice.call(files), e);\r\n      }\r\n    }\r\n  };\r\n\r\n  _blur = () => {\r\n    if (this.props.disabled) {\r\n      return;\r\n    }\r\n\r\n    if (this._timeout) {\r\n      this._attemptedBlur = true;\r\n    } else {\r\n      this.setState({ pressed: false });\r\n    }\r\n  };\r\n\r\n  _handleMouseUp = (e) => {\r\n    if (this.props.onMouseUp) {\r\n      this.props.onMouseUp(e);\r\n    }\r\n\r\n    this._blur();\r\n  };\r\n\r\n  _handleMouseDown = (e) => {\r\n    if (this.props.onMouseDown) {\r\n      this.props.onMouseDown(e);\r\n    }\r\n\r\n    if (!this.props.disabled) {\r\n      this.setState({ pressed: true });\r\n    }\r\n  };\r\n\r\n  _handleTouchStart = (e) => {\r\n    if (this.props.onTouchStart) {\r\n      this.props.onTouchStart(e);\r\n    }\r\n\r\n    if (!this.props.disabled) {\r\n      this.setState({ pressed: true });\r\n    }\r\n  };\r\n\r\n  _handleTouchEnd = (e) => {\r\n    if (this.props.onTouchEnd) {\r\n      this.props.onTouchEnd(e);\r\n    }\r\n\r\n    this._blur();\r\n    captureNextEvent('mouseover');\r\n  };\r\n\r\n  _handleKeyUp = (e) => {\r\n    if (this.props.onKeyUp) {\r\n      this.props.onKeyUp(e);\r\n    }\r\n\r\n\r\n    if ((e.which || e.keyCode) === TAB) {\r\n      window.addEventListener('click', this._blur);\r\n      this.setState({ pressed: true });\r\n    }\r\n  };\r\n\r\n  _handleKeyDown = (e) => {\r\n    if (this.props.onKeyDown) {\r\n      this.props.onKeyDown(e);\r\n    }\r\n\r\n    const key = e.which || e.keyCode;\r\n\r\n    if (key === TAB) {\r\n      window.removeEventListener('click', this._blur);\r\n      this.setState({ pressed: false });\r\n    } else if (key === SPACE || key === ENTER) {\r\n      e.preventDefault();\r\n      e.target.click();\r\n    }\r\n  };\r\n\r\n  _handleMouseOver = (e) => {\r\n    if (this.props.onMouseOver) {\r\n      this.props.onMouseOver(e);\r\n    }\r\n\r\n    if (!this.props.disabled) {\r\n      this.setState({ hover: true });\r\n    }\r\n  };\r\n\r\n  _handleMouseLeave = (e) => {\r\n    if (this.props.onMouseLeave) {\r\n      this.props.onMouseLeave(e);\r\n    }\r\n\r\n    if (!this.props.disabled) {\r\n      this.setState({ hover: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { hover, pressed } = this.state;\r\n    const {\r\n      style,\r\n      className,\r\n      labelStyle,\r\n      labelClassName,\r\n      label,\r\n      primary,\r\n      secondary,\r\n      flat,\r\n      id,\r\n      name,\r\n      iconBefore,\r\n      disabled,\r\n      accept,\r\n      multiple,\r\n      swapTheming,\r\n      allowDuplicates,\r\n\r\n      // Deprecated\r\n      iconChildren,\r\n      iconClassName,\r\n      /* eslint-disable no-unused-vars */\r\n      icon: propIcon,\r\n      onChange,\r\n      onKeyUp,\r\n      onKeyDown,\r\n      onMouseUp,\r\n      onMouseDown,\r\n      onMouseOver,\r\n      onMouseLeave,\r\n      onTouchStart,\r\n      onTouchEnd,\r\n\r\n      // deprecated\r\n      value: propValue,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n    let { icon } = this.props;\r\n    if (iconClassName || iconChildren) {\r\n      icon = <FontIcon iconClassName={iconClassName}>{iconChildren}</FontIcon>;\r\n    }\r\n\r\n    let labelChildren = label;\r\n    if (icon) {\r\n      icon = React.cloneElement(icon, { inherit: true });\r\n      labelChildren = <IconSeparator label={label} iconBefore={iconBefore}>{icon}</IconSeparator>;\r\n    }\r\n\r\n    let value;\r\n    if (allowDuplicates) {\r\n      value = '';\r\n    }\r\n\r\n    return (\r\n      <div\r\n        {...props}\r\n        style={style}\r\n        className={cn('md-inline-block md-file-input-container', className)}\r\n      >\r\n        <AccessibleFakeInkedButton\r\n          component=\"label\"\r\n          htmlFor={id}\r\n          disabled={disabled}\r\n          onTouchStart={this._handleTouchStart}\r\n          onTouchEnd={this._handleTouchEnd}\r\n          onMouseDown={this._handleMouseDown}\r\n          onMouseUp={this._handleMouseUp}\r\n          onKeyDown={this._handleKeyDown}\r\n          onKeyUp={this._handleKeyUp}\r\n          onMouseOver={this._handleMouseOver}\r\n          onMouseLeave={this._handleMouseLeave}\r\n          style={labelStyle}\r\n          className={getBtnStyles({\r\n            flat,\r\n            raised: !flat,\r\n            disabled,\r\n            primary,\r\n            secondary,\r\n            hover,\r\n            swapTheming,\r\n            pressed,\r\n          }, labelClassName)}\r\n        >\r\n          {labelChildren}\r\n        </AccessibleFakeInkedButton>\r\n        <input\r\n          id={id}\r\n          name={name}\r\n          accept={accept}\r\n          type=\"file\"\r\n          multiple={multiple}\r\n          disabled={disabled}\r\n          aria-hidden=\"true\"\r\n          className=\"md-file-input\"\r\n          onChange={this._handleChange}\r\n          value={value}\r\n          tabIndex={-1}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { findDOMNode } from 'react-dom';\r\nimport FileInput from './FileInput';\r\nimport deprecated from 'react-prop-types/lib/deprecated';\r\n\r\nimport omit from '../utils/omit';\r\n\r\n/**\r\n * The `FileUpload` component is used to upload files locally This is a wrapper of the `FileInput` component\r\n * with some additional functionality so any props that are undocumented on `FileUpload` but are present\r\n * on `FileInput` are correctly provided. If you want to upload files to a server, use\r\n * [FormData](https://developer.mozilla.org/en-US/docs/Web/API/FormData)\r\n * by attaching the `File`.\r\n *\r\n * Quick example:\r\n *\r\n * ```js\r\n * function upload(file) {\r\n *   fetch('/api/images', {\r\n *     method: 'POST',\r\n *     body: new FormData().append('file', file),\r\n *   });\r\n * }\r\n * ```\r\n *\r\n * An upload can be aborted by calling the `abort(file || fileName)` function. If\r\n * the file or fileName are omitted, it will *attempt* to abort the current\r\n * file that is uploading. Unreliable for multi-select.\r\n *\r\n * ```js\r\n * <FileUpload ref=\"upload\" />\r\n * <Button raised onClick={() => this.refs.upload.abort()} label=\"Abort! Abort!\" />\r\n * ```\r\n */\r\nexport default class FileUpload extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * An optional style to apply.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the label.\r\n     */\r\n    labelStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the label.\r\n     */\r\n    labelClassName: PropTypes.string,\r\n\r\n    /**\r\n     * Boolean if the `FileInput` should be styled with the primary color.\r\n     */\r\n    primary: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the `FileInput` should be styled with the secondary color.\r\n     */\r\n    secondary: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the `FileInput` should be styled as a flat button instead of a\r\n     * raised button.\r\n     */\r\n    flat: PropTypes.bool,\r\n\r\n    /**\r\n     * This should be a comma separated list of Media Types that the `FileInput` can\r\n     * accept. If this prop is left blank, any file will be accepted.\r\n     *\r\n     * The values can either be:\r\n     * - A file extension\r\n     * - audio/*\r\n     * - video/*\r\n     * - image/*\r\n     * - any valid [IANA Media Type](http://www.iana.org/assignments/media-types/media-types.xhtml)\r\n     */\r\n    accept: PropTypes.string,\r\n\r\n    /**\r\n     * Boolean if multiple files will be accepted.\r\n     */\r\n    multiple: PropTypes.bool,\r\n\r\n    /**\r\n     * A label to display on the `FileInput`.\r\n     */\r\n    label: PropTypes.node,\r\n\r\n    /**\r\n     * The icon children to use for the upload icon.\r\n     */\r\n    iconChildren: PropTypes.node,\r\n\r\n    /**\r\n     * The icon className to use for the upload icon.\r\n     */\r\n    iconClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional max size for the file. If the file is greater than\r\n     * this limit, the file will not be uploaded.\r\n     */\r\n    maxSize: PropTypes.number,\r\n\r\n    /**\r\n     * A required function to call when the `maxSize` prop is set. It will\r\n     * be given a list of files that were too big.\r\n     */\r\n    onSizeError: (props, propName, component, ...others) => {\r\n      if (typeof props.maxSize === 'number') {\r\n        return PropTypes.func.isRequired(props, propName, component, ...others);\r\n      }\r\n\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * You can force the `FileReader` to read the file as a specific type\r\n     * if you do not trust the *amazing* regex I have for choosing the correct\r\n     * one.\r\n     *\r\n     * ```js\r\n     * if(type.match(/image|video|audio/)) {\r\n     *   fr.readAsDataURL(file);\r\n     * } else if(type.match(/application|model|multipart/)) {\r\n     *   fr.readAsArrayBuffer(file);\r\n     * } else {\r\n     *   fr.readAsText(file);\r\n     * }\r\n     * ```\r\n     *\r\n     * > `.yml` and `.js` both are considered `application`, so it definitely fails there.\r\n     *\r\n     * If this prop is a function, you will be given the file's type, the file object, and\r\n     * the file reader. You will then need to call `fileReader.readAsYOUR_CORRECT_TYPE(file)`.\r\n     */\r\n    readAs: PropTypes.oneOfType([\r\n      PropTypes.oneOf(['DataURL', 'ArrayBuffer', 'Text']),\r\n      PropTypes.func,\r\n    ]),\r\n\r\n    /**\r\n     * An optional function to call when the `FileUpload` aborts. The current\r\n     * file and the abort event are given. This might not be the most useful\r\n     * function to use since you will need to manually call abort yourself anyways.\r\n     */\r\n    onAbort: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `FileUpload` errors. The current\r\n     * file, the error, and the error event are given.\r\n     *\r\n     * ```js\r\n     * onError(file, event.target.error, event);\r\n     * ```\r\n     */\r\n    onError: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `FileUpload` loads. The current\r\n     * file, the load result, and the load event are given.\r\n     *\r\n     * ```js\r\n     * onLoad(file, event.target.result, event);\r\n     * ```\r\n     *\r\n     * The load result will either be:\r\n     * - a data URL\r\n     * - a plain text string\r\n     * - an array buffer\r\n     *\r\n     * depending on what type the file is.\r\n     */\r\n    onLoad: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `FileUpload` starts loading. The current\r\n     * file and the load start event are given.\r\n     */\r\n    onLoadStart: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `FileUpload` finishes loading. The\r\n     * current file and the load end event are given.\r\n     */\r\n    onLoadEnd: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `FileUpload` progress. The current\r\n     * file, upload progress, and the progress event are given. The progress\r\n     * will be a number between 0 and 100 that has not been rounded.\r\n     *\r\n     * ```js\r\n     * onProgress(file, progress, event);\r\n     * ```\r\n     */\r\n    onProgress: PropTypes.func,\r\n\r\n    /**\r\n     * Boolean if the same file is allowed to be uploaded multiple times. This will basically make the\r\n     * `value` of the file input always blank.\r\n     */\r\n    allowDuplicates: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional function to call when a file selects or unselects a file.\r\n     * This will be called before any local uploading occurs.\r\n     *\r\n     * ```js\r\n     * onChange(file(s) || null, event);\r\n     * ```\r\n     */\r\n    onChange: PropTypes.func,\r\n    value: deprecated(\r\n      PropTypes.string,\r\n      'There should\\'t be a reason to set the value manually. Check out {@link #allowDuplicates} instead'\r\n    ),\r\n  };\r\n\r\n  state = {};\r\n\r\n  /**\r\n   * Attempts to abort the upload of a file. This function takes an optional `file` or `fileName`\r\n   * as it's parameter. If the parameter is omitted, it attempts to abort the first file that was\r\n   * added. If the `onAbort` function was given, it will be called as well.\r\n   *\r\n   * @param {Object|string} file - The file or the file name to use to find the\r\n   *     correct `FileReader`.\r\n   */\r\n  abort = (file) => {\r\n    let fileName = file;\r\n    if (!file) {\r\n      // Attempt to remove first file added...\r\n      fileName = Object.keys(this.state)[0];\r\n    } else if (typeof file.name === 'string') {\r\n      fileName = file.name;\r\n    }\r\n\r\n    const reader = this.state[fileName];\r\n    if (reader) {\r\n      reader.abort();\r\n      findDOMNode(this).querySelector('.md-file-input').value = '';\r\n\r\n      this.setState(omit(this.state, [fileName]));\r\n    }\r\n  };\r\n\r\n  _uploadFile = (file) => {\r\n    const {\r\n      onAbort,\r\n      onError,\r\n      onLoad,\r\n      onLoadStart,\r\n      onLoadEnd,\r\n      onProgress,\r\n      readAs,\r\n    } = this.props;\r\n\r\n    const { name, type } = file;\r\n\r\n    const fr = new FileReader();\r\n    if (onError) {\r\n      fr.onerror = e => {\r\n        onError(file, e.target.error, e);\r\n      };\r\n    }\r\n\r\n    if (onAbort) {\r\n      fr.onabort = e => {\r\n        onAbort(file, e);\r\n      };\r\n    }\r\n\r\n    if (onLoadStart) {\r\n      fr.onloadstart = e => {\r\n        onLoadStart(file, e);\r\n      };\r\n    }\r\n\r\n    if (onLoadEnd) {\r\n      fr.onloadend = e => {\r\n        onLoadEnd(file, e);\r\n      };\r\n    }\r\n\r\n    fr.onload = e => {\r\n      if (onLoad) {\r\n        onLoad(file, e.target.result, e);\r\n      }\r\n\r\n      this.setState(omit(this.state, [name]));\r\n    };\r\n\r\n    if (onProgress) {\r\n      fr.onprogress = e => {\r\n        if (e.lengthComputable) {\r\n          onProgress(file, (e.loaded / e.total) * 100, e);\r\n        }\r\n      };\r\n    }\r\n\r\n    if (readAs) {\r\n      if (typeof readAs === 'function') {\r\n        readAs(type, file, fr);\r\n      } else {\r\n        fr[`readAs${readAs}`](file);\r\n      }\r\n    } else if (type.match(/image|video|audio|application\\/pdf/) || name.match(/\\.mkv$/)) {\r\n      fr.readAsDataURL(file);\r\n    } else if (type.match(/application\\/json/)) {\r\n      fr.readAsText(file);\r\n    } else if (type.match(/application|model|multipart/) || name.match(/(w|e)ar$/)) {\r\n      fr.readAsArrayBuffer(file);\r\n    } else {\r\n      fr.readAsText(file);\r\n    }\r\n\r\n    return fr;\r\n  };\r\n\r\n  _handleUpload = (fileList, e) => {\r\n    if (this.props.onChange) {\r\n      this.props.onChange(fileList, e);\r\n    }\r\n\r\n    if (!fileList) { return; }\r\n    const { maxSize, onSizeError } = this.props;\r\n    let files = Array.isArray(fileList) ? fileList : [fileList];\r\n\r\n    let errorFiles = [];\r\n    if (maxSize) {\r\n      errorFiles = files.filter(file => file.size > maxSize);\r\n      files = files.filter(file => file.size <= maxSize);\r\n    }\r\n\r\n    if (errorFiles.length) {\r\n      onSizeError(errorFiles);\r\n    }\r\n\r\n    if (!files.length) {\r\n      return;\r\n    }\r\n\r\n    const nextState = {};\r\n    files.forEach(file => {\r\n      const fileReader = this._uploadFile(file);\r\n      nextState[file.name] = fileReader;\r\n    });\r\n\r\n    this.setState(nextState);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      /* eslint-disable no-unused-vars */\r\n      maxSize,\r\n      readAs,\r\n      onLoad,\r\n      onLoadStart,\r\n      onLoadEnd,\r\n      onProgress,\r\n      onAbort,\r\n      onError,\r\n      onSizeError,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n\r\n    return <FileInput {...props} onChange={this._handleUpload} />;\r\n  }\r\n}\r\n","/** @module utils/bem */\r\nimport cn from 'classnames';\r\n\r\n/**\r\n * A utility function to apply BEM class names to an element.\r\n *\r\n * ### Examples:\r\n * ```js\r\n * bem('class') === 'class'\r\n * bem('block', 'element') === 'block__element'\r\n * bem('block', 'element', 'sub-element') === 'block__element__sub-element'\r\n * bem('block', { 'mod-1': true, 'mod-2': false }) === 'block block--mod-1'\r\n * bem('block', 'element', { 'mod-1': false, 'mod-2': true }) === 'block__element block__element--mod-2'\r\n * bem('block', 'element', {\r\n *   'mod-1': false,\r\n *   'mod-2': true,\r\n * }, 'other', 'class-names') === 'block__element block__element--mod-2 other class-names'\r\n * ```\r\n *\r\n * @param {...String} blocks - 1 to many blocks to use. These names will be joined\r\n *    with underscores.\r\n * @param {Object=} modifiers - Any conditional modifiers to apply to the blocks. Each\r\n *    key in this object will be applied as a `--suffix` to the blocks ONLY when\r\n *    their value is true-ish.\r\n * @param {...String} others - Any additional class names to apply.\r\n * @return {String} the bem-formatted className string.\r\n */\r\nexport default function bem(...args) {\r\n  const base = [];\r\n  let modifiers = null;\r\n  let remaining = -1;\r\n  args.some((arg, i) => {\r\n    if (arg) {\r\n      const type = typeof arg;\r\n      if (type === 'number' || type === 'string') {\r\n        base.push(arg);\r\n      } else if (type === 'object') {\r\n        modifiers = arg;\r\n        remaining = i + 1;\r\n      }\r\n    }\r\n    return modifiers;\r\n  });\r\n\r\n  const element = base.join('__');\r\n  if (modifiers) {\r\n    modifiers = Object.keys(modifiers).reduce((obj, key) => {\r\n      obj[`${element}--${key}`] = modifiers[key];\r\n      return obj;\r\n    }, {});\r\n  }\r\n  const classes = remaining > -1 ? args.slice(remaining) : null;\r\n  return cn(element, modifiers, classes).trim();\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport bem from '../utils/bem';\r\nimport isValued from '../utils/isValued';\r\n\r\nconst DIFF_KEYS = [\r\n  'className',\r\n  'stacked',\r\n  'container',\r\n  'noSpacing',\r\n  'gutter',\r\n  'spacing',\r\n];\r\n\r\nexport default class Grid extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * An optional style to apply to the Grid component. This will only be applied\r\n     * if the `children` prop is not a callback function.\r\n     *\r\n     * @see {@link #children}\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the Grid component. This will only be applied\r\n     * if the `children` prop is not a callback function.\r\n     *\r\n     * @see {@link #children}\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * The component to render the Grid as. This should probably not be used as much\r\n     * as the `children` callback function.\r\n     */\r\n    component: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.func,\r\n    ]),\r\n\r\n    /**\r\n     * The children can either be renderable React elements or a callback function\r\n     * that accepts the style and className props to apply so that the styles can\r\n     * be manually added to whichever component.\r\n     */\r\n    children: PropTypes.oneOfType([\r\n      PropTypes.func,\r\n      PropTypes.node,\r\n    ]),\r\n\r\n    /**\r\n     * An optional container name to apply to the Grid. This should be the same name as provided\r\n     * to the [react-md-make-grid-container](/components/grids?tab=2#mixin-react-md-make-grid-container) mixin.\r\n     */\r\n    container: PropTypes.string,\r\n\r\n    /**\r\n     * Boolean if the grid should be placed vertically instead of horizontally.\r\n     */\r\n    stacked: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if all the gutters and spacing should be removed from the grid.\r\n     */\r\n    noSpacing: PropTypes.bool,\r\n\r\n    /**\r\n     * When the [react-md-make-custom-grid](/components/grids?tab=2#mixin-react-md-make-custom-grid) mixin\r\n     * is used, you can use the `gutter` and `spacing` props on the `Grid` to apply the correct className\r\n     */\r\n    gutter: PropTypes.number,\r\n\r\n    /**\r\n     * When the [react-md-make-custom-grid](/components/grids?tab=2#mixin-react-md-make-custom-grid) mixin\r\n     * is used, you can use the `gutter` and `spacing` props on the `Grid` to apply the correct className\r\n     */\r\n    spacing: PropTypes.number,\r\n  };\r\n\r\n  static defaultProps = {\r\n    component: 'div',\r\n    stacked: false,\r\n    noSpacing: false,\r\n  };\r\n\r\n  /**\r\n   * A utility function to get the grid's className based on the Grid's props. This is\r\n   * used behind the scenes to merge and create the className for the grid.\r\n   *\r\n   * ### Example:\r\n   * ```js\r\n   * <div className={Grid.getClassName()}>A base grid</div>\r\n   * <div className={Grid.getClassName({ stacked: true })}>A stacked Grid</div>\r\n   * ```\r\n   *\r\n   * @param {Object=} props - This should be an object of the `Grid`'s props. It\r\n   *    will extract the needed keys and generate the className.\r\n   * @return {String} the full className to use for the grid\r\n   */\r\n  static getClassName(props = {}) {\r\n    const { className, stacked, noSpacing, gutter, spacing, container } = props;\r\n    return bem('md-grid', {\r\n      'stacked': stacked,\r\n      'no-spacing': noSpacing,\r\n      [`${gutter}-${spacing}`]: isValued(gutter) && isValued(spacing),\r\n      [container]: container,\r\n    }, className);\r\n  }\r\n\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.state = { className: Grid.getClassName(props) };\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.setState({ className: Grid.getClassName(this.props) });\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (DIFF_KEYS.some(key => this.props[key] !== nextProps[key])) {\r\n      this.setState({ className: Grid.getClassName(nextProps) });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { className } = this.state;\r\n    const {\r\n      style,\r\n      component: Component,\r\n      children,\r\n      /* eslint-disable no-unused-vars */\r\n      className: propClassName,\r\n      container,\r\n      stacked,\r\n      noSpacing,\r\n      gutter,\r\n      spacing,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n\r\n    if (typeof children === 'function') {\r\n      return children({ style, className });\r\n    }\r\n\r\n    return <Component {...props} style={style} className={className}>{children}</Component>;\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport bem from '../utils/bem';\r\n\r\nconst DIFF_KEYS = [\r\n  'className',\r\n  'align',\r\n  'position',\r\n  'size',\r\n  'offset',\r\n  'order',\r\n  'phoneSize',\r\n  'phoneOrder',\r\n  'phoneOffset',\r\n  'phoneHidden',\r\n  'tabletSize',\r\n  'tabletOrder',\r\n  'tabletOffset',\r\n  'tabletHidden',\r\n  'desktopSize',\r\n  'desktopOrder',\r\n  'desktopOffset',\r\n  'desktopHidden',\r\n];\r\n\r\nexport default class Cell extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * An optional style to apply to the Cell component. This will only be applied\r\n     * if the `children` prop is not a callback function.\r\n     *\r\n     * @see {@link #children}\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the Cell component. This will only be applied\r\n     * if the `children` prop is not a callback function.\r\n     *\r\n     * @see {@link #children}\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * The component to render the Cell as. This should probably not be used as much\r\n     * as the `children` callback function.\r\n     */\r\n    component: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.func,\r\n    ]),\r\n\r\n    /**\r\n     * The children can either be renderable React elements or a callback function\r\n     * that accepts the style and className props to apply so that the styles can\r\n     * be manually added to whichever component.\r\n     */\r\n    children: PropTypes.oneOfType([\r\n      PropTypes.func,\r\n      PropTypes.node,\r\n    ]),\r\n\r\n    /**\r\n     * An optional cell alignment to apply. When the `Grid` is not `stacked`,\r\n     * this will apply to vertical alignment within each \"row\" of the grid.\r\n     *\r\n     * Alignments:\r\n     * - `top` - This will align to the top of the row\r\n     * - `middle` - This will align to the middle of the row\r\n     * - `bottom` - This will align to the bottom of the row\r\n     * - `stretch` - This will make the cell stretch to fill all the available space\r\n     *   in the row.\r\n     *\r\n     * @see {@link #position}\r\n     */\r\n    align: PropTypes.oneOf(['top', 'middle', 'bottom', 'stretch']),\r\n\r\n    /**\r\n     * An optional cell position to apply. When the `Grid` is not `stacked`,\r\n     * this will apply to horizontal alignment within each \"row\" of the grid.\r\n     *\r\n     * Positions:\r\n     * - `center` - This will align the cell to be within the center of the row. This really\r\n     *    just applies `margin-left: auto; margin-right: auto`.\r\n     * - `right` - This will align the cell to the end of the row. This really just applies `margin-left: auto`.\r\n     *\r\n     * @see {@link #align}\r\n     */\r\n    position: PropTypes.oneOf(['center', 'right']),\r\n\r\n    /**\r\n     * An optional size to apply to the cell. This sizing will be applied across all media sizes.\r\n     * If the size is greater than the number of columns allowed for the media size, it will just\r\n     * span the entire width.\r\n     */\r\n    size: PropTypes.number,\r\n\r\n    /**\r\n     * An optional order to apply to the cell. This order will be applied across all media sizes.\r\n     */\r\n    order: PropTypes.number,\r\n\r\n    /**\r\n     * An optional offset to apply to the cell. This will add spacing to the left of the cell.\r\n     */\r\n    offset: PropTypes.number,\r\n\r\n    /**\r\n     * An optional size to apply to the cell only on phones.\r\n     */\r\n    phoneSize: PropTypes.number,\r\n\r\n    /**\r\n     * An optional order to apply to the cell only on phones.\r\n     */\r\n    phoneOrder: PropTypes.number,\r\n\r\n    /**\r\n     * An optional offset to apply to the cell only on phones.\r\n     */\r\n    phoneOffset: PropTypes.number,\r\n\r\n    /**\r\n     * Boolean if the cell should be hidden on phones only.\r\n     */\r\n    phoneHidden: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional size to apply to the cell only on tablets.\r\n     */\r\n    tabletSize: PropTypes.number,\r\n\r\n    /**\r\n     * An optional order to apply to the cell only on tablets.\r\n     */\r\n    tabletOrder: PropTypes.number,\r\n\r\n    /**\r\n     * An optional offset to apply to the cell only on tablets.\r\n     */\r\n    tabletOffset: PropTypes.number,\r\n\r\n    /**\r\n     * Boolean if the cell should be hidden on tablets only.\r\n     */\r\n    tabletHidden: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional size to apply to the cell only on desktops.\r\n     */\r\n    desktopSize: PropTypes.number,\r\n\r\n    /**\r\n     * An optional order to apply to the cell only on desktops.\r\n     */\r\n    desktopOrder: PropTypes.number,\r\n\r\n    /**\r\n     * An optional offset to apply to the cell only on desktops.\r\n     */\r\n    desktopOffset: PropTypes.number,\r\n\r\n    /**\r\n     * Boolean if the cell should be hidden on desktops only.\r\n     */\r\n    desktopHidden: PropTypes.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    component: 'div',\r\n    phoneHidden: false,\r\n    tabletHidden: false,\r\n    desktopHidden: false,\r\n  };\r\n\r\n  /**\r\n   * A utility function to get the cell's className based on the Cell's props. This is\r\n   * used behind the scenes to merge and create the className for the cell.\r\n   *\r\n   * ### Example:\r\n   * ```js\r\n   * <div className={Cell.getClassName()}>A simple cell</div>\r\n   * <div className={Cell.getClassName({ size: 1 })}>A cell with size 1</div>\r\n   * ```\r\n   *\r\n   * @param {Object=} props - This should be an object of the `Cell`'s props. It\r\n   *    will extract the needed keys and generate the className.\r\n   * @return {String} the full className to use for the cell\r\n   */\r\n  static getClassName(props = {}) {\r\n    const {\r\n      className,\r\n      align,\r\n      position,\r\n      size,\r\n      order,\r\n      offset,\r\n      phoneSize,\r\n      phoneOrder,\r\n      phoneOffset,\r\n      phoneHidden,\r\n      tabletSize,\r\n      tabletOrder,\r\n      tabletOffset,\r\n      tabletHidden,\r\n      desktopSize,\r\n      desktopOrder,\r\n      desktopOffset,\r\n      desktopHidden,\r\n    } = props;\r\n\r\n    return bem('md-cell', {\r\n      [align]: align,\r\n      [position]: position,\r\n      [size]: size,\r\n      [`order-${order}`]: order,\r\n      [`${offset}-offset`]: offset,\r\n      [`${phoneSize}-phone`]: phoneSize,\r\n      [`order-${phoneOrder}-phone`]: phoneOrder,\r\n      [`${phoneOffset}-phone-offset`]: phoneOffset,\r\n      'phone-hidden': phoneHidden,\r\n      [`${tabletSize}-tablet`]: tabletSize,\r\n      [`order-${tabletOrder}-tablet`]: tabletOrder,\r\n      [`${tabletOffset}-tablet-offset`]: tabletOffset,\r\n      'tablet-hidden': tabletHidden,\r\n      [`${desktopSize}-desktop`]: desktopSize,\r\n      [`order-${desktopOrder}-desktop`]: desktopOrder,\r\n      [`${desktopOffset}-desktop-offset`]: desktopOffset,\r\n      'desktop-hidden': desktopHidden,\r\n    }, className);\r\n  }\r\n\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.state = { className: Cell.getClassName(props) };\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.setState({ className: Cell.getClassName(this.props) });\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (DIFF_KEYS.some(key => this.props[key] !== nextProps[key])) {\r\n      this.setState({ className: Cell.getClassName(nextProps) });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { className } = this.state;\r\n    const {\r\n      style,\r\n      component: Component,\r\n      children,\r\n      /* eslint-disable no-unused-vars */\r\n      className: propClassName,\r\n      align,\r\n      position,\r\n      size,\r\n      offset,\r\n      order,\r\n      phoneSize,\r\n      phoneOrder,\r\n      phoneOffset,\r\n      phoneHidden,\r\n      tabletSize,\r\n      tabletOrder,\r\n      tabletOffset,\r\n      tabletHidden,\r\n      desktopSize,\r\n      desktopOrder,\r\n      desktopOffset,\r\n      desktopHidden,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n\r\n    if (typeof children === 'function') {\r\n      return children({ style, className });\r\n    }\r\n\r\n    return <Component {...props} style={style} className={className}>{children}</Component>;\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport cn from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Grid from './Grid';\r\nimport Cell from './Cell';\r\n\r\nconst DIFF_KEYS = [\r\n  'className',\r\n  'cellClassName',\r\n  'stacked',\r\n  'container',\r\n  'noSpacing',\r\n  'gutter',\r\n  'spacing',\r\n  'align',\r\n  'position',\r\n  'size',\r\n  'offset',\r\n  'order',\r\n  'phoneSize',\r\n  'phoneOrder',\r\n  'phoneOffset',\r\n  'phoneHidden',\r\n  'tabletSize',\r\n  'tabletOrder',\r\n  'tabletOffset',\r\n  'tabletHidden',\r\n  'desktopSize',\r\n  'desktopOrder',\r\n  'desktopOffset',\r\n  'desktopHidden',\r\n];\r\n\r\nexport default class GridList extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * An optional style to apply to the Grid component. This will only be applied\r\n     * if the `children` prop is not a callback function.\r\n     *\r\n     * @see {@link #children}\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the Grid component. This will only be applied\r\n     * if the `children` prop is not a callback function.\r\n     *\r\n     * @see {@link #children}\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to each child. This will only be applied\r\n     * if the `children` prop is not a callback function.\r\n     *\r\n     * @see {@link #children}\r\n     */\r\n    cellStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to each child. This will only be applied\r\n     * if the `children` prop is not a callback function.\r\n     *\r\n     * @see {@link #children}\r\n     */\r\n    cellClassName: PropTypes.string,\r\n\r\n    /**\r\n     * The component to render the Cell as. This should probably not be used as much\r\n     * as the `children` callback function.\r\n     */\r\n    component: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.func,\r\n    ]),\r\n\r\n    /**\r\n     * The children can either be renderable React elements or a callback function\r\n     * that accepts the style and className props to apply so that the styles can\r\n     * be manually added to whichever component.\r\n     */\r\n    children: PropTypes.oneOfType([\r\n      PropTypes.func,\r\n      PropTypes.node,\r\n    ]),\r\n\r\n    /**\r\n     * An optional container name to apply to the Grid. This should be the same name as provided\r\n     * to the [react-md-make-grid-container](/components/grids?tab=2#mixin-react-md-make-grid-container) mixin.\r\n     */\r\n    container: PropTypes.string,\r\n\r\n    /**\r\n     * Boolean if the grid should be placed vertically instead of horizontally.\r\n     */\r\n    stacked: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if all the gutters and spacing should be removed from the grid.\r\n     */\r\n    noSpacing: PropTypes.bool,\r\n\r\n    /**\r\n     * When the [react-md-make-custom-grid](/components/grids?tab=2#mixin-react-md-make-custom-grid) mixin\r\n     * is used, you can use the `gutter` and `spacing` props on the `Grid` to apply the correct className\r\n     */\r\n    gutter: PropTypes.number,\r\n\r\n    /**\r\n     * When the [react-md-make-custom-grid](/components/grids?tab=2#mixin-react-md-make-custom-grid) mixin\r\n     * is used, you can use the `gutter` and `spacing` props on the `Grid` to apply the correct className\r\n     */\r\n    spacing: PropTypes.number,\r\n\r\n    /**\r\n     * An optional cell alignment to apply. When the `Grid` is not `stacked`,\r\n     * this will apply to vertical alignment within each \"row\" of the grid.\r\n     *\r\n     * Alignments:\r\n     * - `top` - This will align to the top of the row\r\n     * - `middle` - This will align to the middle of the row\r\n     * - `bottom` - This will align to the bottom of the row\r\n     * - `stretch` - This will make the cell stretch to fill all the available space\r\n     *   in the row.\r\n     *\r\n     * @see {@link #position}\r\n     */\r\n    align: PropTypes.oneOf(['top', 'middle', 'bottom', 'stretch']),\r\n\r\n    /**\r\n     * An optional cell position to apply. When the `Grid` is not `stacked`,\r\n     * this will apply to horizontal alignment within each \"row\" of the grid.\r\n     *\r\n     * Positions:\r\n     * - `center` - This will align the cell to be within the center of the row. This really\r\n     *    just applies `margin-left: auto; margin-right: auto`.\r\n     * - `right` - This will align the cell to the end of the row. This really just applies `margin-left: auto`.\r\n     *\r\n     * @see {@link #align}\r\n     */\r\n    position: PropTypes.oneOf(['center', 'right']),\r\n\r\n    /**\r\n     * An optional size to apply to the cell. This sizing will be applied across all media sizes.\r\n     * If the size is greater than the number of columns allowed for the media size, it will just\r\n     * span the entire width.\r\n     */\r\n    size: PropTypes.number,\r\n\r\n    /**\r\n     * An optional order to apply to the cell. This order will be applied across all media sizes.\r\n     */\r\n    order: PropTypes.number,\r\n\r\n    /**\r\n     * An optional offset to apply to the cell. This will add spacing to the left of the cell.\r\n     */\r\n    offset: PropTypes.number,\r\n\r\n    /**\r\n     * An optional size to apply to the cell only on phones.\r\n     */\r\n    phoneSize: PropTypes.number,\r\n\r\n    /**\r\n     * An optional order to apply to the cell only on phones.\r\n     */\r\n    phoneOrder: PropTypes.number,\r\n\r\n    /**\r\n     * An optional offset to apply to the cell only on phones.\r\n     */\r\n    phoneOffset: PropTypes.number,\r\n\r\n    /**\r\n     * Boolean if the cell should be hidden on phones only.\r\n     */\r\n    phoneHidden: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional size to apply to the cell only on tablets.\r\n     */\r\n    tabletSize: PropTypes.number,\r\n\r\n    /**\r\n     * An optional order to apply to the cell only on tablets.\r\n     */\r\n    tabletOrder: PropTypes.number,\r\n\r\n    /**\r\n     * An optional offset to apply to the cell only on tablets.\r\n     */\r\n    tabletOffset: PropTypes.number,\r\n\r\n    /**\r\n     * Boolean if the cell should be hidden on tablets only.\r\n     */\r\n    tabletHidden: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional size to apply to the cell only on desktops.\r\n     */\r\n    desktopSize: PropTypes.number,\r\n\r\n    /**\r\n     * An optional order to apply to the cell only on desktops.\r\n     */\r\n    desktopOrder: PropTypes.number,\r\n\r\n    /**\r\n     * An optional offset to apply to the cell only on desktops.\r\n     */\r\n    desktopOffset: PropTypes.number,\r\n\r\n    /**\r\n     * Boolean if the cell should be hidden on desktops only.\r\n     */\r\n    desktopHidden: PropTypes.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    component: 'div',\r\n    stacked: false,\r\n    noSpacing: false,\r\n    phoneHidden: false,\r\n    tabletHidden: false,\r\n    desktopHidden: false,\r\n  };\r\n\r\n  /**\r\n   * A utility function to get the grid's className based on the `Grid`'s and `Cell`'s\r\n   * props. This is * used behind the scenes to merge and create the className for the grid.\r\n   *\r\n   * ### Example:\r\n   * ```js\r\n   * const { className, cellClassName } = GridList.getClassNames();\r\n   * const { className, cellClassName } = GridList.getClassNames({ size: 1, container: 'custom' });\r\n   * ```\r\n   *\r\n   * @param {Object=} props - This should be an object of the `Grid`'s props. It\r\n   *    will extract the needed keys and generate the classNames.\r\n   * @return {Object} an object containing the `className` and `cellClassName` attributes.\r\n   */\r\n  static getClassNames(props = {}) {\r\n    const { className, cellClassName, ...remaining } = props;\r\n    return {\r\n      className: Grid.getClassName({ className, ...remaining }),\r\n      cellClassName: Cell.getClassName({ className: cellClassName, ...remaining }),\r\n    };\r\n  }\r\n\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.state = GridList.getClassNames(props);\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.setState(GridList.getClassNames(this.props));\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (DIFF_KEYS.some(key => this.props[key] !== nextProps[key])) {\r\n      this.setState(GridList.getClassNames(nextProps));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { className, cellClassName } = this.state;\r\n    const {\r\n      style,\r\n      cellStyle,\r\n      component: Component,\r\n      children,\r\n      /* eslint-disable no-unused-vars */\r\n      className: propClassName,\r\n      cellClassName: propCellClassName,\r\n      container,\r\n      noSpacing,\r\n      stacked,\r\n      gutter,\r\n      spacing,\r\n      align,\r\n      position,\r\n      size,\r\n      offset,\r\n      order,\r\n      phoneSize,\r\n      phoneOrder,\r\n      phoneOffset,\r\n      phoneHidden,\r\n      tabletSize,\r\n      tabletOrder,\r\n      tabletOffset,\r\n      tabletHidden,\r\n      desktopSize,\r\n      desktopOrder,\r\n      desktopOffset,\r\n      desktopHidden,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n\r\n    if (typeof children === 'function') {\r\n      return children({ style, className, cellStyle, cellClassName });\r\n    }\r\n\r\n    return (\r\n      <Component {...props} style={style} className={className}>\r\n        {React.Children.map(children, (child) => {\r\n          if (!child) {\r\n            return child;\r\n          }\r\n\r\n          let childStyle = child.props.style;\r\n          if (cellStyle) {\r\n            childStyle = childStyle ? { ...cellStyle, ...childStyle } : cellStyle;\r\n          }\r\n\r\n          return React.cloneElement(child, {\r\n            style: childStyle,\r\n            className: cn(child.props.className, cellClassName),\r\n          });\r\n        })}\r\n      </Component>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent, Children, cloneElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport themeColors from '../utils/themeColors';\r\nimport ListItemText from './ListItemText';\r\nimport TileAddon from './TileAddon';\r\n\r\nexport default class ListItemControl extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * An optional style to apply to the `.md-list-item`.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the `.md-list-item`.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the `.md-list-tile`.\r\n     */\r\n    tileStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the `.md-list-tile`.\r\n     */\r\n    tileClassName: PropTypes.string,\r\n\r\n    /**\r\n     * The primary text to display in the `ListItemControl`. The `primaryAction` or\r\n     * `secondaryAction` will end up getting the `label` prop injected into it with\r\n     * a combination of the `primaryText` and `secondaryText`. If the `primaryAction`\r\n     * or `secondaryAction` already have a label prop, the `label` prop will be used\r\n     * as the `primaryText`.\r\n     */\r\n    primaryText: PropTypes.node,\r\n\r\n    /**\r\n     * An optional secondary text that can be displayed in the label of the `primaryAction`\r\n     * or `secondaryAction`.\r\n     */\r\n    secondaryText: PropTypes.node,\r\n\r\n    /**\r\n     * Boolean if the primary and secondary text will span three lines.\r\n     */\r\n    threeLines: PropTypes.bool,\r\n\r\n    /**\r\n     * The primary action of the `ListItemControl`. This _should_ normally\r\n     * be a type of `SelectionControl`\r\n     */\r\n    primaryAction: PropTypes.element,\r\n\r\n    /**\r\n     * The secondary action of the `ListItemControl`. This _should_ normally\r\n     * be a type of `SelectionControl`. If it is a selection control,\r\n     * make sure to add the `labelBefore` prop to get correct positioning.\r\n     */\r\n    secondaryAction: PropTypes.element,\r\n\r\n    /**\r\n     * An optional `FontIcon` to display to the left of the action.\r\n     */\r\n    leftIcon: PropTypes.node,\r\n\r\n    /**\r\n     * An optional `Avatar` to display to the left of the action.\r\n     */\r\n    leftAvatar: PropTypes.node,\r\n\r\n    /**\r\n     * An optional `FontIcon` to display to the right of the action.\r\n     */\r\n    rightIcon: PropTypes.node,\r\n\r\n    /**\r\n     * An optional `FontIcon` to display to the right of the action.\r\n     */\r\n    rightAvatar: PropTypes.node,\r\n\r\n    /**\r\n     * Defines the number of items in the list. This is only required when all items in the\r\n     * list are not present in the DOM.\r\n     *\r\n     * @see https://www.w3.org/TR/wai-aria/states_and_properties#aria-setsize\r\n     */\r\n    'aria-setsize': PropTypes.number,\r\n\r\n    /**\r\n     * Defines the items position in the list. This is only required when all items in the list\r\n     * are not present in the DOM. The custom validation just requires this prop if the `aria-setsize`\r\n     * prop is defined as a helpful reminder.\r\n     *\r\n     * @see https://www.w3.org/TR/wai-aria/states_and_properties#aria-posinset\r\n     */\r\n    'aria-posinset': (props, propName, ...args) => {\r\n      let validator = PropTypes.number;\r\n      if (typeof props['aria-setsize'] !== 'undefined') {\r\n        validator = validator.isRequired;\r\n      }\r\n\r\n      return validator(props, propName, ...args);\r\n    },\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      className,\r\n      tileStyle,\r\n      tileClassName,\r\n      primaryAction,\r\n      secondaryAction,\r\n      primaryText,\r\n      secondaryText,\r\n      threeLines,\r\n      leftIcon,\r\n      leftAvatar,\r\n      rightIcon,\r\n      rightAvatar,\r\n      ...props\r\n    } = this.props;\r\n\r\n    let control = Children.only(primaryAction || secondaryAction);\r\n    const text = (\r\n      <ListItemText\r\n        key=\"text\"\r\n        primaryText={control.props.label || primaryText}\r\n        secondaryText={secondaryText}\r\n        className={cn({\r\n          'md-tile-content--left-icon': leftIcon,\r\n          'md-tile-content--left-avatar': leftAvatar,\r\n          'md-tile-content--left-button': primaryAction,\r\n          'md-tile-content--right-padding': primaryAction,\r\n        })}\r\n      />\r\n    );\r\n    control = cloneElement(control, {\r\n      className: cn('md-list-control', {\r\n        'md-list-control--right': secondaryAction,\r\n      }, control.props.className),\r\n      label: text,\r\n    });\r\n\r\n    const leftNode = (\r\n      <TileAddon\r\n        key=\"left-addon\"\r\n        icon={leftIcon}\r\n        avatar={leftAvatar}\r\n      />\r\n    );\r\n\r\n    const rightNode = (\r\n      <TileAddon\r\n        key=\"right-addon\"\r\n        icon={rightIcon}\r\n        avatar={rightAvatar}\r\n      />\r\n    );\r\n\r\n    const icond = !!leftIcon || !!rightIcon;\r\n    const avatard = !!leftAvatar || !!rightAvatar;\r\n\r\n    return (\r\n      <li {...props} className={cn('md-list-item', className)}>\r\n        <div\r\n          style={tileStyle}\r\n          className={cn('md-list-tile', {\r\n            'md-list-tile--icon': !secondaryText && icond && !avatard,\r\n            'md-list-tile--avatar': !secondaryText && avatard,\r\n            'md-list-tile--two-lines': secondaryText && !threeLines,\r\n            'md-list-tile--three-lines': secondaryText && threeLines,\r\n            'md-list-tile--control-left': primaryAction,\r\n            'md-list-tile--control-right': secondaryAction,\r\n          }, themeColors({ text: true }), tileClassName)}\r\n        >\r\n          {leftNode}\r\n          {control}\r\n          {rightNode}\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nfunction validateAspectRatio(props, propName, component, ...args) {\r\n  const value = props[propName];\r\n  let err = PropTypes.string.isRequired(props, propName, component, ...args);\r\n  if (!err && value.split('-').length !== 2) {\r\n    err = new Error(\r\n      `Your provided an \\`${propName}\\` prop to the ${component} that is not a valid ` +\r\n      `aspect ratio \\`${value}\\`. This should be in the form of '{width}-{height}'.`\r\n    );\r\n  }\r\n\r\n  return err;\r\n}\r\n\r\n/**\r\n * The `Media` component is used to display images, iframes, ...media. Who'da thunk?\r\n */\r\nexport default class Media extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * An optional className to apply to the card media component.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * Any media to display.\r\n     */\r\n    children: PropTypes.node,\r\n\r\n    /**\r\n     * Boolean if the aspect ratio should be forced.\r\n     */\r\n    forceAspect: PropTypes.bool,\r\n\r\n    /**\r\n     * The aspect ratio to use.\r\n     */\r\n    aspectRatio: validateAspectRatio,\r\n\r\n    /**\r\n     * Boolean if this component should be expandable when there is a `CardExpander`\r\n     * above it in the `Card`.\r\n     */\r\n    expandable: PropTypes.bool,\r\n\r\n    /**\r\n     * The component to render the card media as.\r\n     */\r\n    component: PropTypes.oneOfType([\r\n      PropTypes.func,\r\n      PropTypes.string,\r\n    ]).isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    forceAspect: true,\r\n    aspectRatio: '16-9',\r\n    component: 'section',\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      component: Component,\r\n      className,\r\n      children,\r\n      forceAspect,\r\n      aspectRatio,\r\n      expandable, // eslint-disable-line no-unused-vars\r\n      ...props\r\n    } = this.props;\r\n\r\n    return (\r\n      <Component\r\n        {...props}\r\n        className={cn('md-media', {\r\n          [`md-media--${aspectRatio}`]: forceAspect,\r\n        }, className)}\r\n      >\r\n        {children}\r\n      </Component>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\n/**\r\n * The `MediaOverlay` component is just a very simple wrapper that adds the\r\n * `.md-media-overlay` class name to a div. The overlay will be positioned\r\n * at the bottom of the `Media` by default.\r\n */\r\nexport default class MediaOverlay extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * An optional style to apply to the overlay.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the overlay.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * Any children to display in the overlay. This is _normally_ a `CardTitle` component\r\n     * or some buttons.\r\n     */\r\n    children: PropTypes.node,\r\n\r\n    /**\r\n     * The component to be rendered as.\r\n     */\r\n    component: PropTypes.oneOfType([\r\n      PropTypes.func,\r\n      PropTypes.string,\r\n    ]).isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    component: 'div',\r\n  };\r\n\r\n  render() {\r\n    const { className, component: Component, ...props } = this.props;\r\n    return <Component className={cn('md-media-overlay', className)} {...props} />;\r\n  }\r\n}\r\n","import React, { PureComponent, Children, isValidElement, cloneElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nexport default class ToolbarTitle extends PureComponent {\r\n  static propTypes = {\r\n    className: PropTypes.string,\r\n    prominent: PropTypes.bool,\r\n    offset: PropTypes.bool,\r\n    title: PropTypes.node,\r\n  };\r\n\r\n  render() {\r\n    const { title, className, prominent, offset, ...props } = this.props;\r\n    if (!title) {\r\n      return null;\r\n    }\r\n\r\n    const fullClassName = cn('md-title md-title--toolbar', {\r\n      'md-title--toolbar-prominent': prominent,\r\n      'md-title--toolbar-offset': offset,\r\n    }, className);\r\n\r\n    if (isValidElement(title)) {\r\n      const titleEl = Children.only(title);\r\n      return cloneElement(title, {\r\n        ...props,\r\n        id: titleEl.props.id || props.id,\r\n        className: cn(fullClassName, titleEl.props.className),\r\n      });\r\n    }\r\n\r\n    return (\r\n      <h2\r\n        {...props}\r\n        className={fullClassName}\r\n      >\r\n        {title}\r\n      </h2>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent, Children, cloneElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport deprecated from 'react-prop-types/lib/deprecated';\r\n\r\nimport invalidIf from '../utils/PropTypes/invalidIf';\r\nimport between from '../utils/PropTypes/between';\r\nimport Paper from '../Papers/Paper';\r\nimport ToolbarTitle from './ToolbarTitle';\r\n\r\nexport default class Toolbar extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * An optional id to provide to the toolbar. If this is specified and the `titleId` is not, the title\r\n     * will gain an id of `${id}-title`. This will not be applied to the `titleMenu`.\r\n     *\r\n     * @see {@link #titleId}\r\n     */\r\n    id: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * An optional style to apply to the toolbar.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the toolbar,\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /*\r\n     * An optional style to apply to the `h2` surrounding the `title` prop.\r\n     */\r\n    titleStyle: PropTypes.object,\r\n\r\n    /*\r\n     * An optional className to apply to the `h2` surrounding the `title` prop.\r\n     */\r\n    titleClassName: PropTypes.string,\r\n\r\n    /**\r\n     * Boolean if the toolbar should more prominent. This will double the height of the toolbar.\r\n     */\r\n    prominent: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the toolbar's title should be more prominent. This will move the title to the\r\n     * second line of the toolbar. This only works when the `prominent` prop is true as well.\r\n     */\r\n    prominentTitle: PropTypes.bool,\r\n\r\n    /**\r\n     * The current title of the page to show in the toolbar. It is invalid to specify both a\r\n     * `title` and a `titleMenu`. Only one should be given.\r\n     */\r\n    title: invalidIf(PropTypes.node, 'titleMenu'),\r\n\r\n    /**\r\n     * An optional id to give the main title in the toolbar. This will not be applied to the\r\n     * `titleMenu`.\r\n     */\r\n    titleId: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * An optional title menu to display instead of the title. This should be a `SelectField` component.\r\n     * It is cloned with some additional props, so if the `SelectField` is separated into a separate\r\n     * component, the following props must be passed to get the correct styling: `className`, `block`,\r\n     * `paddedBlock`, `position`.\r\n     */\r\n    titleMenu: PropTypes.element,\r\n\r\n    /**\r\n     * This prop is used for rendering an optional navigation button to the left of the `title`\r\n     * or the `titleMenu` component. This needs to be an icon `Button` because some additional props\r\n     * are cloned into it.\r\n     */\r\n    nav: PropTypes.element,\r\n\r\n    /**\r\n     * Any additional actions to display to the right of the title. This should be a list or a single\r\n     * `Button` to display. The buttons get cloned with an additional className for toolbar styling.\r\n     */\r\n    actions: PropTypes.oneOfType([\r\n      PropTypes.element,\r\n      PropTypes.arrayOf(PropTypes.element),\r\n    ]),\r\n\r\n    /**\r\n     * Any children to display in the toolbar. This will be displayed between the optional title and\r\n     * actions.\r\n     */\r\n    children: PropTypes.node,\r\n\r\n    /**\r\n     * Boolean if the toolbar should be fixed to the top of the page. This will add some additional box shadow.\r\n     */\r\n    fixed: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the nav, actions, and title should share the same color. For a `colored` or dark `themed`\r\n     * toolbar, they will all be colored white. For a transparent or light `themed` toolbar, the colors will\r\n     * be the `rgba(0, 0, 0, .87)`. Setting this to false will only style the title to the specific color\r\n     * stated above.\r\n     */\r\n    singleColor: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the toolbar should be colored based off the current theme. This will either style the background\r\n     * to be fairly white, or fairly black. You can not specify both `themed` and `colored`.\r\n     */\r\n    themed: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the toolbar should be colored with the `$md-primary-color`.\r\n     */\r\n    colored: invalidIf(PropTypes.bool, 'themed'),\r\n\r\n    /**\r\n     * The component to render the toolbar as.\r\n     */\r\n    component: PropTypes.oneOfType([\r\n      PropTypes.func,\r\n      PropTypes.string,\r\n    ]).isRequired,\r\n\r\n    /**\r\n     * Boolean if the toolbar is inset in the page. This will just add some margin around\r\n     * it.\r\n     */\r\n    inset: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional zDepth to enforce for the toolbar. This should be a number between 0 and 5.\r\n     * If this is omitted, the toolbar will gain a zDepth of 2 when `fixed`.\r\n     */\r\n    zDepth: between(PropTypes.number, 0, 5),\r\n    containerStyle: deprecated(\r\n      PropTypes.object,\r\n      'The `container` no longer exists in the `Toolbar`. Use the `style` prop instead'\r\n    ),\r\n    containerClassName: deprecated(\r\n      PropTypes.string,\r\n      'The `container` no longer exists in the `Toolbar`. Use the `className` prop instead'\r\n    ),\r\n    primary: deprecated(PropTypes.bool, 'Use the `colored` prop instead'),\r\n    secondary: deprecated(\r\n      PropTypes.bool,\r\n      'Toolbars can no longer be themed to the secondary color. Use the `colored` prop instead'\r\n    ),\r\n    actionLeft: deprecated(PropTypes.element, 'Use the `nav` prop instead'),\r\n    actionsRight: deprecated(\r\n      PropTypes.node,\r\n      'Use the `menu` prop and/or the `actions` prop instead'\r\n    ),\r\n  };\r\n\r\n  static defaultProps = {\r\n    singleColor: true,\r\n    component: 'header',\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      style,\r\n      className,\r\n      component,\r\n      titleStyle,\r\n      titleClassName,\r\n      prominentTitle,\r\n      themed,\r\n      singleColor,\r\n      actions,\r\n      fixed,\r\n      children,\r\n      inset,\r\n      titleId,\r\n      /* eslint-disable no-unused-vars */\r\n      nav: propNav,\r\n      title: propTitle,\r\n      titleMenu: propTitleMenu,\r\n      zDepth: propZDepth,\r\n      colored: propColored,\r\n      prominent: propProminent,\r\n\r\n      // deprecated\r\n      containerStyle,\r\n      containerClassName,\r\n      /* eslint-enble no-unused-vars */\r\n      // deprecated\r\n      actionLeft,\r\n      actionsRight,\r\n      primary,\r\n      secondary,\r\n      ...props\r\n    } = this.props;\r\n\r\n    let {\r\n      colored,\r\n      title,\r\n      titleMenu,\r\n      nav,\r\n      prominent,\r\n      zDepth,\r\n    } = this.props;\r\n\r\n    colored = colored || primary || secondary;\r\n    prominent = prominent || prominentTitle;\r\n\r\n    title = (\r\n      <ToolbarTitle\r\n        key=\"title\"\r\n        style={titleStyle}\r\n        className={titleClassName}\r\n        prominent={prominentTitle}\r\n        offset={prominentTitle}\r\n        id={typeof titleId === 'undefined' && props.id ? `${props.id}-title` : titleId}\r\n        title={title}\r\n      />\r\n    );\r\n\r\n    if (nav || actionLeft) {\r\n      const navEl = Children.only(nav || actionLeft);\r\n      nav = cloneElement(nav, {\r\n        className: cn('md-btn--toolbar md-toolbar--action-left', navEl.props.className),\r\n      });\r\n    }\r\n\r\n    let rightActions;\r\n    if (actions || actionsRight) {\r\n      rightActions = Children.map(Children.toArray(actions || actionsRight), action => cloneElement(action, {\r\n        className: cn('md-btn--toolbar', action.props.className),\r\n      }));\r\n\r\n      rightActions = (\r\n        <div key=\"actions\" className=\"md-cell--right md-toolbar--action-right\">\r\n          {rightActions}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (titleMenu) {\r\n      titleMenu = Children.only(titleMenu);\r\n      titleMenu = cloneElement(titleMenu, {\r\n        className: cn('md-title md-title--toolbar md-select-field--toolbar', {\r\n          'md-title--toolbar-offset': prominentTitle,\r\n          'md-title--toolbar-prominent': prominentTitle,\r\n        }, titleMenu.props.className),\r\n        position: titleMenu.props.position || 'tl',\r\n        toolbar: true,\r\n      });\r\n    }\r\n\r\n    if (typeof zDepth !== 'number') {\r\n      zDepth = fixed ? 2 : 0;\r\n    }\r\n\r\n    return (\r\n      <Paper\r\n        {...props}\r\n        component={component}\r\n        zDepth={zDepth}\r\n        style={style}\r\n        className={cn('md-toolbar', {\r\n          'md-background--primary': colored,\r\n          'md-toolbar--themed': themed,\r\n          'md-toolbar--text-white': singleColor && colored,\r\n          'md-toolbar--prominent': prominent,\r\n          'md-toolbar--fixed': fixed,\r\n          'md-toolbar--inset': inset,\r\n        }, className)}\r\n      >\r\n        {nav}\r\n        {title}\r\n        {titleMenu}\r\n        {children}\r\n        {rightActions}\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\n/**\r\n * This is an accessibility only component that should be used in the `NavigationDrawer`\r\n * component. It allows keyboard users to quickly jump to the main content.\r\n *\r\n * This component relies on the `contextTypes` of the `NavigationDrawer` to work. If this is going\r\n * to be used outside of that component, you will need to specify an `id` and `label` contextType\r\n * to pass to this component.\r\n */\r\nexport default class JumpToContentLink extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * An optional className to apply.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * An optional function to call when the linked is clicked.\r\n     */\r\n    onClick: PropTypes.func,\r\n  };\r\n\r\n  static contextTypes = {\r\n    id: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]).isRequired,\r\n    label: PropTypes.node.isRequired,\r\n  }\r\n\r\n  _handleClick = (e) => {\r\n    if (this.props.onClick) {\r\n      this.props.onClick(e);\r\n    }\r\n\r\n    document.getElementById(this.context.id).focus();\r\n  };\r\n\r\n  render() {\r\n    const { className, ...props } = this.props;\r\n    const { id, label } = this.context;\r\n    return (\r\n      <a\r\n        {...props}\r\n        id={`jump-to-${id}`}\r\n        href={`#${id}`}\r\n        onClick={this._handleClick}\r\n        className={cn('md-content-jump', className)}\r\n      >\r\n        {label}\r\n      </a>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Button from '../Buttons/Button';\r\n\r\n/**\r\n * A button used to close the persistent navigation drawer. The button will\r\n * be generated based on the `NavigationDrawer`'s `contextTypes`.\r\n *\r\n * This component is really only used if you are using a `persistent` drawer and you\r\n * manually created the `drawerHeader` for the `NavigationDrawer`.\r\n */\r\nexport default class CloseButton extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * An optional className to apply.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * An optional additional function to call when the `click` event is triggered.\r\n     */\r\n    onClick: PropTypes.func,\r\n  };\r\n\r\n  static contextTypes = {\r\n    closeIcon: PropTypes.element,\r\n    onCloseClick: PropTypes.func,\r\n  };\r\n\r\n  _handleClick = (e) => {\r\n    if (this.props.onClick) {\r\n      this.props.onClick(e);\r\n    }\r\n\r\n    if (this.context.onCloseClick) {\r\n      this.context.onCloseClick(e);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { closeIcon } = this.context;\r\n\r\n    return (\r\n      <Button\r\n        {...this.props}\r\n        icon\r\n        key=\"close\"\r\n        onClick={this._handleClick}\r\n        iconEl={closeIcon}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport AccessibleFakeInkedButton from '../Helpers/AccessibleFakeInkedButton';\r\nimport TileAddon from '../Lists/TileAddon';\r\n\r\nexport default class MiniListItem extends PureComponent {\r\n  static propTypes = {\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    tileStyle: PropTypes.object,\r\n    tileClassName: PropTypes.string,\r\n    component: PropTypes.oneOfType([\r\n      PropTypes.func,\r\n      PropTypes.string,\r\n    ]),\r\n    active: PropTypes.bool,\r\n    activeClassName: PropTypes.string,\r\n    leftIcon: PropTypes.node,\r\n    leftAvatar: PropTypes.node,\r\n    disabled: PropTypes.bool,\r\n    onTouchStart: PropTypes.func,\r\n    onTouchEnd: PropTypes.func,\r\n    onMouseOver: PropTypes.func,\r\n    onMouseLeave: PropTypes.func,\r\n    defaultOpen: PropTypes.bool,\r\n    itemComponent: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.func,\r\n    ]).isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    activeClassName: 'md-text--theme-primary',\r\n    component: 'div',\r\n    itemComponent: 'li',\r\n  };\r\n\r\n  state = { active: false };\r\n\r\n  componentWillUnmount() {\r\n    if (this._touchTimeout) {\r\n      clearTimeout(this._touchTimeout);\r\n    }\r\n  }\r\n\r\n  _handleMouseOver = (e) => {\r\n    if (this.props.onMouseOver) {\r\n      this.props.onMouseOver(e);\r\n    }\r\n\r\n    if (!this.props.disabled) {\r\n      this.setState({ active: true });\r\n    }\r\n  };\r\n\r\n  _handleMouseLeave = (e) => {\r\n    if (this.props.onMouseLeave) {\r\n      this.props.onMouseLeave(e);\r\n    }\r\n\r\n    if (!this.props.disabled) {\r\n      this.setState({ active: false });\r\n    }\r\n  };\r\n\r\n  _handleTouchStart = (e) => {\r\n    if (this.props.onTouchStart) {\r\n      this.props.onTouchStart(e);\r\n    }\r\n\r\n    this._touched = true;\r\n\r\n    this.setState({ active: true, touchedAt: Date.now() });\r\n  };\r\n\r\n  _handleTouchEnd = (e) => {\r\n    if (this.props.onTouchEnd) {\r\n      this.props.onTouchEnd(e);\r\n    }\r\n\r\n    const time = Date.now() - this.state.touchedAt;\r\n    this._touchTimeout = setTimeout(() => {\r\n      this._touchTimeout = null;\r\n\r\n      this.setState({ active: false });\r\n    }, time > 450 ? 0 : 450 - time);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      style,\r\n      className,\r\n      tileStyle,\r\n      tileClassName,\r\n      leftIcon,\r\n      leftAvatar,\r\n      active,\r\n      activeClassName,\r\n      itemComponent: ItemComponent,\r\n      /* eslint-disable no-unused-vars,react/prop-types */\r\n      primaryText,\r\n      secondaryText,\r\n      rightIcon,\r\n      rightAvatar,\r\n      threeLines,\r\n      children,\r\n      defaultOpen,\r\n      isOpen,\r\n      inset,\r\n      nestedItems,\r\n      animateNestedItems,\r\n      expanderIcon,\r\n\r\n      // deprecated\r\n      expanderIconChildren,\r\n      expanderIconClassName,\r\n      /* eslint-enable no-unused-vars,react/prop-types */\r\n      ...props\r\n    } = this.props;\r\n\r\n    return (\r\n      <ItemComponent style={style} className={className}>\r\n        <AccessibleFakeInkedButton\r\n          {...props}\r\n          style={tileStyle}\r\n          className={cn('md-list-tile md-list-tile--icon md-list-tile--mini', {\r\n            'md-list-tile--active': this.state.active && !this._touched,\r\n          }, tileClassName)}\r\n          onMouseOver={this._handleMouseOver}\r\n          onMouseLeave={this._handleMouseLeave}\r\n          onTouchStart={this._handleTouchStart}\r\n          onTouchEnd={this._handleTouchEnd}\r\n        >\r\n          <TileAddon\r\n            active={active}\r\n            activeClassName={activeClassName}\r\n            icon={leftIcon}\r\n            avatar={leftAvatar}\r\n          />\r\n        </AccessibleFakeInkedButton>\r\n      </ItemComponent>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent, isValidElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport CSSTransitionGroup from 'react-transition-group/CSSTransitionGroup';\r\nimport deprecated from 'react-prop-types/lib/deprecated';\r\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\r\n\r\nimport getField from '../utils/getField';\r\nimport controlled from '../utils/PropTypes/controlled';\r\nimport invalidIf from '../utils/PropTypes/invalidIf';\r\nimport Button from '../Buttons/Button';\r\nimport Drawer from '../Drawers/Drawer';\r\nimport List from '../Lists/List';\r\nimport Toolbar from '../Toolbars/Toolbar';\r\nimport FontIcon from '../FontIcons/FontIcon';\r\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\r\n\r\nconst { DrawerTypes } = Drawer;\r\nimport { isTemporary, isPersistent, isPermanent, isMini } from '../Drawers/isType';\r\nimport JumpToContentLink from './JumpToContentLink';\r\nimport CloseButton from './CloseButton';\r\nimport MiniListItem from './MiniListItem';\r\n\r\nfunction getNonMiniType(type) {\r\n  const { PERSISTENT_MINI: pMini, TEMPORARY_MINI: tMini } = DrawerTypes;\r\n  if ([pMini, tMini].indexOf(type) === -1) {\r\n    return type;\r\n  }\r\n\r\n  return pMini === type ? DrawerTypes.PERSISTENT : DrawerTypes.TEMPORARY;\r\n}\r\n\r\nfunction toMiniListItem(item, index) {\r\n  if (isValidElement(item)) {\r\n    return item;\r\n  }\r\n\r\n  const { divider, subheader, key, ...itemProps } = item;\r\n  if (divider || subheader) {\r\n    return null;\r\n  }\r\n\r\n  return <MiniListItem key={key || index} {...itemProps} />;\r\n}\r\n\r\n/**\r\n * The `NavigationDrawer` is used when you want a full layout configuration. It is a combination\r\n * of the `Toolbar` component and the `Drawer` component. Any props that are not specifically\r\n * listed below will be provided to the `Drawer` component. So if there are props on the `Drawer`\r\n * that are not listed here, they will be passed along.\r\n *\r\n * The main benefit of using this component is that it will manage adding respective offset\r\n * classes automatically for you to the content and the drawer. It will also manage using\r\n * a mini drawer type for you.\r\n */\r\nexport default class NavigationDrawer extends PureComponent {\r\n  static DrawerType = { // deprecated\r\n    /* eslint-disable no-console */\r\n    _warned: false,\r\n    _msg: 'Invalid use of `NavigationDrawer.DrawerType.{{TYPE}}`. The `NavigationDrawer.DrawerType` ' +\r\n      'has been deprecated and will be removed in the next major release. Please use the ' +\r\n      '`NavigationDrawer.DrawerTypes.{{TYPE}}` instead.',\r\n\r\n    get FULL_HEIGHT() {\r\n      if (!this._warned) {\r\n        console.error(this._msg.replace(/{{TYPE}}/g, 'FULL_HEIGHT'));\r\n      }\r\n      this._warned = true;\r\n\r\n      return DrawerTypes.FULL_HEIGHT;\r\n    },\r\n\r\n    get CLIPPED() {\r\n      if (!this._warned) {\r\n        console.error(this._msg.replace(/{{TYPE}}/g, 'CLIPPED'));\r\n      }\r\n      this._warned = true;\r\n\r\n      return DrawerTypes.CLIPPED;\r\n    },\r\n\r\n    get FLOATING() {\r\n      if (!this._warned) {\r\n        console.error(this._msg.replace(/{{TYPE}}/g, 'FLOATING'));\r\n      }\r\n      this._warned = true;\r\n\r\n      return DrawerTypes.FLOATING;\r\n    },\r\n\r\n    get PERSISTENT() {\r\n      if (!this._warned) {\r\n        console.error(this._msg.replace(/{{TYPE}}/g, 'PERSISTENT'));\r\n      }\r\n      this._warned = true;\r\n\r\n      return DrawerTypes.PERSISTENT;\r\n    },\r\n\r\n    get PERSISTENT_MINI() {\r\n      if (!this._warned) {\r\n        console.error(this._msg.replace(/{{TYPE}}/g, 'PERSISTENT_MINI'));\r\n      }\r\n      this._warned = true;\r\n\r\n      return DrawerTypes.PERSISTENT_MINI;\r\n    },\r\n\r\n    get TEMPORARY() {\r\n      if (!this._warned) {\r\n        console.error(this._msg.replace(/{{TYPE}}/g, 'TEMPORARY'));\r\n      }\r\n      this._warned = true;\r\n\r\n      return DrawerTypes.TEMPORARY;\r\n    },\r\n\r\n    get TEMPORARY_MINI() {\r\n      if (!this._warned) {\r\n        console.error(this._msg.replace(/{{TYPE}}/g, 'TEMPORARY_MINI'));\r\n      }\r\n      this._warned = true;\r\n\r\n      return DrawerTypes.TEMPORARY_MINI;\r\n    },\r\n    /* eslint-enable no-console */\r\n  };\r\n\r\n  static DrawerTypes = DrawerTypes;\r\n\r\n  static propTypes = {\r\n    /**\r\n     * An optional id to provide to the entire div wrapper.\r\n     */\r\n    id: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * An optional id to provide to the drawer. This is generally a good idea to provide if\r\n     * there are any `navItems` defined.\r\n     *\r\n     * @see {@link #navItemsId}\r\n     * @see {@link #miniDrawerId}\r\n     */\r\n    drawerId: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * An optional id to provide to the navItems list. If this is omitted and the `drawerId` prop is\r\n     * defined, it will be defaulted to `${drawerId}-nav-items`.\r\n     *\r\n     * @see {@link #drawerId}\r\n     * @see {@link Drawer#navItemsId}\r\n     */\r\n    navItemsId: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * An optional id to apply to mini drawer that gets created when the `drawerType` is set to\r\n     * one of the mini types.\r\n     *\r\n     * @see {@link #drawerId}\r\n     * @see {@link #miniNavItemsId}\r\n     */\r\n    miniDrawerId: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * An optional id to apply to mini drawer's navigation list that gets created when the `drawerType`\r\n     * is set to one of the mini types.\r\n     *\r\n     * @see {@link #navItemsId}\r\n     * @see {@link #miniDrawerId}\r\n     */\r\n    miniNavItemsId: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * An optional id to provide to the main toolbar.\r\n     */\r\n    toolbarId: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * An id to give the main content. A hidden link is created in the main drawer's header that links to the main\r\n     * content. This is used for keyboard only users to jump the navigation and jump straight to the content.\r\n     *\r\n     * If you provide your own `drawerHeader`, it is suggested to include the link yourself.\r\n     */\r\n    contentId: isRequiredForA11y(PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ])),\r\n\r\n    /**\r\n     * An optional style to apply to the surrounding container.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the surrounding container.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the main toolbar.\r\n     */\r\n    toolbarStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the toolbar.\r\n     */\r\n    toolbarClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the main toolbar's title.\r\n     */\r\n    toolbarTitleStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the main toolbar's title.\r\n     */\r\n    toolbarTitleClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the drawer.\r\n     */\r\n    drawerStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the drawer.\r\n     */\r\n    drawerClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the `List` surrounding the `navItems`.\r\n     */\r\n    navStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the `List` surrounding the `navItems`.\r\n     */\r\n    navClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the mini drawer that gets created when the `drawerType` is set\r\n     * to one of the mini types.\r\n     *\r\n     * @see {@link #miniDrawerClassName}\r\n     * @see {@link #miniNavStyle}\r\n     * @see {@link #miniNavClassName}\r\n     */\r\n    miniDrawerStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the mini drawer that gets created when the `drawerType` is set\r\n     * to one of the mini types.\r\n     *\r\n     * @see {@link #miniDrawerStyle}\r\n     * @see {@link #miniNavStyle}\r\n     * @see {@link #miniNavClassName}\r\n     */\r\n    miniDrawerClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the mini drawer's navigation list when the `drawerType` is set\r\n     * to one of the mini types.\r\n     *\r\n     * @see {@link #miniDrawerStyle}\r\n     * @see {@link #miniDrawerClassName}\r\n     * @see {@link #miniNavClassName}\r\n     */\r\n    miniNavStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the mini drawer's navigation list when the `drawerType` is set\r\n     * to one of the mini types.\r\n     *\r\n     * @see {@link #miniDrawerStyle}\r\n     * @see {@link #miniDrawerClassName}\r\n     * @see {@link #miniNavStyle}\r\n     */\r\n    miniNavClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the content. This is the container surrounding whatever\r\n     * `children` are passed in.\r\n     */\r\n    contentStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the content. This is the container surrounding whatever\r\n     * `children` are passed in.\r\n     */\r\n    contentClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the overlay.\r\n     */\r\n    overlayStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the overlay.\r\n     */\r\n    overlayClassName: PropTypes.string,\r\n\r\n    /**\r\n     * The children to display in the main content.\r\n     */\r\n    children: PropTypes.node,\r\n\r\n    /**\r\n     * Boolean if the `drawerHeader` component should be built if the `drawerHeader` prop is not\r\n     * passed in.\r\n     */\r\n    includeDrawerHeader: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional header to display in the drawer. This will normally be the `Toolbar` component\r\n     * or any other type of header. You can either use this prop with the `CloseButton` component\r\n     * when displaying a persistent drawer, or use the `drawerTitle` and `drawerHeaderChildren` prop\r\n     * to build a toolbar.\r\n     */\r\n    drawerHeader: PropTypes.node,\r\n\r\n    /**\r\n     * An optional title to use for the drawer's header toolbar. If the `drawerHeader` prop is defined,\r\n     * this is invalid.\r\n     */\r\n    drawerTitle: invalidIf(PropTypes.node, 'drawerHeader'),\r\n\r\n    /**\r\n     * An optional zDepth to apply to the drawer. If this is omitted, the value will be set as follows:\r\n     * - floating || inline = 1\r\n     * - temporary = 5\r\n     * - all others = 1\r\n     *\r\n     * @see {@link Papers/Paper#zDepth}\r\n     */\r\n    drawerZDepth: PropTypes.number,\r\n\r\n    /**\r\n     * Any additional children to display after the `drawerHeader` and `navItems` list in the drawer.\r\n     */\r\n    drawerChildren: PropTypes.node,\r\n\r\n    /**\r\n     * Any additional children to display in the drawer's header `Toolbar`. If the `drawerHeader` prop is defined,\r\n     * this is invalid.\r\n     */\r\n    drawerHeaderChildren: invalidIf(PropTypes.node, 'drawerHeader'),\r\n\r\n    /**\r\n     * The position for the drawer to be displayed.\r\n     */\r\n    position: PropTypes.oneOf(['left', 'right']).isRequired,\r\n\r\n    /**\r\n     * An optional list of elements or props to use to build a navigational list in the drawer.\r\n     * When the item is an object of props, it will build a `ListItem` component unless a key of\r\n     * `divider` or `subheader` is set to true. It will then create the Divider or Subheader component\r\n     * with any other remaining keys.\r\n     */\r\n    navItems: PropTypes.arrayOf(PropTypes.oneOfType([\r\n      PropTypes.element,\r\n      PropTypes.shape({\r\n        divider: PropTypes.bool,\r\n        subheader: PropTypes.bool,\r\n        primaryText: PropTypes.node,\r\n      }),\r\n    ])),\r\n\r\n    /**\r\n     * The drawer type to use for mobile devices.\r\n     */\r\n    mobileDrawerType: PropTypes.oneOf([\r\n      DrawerTypes.TEMPORARY,\r\n      DrawerTypes.TEMPORARY_MINI,\r\n    ]).isRequired,\r\n\r\n    /**\r\n     * The drawer type to use for tablets.\r\n     */\r\n    tabletDrawerType: PropTypes.oneOf([\r\n      DrawerTypes.FULL_HEIGHT,\r\n      DrawerTypes.CLIPPED,\r\n      DrawerTypes.FLOATING,\r\n      DrawerTypes.PERSISTENT,\r\n      DrawerTypes.PERSISTENT_MINI,\r\n      DrawerTypes.TEMPORARY,\r\n      DrawerTypes.TEMPORARY_MINI,\r\n    ]).isRequired,\r\n\r\n    /**\r\n     * The drawer type to use for desktop displays.\r\n     */\r\n    desktopDrawerType: PropTypes.oneOf([\r\n      DrawerTypes.FULL_HEIGHT,\r\n      DrawerTypes.CLIPPED,\r\n      DrawerTypes.FLOATING,\r\n      DrawerTypes.PERSISTENT,\r\n      DrawerTypes.PERSISTENT_MINI,\r\n      DrawerTypes.TEMPORARY,\r\n      DrawerTypes.TEMPORARY_MINI,\r\n    ]).isRequired,\r\n\r\n    /**\r\n     * An optional drawer type to enforce on all screen sizes. If the drawer type is not\r\n     * `temporary`, you are required to define the `onMediaTypeChange` prop to handle switching\r\n     * to temporary when the media matches a mobile device.\r\n     * ```\r\n     */\r\n    drawerType: PropTypes.oneOf([\r\n      DrawerTypes.FULL_HEIGHT,\r\n      DrawerTypes.CLIPPED,\r\n      DrawerTypes.FLOATING,\r\n      DrawerTypes.PERSISTENT,\r\n      DrawerTypes.PERSISTENT_MINI,\r\n      DrawerTypes.TEMPORARY,\r\n      DrawerTypes.TEMPORARY_MINI,\r\n    ]),\r\n\r\n    /**\r\n     * The default media match for the drawer. This will be what is displayed on first render.\r\n     * The component will adjust itself to the current media after it has mounted, but this\r\n     * is mostly used for server side rendering.\r\n     */\r\n    defaultMedia: PropTypes.oneOf(['mobile', 'tablet', 'desktop']),\r\n\r\n    /**\r\n     * The min width to use for a mobile media query. This prop should match the `md-mobile-min-width`\r\n     * variable.\r\n     *\r\n     * The media query for a mobile device will be:\r\n     *\r\n     * ```js\r\n     * window.matchMedia(\r\n     *   `screen and (min-width: ${mobileMinWidth}px) and (max-width: ${tabletMinWidth - 1}px`\r\n     * ).matches;\r\n     * ```\r\n     */\r\n    mobileMinWidth: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * The min width to use for a tablet media query. This prop should match the `md-tablet-min-width`\r\n     * variable.\r\n     *\r\n     * The media query for a tablet device will be:\r\n     *\r\n     * ```js\r\n     * window.matchMedia(\r\n     *   `screen and (min-width: ${tabletMinWidth}px) and (max-width: ${desktopWidth - 1}px`\r\n     * ).matches;\r\n     * ```\r\n     */\r\n    tabletMinWidth: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * The min width to use for a desktop media query. This prop should match the `md-desktop-min-width`\r\n     * variable.\r\n     *\r\n     * The media query for a tablet device will be:\r\n     *\r\n     * ```js\r\n     * window.matchMedia(`screen and (min-width: ${tabletMinWidth}px)`).matches;\r\n     * ```\r\n     */\r\n    desktopMinWidth: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * An optional function to call when the type of the drawer changes because of the\r\n     * new media queries. The callback will include the newly selected drawer type\r\n     * and an object containing the media matches of `mobile`, `tablet`, and `desktop`.\r\n     *\r\n     * ```js\r\n     * this.props.onMediaTypeChange(NavigationDrawer.DrawerTypes.TEMPORARY, {\r\n     *   mobile: true,\r\n     *   tablet: false,\r\n     *   desktop: false,\r\n     * });\r\n     * ```\r\n     */\r\n    onMediaTypeChange: PropTypes.func,\r\n\r\n    /**\r\n     * Boolean if the temporary or persistent drawers are visible by default.\r\n     */\r\n    defaultVisible: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the temporary or persistent drawers are visible. If this is defined,\r\n     * it will make the component controlled and require the `onVisibilityChange` prop\r\n     * to be defined.\r\n     */\r\n    visible: controlled(PropTypes.bool, 'onVisibilityChange', 'defaultVisible'),\r\n\r\n    /**\r\n     * An optional function to call when the visibility of the drawer changes. The callback\r\n     * will include the new visibility.\r\n     *\r\n     * ```js\r\n     * onVisibilityChange(false);\r\n     * ```\r\n     */\r\n    onVisibilityChange: PropTypes.func,\r\n\r\n    /**\r\n     * A boolean if the mini drawer's list should be generated from the `navItems` prop. When building\r\n     * the list, it will extract the `leftIcon` or `leftAvatar` from the `navItem` and then create a\r\n     * mini `ListItem` containing only that icon or image. Any other event listeners will also be applied.\r\n     *\r\n     *\r\n     * @see {@link #miniDrawerHeader}\r\n     * @see {@link #miniDrawerChildren}\r\n     */\r\n    extractMini: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional header to display in the mini drawer. This will be displayed above the optional\r\n     * mini nav list that get generated if the `extractMini` prop is `true` and the `miniDrawerChildren`.\r\n     *\r\n     * @see {@link #extractMini}\r\n     */\r\n    miniDrawerHeader: PropTypes.node,\r\n\r\n    /**\r\n     * Any additional children to display in the mini drawer. This will be displayed after the `miniDrawerHeader`\r\n     * and the optional mini nav list that gets generated if the `extractMini` prop is `true`.\r\n     *\r\n     * @see {@link #extractMini}\r\n     */\r\n    miniDrawerChildren: PropTypes.node,\r\n\r\n    /**\r\n     * Boolean if the drawer should automatically close after a nav item has been clicked for `temporary` drawers.\r\n     */\r\n    autoclose: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional title to display in the main toolbar. Either the `toolbarTitle` or the `toolbarTitleMenu`\r\n     * may be defined, not both.\r\n     */\r\n    toolbarTitle: invalidIf(PropTypes.node, 'toolbarTitleMenu'),\r\n\r\n    /**\r\n     * An optional select field menu to display in the main toolbar. Either the `toolbarTitle` or the `toolbarTitleMenu`\r\n     * may be defined, not both.\r\n     */\r\n    toolbarTitleMenu: PropTypes.element,\r\n\r\n    /**\r\n     * The theme style for the main toolbar.\r\n     *\r\n     * @see {@link Toolbars/Toolbar}\r\n     */\r\n    toolbarThemeType: PropTypes.oneOf(['default', 'colored', 'themed']).isRequired,\r\n\r\n    /**\r\n     * Boolean if the toolbar's nav, actions, and title should share the same color.\r\n     */\r\n    toolbarSingleColor: PropTypes.bool,\r\n\r\n    /**\r\n     * A boolean if the toolbar should be prominent.\r\n     */\r\n    toolbarProminent: PropTypes.bool,\r\n\r\n    /**\r\n     * A boolean if the toolbar's title should be prominent.\r\n     */\r\n    toolbarProminentTitle: PropTypes.bool,\r\n\r\n    /**\r\n     * A list of elements or a single element to display to the right of the\r\n     * toolbar's nav, title, and children.\r\n     *\r\n     * @see {@link Toolbars/Toolbar#actions}\r\n     */\r\n    toolbarActions: Toolbar.propTypes.actions,\r\n\r\n    /**\r\n     * Any children to display in the toolbar. This will be displayed between the optional title and\r\n     * actions.\r\n     */\r\n    toolbarChildren: Toolbar.propTypes.children,\r\n\r\n    /**\r\n     * An optional zDepth to apply to the toolbar.\r\n     *\r\n     * @see {@link Toolbars/Toolbar#zDepth}\r\n     */\r\n    toolbarZDepth: PropTypes.number,\r\n\r\n    /**\r\n     * The component to render the content in.\r\n     */\r\n    contentComponent: PropTypes.oneOfType([\r\n      PropTypes.func,\r\n      PropTypes.string,\r\n    ]).isRequired,\r\n\r\n    /**\r\n     * An optional footer display after the main content.\r\n     */\r\n    footer: PropTypes.node,\r\n\r\n    /**\r\n     * The icon to use to render the button that will toggle the visibility of the\r\n     * navigation drawer for `temporary` and `persistent` drawers. This is normally a\r\n     * hamburger menu.\r\n     */\r\n    temporaryIcon: PropTypes.element,\r\n\r\n    /**\r\n     * The icon to use to render the button that appears on a persistent drawer's open\r\n     * header. This is used to create the `CloseButton` for drawers. When a persistent\r\n     * drawer is closed, the `temporaryIcon` will be used to create a button to open the drawer.\r\n     *\r\n     * If the `drawerHeader` prop is defined, you will have to either include the `CloseButton`\r\n     * in your header manually, or create your own controlled button to close the drawer.\r\n     */\r\n    persistentIcon: PropTypes.element,\r\n\r\n    /**\r\n     * The transition name to use when the page's content changes. If you want to disable\r\n     * transitions, set both the `transitionEnterTimeout` and `transitionLeaveTimeout` props\r\n     * to a false-ish value. (`null`, `undefined`, or `0`).\r\n     */\r\n    transitionName: PropTypes.string.isRequired,\r\n\r\n    /**\r\n     * The transition enter timeout when the page's content changes. If you want to disable\r\n     * the enter transition, set this to a false-ish value (`null`, `undefined`, or `0`).\r\n     */\r\n    transitionEnterTimeout: PropTypes.number,\r\n\r\n    /**\r\n     * The transition leave timeout when the page's content changes. If you want to disable\r\n     * the leave transition, set this to a false-ish value (`null`, `undefined`, or `0`).\r\n     */\r\n    transitionLeaveTimeout: PropTypes.number,\r\n\r\n    /**\r\n     * The transition duration for the drawer when sliding in and out of view.\r\n     */\r\n    drawerTransitionDuration: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * Any additional props to provide to the main content. This will be applied before any of the generated props,\r\n     * so this should not include `style`, `className`, or `component`.\r\n     */\r\n    contentProps: PropTypes.object,\r\n\r\n    /**\r\n     * The label to use for a keyboard accessibility link that jumps all the navigation and allows a user to focus\r\n     * the main content. This is created in the drawer's header.\r\n     */\r\n    jumpLabel: PropTypes.node.isRequired,\r\n\r\n    /**\r\n     * Boolean if the Portal's functionality of rendering in a separate react tree should be applied\r\n     * to the drawer. The overlay that appears for temporary type drawers will still appear in the\r\n     * separate subtree.\r\n     *\r\n     * @see {@link Helpers/Portal}\r\n     */\r\n    portal: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional DOM Node to render the drawer into. The default is to render as\r\n     * the first child in the `body`.\r\n     *\r\n     * > This prop will not be used when the drawer is of the permanent type or `inline` is specified\r\n     * since the `Portal` component will not be used.\r\n     */\r\n    renderNode: PropTypes.object,\r\n\r\n    /**\r\n     * Boolean if the drawer should be rendered as the last child instead of the first child\r\n     * in the `renderNode` or `body`.\r\n     *\r\n     * > This prop will not be used when the drawer is of the permanent type or `inline` is specified\r\n     * since the `Portal` component will not be used.\r\n     */\r\n    lastChild: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the `drawerType` should remain constant across all media. This is really only valid\r\n     * if the `drawerType` is one of the temporary types.\r\n     */\r\n    constantDrawerType: PropTypes.bool,\r\n\r\n    menuIconChildren: deprecated(PropTypes.node, 'Use `temporaryIcon` instead'),\r\n    menuIconClassName: deprecated(PropTypes.string, 'Use `temporaryIcon` instead'),\r\n    closeIconChildren: deprecated(PropTypes.node, 'Use `persistentIcon` instead'),\r\n    closeIconClassName: deprecated(PropTypes.string, 'Use `persistentIcon` instead'),\r\n    temporaryIconChildren: deprecated(PropTypes.node, 'Use the `temporaryIcon` instead'),\r\n    temporaryIconClassName: deprecated(PropTypes.string, 'Use the `temporaryIcon` instead'),\r\n    persistentIconChildren: deprecated(PropTypes.node, 'Use the `persistentIcon` instead'),\r\n    persistentIconClassName: deprecated(PropTypes.string, 'Use the `persistentIcon` prop instead'),\r\n    onDrawerChange: deprecated(PropTypes.func, 'Use `onVisibilityChange` or `onMediaTypeChange` instead'),\r\n    onVisibilityToggle: deprecated(PropTypes.func, 'Use `onVisibilityChange` instead'),\r\n    contentTransitionName: deprecated(PropTypes.string, 'Use `transitionName` instead'),\r\n    contentTransitionEnterTimeout: deprecated(PropTypes.number, 'Use `transtionEnterTimeout` instead'),\r\n    contentTransitionLeaveTimeout: deprecated(PropTypes.number, 'Use `transtionLeaveTimeout` instead'),\r\n    initialDrawerType: deprecated(\r\n      PropTypes.oneOf(['mobile', 'tablet', 'desktop']),\r\n      'Use `defaultMedia` instead'\r\n    ),\r\n  };\r\n\r\n  static contextTypes = {\r\n    renderNode: PropTypes.object,\r\n  };\r\n\r\n  static childContextTypes = {\r\n    closeIcon: PropTypes.element,\r\n    onCloseClick: PropTypes.func,\r\n    id: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]).isRequired,\r\n    label: PropTypes.node.isRequired,\r\n    renderNode: PropTypes.object,\r\n  }\r\n\r\n  static defaultProps = {\r\n    autoclose: Drawer.defaultProps.autoclose,\r\n    contentId: 'main-content',\r\n    // Defaults to false since it keeps the state of the drawerType in sync and makes the Drawer\r\n    // controlled. On initial mount without any defaultMedia updates, it would always be considered\r\n    // temporary\r\n    constantDrawerType: false,\r\n    jumpLabel: 'Jump to content',\r\n    extractMini: true,\r\n    position: Drawer.defaultProps.position,\r\n    defaultMedia: Drawer.defaultProps.defaultMedia,\r\n    mobileDrawerType: Drawer.defaultProps.mobileType,\r\n    tabletDrawerType: Drawer.defaultProps.tabletType,\r\n    desktopDrawerType: Drawer.defaultProps.desktopType,\r\n    mobileMinWidth: Drawer.defaultProps.mobileMinWidth,\r\n    tabletMinWidth: Drawer.defaultProps.tabletMinWidth,\r\n    desktopMinWidth: Drawer.defaultProps.desktopMinWidth,\r\n    includeDrawerHeader: true,\r\n    contentComponent: 'main',\r\n    temporaryIcon: <FontIcon>menu</FontIcon>,\r\n    toolbarThemeType: 'colored',\r\n    persistentIcon: <FontIcon>arrow_back</FontIcon>,\r\n    transitionName: 'md-cross-fade',\r\n    transitionEnterTimeout: 300,\r\n    drawerTransitionDuration: Drawer.defaultProps.transitionDuration,\r\n  };\r\n\r\n  /**\r\n   * Determines the current media and returns an object containing matches for `mobile`, `tablet`, `desktop`,\r\n   * and the current drawer type. This expects a `props` object of the drawer.\r\n   *\r\n   * If this is used server side, it will default to only matching mobile.\r\n   *\r\n   * @param {Object=} props - The current drawer's prop shape to extract the mobile, tablet, and desktop type/min\r\n   *    widths. This defaults to the drawer's default props.\r\n   * @return {Object} an object containing the media matches and the current type to use for the drawer.\r\n   */\r\n  static getCurrentMedia(props = NavigationDrawer.defaultProps) {\r\n    const {\r\n      mobileDrawerType: mobileType,\r\n      tabletDrawerType: tabletType,\r\n      desktopDrawerType: desktopType,\r\n      constantDrawerType: constantType,\r\n      ...others\r\n    } = props;\r\n\r\n    return Drawer.getCurrentMedia({ mobileType, tabletType, desktopType, constantType, ...others });\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { defaultMedia, defaultVisible, initialDrawerType } = props;\r\n\r\n    this.state = {\r\n      mobile: initialDrawerType || defaultMedia === 'mobile',\r\n      tablet: initialDrawerType || defaultMedia === 'tablet',\r\n      desktop: initialDrawerType || defaultMedia === 'desktop',\r\n    };\r\n\r\n    if (typeof props.drawerType === 'undefined') {\r\n      this.state.drawerType = props[`${initialDrawerType || defaultMedia}DrawerType`];\r\n    }\r\n\r\n    const type = getField(props, this.state, 'drawerType');\r\n\r\n    if (typeof props.visible === 'undefined') {\r\n      // The logic for determining the visibility is handled by the created mini drawer\r\n      this.state.visible = isPermanent(type);\r\n      if (!this.state.visible && typeof defaultVisible !== 'undefined') {\r\n        this.state.visible = defaultVisible;\r\n      }\r\n    }\r\n  }\r\n\r\n  getChildContext() {\r\n    const {\r\n      persistentIcon,\r\n      contentId: id,\r\n      jumpLabel: label,\r\n\r\n      // deprecated\r\n      persistentIconChildren,\r\n      persistentIconClassName,\r\n      closeIconChildren,\r\n      closeIconClassName,\r\n    } = this.props;\r\n\r\n    return {\r\n      id,\r\n      label,\r\n      closeIcon: getDeprecatedIcon(\r\n        closeIconClassName || persistentIconClassName,\r\n        closeIconChildren || persistentIconChildren,\r\n        persistentIcon,\r\n      ),\r\n      onCloseClick: this._toggleVisibility,\r\n      renderNode: this.context.renderNode,\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const visible = getField(this.props, this.state, 'visible');\r\n    const nVisible = getField(nextProps, this.state, 'visible');\r\n    if (visible !== nVisible) {\r\n      this._animate(nextProps);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this._timeout) {\r\n      clearTimeout(this._timeout);\r\n    }\r\n  }\r\n\r\n  _animate = (props = this.props, state = this.state) => {\r\n    if (isTemporary(getField(props, state, 'drawerType'))) {\r\n      return;\r\n    }\r\n\r\n    if (this._timeout) {\r\n      clearTimeout(this._timeout);\r\n    }\r\n\r\n    this._timeout = setTimeout(() => {\r\n      this.setState({ contentActive: false });\r\n    }, props.drawerTransitionDuration);\r\n\r\n    this.setState({ contentActive: true });\r\n  };\r\n\r\n  _toggleVisibility = (e) => {\r\n    const { onVisibilityToggle, onVisibilityChange, onDrawerChange } = this.props;\r\n    const visible = !getField(this.props, this.state, 'visible');\r\n    const callback = onVisibilityChange || onVisibilityToggle || onDrawerChange;\r\n    if (callback) {\r\n      callback(visible, e);\r\n    }\r\n\r\n    if (typeof this.props.visible === 'undefined') {\r\n      this.setState({ visible });\r\n      this._animate(this.props);\r\n    }\r\n  };\r\n\r\n  _handleVisibility = (visible) => {\r\n    const { onVisibilityToggle, onVisibilityChange, onDrawerChange } = this.props;\r\n    const callback = onVisibilityChange || onVisibilityToggle || onDrawerChange;\r\n    if (callback) {\r\n      callback(visible);\r\n    }\r\n\r\n    if (typeof this.props.visible === 'undefined') {\r\n      this.setState({ visible });\r\n      this._animate(this.props);\r\n    }\r\n  };\r\n\r\n  _handleTypeChange = (drawerType, mediaState) => {\r\n    const { onMediaTypeChange } = this.props;\r\n    let state = mediaState;\r\n    if (onMediaTypeChange) {\r\n      onMediaTypeChange(drawerType, mediaState);\r\n    }\r\n\r\n    if (typeof this.props.drawerType === 'undefined') {\r\n      state = { ...mediaState, drawerType };\r\n    }\r\n\r\n\r\n    this.setState(state);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      style,\r\n      className,\r\n      toolbarStyle,\r\n      toolbarClassName,\r\n      drawerStyle,\r\n      drawerClassName,\r\n      contentStyle,\r\n      contentClassName,\r\n      contentComponent: Content,\r\n      miniDrawerStyle,\r\n      miniDrawerClassName,\r\n      miniNavStyle,\r\n      miniNavClassName,\r\n      miniDrawerId,\r\n      miniNavItemsId,\r\n      navItems,\r\n      children,\r\n      drawerId,\r\n      drawerTitle,\r\n      drawerZDepth,\r\n      drawerChildren,\r\n      drawerHeaderChildren,\r\n      drawerTransitionDuration,\r\n      toolbarId,\r\n      toolbarTitle,\r\n      toolbarTitleMenu,\r\n      toolbarTitleStyle,\r\n      toolbarTitleClassName,\r\n      toolbarActions,\r\n      toolbarProminent,\r\n      toolbarProminentTitle,\r\n      toolbarThemeType,\r\n      toolbarSingleColor,\r\n      toolbarChildren,\r\n      toolbarZDepth,\r\n      mobileDrawerType: mobileType,\r\n      tabletDrawerType: tabletType,\r\n      desktopDrawerType: desktopType,\r\n      transitionName,\r\n      transitionEnterTimeout,\r\n      transitionLeaveTimeout,\r\n      extractMini,\r\n      miniDrawerHeader,\r\n      miniDrawerChildren,\r\n      footer,\r\n      includeDrawerHeader,\r\n      contentId,\r\n      contentProps,\r\n      constantDrawerType,\r\n      temporaryIcon,\r\n\r\n      // deprecated\r\n      temporaryIconChildren,\r\n      temporaryIconClassName,\r\n      menuIconChildren,\r\n      menuIconClassName,\r\n      /* eslint-disable no-unused-vars */\r\n      drawerType: propDrawerType,\r\n      drawerHeader: propDrawerHeader,\r\n      renderNode: propRenderNode,\r\n      jumpLabel,\r\n      persistentIcon,\r\n\r\n      // deprecated\r\n      onDrawerChange,\r\n      closeIconChildren,\r\n      closeIconClassName,\r\n      persistentIconChildren,\r\n      persistentIconClassName,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n\r\n    let { drawerHeader } = this.props;\r\n    const { desktop, tablet, contentActive } = this.state;\r\n\r\n    const drawerType = getField(this.props, this.state, 'drawerType');\r\n    const visible = getField(this.props, this.state, 'visible');\r\n    const renderNode = getField(this.props, this.context, 'renderNode');\r\n    const mini = isMini(drawerType);\r\n    const temporary = isTemporary(drawerType);\r\n    const persistent = isPersistent(drawerType);\r\n    const clipped = drawerType === DrawerTypes.CLIPPED;\r\n    const floating = drawerType === DrawerTypes.FLOATING;\r\n\r\n    const offset = (desktop || tablet ? !temporary && visible : visible);\r\n    const toolbarRelative = cn({\r\n      'md-toolbar-relative': !toolbarProminent && !toolbarProminentTitle,\r\n      'md-toolbar-relative--prominent': toolbarProminent || toolbarProminentTitle,\r\n    });\r\n\r\n    let nav;\r\n    if (temporary || persistent) {\r\n      nav = (\r\n        <Button\r\n          key=\"nav\"\r\n          onClick={this._toggleVisibility}\r\n          disabled={persistent && visible}\r\n          icon\r\n          iconEl={getDeprecatedIcon(\r\n            menuIconClassName || temporaryIconClassName,\r\n            menuIconChildren || temporaryIconChildren,\r\n            temporaryIcon\r\n          )}\r\n        />\r\n      );\r\n    }\r\n\r\n    let closeButton;\r\n    if (persistent) {\r\n      closeButton = <CloseButton />;\r\n    }\r\n\r\n    if (!drawerHeader && includeDrawerHeader) {\r\n      drawerHeader = (\r\n        <Toolbar\r\n          key=\"drawer-header\"\r\n          title={drawerTitle}\r\n          actions={visible && nav ? closeButton : null}\r\n          className={cn('md-divider-border md-divider-border--bottom', {\r\n            [toolbarRelative]: clipped || floating,\r\n          })}\r\n        >\r\n          {drawerHeaderChildren}\r\n          <JumpToContentLink />\r\n        </Toolbar>\r\n      );\r\n    }\r\n    let miniDrawer;\r\n    if (mini) {\r\n      let miniList;\r\n      if (extractMini) {\r\n        miniList = (\r\n          <List\r\n            id={miniNavItemsId}\r\n            key=\"mini-nav-items\"\r\n            style={miniNavStyle}\r\n            className={cn(miniNavClassName, toolbarRelative)}\r\n          >\r\n            {navItems.map(toMiniListItem)}\r\n          </List>\r\n        );\r\n      }\r\n\r\n      miniDrawer = (\r\n        <Drawer\r\n          id={miniDrawerId}\r\n          key=\"mini-drawer\"\r\n          type={drawerType}\r\n          renderNode={renderNode}\r\n          aria-hidden={visible}\r\n          style={miniDrawerStyle}\r\n          className={miniDrawerClassName}\r\n        >\r\n          {miniDrawerHeader}\r\n          {miniList}\r\n          {miniDrawerChildren}\r\n        </Drawer>\r\n      );\r\n    }\r\n\r\n    const desktopOffset = !clipped && !floating && offset;\r\n\r\n    return (\r\n      <div id={id} style={style} className={className}>\r\n        <Toolbar\r\n          id={toolbarId}\r\n          colored={toolbarThemeType === 'colored'}\r\n          themed={toolbarThemeType === 'themed'}\r\n          singleColor={toolbarSingleColor}\r\n          style={toolbarStyle}\r\n          className={cn({\r\n            'md-toolbar--over-drawer': clipped || floating || (mini && !visible),\r\n          }, toolbarClassName)}\r\n          title={toolbarTitle}\r\n          titleMenu={toolbarTitleMenu}\r\n          prominent={toolbarProminent}\r\n          prominentTitle={toolbarProminentTitle}\r\n          titleStyle={toolbarTitleStyle}\r\n          titleClassName={cn({\r\n            'md-title--drawer-active': contentActive,\r\n            'md-transition--deceleration': offset && visible,\r\n            'md-transition--acceleration': offset && !visible,\r\n            'md-title--permanent-offset': desktopOffset && isPermanent(drawerType),\r\n            'md-title--persistent-offset': desktopOffset && persistent,\r\n          }, toolbarTitleClassName)}\r\n          nav={nav}\r\n          actions={toolbarActions}\r\n          fixed\r\n          zDepth={toolbarZDepth}\r\n        >\r\n          {toolbarChildren}\r\n        </Toolbar>\r\n        {miniDrawer}\r\n        <Drawer\r\n          {...props}\r\n          id={drawerId}\r\n          constantType={constantDrawerType}\r\n          transitionDuration={drawerTransitionDuration}\r\n          header={drawerHeader}\r\n          style={drawerStyle}\r\n          className={drawerClassName}\r\n          navItems={navItems}\r\n          renderNode={renderNode}\r\n          mobileType={mobileType}\r\n          tabletType={tabletType}\r\n          desktopType={desktopType}\r\n          type={getNonMiniType(drawerType)}\r\n          visible={visible}\r\n          zDepth={drawerZDepth}\r\n          onVisibilityChange={this._handleVisibility}\r\n          onMediaTypeChange={this._handleTypeChange}\r\n        >\r\n          {drawerChildren}\r\n        </Drawer>\r\n        <CSSTransitionGroup\r\n          {...contentProps}\r\n          id={contentId}\r\n          component={Content}\r\n          transitionName={transitionName}\r\n          transitionEnter={!!transitionEnterTimeout}\r\n          transitionEnterTimeout={transitionEnterTimeout}\r\n          transitionLeave={!!transitionLeaveTimeout}\r\n          transitionLeaveTimeout={transitionLeaveTimeout}\r\n          tabIndex={-1}\r\n          style={contentStyle}\r\n          className={cn('md-navigation-drawer-content', {\r\n            'md-navigation-drawer-content--active': contentActive,\r\n            'md-navigation-drawer-content--inactive': !visible,\r\n            'md-navigation-drawer-content--prominent-offset': toolbarProminent || toolbarProminentTitle,\r\n            'md-transition--deceleration': visible,\r\n            'md-transition--acceleration': !visible,\r\n            'md-drawer-relative': offset,\r\n            'md-drawer-relative--mini': mini && (!visible || temporary),\r\n          }, toolbarRelative, contentClassName)}\r\n        >\r\n          {children}\r\n        </CSSTransitionGroup>\r\n        {footer}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/**\r\n * Checks if a variable provided is defined and a correctly formatted date.\r\n *\r\n * Examples:\r\n * - isValidDate(null) -> false\r\n * - isValidDate('') -> false\r\n * - isValidDate(new Date('23--33')) - false (malformed date)\r\n * - isValidDate(new Date()) -> true\r\n *\r\n * @param d - Any value that should be checked if it is a valid date\r\n * @return {boolean} true if it is a valid date.\r\n */\r\nexport default function isValidDate(d) {\r\n  // just checking if getTime is a function is ridiculously quicker than instanceof Date\r\n  // and _seems_ safe enough\r\n  return !!d && typeof d.getTime === 'function' && d.getTime() === d.getTime();\r\n}\r\n","import isValidDate from './isValidDate';\r\n\r\n/**\r\n * Gets the last day in a month as a new Date.\r\n *\r\n * @param {Date} date - The date to get the last date in a month for\r\n * @return {Date} the last day in the month as a date object or null.\r\n */\r\nexport default function getLastDay(date) {\r\n  if (!isValidDate(date)) {\r\n    return null;\r\n  }\r\n\r\n  return new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n}\r\n","import isValidDate from './isValidDate';\r\nimport getDaysInMonth from './getDaysInMonth';\r\n\r\n\r\n/**\r\n * Adds the specified number of months to a provided date. If the date\r\n * is null, an invalid formatted date, or not a Date instance, null\r\n * will be returned instead.\r\n *\r\n * When a new month is returned, it will make sure that the date matches\r\n * the date in the old month if possible, if the new month does not have\r\n * include the new date, the `newMonthDate` will be used instead.\r\n *\r\n * @param {Date} date - The date to update\r\n * @param {number} amount - The number of months to add. This can be positive\r\n *    or negative.\r\n * @param {number=1} newMonthDate - An optional date to set in the new month\r\n *    if the new month does not have the old date.\r\n * @return {Date} a new date with the number of days added or null.\r\n */\r\nexport default function addMonth(date, amount, newMonthDate) {\r\n  if (!isValidDate(date)) {\r\n    return null;\r\n  } else if (amount === 0) {\r\n    return new Date(date);\r\n  }\r\n\r\n  if (!newMonthDate) { // 0 is invalid for this case\r\n    newMonthDate = date.getDate();\r\n  }\r\n\r\n  const d = new Date(date);\r\n  d.setDate(1); // reset to first day to prevent month overflows\r\n  d.setMonth(d.getMonth() + amount);\r\n\r\n  if (newMonthDate !== 1 && newMonthDate <= getDaysInMonth(d)) {\r\n    // set the date back to the correct day if it still exists within the month\r\n    d.setDate(newMonthDate);\r\n  }\r\n\r\n  return d;\r\n}\r\n","import getLastDay from './getLastDay';\r\n\r\n/**\r\n * Gets the number of days in a month for the provided date.\r\n *\r\n * @param {Date} date - The date to get the number of days for\r\n * @return {number} the number of days in the month or -1 if it is false-ish\r\n *    or an invalid date object.\r\n */\r\nexport default function getDaysInMonth(date) {\r\n  const day = getLastDay(date);\r\n  return day === null ? -1 : day.getDate();\r\n}\r\n","import addDay from './addDay';\r\nimport addMonth from './addMonth';\r\nimport addYear from './addYear';\r\n\r\n/**\r\n * Adds a given amount to a date.\r\n *\r\n * @param {Date} date - The date to add\r\n * @param {number} amount - The amount to add\r\n * @param {string} part - The date part to add to. ['D', 'M', 'Y']\r\n * @param {number=1} newMonthDate - An optional date to set in the new month\r\n *    if the new month does not have the old date. This only applies to month\r\n *    addition.\r\n * @return a new Date with the part added or the date if the part is not valid.\r\n */\r\nexport default function addDate(date, amount, part, newMonthDate) {\r\n  switch (part) {\r\n    case 'D':\r\n      return addDay(date, amount);\r\n    case 'M':\r\n      return addMonth(date, amount, newMonthDate);\r\n    case 'Y':\r\n      return addYear(date, amount);\r\n    default:\r\n      return date;\r\n  }\r\n}\r\n","import isValidDate from './isValidDate';\r\n\r\n/**\r\n * Adds the specified number of days to a provided date. If the date\r\n * is null, an invalid formatted date, or not a Date instance, null\r\n * will be returned instead.\r\n *\r\n * @param {Date} date - The date to update\r\n * @param {number} amount - The number of days to add. This can be positive\r\n *    or negative.\r\n * @return {Date} a new date with the number of days added or null.\r\n */\r\nexport default function addDay(date, amount) {\r\n  if (!isValidDate(date)) {\r\n    return null;\r\n  }\r\n\r\n  const d = new Date(date);\r\n  d.setDate(d.getDate() + amount);\r\n  return d;\r\n}\r\n","import isValidDate from './isValidDate';\r\n\r\n/**\r\n * Adds the specified number of years to a provided date. If the date\r\n * is null, an invalid formatted date, or not a Date instance, null\r\n * will be returned instead.\r\n *\r\n * @param {Date} date - The date to update\r\n * @param {number} amount - The number of years to add. This can be positive\r\n *    or negative.\r\n * @return {Date} a new date with the number of years added or null.\r\n */\r\nexport default function addYear(date, amount) {\r\n  if (!isValidDate(date)) {\r\n    return null;\r\n  }\r\n\r\n  const d = new Date(date);\r\n  d.setFullYear(d.getFullYear() + amount);\r\n\r\n  return d;\r\n}\r\n","import isSameYear from './isSameYear';\r\n\r\n/**\r\n * Checks if two dates are part of the same month. This will also\r\n * make sure the dates are part of the same year.\r\n *\r\n * @param {Date} d1 - The first date to compare.\r\n * @param {Date} d2 - The second date to compare.\r\n * @param {boolean=false} bothNullValue - boolean for what should be returned if\r\n *  both values are null.\r\n * @return {boolean} true if both the dates are defined and part of the same year and month\r\n *  or if both values are null it will return the `bothNullValue`\r\n */\r\nexport default function isSameMonth(d1, d2, bothNullValue = false) {\r\n  if (!d1 && !d2) {\r\n    return bothNullValue;\r\n  }\r\n\r\n  return isSameYear(d1, d2, bothNullValue) && d1.getMonth() === d2.getMonth();\r\n}\r\n","import isValidDate from './isValidDate';\r\n\r\n/**\r\n * Checks if two dates are part of the same year.\r\n *\r\n * @param {Date} d1 - The first date to compare.\r\n * @param {Date} d2 - The second date to compare.\r\n * @param {boolean=false} bothNullValue - boolean for what should be returned if\r\n *  both values are null.\r\n * @return {boolean} true if both the dates are defined and part of the same year or\r\n *  if both values are null it will return the `bothNullValue`.\r\n */\r\nexport default function isSameYear(d1, d2, bothNullValue = false) {\r\n  if (!d1 && !d2) {\r\n    return bothNullValue;\r\n  } else if (!isValidDate(d1) || !isValidDate(d2)) {\r\n    return false;\r\n  }\r\n\r\n  return d1.getFullYear() === d2.getFullYear();\r\n}\r\n","import isSameMonth from './isSameMonth';\r\n\r\n/**\r\n * Checks if two dates are part of the same date. This will also\r\n * make sure the dates are part of the same year and month.\r\n *\r\n * @param {Date} d1 - The first date to compare.\r\n * @param {Date} d2 - The second date to compare.\r\n * @param {boolean=false} bothNullValue - boolean for what should be returned if\r\n *  both values are null.\r\n * @return {boolean} true if both the dates are defined and part of the same year, month, and day\r\n *  or if both values are null it will return the `bothNullValue`.\r\n */\r\nexport default function isSameDay(d1, d2, bothNullValue = false) {\r\n  if (!d1 && !d2) {\r\n    return bothNullValue;\r\n  }\r\n\r\n  return isSameMonth(d1, d2, bothNullValue) && d1.getDate() === d2.getDate();\r\n}\r\n","/** @module utils/DateUtils/DateTimeFormat */\r\n\r\n/**\r\n * A _really_ terrible DateTimeFormat mock if it is not available in\r\n * the browser or node version.\r\n */\r\nconst DateTimeFormat = (() => {\r\n  if (typeof Intl !== 'undefined' && typeof Intl.DateTimeFormat !== 'undefined') {\r\n    return Intl.DateTimeFormat;\r\n  }\r\n\r\n  // Very bad 'mock' of Intl.DateTimeFormat\r\n  return class DateTimeFormat { // eslint-disable-line no-shadow\r\n    constructor(locales, formatOptions) {\r\n      this.locales = locales;\r\n      this.options = formatOptions;\r\n    }\r\n\r\n    format(date) {\r\n      return date.toLocaleString();\r\n    }\r\n  };\r\n})();\r\n\r\nexport default DateTimeFormat;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\n/**\r\n * The `PickerControl` component is the button that goes in the header\r\n * of a `Picker` component. It is used to switch the view of the `Picker`\r\n * from state to state.\r\n *\r\n * For example, this is the year and date views for the `DatePicker`.\r\n */\r\nexport default class PickerControl extends PureComponent {\r\n  static propTypes = {\r\n    className: PropTypes.string,\r\n    active: PropTypes.bool.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n    children: PropTypes.node.isRequired,\r\n  };\r\n\r\n  render() {\r\n    const { className, active, ...props } = this.props;\r\n    return (\r\n      <button\r\n        {...props}\r\n        type=\"button\"\r\n        className={cn('md-btn md-pointer--hover md-picker-control md-picker-text', {\r\n          'md-picker-text--active': active,\r\n        }, className)}\r\n      />\r\n    );\r\n  }\r\n}\r\n","/* eslint-disable new-cap */\r\nimport React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport PickerControl from './PickerControl';\r\n\r\n/**\r\n * The `DatePickerHeader` component is the component that holds the\r\n * current year and the current date. It allows the user to switch\r\n * between calendar and year picker mode.\r\n */\r\nexport default class DatePickerHeader extends PureComponent {\r\n  static propTypes = {\r\n    className: PropTypes.string,\r\n    DateTimeFormat: PropTypes.func.isRequired,\r\n    locales: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.arrayOf(PropTypes.string),\r\n    ]).isRequired,\r\n    calendarTempDate: PropTypes.instanceOf(Date).isRequired,\r\n    calendarMode: PropTypes.oneOf(['calendar', 'year']).isRequired,\r\n    changeCalendarMode: PropTypes.func.isRequired,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = this._getFormattedDate(props);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { DateTimeFormat, locales, calendarTempDate, changeCalendarMode } = this.props;\r\n    if (DateTimeFormat !== nextProps.DateTimeFormat\r\n      || locales !== nextProps.locales\r\n      || calendarTempDate !== nextProps.calendarTempDate\r\n      || changeCalendarMode !== nextProps.changeCalendarMode) {\r\n      this.setState(this._getFormattedDate(nextProps));\r\n    }\r\n  }\r\n\r\n  _getFormattedDate({ DateTimeFormat, locales, calendarTempDate }) {\r\n    return {\r\n      year: DateTimeFormat(locales, { year: 'numeric' }).format(calendarTempDate),\r\n      weekday: DateTimeFormat(locales, { weekday: 'short' }).format(calendarTempDate),\r\n      date: DateTimeFormat(locales, { month: 'short', day: '2-digit' }).format(calendarTempDate),\r\n    };\r\n  }\r\n\r\n  _selectYear = (e) => {\r\n    this.props.changeCalendarMode('year', e);\r\n  };\r\n\r\n  _selectCalendar = (e) => {\r\n    this.props.changeCalendarMode('calendar', e);\r\n  };\r\n\r\n  render() {\r\n    const { year, weekday, date } = this.state;\r\n    const { calendarMode, className } = this.props;\r\n    return (\r\n      <header className={cn('md-picker-header', className)}>\r\n        <PickerControl onClick={this._selectYear} active={calendarMode === 'year'}>\r\n          <h6 className=\"md-subheading-1\">{year}</h6>\r\n        </PickerControl>\r\n        <PickerControl onClick={this._selectCalendar} active={calendarMode === 'calendar'}>\r\n          <h4 className=\"md-display-1\">{`${weekday},`}&nbsp;</h4>\r\n          <h4 className=\"md-display-1\">{date}</h4>\r\n        </PickerControl>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import isValidDate from './isValidDate';\r\n\r\n/**\r\n * Removes all the time parts (hours, minutes, seconds, milliseconds) from a date.\r\n * The hour of the stripped time is set to 1 by default to help with cross-browser\r\n * date implementations and how hour 0 sometimes is the previous day.\r\n *\r\n * @param {Date} date the date to strip\r\n * @param {number=0} hours - the fake hours to set for the stripped time date.\r\n * @return a new Date with the time stripped.\r\n */\r\nexport default function stripTime(date, hours = 0) {\r\n  if (!isValidDate(date)) {\r\n    return null;\r\n  }\r\n\r\n  const d = new Date(date);\r\n  d.setHours(hours, 0, 0, 0);\r\n\r\n  return d;\r\n}\r\n","import isValidDate from './isValidDate';\r\n\r\n/**\r\n * Takes in a date and returns a new date at the specified day of week.\r\n *\r\n * Examples:\r\n * // to Sunday\r\n * - toDayOfWeek(new Date(2018, 0, 1), 0) == new Date(2017, 11, 31)\r\n *\r\n * // to Monday\r\n * - toDayOfWeek(new Date(2018, 0, 1), 1) == new Date(2018, 0, 1)\r\n *\r\n * @param {Date} date - The date to convert to a day of week\r\n * @param {number=0} dow - The day of the week to convert to\r\n * @return {Date} the new date set at the day of week or null if the\r\n *    date is invalid or false-ish.\r\n */\r\nexport default function toDayOfWeek(date, dow = 0) {\r\n  if (!isValidDate(date)) {\r\n    return null;\r\n  }\r\n\r\n  const d = new Date(date);\r\n  const day = date.getDay();\r\n  const diff = (d.getDate() - day) + dow;\r\n  return new Date(d.setDate(diff));\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport themeColors from '../utils/themeColors';\r\n\r\n/**\r\n * This component renders a selectable date in the `CalendarMonth` component.\r\n */\r\nexport default class CalendarDate extends PureComponent {\r\n  static propTypes = {\r\n    className: PropTypes.string,\r\n    date: PropTypes.instanceOf(Date).isRequired,\r\n    DateTimeFormat: PropTypes.func.isRequired,\r\n    locales: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.arrayOf(PropTypes.string),\r\n    ]).isRequired,\r\n    disabled: PropTypes.bool,\r\n    onClick: PropTypes.func.isRequired,\r\n    active: PropTypes.bool,\r\n    today: PropTypes.bool,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...this._getFormattedDate(props), desktopActive: false };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { DateTimeFormat, locales, date } = this.props;\r\n    if (DateTimeFormat !== nextProps.DateTimeFormat || locales !== nextProps.locales || date !== nextProps.date) {\r\n      this.setState(this._getFormattedDate(nextProps));\r\n    }\r\n  }\r\n\r\n  _getFormattedDate({ DateTimeFormat, locales, date }) {\r\n    return {\r\n      date: new DateTimeFormat(locales, { day: 'numeric' }).format(date),\r\n    };\r\n  }\r\n\r\n  _setFocus = (btn) => {\r\n    if (btn && this.props.active) {\r\n      btn.focus();\r\n    }\r\n  };\r\n\r\n  _handleClick = (e) => {\r\n    this.props.onClick(new Date(this.props.date), e);\r\n  };\r\n\r\n  _setActive = () => {\r\n    if (!this.props.disabled) {\r\n      this.setState({ desktopActive: true });\r\n    }\r\n  };\r\n\r\n  _setInactive = () => {\r\n    if (!this.props.disabled) {\r\n      this.setState({ desktopActive: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { date, desktopActive } = this.state;\r\n    const { disabled, active, today, className } = this.props;\r\n\r\n    const fullyActive = today && !active && !desktopActive;\r\n    return (\r\n      <button\r\n        type=\"button\"\r\n        ref={this._setFocus}\r\n        onFocus={this._setActive}\r\n        onBlur={this._setInactive}\r\n        onMouseOver={this._setActive}\r\n        onMouseLeave={this._setInactive}\r\n        className={cn('md-calendar-date md-calendar-date--btn', {\r\n          'md-calendar-date--btn-active': active || desktopActive,\r\n          'md-pointer--hover': !disabled,\r\n        }, themeColors({ disabled, primary: fullyActive }), 'md-btn', className)}\r\n        onClick={this._handleClick}\r\n        disabled={disabled}\r\n      >\r\n        <span\r\n          className={cn('md-calendar-date--date', {\r\n            'md-picker-text--active': active || desktopActive,\r\n            'md-font-bold': fullyActive,\r\n          })}\r\n        >\r\n          {date}\r\n        </span>\r\n      </button>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport addDate from '../utils/dates/addDate';\r\nimport getLastDay from '../utils/dates/getLastDay';\r\nimport stripTime from '../utils/dates/stripTime';\r\nimport toDayOfWeek from '../utils/dates/toDayOfWeek';\r\n\r\nimport CalendarDate from './CalendarDate';\r\n\r\n/**\r\n * This component renders a month for the calendar view of the `DatePicker`.\r\n */\r\nexport default class CalendarMonth extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * A className to apply.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * The current selected date of the calendar. This is\r\n     * the date after hitting the Ok button or `value` || `defaultValue`.\r\n     */\r\n    calendarDate: PropTypes.instanceOf(Date).isRequired,\r\n\r\n    /**\r\n     * The current selected date of the calendar before verifying\r\n     * the new date.\r\n     */\r\n    calendarTempDate: PropTypes.instanceOf(Date).isRequired,\r\n\r\n    /**\r\n     * An optional min date for the calendar. This will disable any\r\n     * dates that come before this date in the month.\r\n     */\r\n    minDate: PropTypes.instanceOf(Date),\r\n\r\n    /**\r\n     * An optional max date for the calendar. This will disable any\r\n     * dates that come after this date in the month.\r\n     */\r\n    maxDate: PropTypes.instanceOf(Date),\r\n\r\n    /**\r\n     * A function to call that will select a new date.\r\n     */\r\n    onCalendarDateClick: PropTypes.func.isRequired,\r\n\r\n    /**\r\n     * The first day of week: 0 for Sunday, 1 for Monday, 2 for Tuesday, and so on.\r\n     */\r\n    firstDayOfWeek: PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6]),\r\n\r\n    /**\r\n     * True if weekends are to be greyed out.\r\n     */\r\n    disableWeekEnds: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional className to apply to a date.\r\n     */\r\n    dateClassName: PropTypes.string,\r\n\r\n    /**\r\n     * True if dates from adjacent months should be shown.\r\n     */\r\n    showAllDays: PropTypes.bool,\r\n    disableOuterDates: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional className to apply to a date from an adjacent month.\r\n     */\r\n    outerDateClassName: PropTypes.string,\r\n    DateTimeFormat: PropTypes.func.isRequired,\r\n    locales: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.arrayOf(PropTypes.string),\r\n    ]).isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    firstDayOfWeek: 0,\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      calendarDate,\r\n      calendarTempDate,\r\n      onCalendarDateClick,\r\n      minDate,\r\n      maxDate,\r\n      DateTimeFormat,\r\n      locales,\r\n      className,\r\n      firstDayOfWeek,\r\n      disableWeekEnds,\r\n      dateClassName,\r\n      showAllDays,\r\n      outerDateClassName,\r\n      disableOuterDates,\r\n      ...props\r\n    } = this.props;\r\n\r\n    const days = [];\r\n    const firstDay = stripTime(calendarDate);\r\n    firstDay.setDate(1);\r\n    const lastDay = getLastDay(calendarDate);\r\n    let currentDate = toDayOfWeek(firstDay, 0);\r\n    let endDate = toDayOfWeek(lastDay, 6);\r\n    const activeDateTime = stripTime(calendarTempDate).getTime();\r\n    const todayTime = new Date().getTime();\r\n\r\n    if (firstDayOfWeek) {\r\n      currentDate = addDate(currentDate, firstDayOfWeek > firstDay.getDay() ? firstDayOfWeek - 7 : firstDayOfWeek, 'D');\r\n      endDate = addDate(endDate, firstDayOfWeek > lastDay.getDay() ? firstDayOfWeek - 7 : firstDayOfWeek, 'D');\r\n    }\r\n\r\n    while (currentDate <= endDate) {\r\n      const key = `${currentDate.getMonth()}-${currentDate.getDate()}`;\r\n      const currentMonth = currentDate.getMonth() === calendarDate.getMonth();\r\n\r\n      let date;\r\n      if (currentMonth || showAllDays) {\r\n        const time = currentDate.getTime();\r\n        const isMinDateDisabled = minDate && minDate.getTime() > time;\r\n        const isMaxDateDisabled = maxDate && maxDate.getTime() < time;\r\n        const isWeekendDisabled = disableWeekEnds && (currentDate.getDay() === 0 || currentDate.getDay() === 6);\r\n        const disabled = (!currentMonth && disableOuterDates)\r\n          || isMinDateDisabled\r\n          || isMaxDateDisabled\r\n          || isWeekendDisabled;\r\n\r\n        date = (\r\n          <CalendarDate\r\n            key={key}\r\n            className={cn(dateClassName, { [outerDateClassName]: !currentMonth && outerDateClassName })}\r\n            today={time === todayTime}\r\n            active={time === activeDateTime}\r\n            disabled={disabled}\r\n            onClick={onCalendarDateClick}\r\n            date={currentDate}\r\n            DateTimeFormat={DateTimeFormat}\r\n            locales={locales}\r\n          />\r\n        );\r\n      } else {\r\n        date = <div key={key} className=\"md-calendar-date\" />;\r\n      }\r\n\r\n      days.push(date);\r\n      currentDate = addDate(currentDate, 1, 'D');\r\n    }\r\n\r\n    return (\r\n      <div className={cn('md-calendar-month', className)} {...props}>\r\n        {days}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import isValidDate from './isValidDate';\r\n\r\n/**\r\n * Checks if a date is the month before another date without time\r\n *\r\n * @param {Date} date the date to check if it is before the other\r\n * @param {Date} toCompare the date to compare to\r\n * @return true if the date is before the other date's first day of month.\r\n */\r\nexport default function isMonthBefore(date, toCompare) {\r\n  if (!isValidDate(date) || !isValidDate(toCompare)) {\r\n    return false;\r\n  }\r\n\r\n  const d1 = new Date(date.getFullYear(), date.getMonth(), 1);\r\n  const d2 = new Date(toCompare.getFullYear(), toCompare.getMonth() - 1, 1);\r\n  return d1 > d2;\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport themeColors from '../utils/themeColors';\r\nimport isMonthBefore from '../utils/dates/isMonthBefore';\r\nimport toDayOfWeek from '../utils/dates/toDayOfWeek';\r\nimport addDate from '../utils/dates/addDate';\r\nimport Button from '../Buttons/Button';\r\n\r\n/**\r\n * This component renders the controls for a `DatePicker`'s Calendar.\r\n * This will render a next and previous month button along with the\r\n * current month/year. It also renders the abbreviiations for the days\r\n * of the week.\r\n */\r\nexport default class CalendarHeader extends PureComponent {\r\n  static propTypes = {\r\n    className: PropTypes.string,\r\n    children: PropTypes.node,\r\n    date: PropTypes.instanceOf(Date).isRequired,\r\n    minDate: PropTypes.instanceOf(Date),\r\n    maxDate: PropTypes.instanceOf(Date),\r\n    previousIcon: PropTypes.element,\r\n    onPreviousClick: PropTypes.func.isRequired,\r\n    nextIcon: PropTypes.node,\r\n    onNextClick: PropTypes.func.isRequired,\r\n    DateTimeFormat: PropTypes.func.isRequired,\r\n    locales: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.arrayOf(PropTypes.string),\r\n    ]).isRequired,\r\n    /**\r\n     * The first day of week: 0 for Sunday, 1 for Monday, 2 for Tuesday, and so on.\r\n     */\r\n    firstDayOfWeek: PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6]),\r\n    /**\r\n     * An optional className to apply to the title.\r\n     */\r\n    titleClassName: PropTypes.string,\r\n    /**\r\n     * The DateTimeFormat options to apply to format the title.\r\n     */\r\n    titleFormat: PropTypes.shape({\r\n      era: PropTypes.oneOf(['narrow', 'short', 'long']),\r\n      year: PropTypes.oneOf(['numeric', '2-digit']),\r\n      month: PropTypes.oneOf(['numeric', '2-digit', 'narrow', 'short', 'long']),\r\n    }),\r\n    /**\r\n     * An optional className to apply to a weekday.\r\n     */\r\n    weekdayClassName: PropTypes.string,\r\n    /**\r\n     * The DateTimeFormat option to apply to format a weekday.\r\n     */\r\n    weekdayFormat: PropTypes.oneOf(['narrow', 'short', 'long']),\r\n  };\r\n\r\n  static defaultProps = {\r\n    firstDayOfWeek: 0,\r\n    titleFormat: { month: 'long', year: 'numeric' },\r\n    weekdayFormat: 'narrow',\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = this._createState(props);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { DateTimeFormat, locales, date } = this.props;\r\n    if (DateTimeFormat !== nextProps.DateTimeFormat || locales !== nextProps.locales || date !== nextProps.date) {\r\n      this.setState(this._createState(nextProps));\r\n    }\r\n  }\r\n\r\n  _createState({\r\n    DateTimeFormat,\r\n    locales,\r\n    date,\r\n    firstDayOfWeek,\r\n    titleFormat,\r\n    weekdayClassName,\r\n    weekdayFormat,\r\n  } = this.props) {\r\n    const firstDay = toDayOfWeek(date, firstDayOfWeek);\r\n    const formatter = new DateTimeFormat(locales, { weekday: weekdayFormat });\r\n    const dows = [];\r\n    for (let i = 0; i < 7; i++) {\r\n      const dow = formatter.format(addDate(firstDay, i, 'D'));\r\n      dows.push(\r\n        <h4\r\n          key={i}\r\n          className={cn('md-calendar-date md-calendar-dow', themeColors({ disabled: true }), weekdayClassName)}\r\n        >\r\n          {dow}\r\n        </h4>\r\n      );\r\n    }\r\n\r\n    return {\r\n      dows,\r\n      title: new DateTimeFormat(locales, titleFormat).format(date),\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { dows, title } = this.state;\r\n    const {\r\n      date,\r\n      minDate,\r\n      maxDate,\r\n      onPreviousClick,\r\n      previousIcon,\r\n      onNextClick,\r\n      nextIcon,\r\n      titleClassName,\r\n    } = this.props;\r\n\r\n    const isPreviousDisabled = isMonthBefore(minDate, date);\r\n    const isNextDisabled = isMonthBefore(date, maxDate);\r\n    return (\r\n      <header className=\"md-calendar-header\">\r\n        <div className=\"md-calendar-controls\">\r\n          <Button\r\n            icon\r\n            onClick={onPreviousClick}\r\n            disabled={isPreviousDisabled}\r\n            className=\"md-calendar-control\"\r\n            iconEl={previousIcon}\r\n          />\r\n          <h4 className={cn('md-title', titleClassName)}>{title}</h4>\r\n          <Button\r\n            icon\r\n            onClick={onNextClick}\r\n            disabled={isNextDisabled}\r\n            className=\"md-calendar-control\"\r\n            iconEl={nextIcon}\r\n          />\r\n        </div>\r\n        <div className=\"md-calendar-dows\">\r\n          {dows}\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport CalendarMonth from './CalendarMonth';\r\nimport CalendarHeader from './CalendarHeader';\r\n\r\nexport default class DatePickerCalendar extends PureComponent {\r\n  static propTypes = {\r\n    className: PropTypes.string,\r\n    previousIcon: PropTypes.element,\r\n    onPreviousClick: PropTypes.func.isRequired,\r\n    nextIcon: PropTypes.element,\r\n    onNextClick: PropTypes.func.isRequired,\r\n    onCalendarDateClick: PropTypes.func.isRequired,\r\n    calendarDate: PropTypes.instanceOf(Date).isRequired,\r\n    calendarTempDate: PropTypes.instanceOf(Date).isRequired,\r\n    DateTimeFormat: PropTypes.func.isRequired,\r\n    locales: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.arrayOf(PropTypes.string),\r\n    ]).isRequired,\r\n    minDate: PropTypes.instanceOf(Date),\r\n    maxDate: PropTypes.instanceOf(Date),\r\n\r\n    /**\r\n     * The first day of week: 0 for Sunday, 1 for Monday, 2 for Tuesday, and so on.\r\n     */\r\n    firstDayOfWeek: PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6]),\r\n\r\n    /**\r\n     * True if weekends are to be greyed out.\r\n     */\r\n    disableWeekEnds: PropTypes.bool,\r\n\r\n    /**\r\n     * True if dates from adjacent months should be shown.\r\n     */\r\n    showAllDays: PropTypes.bool,\r\n    disableOuterDates: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional className to apply to a date in calendar.\r\n     */\r\n    dateClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional className to apply to a date from an adjacent month.\r\n     */\r\n    outerDateClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional className to apply to the title in calendar header.\r\n     */\r\n    titleClassName: PropTypes.string,\r\n\r\n    /**\r\n     * The DateTimeFormat options to apply to format the title in calendar header.\r\n     */\r\n    titleFormat: PropTypes.shape({\r\n      era: PropTypes.oneOf(['narrow', 'short', 'long']),\r\n      year: PropTypes.oneOf(['numeric', '2-digit']),\r\n      month: PropTypes.oneOf(['numeric', '2-digit', 'narrow', 'short', 'long']),\r\n    }),\r\n\r\n    /**\r\n     * An optional className to apply to a weekday in calendar header.\r\n     */\r\n    weekdayClassName: PropTypes.string,\r\n\r\n    /**\r\n     * The DateTimeFormat option to apply to format a weekday in calendar header.\r\n     */\r\n    weekdayFormat: PropTypes.oneOf(['narrow', 'short', 'long']),\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      className,\r\n      previousIcon,\r\n      onPreviousClick,\r\n      nextIcon,\r\n      onNextClick,\r\n      calendarDate,\r\n      calendarTempDate,\r\n      onCalendarDateClick,\r\n      DateTimeFormat,\r\n      locales,\r\n      minDate,\r\n      maxDate,\r\n      firstDayOfWeek,\r\n      disableWeekEnds,\r\n      showAllDays,\r\n      disableOuterDates,\r\n      dateClassName,\r\n      outerDateClassName,\r\n      titleClassName,\r\n      titleFormat,\r\n      weekdayClassName,\r\n      weekdayFormat,\r\n    } = this.props;\r\n\r\n    return (\r\n      <section className={cn('md-picker-content md-picker-content--calendar', className)}>\r\n        <CalendarHeader\r\n          date={calendarDate}\r\n          minDate={minDate}\r\n          maxDate={maxDate}\r\n          DateTimeFormat={DateTimeFormat}\r\n          locales={locales}\r\n          onPreviousClick={onPreviousClick}\r\n          previousIcon={previousIcon}\r\n          onNextClick={onNextClick}\r\n          nextIcon={nextIcon}\r\n          firstDayOfWeek={firstDayOfWeek}\r\n          titleClassName={titleClassName}\r\n          titleFormat={titleFormat}\r\n          weekdayClassName={weekdayClassName}\r\n          weekdayFormat={weekdayFormat}\r\n        />\r\n        <CalendarMonth\r\n          key={new DateTimeFormat(locales).format(calendarDate)}\r\n          calendarDate={calendarDate}\r\n          calendarTempDate={calendarTempDate}\r\n          onCalendarDateClick={onCalendarDateClick}\r\n          minDate={minDate}\r\n          maxDate={maxDate}\r\n          DateTimeFormat={DateTimeFormat}\r\n          locales={locales}\r\n          firstDayOfWeek={firstDayOfWeek}\r\n          disableWeekEnds={disableWeekEnds}\r\n          showAllDays={showAllDays}\r\n          disableOuterDates={disableOuterDates}\r\n          dateClassName={dateClassName}\r\n          outerDateClassName={outerDateClassName}\r\n        />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport themeColors from '../utils/themeColors';\r\n\r\n/**\r\n * This is a component for rendering a year in the Date Picker's Year picker\r\n * list.\r\n */\r\nexport default class Year extends PureComponent {\r\n  static propTypes = {\r\n    className: PropTypes.string,\r\n    active: PropTypes.bool.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n  };\r\n\r\n  state = { desktopActive: false };\r\n\r\n  _setActiveFocus = (btn) => {\r\n    if (btn && this.props.active) {\r\n      btn.focus();\r\n    }\r\n  };\r\n\r\n  _setActive = () => {\r\n    this.setState({ desktopActive: true });\r\n  };\r\n\r\n  _setInactive = () => {\r\n    this.setState({ desktopActive: false });\r\n  };\r\n\r\n  _handleClick = (e) => {\r\n    this.props.onClick(this.props.year, e);\r\n  };\r\n\r\n  render() {\r\n    const { desktopActive } = this.state;\r\n    const { active, className, year } = this.props;\r\n    return (\r\n      <button\r\n        type=\"button\"\r\n        ref={this._setActiveFocus}\r\n        className={cn('md-year', { 'md-year--active': active }, themeColors({\r\n          text: !active && !desktopActive,\r\n          primary: active || desktopActive,\r\n        }), 'md-btn md-pointer--hover md-full-width', className)}\r\n        onClick={this._handleClick}\r\n      >\r\n        {year}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport Year from './Year';\r\n\r\n/**\r\n * The `YearPicker` component is the Year view in a `DatePicker`. This\r\n * will display a list of years to select from within the given range.\r\n */\r\nexport default class YearPicker extends PureComponent {\r\n  static propTypes = {\r\n    className: PropTypes.string,\r\n    calendarTempDate: PropTypes.instanceOf(Date).isRequired,\r\n    onCalendarYearClick: PropTypes.func.isRequired,\r\n    yearsDisplayed: PropTypes.number.isRequired,\r\n    minDate: PropTypes.instanceOf(Date),\r\n    maxDate: PropTypes.instanceOf(Date),\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = this._getYearRange(props);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (this.props.yearsDisplayed !== nextProps.yearsDisplayed) {\r\n      this.setState(this._getFullYear(nextProps));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the current start and end years for the year picker.\r\n   *\r\n   * @param {Object} props - The current props to extract the year range from.\r\n   * @return {Object} an object containign the start and end years\r\n   */\r\n  _getYearRange({ minDate, maxDate, yearsDisplayed, calendarTempDate }) {\r\n    const year = calendarTempDate.getFullYear();\r\n    const range = !minDate && !maxDate\r\n      ? parseInt(yearsDisplayed / 2, 10)\r\n      : yearsDisplayed;\r\n\r\n    let startYear;\r\n    let endYear;\r\n    if (minDate && maxDate) {\r\n      startYear = minDate.getFullYear();\r\n      endYear = maxDate.getFullYear();\r\n    } else if (!minDate && !maxDate) {\r\n      startYear = year - range;\r\n      endYear = year + range;\r\n      if (yearsDisplayed % 2 === 0) {\r\n        endYear -= 1;\r\n      }\r\n    } else if (!maxDate) {\r\n      startYear = minDate.getFullYear();\r\n      endYear = startYear + yearsDisplayed - 1;\r\n    } else {\r\n      endYear = maxDate.getFullYear();\r\n      startYear = endYear - yearsDisplayed + 1;\r\n    }\r\n\r\n    return { startYear, endYear };\r\n  }\r\n\r\n  _setContainer(container) {\r\n    if (container === null) {\r\n      return;\r\n    }\r\n\r\n    const { offsetHeight, offsetWidth } = container;\r\n    const { offsetTop: top, offsetHeight: height } = container.querySelector('.md-year--active');\r\n\r\n    // Portrait seems to be 3/4 of the way while landscape is about 1/2\r\n    if (offsetHeight > offsetWidth) {\r\n      container.scrollTop = top - (offsetHeight * 3 / 4);\r\n    } else {\r\n      container.scrollTop = top - (offsetHeight / 2) + (height / 2);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { startYear, endYear } = this.state;\r\n\r\n    const currentYear = this.props.calendarTempDate.getFullYear();\r\n    const years = [];\r\n    for (let year = startYear; year <= endYear; year++) {\r\n      years.push(\r\n        <Year\r\n          key={year}\r\n          year={year}\r\n          active={year === currentYear}\r\n          onClick={this.props.onCalendarYearClick}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <section\r\n        className={cn('md-picker-content md-picker-content--year', this.props.className)}\r\n        ref={this._setContainer}\r\n      >\r\n        <ol className=\"md-years\">\r\n          {years}\r\n        </ol>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport DialogFooter from '../Dialogs/DialogFooter';\r\nimport DatePickerHeader from './DatePickerHeader';\r\nimport DatePickerCalendar from './DatePickerCalendar';\r\nimport YearPicker from './YearPicker';\r\n\r\nexport default class DatePicker extends PureComponent {\r\n  static propTypes = {\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    okLabel: PropTypes.node.isRequired,\r\n    okPrimary: PropTypes.bool.isRequired,\r\n    onOkClick: PropTypes.func.isRequired,\r\n    cancelLabel: PropTypes.node.isRequired,\r\n    cancelPrimary: PropTypes.bool.isRequired,\r\n    onCancelClick: PropTypes.func.isRequired,\r\n    DateTimeFormat: PropTypes.func.isRequired,\r\n    locales: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.arrayOf(PropTypes.string),\r\n    ]).isRequired,\r\n    calendarDate: PropTypes.instanceOf(Date).isRequired,\r\n    calendarTempDate: PropTypes.instanceOf(Date).isRequired,\r\n    calendarMode: PropTypes.oneOf(['calendar', 'year']).isRequired,\r\n    changeCalendarMode: PropTypes.func.isRequired,\r\n    icon: PropTypes.bool,\r\n    inline: PropTypes.bool,\r\n    displayMode: PropTypes.oneOf(['landscape', 'portrait']),\r\n\r\n    /**\r\n     * The first day of week: 0 for Sunday, 1 for Monday, 2 for Tuesday, and so on.\r\n     */\r\n    firstDayOfWeek: PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6]),\r\n\r\n    /**\r\n     * True if weekends are to be greyed out.\r\n     */\r\n    disableWeekEnds: PropTypes.bool,\r\n\r\n    /**\r\n     * True if dates from adjacent months should be shown in calendar.\r\n     */\r\n    showAllDays: PropTypes.bool,\r\n    disableOuterDates: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional className to apply to the header of date picker.\r\n     */\r\n    headerClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional className to apply to the content container of date picker.\r\n     */\r\n    contentClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional className to apply to the footer of date picker.\r\n     */\r\n    footerClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional className to apply to the calendar container of date picker.\r\n     */\r\n    calendarClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional className to apply to the year picker of date picker.\r\n     */\r\n    yearPickerClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional className to apply to a date in calendar.\r\n     */\r\n    calendarDateClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional className to apply to a date from an adjacent month in calendar.\r\n     */\r\n    calendarOuterDateClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional className to apply to the title in calendar header.\r\n     */\r\n    calendarTitleClassName: PropTypes.string,\r\n\r\n    /**\r\n     * The DateTimeFormat options to apply to format the title in calendar header.\r\n     */\r\n    calendarTitleFormat: PropTypes.shape({\r\n      era: PropTypes.oneOf(['narrow', 'short', 'long']),\r\n      year: PropTypes.oneOf(['numeric', '2-digit']),\r\n      month: PropTypes.oneOf(['numeric', '2-digit', 'narrow', 'short', 'long']),\r\n    }),\r\n\r\n    /**\r\n     * An optional className to apply to a weekday in calendar header.\r\n     */\r\n    calendarWeekdayClassName: PropTypes.string,\r\n\r\n    /**\r\n     * The DateTimeFormat option to apply to format a weekday in calendar header.\r\n     */\r\n    calendarWeekdayFormat: PropTypes.oneOf(['narrow', 'short', 'long']),\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      okLabel,\r\n      okPrimary,\r\n      onOkClick,\r\n      cancelLabel,\r\n      cancelPrimary,\r\n      onCancelClick,\r\n      DateTimeFormat,\r\n      locales,\r\n      calendarTempDate,\r\n      calendarMode,\r\n      changeCalendarMode,\r\n      style,\r\n      className,\r\n      inline,\r\n      icon,\r\n      displayMode,\r\n      firstDayOfWeek,\r\n      disableWeekEnds,\r\n      showAllDays,\r\n      disableOuterDates,\r\n      headerClassName,\r\n      contentClassName,\r\n      footerClassName,\r\n      calendarClassName,\r\n      yearPickerClassName,\r\n      calendarDateClassName,\r\n      calendarOuterDateClassName,\r\n      calendarTitleClassName,\r\n      calendarTitleFormat,\r\n      calendarWeekdayClassName,\r\n      calendarWeekdayFormat,\r\n      ...props\r\n    } = this.props;\r\n\r\n    let picker;\r\n    if (calendarMode === 'calendar') {\r\n      picker = (\r\n        <DatePickerCalendar\r\n          {...props}\r\n          key=\"calendar\"\r\n          className={calendarClassName}\r\n          calendarTempDate={calendarTempDate}\r\n          DateTimeFormat={DateTimeFormat}\r\n          locales={locales}\r\n          firstDayOfWeek={firstDayOfWeek}\r\n          disableWeekEnds={disableWeekEnds}\r\n          showAllDays={showAllDays}\r\n          disableOuterDates={disableOuterDates}\r\n          dateClassName={calendarDateClassName}\r\n          outerDateClassName={calendarOuterDateClassName}\r\n          titleClassName={calendarTitleClassName}\r\n          titleFormat={calendarTitleFormat}\r\n          weekdayClassName={calendarWeekdayClassName}\r\n          weekdayFormat={calendarWeekdayFormat}\r\n        />\r\n      );\r\n    } else {\r\n      picker = (\r\n        <YearPicker\r\n          {...props}\r\n          key=\"year\"\r\n          className={yearPickerClassName}\r\n          calendarTempDate={calendarTempDate}\r\n          DateTimeFormat={DateTimeFormat}\r\n          locales={locales}\r\n        />\r\n      );\r\n    }\r\n\r\n    const actions = [{\r\n      key: 'cancel',\r\n      onClick: onCancelClick,\r\n      primary: cancelPrimary,\r\n      secondary: !cancelPrimary,\r\n      label: cancelLabel,\r\n    }, {\r\n      key: 'ok',\r\n      onClick: onOkClick,\r\n      primary: okPrimary,\r\n      secondary: !okPrimary,\r\n      label: okLabel,\r\n    }];\r\n\r\n    return (\r\n      <div\r\n        style={style}\r\n        className={cn('md-picker md-picker--date', {\r\n          [`md-picker--${displayMode}`]: displayMode,\r\n          'md-picker--inline': inline,\r\n          'md-picker--inline-icon': inline && icon,\r\n        }, className)}\r\n      >\r\n        <DatePickerHeader\r\n          className={headerClassName}\r\n          DateTimeFormat={DateTimeFormat}\r\n          locales={locales}\r\n          calendarTempDate={calendarTempDate}\r\n          calendarMode={calendarMode}\r\n          changeCalendarMode={changeCalendarMode}\r\n        />\r\n        <div className={cn('md-picker-content-container', contentClassName)}>\r\n          {picker}\r\n          <DialogFooter\r\n            className={footerClassName}\r\n            actions={actions}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/* eslint-disable new-cap,no-shadow */\r\nimport React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\r\nimport deprecated from 'react-prop-types/lib/deprecated';\r\n\r\nimport { ESC, TAB } from '../constants/keyCodes';\r\nimport getField from '../utils/getField';\r\nimport handleWindowClickListeners from '../utils/EventUtils/handleWindowClickListeners';\r\nimport handleKeyboardAccessibility from '../utils/EventUtils/handleKeyboardAccessibility';\r\nimport controlled from '../utils/PropTypes/controlled';\r\nimport addDate from '../utils/dates/addDate';\r\nimport isSameDay from '../utils/dates/isSameDay';\r\nimport DateTimeFormat from '../utils/DateUtils/DateTimeFormat';\r\n\r\nimport Collapse from '../Helpers/Collapse';\r\nimport FontIcon from '../FontIcons/FontIcon';\r\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\r\nimport TextField from '../TextFields/TextField';\r\nimport Dialog from '../Dialogs/DialogContainer';\r\nimport DatePicker from './DatePicker';\r\n\r\n/**\r\n * The `DatePickerContainer` component is a wrapper for the main `DatePicker` component\r\n * to manage the state and _logic_ for rendering the `DatePicker`. This component will\r\n * either render inline or in a `Dialog` depending if the `inline` prop is set to `true`.\r\n *\r\n * NOTE: This component is actually exported as `DatePicker` when using the `import { member }` syntax.\r\n * The following two lines are equivalent:\r\n *\r\n * ```js\r\n * import { DatePicker } from 'react-md/lib/Pickers';\r\n * import DatePicker from 'react-md/lib/Pickers/DatePickerContainer';\r\n * ```\r\n */\r\nexport default class DatePickerContainer extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * An id for the text field in the date picker. This is require for a11y.\r\n     */\r\n    id: isRequiredForA11y(PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number,\r\n    ])),\r\n\r\n    /**\r\n     * An aria label for the dialog. This is required for a11y.\r\n     */\r\n    'aria-label': isRequiredForA11y(PropTypes.string),\r\n\r\n    /**\r\n     * An optional style to apply to the date picker's container.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the date picker's container.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the date picker.\r\n     */\r\n    pickerStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the date picker.\r\n     */\r\n    pickerClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional className to apply to the header of date picker.\r\n     */\r\n    pickerHeaderClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional className to apply to the content container of date picker.\r\n     */\r\n    pickerContentClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional className to apply to the footer of date picker.\r\n     */\r\n    pickerFooterClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional className to apply to the calendar container of date picker.\r\n     */\r\n    calendarClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional className to apply to the year picker of date picker.\r\n     */\r\n    yearPickerClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the input tag.\r\n     */\r\n    inputStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the input tag.\r\n     */\r\n    inputClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the text field's container.\r\n     */\r\n    textFieldStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the text field's container.\r\n     */\r\n    textFieldClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional icon to display with the date picker.\r\n     *\r\n     * @see {@link TextFields/TextField#leftIcon}\r\n     */\r\n    icon: PropTypes.node,\r\n\r\n    /**\r\n     * Boolean if the date picker is open by default.\r\n     */\r\n    defaultVisible: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional label to be displayed in the date picker's text\r\n     * field.\r\n     */\r\n    label: PropTypes.node,\r\n\r\n    /**\r\n     * An optional placeholder to be displayed in the date picker's text field.\r\n     */\r\n    placeholder: PropTypes.string,\r\n\r\n    /**\r\n     * The value of the date picker. This will make the date picker\r\n     * be a controlled component. This value should either be a\r\n     * formatted date string or a date object.\r\n     */\r\n    value: controlled(PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.instanceOf(Date),\r\n    ]), 'onChange', 'defaultValue'),\r\n\r\n    /**\r\n     * An optional default value to give for the date picker. This should\r\n     * either be a formatted date string or a date object.\r\n     */\r\n    defaultValue: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.instanceOf(Date),\r\n    ]),\r\n\r\n    /**\r\n     * An optional date to use when the calendar is opened for the first time.\r\n     * If this is omitted, it will either be the `defaultValue`, `value`, or\r\n     * today.\r\n     */\r\n    defaultCalendarDate: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.instanceOf(Date),\r\n    ]),\r\n\r\n    /**\r\n     * An optional function to call when the selected date is changed\r\n     * by hitting the OK button. The newly formatted date string,\r\n     * the new Date object, and the change event will be given.\r\n     *\r\n     * `onChange(dateString, dateObject, event)`.\r\n     */\r\n    onChange: PropTypes.func,\r\n\r\n    /**\r\n     * A function to format the dates since it should be formatted to the user's\r\n     * locale. This _should_ be the `Intl.DateTimeFormat` function. You\r\n     * can also create your own if you really wanted. Inadvisable though.\r\n     *\r\n     * See [intl-polyfill](https://github.com/andyearnshaw/Intl.js/) for more info.\r\n     */\r\n    DateTimeFormat: PropTypes.func.isRequired,\r\n\r\n    /**\r\n     * The locales to use for formatting the date. This will default to using\r\n     * the user's language in the browser or `'en-US'` when server rendering.\r\n     */\r\n    locales: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.arrayOf(PropTypes.string),\r\n    ]).isRequired,\r\n\r\n    /**\r\n     * The label to use for the ok button on the date picker.\r\n     */\r\n    okLabel: PropTypes.node.isRequired,\r\n\r\n    /**\r\n     * Boolean if the ok button should be styled with the primary color.\r\n     */\r\n    okPrimary: PropTypes.bool,\r\n\r\n    /**\r\n     * The label to use for the cancel button on the date picker.\r\n     */\r\n    cancelLabel: PropTypes.node.isRequired,\r\n\r\n    /**\r\n     * Boolean if the cancel button should be styled with the primary color.\r\n     */\r\n    cancelPrimary: PropTypes.bool,\r\n\r\n    /**\r\n     * The initial mode to open the calendar in.\r\n     */\r\n    defaultCalendarMode: PropTypes.oneOf(['calendar', 'year']),\r\n\r\n    /**\r\n     * The icon to use to display the previous month icon in the calendar.\r\n     */\r\n    previousIcon: PropTypes.node,\r\n\r\n    /**\r\n     * The icon to use to display the next month icon in the calendar.\r\n     */\r\n    nextIcon: PropTypes.node,\r\n\r\n    /**\r\n     * An optional min date to use for the date picker. This will prevent\r\n     * any dates before this time to be chosen.\r\n     */\r\n    minDate: PropTypes.instanceOf(Date),\r\n\r\n    /**\r\n     * An optional max date to use for the date picker. This will prevent\r\n     * any dates after this time to be chosen.\r\n     */\r\n    maxDate: (props, propName, component, ...others) => {\r\n      const err = PropTypes.instanceOf(Date)(props, propName, component, ...others);\r\n      if (err || !props.minDate || !props[propName]) {\r\n        return err;\r\n      }\r\n\r\n      const { minDate, maxDate } = props;\r\n      if (minDate > maxDate) {\r\n        return new Error(\r\n          `The min date: '${minDate}' is greater than the max date: '${maxDate}'`\r\n        );\r\n      }\r\n\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * Boolean if the date should automatically be selected when a user clicks\r\n     * on a new date instead of making them hit the ok button.\r\n     */\r\n    autoOk: PropTypes.bool,\r\n\r\n    /**\r\n     * The number of years to display.\r\n     */\r\n    yearsDisplayed: PropTypes.number,\r\n\r\n    /**\r\n     * Boolean if the date picker should be displayed inline instead of in a\r\n     * dialog.\r\n     */\r\n    inline: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional force of the display mode of the date picker.\r\n     * This _should_ not really be used since there are media queries\r\n     * to use the correct mode based on device orientation.\r\n     */\r\n    displayMode: PropTypes.oneOf(['landscape', 'portrait']),\r\n\r\n    /**\r\n     * The DateTimeFormat options to apply to format the date.\r\n     */\r\n    formatOptions: PropTypes.shape({\r\n      weekday: PropTypes.oneOf(['narrow', 'short', 'long']),\r\n      era: PropTypes.oneOf(['narrow', 'short', 'long']),\r\n      year: PropTypes.oneOf(['numeric', '2-digit']),\r\n      month: PropTypes.oneOf(['numeric', '2-digit', 'narrow', 'short', 'long']),\r\n      day: PropTypes.oneOf(['numeric', '2-digit']),\r\n      hour: PropTypes.oneOf(['numeric', '2-digit']),\r\n      minute: PropTypes.oneOf(['numeric', '2-digit']),\r\n      second: PropTypes.oneOf(['numeric', '2-digit']),\r\n      timeZoneName: PropTypes.oneOf(['short', 'long']),\r\n    }),\r\n\r\n    /**\r\n     * Boolean if the text field for the Date Picker should be displayed as full width.\r\n     */\r\n    fullWidth: PropTypes.bool,\r\n\r\n    /**\r\n     * The direction that the text field divider expands from when the text field\r\n     * in the date picker gains focus.\r\n     */\r\n    lineDirection: PropTypes.oneOf(['left', 'center', 'right']),\r\n\r\n    /**\r\n     * An optional boolean if the time picker is current visible by dialog or inline.\r\n     * If this is set, the `onOpenToggle` function is required.\r\n     */\r\n    visible: controlled(PropTypes.bool, 'onVisibilityChange', 'defaultVisible'),\r\n\r\n    /**\r\n     * An optional function to call when the date picker is opened in either a dialog, or\r\n     * inline. The callback will include the next state.\r\n     *\r\n     * ```js\r\n     * onVisibilityChange(!visible, e);\r\n     * ```\r\n     */\r\n    onVisibilityChange: PropTypes.func,\r\n\r\n    /**\r\n     * Boolean if the time picker is disabled.\r\n     */\r\n    disabled: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the dialog should be able to close if a keyboard user presses the escape key.\r\n     */\r\n    closeOnEsc: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the inline time picker's visibility should be animated.\r\n     */\r\n    animateInline: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the time is required.\r\n     *\r\n     * @see {@link TextFields/TextField#required}\r\n     */\r\n    required: PropTypes.bool,\r\n\r\n    /**\r\n     * @see {@link TextFields/TextField#block}\r\n     */\r\n    block: TextField.propTypes.block,\r\n\r\n    /**\r\n     * @see {@link TextFields/TextField#paddedBlock}\r\n     */\r\n    paddedBlock: TextField.propTypes.paddedBlock,\r\n\r\n    /**\r\n     * @see {@link TextFields/TextField#active}\r\n     */\r\n    active: TextField.propTypes.active,\r\n\r\n    /**\r\n     * @see {@link TextFields/TextField#error}\r\n     */\r\n    error: TextField.propTypes.error,\r\n\r\n    /**\r\n     * @see {@link TextFields/TextField#floating}\r\n     */\r\n    floating: TextField.propTypes.floating,\r\n\r\n    /**\r\n     * @see {@link TextFields/TextField#leftIconStateful}\r\n     */\r\n    leftIconStateful: TextField.propTypes.leftIconStateful,\r\n\r\n    /**\r\n     * @see {@link TextFields/TextField#rightIcon}\r\n     */\r\n    rightIcon: TextField.propTypes.rightIcon,\r\n\r\n    /**\r\n     * @see {@link TextFields/TextField#rightIconStateful}\r\n     */\r\n    rightIconStateful: TextField.propTypes.rightIconStateful,\r\n\r\n    /**\r\n     * @see {@link TextFields/TextField#customSize}\r\n     */\r\n    customSize: TextField.propTypes.customSize,\r\n\r\n    /**\r\n     * @see {@link TextFields/TextField#errorText}\r\n     */\r\n    errorText: TextField.propTypes.errorText,\r\n\r\n    /**\r\n     * @see {@link TextFields/TextField#helpText}\r\n     */\r\n    helpText: TextField.propTypes.helpText,\r\n\r\n    /**\r\n     * @see {@link TextFields/TextField#helpOnFocus}\r\n     */\r\n    helpOnFocus: TextField.propTypes.helpOnFocus,\r\n\r\n    /**\r\n     * @see {@link TextFields/TextField#inlineIndicator}\r\n     */\r\n    inlineIndicator: TextField.propTypes.inlineIndicator,\r\n\r\n    /**\r\n     * Boolean if the Portal's functionality of rendering in a separate react tree should be applied\r\n     * to the dialog.\r\n     *\r\n     * @see {@link Helpers/Portal}\r\n     */\r\n    portal: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional DOM Node to render the dialog into. The default is to render as the first child\r\n     * in the `body`.\r\n     */\r\n    renderNode: PropTypes.object,\r\n\r\n    /**\r\n     * Boolean if the DatePicker should be read only. This will prevent the user from opening the picker\r\n     * and only display the current date in the text field.\r\n     */\r\n    readOnly: PropTypes.bool,\r\n\r\n    /**\r\n     * The first day of week: 0 for Sunday, 1 for Monday, 2 for Tuesday, and so on.\r\n     */\r\n    firstDayOfWeek: PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6]),\r\n\r\n    /**\r\n     * True if weekends are to be greyed out.\r\n     */\r\n    disableWeekEnds: PropTypes.bool,\r\n\r\n    /**\r\n     * True if dates from adjacent months should be shown in calendar.\r\n     */\r\n    showAllDays: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the dates from adjacent months should be disabled. This will only\r\n     * do something if the `showAllDays` prop is enabled as well.\r\n     *\r\n     * This is really only helpful if youd like the other days to appear, but not be\r\n     * clickable until the user switches to that month.\r\n     *\r\n     * @see {@link #showAllDays}\r\n     */\r\n    disableOuterDates: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional className to apply to a date in calendar.\r\n     */\r\n    calendarDateClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional className to apply to a date from an adjacent month in calendar. This will be applied\r\n     * along with the `calendarDateClassName`.\r\n     *\r\n     * @see {@link #showAllDays}\r\n     * @see {@link #calendarDateClassName}\r\n     */\r\n    calendarOuterDateClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional className to apply to the title in calendar header.\r\n     */\r\n    calendarTitleClassName: PropTypes.string,\r\n\r\n    /**\r\n     * The DateTimeFormat options to apply to format the title in calendar header.\r\n     */\r\n    calendarTitleFormat: PropTypes.shape({\r\n      era: PropTypes.oneOf(['narrow', 'short', 'long']),\r\n      year: PropTypes.oneOf(['numeric', '2-digit']),\r\n      month: PropTypes.oneOf(['numeric', '2-digit', 'narrow', 'short', 'long']),\r\n    }),\r\n\r\n    /**\r\n     * An optional className to apply to a weekday in calendar header.\r\n     */\r\n    calendarWeekdayClassName: PropTypes.string,\r\n\r\n    /**\r\n     * The DateTimeFormat option to apply to format a weekday in calendar header.\r\n     */\r\n    calendarWeekdayFormat: PropTypes.oneOf(['narrow', 'short', 'long']),\r\n\r\n    /**\r\n     * @see {@link Dialogs/DialogContainer#disableScrollLocking}\r\n     */\r\n    disableScrollLocking: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the dialog should be rendered as the last child of the `renderNode` or `body` instead\r\n     * of the first.\r\n     */\r\n    lastChild: PropTypes.bool,\r\n\r\n    previousIconChildren: deprecated(PropTypes.node, 'Use the `previousIcon` prop instead'),\r\n    previousIconClassName: deprecated(PropTypes.string, 'Use the `previousIcon` prop instead'),\r\n    nextIconChildren: deprecated(PropTypes.node, 'use the `nextIcon` prop instead'),\r\n    nextIconClassName: deprecated(PropTypes.string, 'Use the `nextIcon` prop instead'),\r\n    adjustMinWidth: deprecated(PropTypes.bool, 'No longer valid for a text field'),\r\n    isOpen: deprecated(PropTypes.bool, 'Use `visible` instead'),\r\n    initiallyOpen: deprecated(PropTypes.bool, 'Use `defaultVisible` instead'),\r\n    initialCalendarDate: deprecated(PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.instanceOf(Date),\r\n    ]), 'Use `defaultCalendarDate` instead'),\r\n    initialCalendarMode: deprecated(PropTypes.oneOf(['calendar', 'year']), 'Use `defaultCalendarMode` instead'),\r\n    initialYearsDisplayed: deprecated(\r\n      PropTypes.number,\r\n      'Use `yearsDisplayed` instead. I have not implemented infinite loading years'\r\n    ),\r\n  };\r\n\r\n  static defaultProps = {\r\n    animateInline: true,\r\n    previousIcon: <FontIcon>chevron_left</FontIcon>,\r\n    nextIcon: <FontIcon>chevron_right</FontIcon>,\r\n    autoOk: false,\r\n    icon: <FontIcon>date_range</FontIcon>,\r\n    yearsDisplayed: 100,\r\n    defaultCalendarMode: 'calendar',\r\n    DateTimeFormat: DateTimeFormat, // eslint-disable-line object-shorthand\r\n    locales: typeof window !== 'undefined'\r\n      ? window.navigator.userLanguage || window.navigator.language\r\n      : 'en-US',\r\n    okLabel: 'Ok',\r\n    okPrimary: true,\r\n    cancelLabel: 'Cancel',\r\n    cancelPrimary: true,\r\n    closeOnEsc: true,\r\n    disableScrollLocking: false,\r\n    'aria-label': 'Pick a date',\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let date;\r\n    let value;\r\n    const {\r\n      defaultValue,\r\n      DateTimeFormat,\r\n      locales,\r\n      formatOptions,\r\n      minDate,\r\n      maxDate,\r\n    } = props;\r\n\r\n    if (typeof props.value !== 'undefined') {\r\n      date = this._getDate(props.value);\r\n    } else if (defaultValue) {\r\n      date = this._getDate(defaultValue);\r\n      value = typeof defaultValue === 'string'\r\n        ? defaultValue\r\n        : DateTimeFormat(locales, formatOptions).format(defaultValue);\r\n    } else {\r\n      date = new Date();\r\n      value = '';\r\n    }\r\n\r\n    date = this._validateDateRange(date, minDate, maxDate);\r\n\r\n    const defaultCalendarDate = typeof props.initialCalendarDate !== 'undefined'\r\n      ? props.initialCalendarDate\r\n      : props.defaultCalendarDate;\r\n    let calendarTempDate = date;\r\n    if (typeof defaultCalendarDate !== 'undefined' && !props.value && !props.defaultValue) {\r\n      calendarTempDate = this._getDate(defaultCalendarDate);\r\n      date = calendarTempDate;\r\n    } else if (calendarTempDate === null) {\r\n      calendarTempDate = new Date();\r\n      date = new Date();\r\n    }\r\n\r\n    const visible = typeof props.initiallyOpen !== 'undefined'\r\n      ? props.initiallyOpen\r\n      : !!props.defaultVisible;\r\n\r\n    this.state = {\r\n      value,\r\n      visible,\r\n      calendarDate: date,\r\n      calendarTempDate,\r\n      calendarMode: props.initialCalendarMode || props.defaultCalendarMode,\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { value, minDate, maxDate } = nextProps;\r\n    const minEqual = isSameDay(this.props.minDate, minDate);\r\n    const maxEqual = isSameDay(this.props.maxDate, maxDate);\r\n    if (this.props.value !== value || !minEqual || !maxEqual) {\r\n      let { calendarDate } = this.state;\r\n      if (typeof value !== 'undefined') {\r\n        calendarDate = this._getDate(value);\r\n      }\r\n\r\n      calendarDate = this._validateDateRange(calendarDate, minDate, maxDate);\r\n\r\n      if (!isSameDay(this.state.calendarDate, calendarDate)) {\r\n        this.setState({ calendarDate, calendarTempDate: calendarDate });\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { inline, isOpen } = this.props;\r\n    const visible = typeof isOpen !== 'undefined'\r\n      ? isOpen\r\n      : getField(this.props, this.state, 'visible');\r\n    const pVisible = typeof prevProps.isOpen !== 'undefined'\r\n      ? prevProps.isOpen\r\n      : getField(prevProps, prevState, 'visible');\r\n\r\n    if (visible === pVisible) {\r\n      return;\r\n    }\r\n\r\n    if (visible) {\r\n      if (inline) {\r\n        handleWindowClickListeners(this._handleOutsideClick, true);\r\n        window.addEventListener('keydown', this._closeOnEsc);\r\n      }\r\n    } else if (inline) {\r\n      handleWindowClickListeners(this._handleOutsideClick, false);\r\n      window.removeEventListener('keydown', this._closeOnEsc);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const visible = typeof this.props.isOpen !== 'undefined'\r\n      ? this.props.isOpen\r\n      : getField(this.props, this.state, 'visible');\r\n\r\n    if (visible && this.props.inline) {\r\n      handleWindowClickListeners(this._handleOutsideClick, false);\r\n      window.removeEventListener('keydown', this._closeOnEsc);\r\n    }\r\n  }\r\n\r\n  _getDate(value) {\r\n    if (value === '' || value === null) {\r\n      return new Date();\r\n    } else if (typeof value === 'string') {\r\n      return new Date(value);\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  _setContainer= (container) => {\r\n    this._container = container;\r\n  };\r\n\r\n  _closeOnEsc = (e) => {\r\n    if ((e.which || e.keyCode) === ESC) {\r\n      this._handleCancelClick(e);\r\n    }\r\n  };\r\n\r\n  _handleOutsideClick = (e) => {\r\n    if (this._container && !this._container.contains(e.target)) {\r\n      this._handleCancelClick(e);\r\n    }\r\n  };\r\n\r\n  _toggleOpen = (e) => {\r\n    if (this.props.disabled || this.props.readOnly) {\r\n      return;\r\n    }\r\n\r\n    const visible = !(typeof this.props.isOpen !== 'undefined'\r\n      ? this.props.isOpen\r\n      : getField(this.props, this.state, 'visible'));\r\n\r\n    if (this.props.onVisibilityChange) {\r\n      this.props.onVisibilityChange(visible, e);\r\n    }\r\n\r\n    if (typeof this.props.isOpen === 'undefined' && typeof this.props.visible === 'undefined') {\r\n      this.setState({ visible });\r\n    }\r\n  };\r\n\r\n  _handleKeyDown = (e) => {\r\n    handleKeyboardAccessibility(e, this._toggleOpen, true, true);\r\n\r\n    if ((e.which || e.keyCode) === TAB && this.state.active) {\r\n      this.setState({ active: false });\r\n    }\r\n  };\r\n\r\n  _handleOkClick = (e) => {\r\n    const { DateTimeFormat, locales, onChange, formatOptions, onVisibilityChange } = this.props;\r\n    const value = DateTimeFormat(locales, formatOptions).format(this.state.calendarTempDate);\r\n    if (onChange) {\r\n      onChange(value, new Date(this.state.calendarTempDate), e);\r\n    }\r\n\r\n    if (onVisibilityChange) {\r\n      onVisibilityChange(false, e);\r\n    }\r\n\r\n    let state;\r\n    if (typeof this.props.value === 'undefined') {\r\n      state = { value };\r\n    }\r\n\r\n    if (typeof this.props.visible === 'undefined' && typeof this.props.isOpen === 'undefined') {\r\n      state = state || {};\r\n      state.visible = false;\r\n    }\r\n\r\n    if (state) {\r\n      this.setState(state);\r\n    }\r\n  };\r\n\r\n  _handleCancelClick = (e) => {\r\n    const state = { calendarTempDate: this.state.calendarDate };\r\n    if (typeof this.props.isOpen === 'undefined' && typeof this.props.isOpen === 'undefined') {\r\n      state.visible = false;\r\n    }\r\n\r\n    if (this.props.onVisibilityChange) {\r\n      this.props.onVisibilityChange(false, e);\r\n    }\r\n\r\n    this.setState(state);\r\n  };\r\n\r\n  _changeCalendarMode = (calendarMode) => {\r\n    if (this.state.calendarMode === calendarMode) { return; }\r\n\r\n    this.setState({ calendarMode });\r\n  };\r\n\r\n  _previousMonth = () => {\r\n    const calendarDate = addDate(this.state.calendarDate, -1, 'M');\r\n    this.setState({ calendarDate });\r\n  };\r\n\r\n  _nextMonth = () => {\r\n    const calendarDate = addDate(this.state.calendarDate, 1, 'M');\r\n    this.setState({ calendarDate });\r\n  };\r\n\r\n  _setCalendarTempDate = (calendarTempDate) => {\r\n    const { autoOk, DateTimeFormat, locales, onChange, formatOptions } = this.props;\r\n\r\n    const state = { calendarTempDate };\r\n    if (autoOk) {\r\n      const value = DateTimeFormat(locales, formatOptions).format(calendarTempDate);\r\n      if (onChange) {\r\n        onChange(value, new Date(calendarTempDate));\r\n      }\r\n\r\n      if (typeof this.props.value === 'undefined') {\r\n        state.value = value;\r\n      }\r\n\r\n      this._timeout = setTimeout(() => {\r\n        this._timeout = null;\r\n\r\n        if (this.props.onVisibilityChange) {\r\n          this.props.onVisibilityChange(false);\r\n        }\r\n\r\n        if (typeof this.props.visible === 'undefined' && typeof this.props.isOpen === 'undefined') {\r\n          this.setState({ visible: false });\r\n        }\r\n      });\r\n    }\r\n    this.setState(state);\r\n  };\r\n\r\n  _setCalendarTempYear = (year) => {\r\n    const { calendarTempDate, calendarDate } = this.state;\r\n    if (calendarTempDate.getFullYear() === year) { return; }\r\n\r\n    const { minDate, maxDate } = this.props;\r\n    let nextDate = new Date(calendarDate.setFullYear(year));\r\n    let nextTemp = new Date(calendarTempDate.setFullYear(year));\r\n\r\n    if (minDate && nextTemp < minDate) {\r\n      nextDate = new Date(minDate);\r\n      nextTemp = new Date(minDate);\r\n    }\r\n\r\n    if (maxDate && nextTemp > maxDate) {\r\n      nextDate = new Date(maxDate);\r\n      nextTemp = new Date(maxDate);\r\n    }\r\n\r\n    this.setState({\r\n      calendarDate: nextDate,\r\n      calendarTempDate: nextTemp,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Gets the current value from the date picker as a formatted string.\r\n   *\r\n   * @param {Object} props? the props object to use.\r\n   * @param {Object} state? the state object to use.\r\n   * @return {String} a formatted date string or the empty string.\r\n   */\r\n  _getFormattedValue(props, state) {\r\n    const { DateTimeFormat, locales, formatOptions } = props;\r\n    const value = getField(props, state, 'value');\r\n    if (!value) {\r\n      return '';\r\n    } else if (value instanceof Date) {\r\n      return DateTimeFormat(locales, formatOptions).format(new Date(value));\r\n    } else {\r\n      return value;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Attempts to validate the `calendarDate` in the state against the min and\r\n   * max dates.\r\n   *\r\n   * This will return null if the current calendarDate is still within the range.\r\n   *\r\n   * @param {Date} calendarDate - The current calendar date to compare to.\r\n   * @param {Date} minDate - An optional min date to compare to.\r\n   * @param {Date} maxDate - An optional max date to compare to.\r\n   * @return {Object} - The new state object with the updated calendarDate and\r\n   *    calendarTempDate keys or null.\r\n   */\r\n  _validateDateRange(calendarDate, minDate, maxDate) {\r\n    let date = calendarDate;\r\n    if (minDate && minDate > calendarDate) {\r\n      date = new Date(minDate);\r\n    }\r\n\r\n    if (maxDate && maxDate < calendarDate) {\r\n      date = new Date(maxDate);\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      style,\r\n      className,\r\n      pickerStyle,\r\n      pickerClassName,\r\n      pickerHeaderClassName,\r\n      pickerContentClassName,\r\n      pickerFooterClassName,\r\n      inputStyle,\r\n      inputClassName,\r\n      textFieldStyle,\r\n      textFieldClassName,\r\n      label,\r\n      placeholder,\r\n      icon,\r\n      inline,\r\n      displayMode,\r\n      fullWidth,\r\n      lineDirection,\r\n      id,\r\n      disabled,\r\n      closeOnEsc,\r\n      animateInline,\r\n      portal,\r\n      renderNode,\r\n      lastChild,\r\n      block,\r\n      paddedBlock,\r\n      active,\r\n      error,\r\n      floating,\r\n      required,\r\n      leftIconStateful,\r\n      rightIcon,\r\n      rightIconStateful,\r\n      customSize,\r\n      errorText,\r\n      helpText,\r\n      helpOnFocus,\r\n      inlineIndicator,\r\n      disableScrollLocking,\r\n      'aria-label': ariaLabel,\r\n      nextIcon: propNextIcon,\r\n      previousIcon: propPreviousIcon,\r\n\r\n      // deprecated\r\n      isOpen,\r\n      previousIconChildren,\r\n      previousIconClassName,\r\n      nextIconChildren,\r\n      nextIconClassName,\r\n      /* eslint-disable no-unused-vars */\r\n      value: propValue,\r\n      visible: propVisible,\r\n      defaultValue,\r\n      defaultVisible,\r\n      onChange,\r\n      readOnly,\r\n      onVisibilityChange,\r\n      defaultCalendarDate,\r\n\r\n      // deprecated\r\n      initialCalendarDate,\r\n      initiallyOpen,\r\n      adjustMinWidth,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n\r\n    const nextIcon = getDeprecatedIcon(nextIconClassName, nextIconChildren, propNextIcon);\r\n    const previousIcon = getDeprecatedIcon(previousIconClassName, previousIconChildren, propPreviousIcon);\r\n    const visible = typeof isOpen !== 'undefined'\r\n      ? isOpen\r\n      : getField(this.props, this.state, 'visible');\r\n\r\n    const picker = (\r\n      <DatePicker\r\n        {...this.state}\r\n        {...props}\r\n        nextIcon={nextIcon}\r\n        previousIcon={previousIcon}\r\n        icon={!!icon}\r\n        inline={inline}\r\n        style={pickerStyle}\r\n        className={pickerClassName}\r\n        headerClassName={pickerHeaderClassName}\r\n        contentClassName={pickerContentClassName}\r\n        footerClassName={pickerFooterClassName}\r\n        displayMode={displayMode}\r\n        onCancelClick={this._handleCancelClick}\r\n        onOkClick={this._handleOkClick}\r\n        changeCalendarMode={this._changeCalendarMode}\r\n        onPreviousClick={this._previousMonth}\r\n        onNextClick={this._nextMonth}\r\n        onCalendarDateClick={this._setCalendarTempDate}\r\n        onCalendarYearClick={this._setCalendarTempYear}\r\n      />\r\n    );\r\n\r\n    let content;\r\n    if (inline) {\r\n      content = <Collapse collapsed={!visible} animate={animateInline}>{picker}</Collapse>;\r\n    } else {\r\n      content = (\r\n        <Dialog\r\n          id={`${id}-dialog`}\r\n          visible={visible}\r\n          onHide={this._handleCancelClick}\r\n          dialogClassName=\"md-dialog--picker\"\r\n          contentClassName=\"md-dialog-content--picker\"\r\n          aria-label={ariaLabel}\r\n          closeOnEsc={closeOnEsc}\r\n          renderNode={renderNode}\r\n          portal={portal}\r\n          lastChild={lastChild}\r\n          focusOnMount={false}\r\n          disableScrollLocking={disableScrollLocking}\r\n        >\r\n          {picker}\r\n        </Dialog>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div style={style} className={cn('md-picker-container', className)} ref={this._setContainer}>\r\n        <TextField\r\n          id={id}\r\n          style={textFieldStyle}\r\n          className={cn({ 'md-pointer--hover': !disabled }, textFieldClassName)}\r\n          inputStyle={inputStyle}\r\n          inputClassName={cn({ 'md-pointer--hover': !disabled }, inputClassName)}\r\n          active={active || visible}\r\n          error={error}\r\n          floating={floating || visible}\r\n          required={required}\r\n          disabled={disabled}\r\n          leftIcon={icon}\r\n          leftIconStateful={leftIconStateful}\r\n          rightIcon={rightIcon}\r\n          rightIconStateful={rightIconStateful}\r\n          inlineIndicator={inlineIndicator}\r\n          block={block}\r\n          paddedBlock={paddedBlock}\r\n          fullWidth={fullWidth}\r\n          lineDirection={lineDirection}\r\n          customSize={customSize}\r\n          helpText={helpText}\r\n          helpOnFocus={helpOnFocus}\r\n          errorText={errorText}\r\n          label={label}\r\n          placeholder={placeholder}\r\n          onClick={this._toggleOpen}\r\n          onKeyDown={this._handleKeyDown}\r\n          value={this._getFormattedValue(this.props, this.state)}\r\n          readOnly\r\n        />\r\n        {content}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/** @module utils/DateUtils/formatTime */\r\n\r\n/**\r\n * Formats a date as a time string using the DateTimeFormat function and locales.\r\n *\r\n * @param {function} DateTimeFormat the DateTimeFormat function to use.\r\n * @param {string|string[]} locales the locales to use.\r\n * @param {Date} time the time to format into a string.\r\n * @return a string of the formatted time.\r\n */\r\nexport default function formatTime(DateTimeFormat, locales, time) {\r\n  return new DateTimeFormat(locales, { hour: 'numeric', minute: '2-digit' }).format(time);\r\n}\r\n","/** @module utils/NumberUtils/calcTimeFromPoint */\r\n\r\nfunction isPointInCircle(cx, cy, r, x, y) {\r\n  const distance = Math.pow(cx - x, 2) + Math.pow(cy - y, 2);\r\n  return distance <= Math.pow(r, 2);\r\n}\r\n\r\nfunction toDegrees(radians) {\r\n  return radians * (180 / Math.PI);\r\n}\r\n\r\n/**\r\n * Takes a point from a mouse or touch event and a center point of a circle to determine\r\n * what the new time should be.\r\n *\r\n * If the point.y < center.y, the point is in the top half of the circle.\r\n * If the point.x < center.x, the point is in the left half of the circle.\r\n *\r\n * @param {Object} point - The mouse or touch event's point that contains an x and y coordinate.\r\n * @param {Object} center - The center point for the circle that contains an x and y coordinate.\r\n * @param {Number} innerRadius - An inner radius for clocks that have 24 hour times. This is\r\n *    a circle that contains hours 12-23.\r\n * @param {Boolean} minutes - Boolena if the current time to be calculated is minutes instead of\r\n *    hours.\r\n * @param {Boolean} hour12 - Boolean if the clock is a 12 hour clock.\r\n * @return {Number} the new time.\r\n */\r\nexport default function calcTimeFromPoint(point, center, innerRadius, minutes, hour12) {\r\n  const x = point.x - center.x;\r\n  const y = point.y - center.y;\r\n  const degrees = toDegrees(Math.atan2(y, x));\r\n  const sectors = minutes ? 60 : 12;\r\n  const sectorSize = 360 / sectors;\r\n  let time = Math.round(degrees / sectorSize);\r\n\r\n  // Since the css transform has 0π at π/2 place, we need to offset the\r\n  // time to that location.\r\n  time += (minutes ? 15 : 3);\r\n\r\n  // If time is still negative, it is in the top half of the circle\r\n  if (time < 0) {\r\n    time += sectors;\r\n  }\r\n\r\n\r\n  // Finally, if it is a 24 hour clock, need to check if the point is actually\r\n  // selecting hours 13 - 24 (0).\r\n  if (!minutes && !hour12) {\r\n    const isInCircle = isPointInCircle(0, 0, innerRadius, x, y);\r\n\r\n    if ((time === 0 && !isInCircle) || (time !== 0 && isInCircle)) {\r\n      time += 12;\r\n    }\r\n  }\r\n\r\n  return time;\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport { TAB } from '../constants/keyCodes';\r\nimport themeColors from '../utils/themeColors';\r\n\r\nconst CLOCK_PADDING = 4;\r\n\r\n/**\r\n * The `ClockTime` component is used for positioning hours or minutes\r\n * in a clock. The time will be positioned based on it's given index\r\n * and the radius of the clock.\r\n */\r\nexport default class ClockTime extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * The index of the current time to be displayed. This\r\n     * should be a number between 1 and 24.\r\n     */\r\n    index: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * The time number to display.\r\n     */\r\n    time: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * Boolean if this time is currently selected.\r\n     */\r\n    active: PropTypes.bool.isRequired,\r\n\r\n    /**\r\n     * The radius of the clock.\r\n     */\r\n    radius: PropTypes.number.isRequired,\r\n\r\n    onKeyboardFocus: PropTypes.func.isRequired,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      // default size in scss\r\n      size: 18,\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (this.props.radius !== nextProps.radius || this.props.index !== nextProps.index) {\r\n      this._setPosition(nextProps, this._time);\r\n    }\r\n  }\r\n\r\n  _handleKeyUp = (e) => {\r\n    if ((e.which || e.keyCode) === TAB) {\r\n      this.props.onKeyboardFocus(this.props.time);\r\n    }\r\n  }\r\n\r\n  _setTime = (time) => {\r\n    this._time = time;\r\n    if (time !== null) {\r\n      this._setPosition(this.props, time);\r\n\r\n      if (this.props.active) {\r\n        time.focus();\r\n      }\r\n    }\r\n  };\r\n\r\n  _setPosition = ({ radius, index }, time) => {\r\n    // 36 is default size for the time\r\n    const size = (time.offsetWidth || 36) / 2;\r\n    const timeRadians = (Math.PI / 2) - index * (Math.PI / 6);\r\n    const innerCircle = index > 12;\r\n\r\n    const outerRadius = radius - size;\r\n    const innerRadius = outerRadius - CLOCK_PADDING - (innerCircle ? size * 2 : 0);\r\n\r\n    this.setState({\r\n      style: {\r\n        top: outerRadius - innerRadius * Math.sin(timeRadians),\r\n        left: outerRadius + innerRadius * Math.cos(timeRadians),\r\n      },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { time, active } = this.props;\r\n    return (\r\n      <div\r\n        ref={this._setTime}\r\n        tabIndex={0}\r\n        className={cn('md-clock-time md-text-no-select md-pointer--none', {\r\n          'md-picker-text--active': active,\r\n        }, themeColors({ text: !active }))}\r\n        style={this.state.style}\r\n        onKeyUp={this._handleKeyUp}\r\n      >\r\n        <span className=\"md-clock-time-value\">{time}</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\n/**\r\n * The `ClockHand` component is just used to display the hand of the clock\r\n * and a ball to surround the selected time.\r\n */\r\nexport default class ClockHand extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * This is the x and y coordinate to use for the center of the `ClockFace`.\r\n     * This should really be whatever the radius of the `ClockFace` is.\r\n     */\r\n    coords: PropTypes.number,\r\n\r\n    /**\r\n     * The current time of the clock.\r\n     */\r\n    time: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * Boolean if the clock is displaying minutes instead of hours.\r\n     */\r\n    minutes: PropTypes.bool.isRequired,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { active: false };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (this.props.minutes !== nextProps.minutes) {\r\n      if (this.state.timeout) { clearTimeout(this.state.timeout); }\r\n\r\n      this.setState({\r\n        active: true,\r\n        timeout: setTimeout(() => this.setState({ active: false, timeout: null }), 150),\r\n      });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.state.timeout) { clearTimeout(this.state.timeout); }\r\n  }\r\n\r\n  _calcCurrentDegrees({ time, minutes }) {\r\n    const timeAt0Deg = minutes ? 15 : 3;\r\n    const sectors = minutes ? 60 : 12;\r\n\r\n    return (time % sectors - timeAt0Deg) * (360 / sectors);\r\n  }\r\n\r\n  render() {\r\n    const { coords, time, minutes } = this.props;\r\n\r\n    const degrees = this._calcCurrentDegrees(this.props);\r\n    let invisibleMinute = false;\r\n    if (minutes) {\r\n      invisibleMinute = degrees % (360 / 12) !== 0;\r\n    }\r\n\r\n    const rotateTransform = `rotate3d(0, 0, 1, ${degrees}deg)`;\r\n    return (\r\n      <div\r\n        className={cn('md-clock-hand md-background--primary', {\r\n          'md-clock-hand--active': this.state.active,\r\n          'md-clock-hand--minute-hover': invisibleMinute,\r\n          'md-clock-hand--inner': !minutes && (time > 12 || time === 0),\r\n        })}\r\n        style={{\r\n          left: coords,\r\n          top: coords,\r\n          WebkitTransform: rotateTransform,\r\n          MozTransform: rotateTransform,\r\n          msTransform: rotateTransform,\r\n          transform: rotateTransform,\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport isValidClick from '../utils/EventUtils/isValidClick';\r\nimport captureNextEvent from '../utils/EventUtils/captureNextEvent';\r\nimport { addTouchEvent, removeTouchEvent } from '../utils/EventUtils/touches';\r\nimport calcTimeFromPoint from '../utils/NumberUtils/calcTimeFromPoint';\r\nimport calcPageOffset from '../utils/Positioning/calcPageOffset';\r\nimport ResizeObserver from '../Helpers/ResizeObserver';\r\n\r\nimport ClockTime from './ClockTime';\r\nimport ClockHand from './ClockHand';\r\n\r\n/**\r\n * The `ClockFace` component is used for rendering all the clock's times\r\n * and the clock hand.\r\n */\r\nexport default class ClockFace extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * The current time for the clock.\r\n     */\r\n    time: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * Boolean if the clock is on the minutes view.\r\n     */\r\n    minutes: PropTypes.bool.isRequired,\r\n\r\n    /**\r\n     * A function to call when a new time is selected. It gives the\r\n     * new time value. If it is 12 o'clock, 0 will be given.\r\n     */\r\n    onChange: PropTypes.func.isRequired,\r\n\r\n    /**\r\n     * An optional time period string. This should be either AM or PM\r\n     * if the locale uses them.\r\n     */\r\n    timePeriod: PropTypes.string,\r\n\r\n    /**\r\n     * If true the hover mode of the Time Picker is activated.\r\n     * In hover mode no clicks are required to start selecting an hour\r\n     * and the timemode switches automatically when a time was chosen.\r\n     * When a minute is selected the chosen time is applied automatically.\r\n     */\r\n    hoverMode: PropTypes.bool,\r\n\r\n    onTimeChosen: PropTypes.func.isRequired,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { radius: 136, moving: false };\r\n    this._center = {};\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('mousemove', this._handleMouseMove);\r\n    window.removeEventListener('mouseup', this._handleMouseMove);\r\n\r\n    removeTouchEvent(window, 'move', this._handleTouchMove);\r\n    removeTouchEvent(window, 'end', this._handleTouchEnd);\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  _setFace = (face) => {\r\n    this._face = face;\r\n    this._setPositioning();\r\n  }\r\n\r\n  _setPositioning = () => {\r\n    if (!this._face) {\r\n      return;\r\n    }\r\n\r\n    const radius = this._face.offsetWidth / 2;\r\n    const offset = calcPageOffset(this._face);\r\n    this._center = { x: offset.left + radius, y: offset.top + radius };\r\n    this._left = offset.left;\r\n    this._top = offset.top;\r\n\r\n    if (this.state.radius !== radius) {\r\n      this.setState({ radius });\r\n    }\r\n  };\r\n\r\n  _handleMouseEnter = () => {\r\n    const { hoverMode } = this.props;\r\n\r\n    if (hoverMode) {\r\n      this._enableMouseMoving();\r\n    }\r\n  };\r\n\r\n  _handleMouseLeave = () => {\r\n    const { hoverMode } = this.props;\r\n\r\n    if (hoverMode) {\r\n      this._disableMouseMoving();\r\n    }\r\n  };\r\n\r\n  _handleMouseDown = (e) => {\r\n    if (!isValidClick(e)) {\r\n      return;\r\n    }\r\n\r\n    const { hoverMode } = this.props;\r\n\r\n    if (!hoverMode) {\r\n      this._enableMouseMoving();\r\n    }\r\n  };\r\n\r\n  _handleMouseMove = (e) => {\r\n    if (!this.state.moving) {\r\n      return;\r\n    }\r\n\r\n    e.preventDefault();\r\n    this._calcNewTime(e);\r\n  };\r\n\r\n  _handleMouseUp = (e) => {\r\n    if (!isValidClick(e)) {\r\n      return;\r\n    }\r\n\r\n    const { onTimeChosen, hoverMode } = this.props;\r\n\r\n    if (this._face) {\r\n      if (this._face.contains(e.target)) {\r\n        onTimeChosen();\r\n        this._calcNewTime(e);\r\n      } else {\r\n        captureNextEvent('click');\r\n      }\r\n    }\r\n\r\n    if (!hoverMode) {\r\n      this._disableMouseMoving();\r\n    }\r\n  };\r\n\r\n  _handleTouchStart = () => {\r\n    captureNextEvent('mousedown');\r\n\r\n    addTouchEvent(window, 'move', this._handleTouchMove);\r\n    addTouchEvent(window, 'end', this._handleTouchEnd);\r\n    this.setState({ moving: true });\r\n  };\r\n\r\n  _handleTouchMove = (e) => {\r\n    if (!this.state.moving) {\r\n      return;\r\n    }\r\n\r\n    this._calcNewTime(e);\r\n  };\r\n\r\n  _handleTouchEnd = (e) => {\r\n    this._calcNewTime(e);\r\n    if (this._face && !this._face.contains(e.target)) {\r\n      captureNextEvent('click');\r\n    }\r\n\r\n    removeTouchEvent(window, 'move', this._handleTouchMove);\r\n    removeTouchEvent(window, 'end', this._handleTouchEnd);\r\n\r\n    this.setState({ moving: false });\r\n  };\r\n\r\n  _calcNewTime = (e) => {\r\n    const { pageX: x, pageY: y } = e.changedTouches ? e.changedTouches[0] : e;\r\n    const innerRadius = this.state.radius - 48;\r\n    const { onChange, minutes, timePeriod } = this.props;\r\n    onChange(calcTimeFromPoint({ x, y }, this._center, innerRadius, minutes, timePeriod));\r\n  };\r\n\r\n  _enableMouseMoving = () => {\r\n    window.addEventListener('mousemove', this._handleMouseMove);\r\n    window.addEventListener('mouseup', this._handleMouseUp);\r\n\r\n    this.setState({ moving: true });\r\n  };\r\n\r\n  _disableMouseMoving = () => {\r\n    window.removeEventListener('mousemove', this._handleMouseMove);\r\n    window.removeEventListener('mouseup', this._handleMouseUp);\r\n\r\n    this.setState({ moving: false });\r\n  };\r\n\r\n  render() {\r\n    const { time, minutes, timePeriod, onChange, hoverMode } = this.props;\r\n    const { radius } = this.state;\r\n    const size = !minutes && !timePeriod ? 24 : 12;\r\n    const times = Array.apply(null, new Array(size)).map((_, i) => {\r\n      let clockTime = i + 1;\r\n      if (minutes) {\r\n        clockTime = (clockTime * 5) % 60;\r\n      } else {\r\n        clockTime %= 24;\r\n      }\r\n\r\n      return (\r\n        <ClockTime\r\n          key={`time-${i}`}\r\n          index={i + 1}\r\n          time={clockTime}\r\n          active={clockTime === time}\r\n          radius={radius}\r\n          onKeyboardFocus={onChange}\r\n        />\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div\r\n        ref={this._setFace}\r\n        className=\"md-clock-face md-block-centered md-pointer--hover\"\r\n        onMouseDown={this._handleMouseDown}\r\n        onMouseEnter={hoverMode ? this._handleMouseEnter : undefined}\r\n        onMouseLeave={hoverMode ? this._handleMouseLeave : undefined}\r\n        onTouchStart={this._handleTouchStart}\r\n      >\r\n        <ResizeObserver watchHeight onResize={this._setPositioning} />\r\n        {times}\r\n        <ClockHand time={time} coords={radius} minutes={minutes} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/** @module utils/DateUtils/addHours */\r\n\r\n/**\r\n * Adds hours to a date.\r\n *\r\n * @param {Date} time the time to increment\r\n * @param {number} hours the number of hours to increment by.\r\n * @return a new Date with the new hours set.\r\n */\r\nexport default function addHours(time, hours) {\r\n  const t = new Date(time.getTime());\r\n  t.setHours(t.getHours() + hours);\r\n  return t;\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport addHours from '../utils/DateUtils/addHours';\r\nimport PickerControl from './PickerControl';\r\n\r\n/**\r\n * This component displays a section for switching between the AM\r\n * and PM time periods.\r\n */\r\nexport default class TimePeriods extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * The current time for the time picker.\r\n     */\r\n    tempTime: PropTypes.instanceOf(Date).isRequired,\r\n\r\n    /**\r\n     * A function to update the time for the time picker.\r\n     */\r\n    setTempTime: PropTypes.func.isRequired,\r\n\r\n    /**\r\n     * The current time period.\r\n     */\r\n    timePeriod: PropTypes.string.isRequired,\r\n  };\r\n\r\n  _setAM = () => {\r\n    if (this.props.timePeriod !== 'AM') {\r\n      this.props.setTempTime(addHours(this.props.tempTime, -12));\r\n    }\r\n  };\r\n\r\n  _setPM = () => {\r\n    if (this.props.timePeriod !== 'PM') {\r\n      this.props.setTempTime(addHours(this.props.tempTime, 12));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { timePeriod } = this.props;\r\n    return (\r\n      <div className=\"md-time-periods\">\r\n        <PickerControl onClick={this._setAM} active={timePeriod === 'AM'}>\r\n          <h6 className=\"md-time-period\">AM</h6>\r\n        </PickerControl>\r\n        <PickerControl onClick={this._setPM} active={timePeriod === 'PM'}>\r\n          <h6 className=\"md-time-period\">PM</h6>\r\n        </PickerControl>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport TimePeriods from './TimePeriods';\r\nimport PickerControl from './PickerControl';\r\n\r\n/**\r\n * The `TimePickerHeader` component is used for rendering the\r\n * current time for the `TimePicker` as well as switching between\r\n * the different views for the time picker.\r\n */\r\nexport default class TimePickerHeader extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * The current time of the time picker.\r\n     */\r\n    tempTime: PropTypes.instanceOf(Date).isRequired,\r\n\r\n    /**\r\n     * The current time type that is being changed.\r\n     */\r\n    timeMode: PropTypes.oneOf(['hour', 'minute']).isRequired,\r\n\r\n    /**\r\n     * A function to update the time mode.\r\n     */\r\n    setTimeMode: PropTypes.func.isRequired,\r\n\r\n    /**\r\n     * A function to update the time for the time picker.\r\n     */\r\n    setTempTime: PropTypes.func.isRequired,\r\n\r\n    /**\r\n     * A formatted hours string for the user's locale. This\r\n     * would be '3' for en-US if the time was '3:15'\r\n     */\r\n    hours: PropTypes.string.isRequired,\r\n\r\n    /**\r\n     * A formatted minutes string for the user's locale.\r\n     * This would be ':15' for en-US if the time was '3:15'.\r\n     */\r\n    minutes: PropTypes.string.isRequired,\r\n\r\n    /**\r\n     * An optional time period to use for locales that use\r\n     * 12 hour clocks and AM/PM.\r\n     */\r\n    timePeriod: PropTypes.string,\r\n  };\r\n\r\n  _setHour = () => {\r\n    this.props.setTimeMode('hour');\r\n  };\r\n\r\n  _setMinute = () => {\r\n    this.props.setTimeMode('minute');\r\n  };\r\n\r\n  render() {\r\n    const { timeMode, hours, minutes, timePeriod, setTempTime, tempTime } = this.props;\r\n    let timePeriods;\r\n    if (timePeriod) {\r\n      timePeriods = <TimePeriods tempTime={tempTime} setTempTime={setTempTime} timePeriod={timePeriod} />;\r\n    }\r\n\r\n    return (\r\n      <header className=\"md-picker-header md-text-right\">\r\n        <PickerControl onClick={this._setHour} active={timeMode === 'hour'}>\r\n          <h4 className=\"md-display-3\">\r\n            {hours}\r\n          </h4>\r\n        </PickerControl>\r\n        <PickerControl onClick={this._setMinute} active={timeMode === 'minute'}>\r\n          <h4 className=\"md-display-3\">\r\n            {minutes}\r\n          </h4>\r\n        </PickerControl>\r\n        {timePeriods}\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport ClockFace from './ClockFace';\r\nimport DialogFooter from '../Dialogs/DialogFooter';\r\nimport TimePickerHeader from './TimePickerHeader';\r\n\r\n/**\r\n * The `TimePicker` component is used to display a time picker\r\n * in the `TimePickerContainer` component.\r\n */\r\nexport default class TimePicker extends PureComponent {\r\n  static propTypes = {\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    okLabel: PropTypes.node.isRequired,\r\n    okPrimary: PropTypes.bool.isRequired,\r\n    onOkClick: PropTypes.func.isRequired,\r\n    cancelLabel: PropTypes.node.isRequired,\r\n    cancelPrimary: PropTypes.bool.isRequired,\r\n    onCancelClick: PropTypes.func.isRequired,\r\n    DateTimeFormat: PropTypes.func.isRequired,\r\n    locales: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.arrayOf(PropTypes.string),\r\n    ]).isRequired,\r\n    icon: PropTypes.bool,\r\n    inline: PropTypes.bool,\r\n    displayMode: PropTypes.oneOf(['landscape', 'portrait']),\r\n\r\n    /**\r\n     * A function that will switch the state from hour to minute.\r\n     */\r\n    setTimeMode: PropTypes.func.isRequired,\r\n\r\n    /**\r\n     * A function that will update the time for the TimePicker before\r\n     * the user selects ok. This function will be given a new Date object\r\n     * with a modified time.\r\n     */\r\n    setTempTime: PropTypes.func.isRequired,\r\n\r\n    /**\r\n     * The current display mode of the time picker.\r\n     */\r\n    timeMode: PropTypes.oneOf(['hour', 'minute']).isRequired,\r\n\r\n    /**\r\n     * The current time as a date object that is being displayed in the\r\n     * time picker.\r\n     */\r\n    tempTime: PropTypes.instanceOf(Date).isRequired,\r\n\r\n    /**\r\n     * A string that is a representation of the hours in the user's locale.\r\n     */\r\n    hours: PropTypes.string.isRequired,\r\n\r\n    /**\r\n     * A string that is a representation of the minutes in the user's locale.\r\n     * This will also include any separator the locale uses.\r\n     *\r\n     * Example: ':15' in '3:15 PM' for 'en-US'\r\n     */\r\n    minutes: PropTypes.string.isRequired,\r\n\r\n    /**\r\n     * An optional time period if a user's locale uses it.\r\n     */\r\n    timePeriod: PropTypes.string,\r\n\r\n    /**\r\n     * If true the hover mode of the Time Picker is activated.\r\n     * In hover mode no clicks are required to start selecting an hour\r\n     * and the timemode switches automatically when a time was chosen.\r\n     * When a minute is selected the chosen time is applied automatically.\r\n     */\r\n    hoverMode: PropTypes.bool,\r\n  };\r\n\r\n  /**\r\n   * Takes in the new time (number o'clock or minutes), updates the temp time\r\n   * with that new time, and then calls the setTempTime prop.\r\n   */\r\n  _updateTime = (newTime) => {\r\n    let timePart = newTime;\r\n    const { tempTime, setTempTime, timeMode, timePeriod } = this.props;\r\n    const time = new Date(tempTime);\r\n    if (timeMode === 'hour') {\r\n      const isAM = timePeriod === 'AM';\r\n      const is12 = timePart === 12;\r\n      if (timePeriod && isAM && is12) {\r\n        timePart = 0;\r\n      } else if (timePeriod && !isAM && !is12) {\r\n        timePart += 12;\r\n      }\r\n\r\n      time.setHours(timePart);\r\n    } else {\r\n      time.setMinutes(timePart);\r\n    }\r\n\r\n    setTempTime(time);\r\n  };\r\n\r\n  _handleTimeChosen = () => {\r\n    const { hoverMode, setTimeMode, onOkClick, timeMode } = this.props;\r\n\r\n    if (hoverMode) {\r\n      if (timeMode === 'hour') {\r\n        setTimeMode('minute');\r\n      } else {\r\n        onOkClick();\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      okLabel,\r\n      okPrimary,\r\n      onOkClick,\r\n      cancelLabel,\r\n      cancelPrimary,\r\n      onCancelClick,\r\n      style,\r\n      className,\r\n      setTimeMode,\r\n      setTempTime,\r\n      timeMode,\r\n      tempTime,\r\n      hours,\r\n      minutes,\r\n      timePeriod,\r\n      displayMode,\r\n      inline,\r\n      icon,\r\n      hoverMode,\r\n    } = this.props;\r\n\r\n    const hoursInt = parseInt(hours, 10);\r\n    const minutesInt = parseInt(minutes.replace(/[^0-9]/g, ''), 10);\r\n    const actions = [{\r\n      key: 'cancel',\r\n      onClick: onCancelClick,\r\n      primary: cancelPrimary,\r\n      secondary: !cancelPrimary,\r\n      label: cancelLabel,\r\n    }, {\r\n      key: 'ok',\r\n      onClick: onOkClick,\r\n      primary: okPrimary,\r\n      secondary: !okPrimary,\r\n      label: okLabel,\r\n    }];\r\n\r\n    return (\r\n      <div\r\n        style={style}\r\n        className={cn('md-picker md-picker--time', {\r\n          [`md-picker--${displayMode}`]: displayMode,\r\n          'md-picker--inline': inline,\r\n          'md-picker--inline-icon': inline && icon,\r\n        }, className)}\r\n      >\r\n        <TimePickerHeader\r\n          tempTime={tempTime}\r\n          timeMode={timeMode}\r\n          setTimeMode={setTimeMode}\r\n          setTempTime={setTempTime}\r\n          hours={hours}\r\n          minutes={minutes}\r\n          timePeriod={timePeriod}\r\n        />\r\n        <div className=\"md-picker-content-container\">\r\n          <div className=\"md-picker-content md-picker-content--clock\">\r\n            <ClockFace\r\n              time={timeMode === 'hour' ? hoursInt : minutesInt}\r\n              minutes={timeMode === 'minute'}\r\n              onChange={this._updateTime}\r\n              timePeriod={timePeriod}\r\n              hoverMode={hoverMode}\r\n              onTimeChosen={this._handleTimeChosen}\r\n            />\r\n          </div>\r\n          <DialogFooter actions={actions} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/* eslint-disable no-shadow */\r\nimport React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\r\nimport deprecated from 'react-prop-types/lib/deprecated';\r\n\r\nimport { ESC, TAB } from '../constants/keyCodes';\r\nimport getField from '../utils/getField';\r\nimport handleWindowClickListeners from '../utils/EventUtils/handleWindowClickListeners';\r\nimport handleKeyboardAccessibility from '../utils/EventUtils/handleKeyboardAccessibility';\r\nimport controlled from '../utils/PropTypes/controlled';\r\nimport DateTimeFormat from '../utils/DateUtils/DateTimeFormat';\r\nimport formatTime from '../utils/DateUtils/formatTime';\r\nimport extractTimeParts from '../utils/DateUtils/extractTimeParts';\r\nimport Dialog from '../Dialogs/DialogContainer';\r\nimport FontIcon from '../FontIcons/FontIcon';\r\nimport TextField from '../TextFields/TextField';\r\nimport Collapse from '../Helpers/Collapse';\r\nimport TimePicker from './TimePicker';\r\n\r\n/**\r\n * The `TimePickerContainer` component is a wrapper for the main `TimePicker` component\r\n * to manage the state and _logic_ for rendering the `TimePicker`. This component will\r\n * either render inline or in a `Dialog` depending if the `inline` prop is set\r\n * to `true`.\r\n *\r\n * NOTE: This component is actually exported as `TimePicker` when using the `import { member }` syntax.\r\n * The following two lines are equivalent:\r\n *\r\n * ```js\r\n * import { TimePicker } from 'react-md/lib/Pickers';\r\n * import TimePicker from 'react-md/lib/Pickers/TimePickerContainer';\r\n * ```\r\n */\r\nexport default class TimePickerContainer extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * An id for the text field in the time picker. This is require for a11y.\r\n     */\r\n    id: isRequiredForA11y(PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number,\r\n    ])),\r\n\r\n    /**\r\n     * An aria-label to apply to the dialog when it has been opened. This is required for\r\n     * a11y.\r\n     */\r\n    'aria-label': isRequiredForA11y(PropTypes.string),\r\n\r\n    /**\r\n     * An optional style to apply to the time picker's container.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the time picker's container.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the time picker.\r\n     */\r\n    pickerStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the time picker.\r\n     */\r\n    pickerClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the input tag.\r\n     */\r\n    inputStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the input tag.\r\n     */\r\n    inputClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the text field's container.\r\n     */\r\n    textFieldStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the text field's container.\r\n     */\r\n    textFieldClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional icon to display with the time picker.\r\n     *\r\n     * @see {@link TextFields/TextField#leftIcon}\r\n     */\r\n    icon: PropTypes.node,\r\n\r\n    /**\r\n     * Boolean if the time picker is open by default.\r\n     */\r\n    defaultVisible: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional label to be displayed in the time picker's text\r\n     * field.\r\n     */\r\n    label: PropTypes.node,\r\n\r\n    /**\r\n     * An optional placeholder to be displayed in the time picker's text field.\r\n     */\r\n    placeholder: PropTypes.string,\r\n\r\n    /**\r\n     * The value of the time picker. This will make the time picker\r\n     * be a controlled component.\r\n     */\r\n    value: controlled(PropTypes.instanceOf(Date), 'onChange', 'defaultValue'),\r\n\r\n    /**\r\n     * An optional function to call when the selected date is changed\r\n     * by hitting the OK button. The newly formatted time string,\r\n     * the new Date object, and the change event will be given.\r\n     *\r\n     * `onChange(timeString, dateObject, event)`.\r\n     */\r\n    onChange: PropTypes.func,\r\n\r\n    /**\r\n     * An optional default value to give for the year picker.\r\n     */\r\n    defaultValue: PropTypes.instanceOf(Date),\r\n\r\n    /**\r\n     * A function to format the dates since it should be formatted to the user's\r\n     * locale. This _should_ be the `Intl.DateTimeFormat` function. You\r\n     * can also create your own if you really wanted. Inadvisable though.\r\n     *\r\n     * See [intl-polyfill](https://github.com/andyearnshaw/Intl.js/) for more info.\r\n     */\r\n    DateTimeFormat: PropTypes.func.isRequired,\r\n\r\n    /**\r\n     * The locales to use for formatting the date. This will default to using\r\n     * the user's language in the browser or `'en-US'` when server rendering.\r\n     */\r\n    locales: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.arrayOf(PropTypes.string),\r\n    ]).isRequired,\r\n\r\n    /**\r\n     * The label to use for the ok button on the year picker.\r\n     */\r\n    okLabel: PropTypes.node.isRequired,\r\n\r\n    /**\r\n     * Boolean if the ok button should be styled with the primary color.\r\n     */\r\n    okPrimary: PropTypes.bool,\r\n\r\n    /**\r\n     * The label to use for the cancel button on the year picker.\r\n     */\r\n    cancelLabel: PropTypes.node.isRequired,\r\n\r\n    /**\r\n     * Boolean if the cancel button should be styled with the primary color.\r\n     */\r\n    cancelPrimary: PropTypes.bool,\r\n\r\n    /**\r\n     * The default mode to open the time picker in.\r\n     */\r\n    defaultTimeMode: PropTypes.oneOf(['hour', 'minute']),\r\n\r\n    /**\r\n     * Boolean if the date should automatically be selected when a user clicks\r\n     * on a new date instead of making them hit the ok button.\r\n     */\r\n    autoOk: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the date picker should be displayed inline instead of in a\r\n     * dialog.\r\n     */\r\n    inline: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional force of the display mode of the date picker.\r\n     * This _should_ not really be used since there are media queries\r\n     * to use the correct mode based on device orientation.\r\n     */\r\n    displayMode: PropTypes.oneOf(['landscape', 'portrait']),\r\n\r\n    /**\r\n     * Boolean if the text field for the Time Picker should be displayed as full width.\r\n     */\r\n    fullWidth: PropTypes.bool,\r\n\r\n    /**\r\n     * The direction that the text field divider expands from when the text field\r\n     * in the date picker gains focus.\r\n     */\r\n    lineDirection: PropTypes.oneOf(['left', 'center', 'right']),\r\n\r\n    /**\r\n     * An optional boolean if the time picker is current visible by dialog or inline.\r\n     * If this is set, the `onVisibilityChange` function is required.\r\n     */\r\n    visible: controlled(PropTypes.bool, 'onVisibilityChange', 'defaultVisible'),\r\n\r\n    /**\r\n     * An optional function to call when the date picker is opened in either a dialog, or\r\n     * inline. The callback will include the next state.\r\n     *\r\n     * ```js\r\n     * onVisibilityChange(!visible, e);\r\n     * ```\r\n     */\r\n    onVisibilityChange: PropTypes.func,\r\n\r\n    /**\r\n     * Boolean if the time picker is disabled.\r\n     */\r\n    disabled: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the dialog should be able to close if a keyboard user presses the escape key.\r\n     */\r\n    closeOnEsc: PropTypes.bool,\r\n\r\n    /**\r\n     * If true the hover mode of the Time Picker is activated.\r\n     * In hover mode no clicks are required to start selecting an hour\r\n     * and the time mode switches automatically when a time was chosen.\r\n     * When a minute is selected the chosen time is applied automatically.\r\n     */\r\n    hoverMode: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the inline time picker's visibility should be animated.\r\n     */\r\n    animateInline: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the time is required.\r\n     *\r\n     * @see {@link TextFields/TextField#required}\r\n     */\r\n    required: PropTypes.bool,\r\n\r\n    /**\r\n     * @see {@link TextFields/TextField#block}\r\n     */\r\n    block: TextField.propTypes.block,\r\n\r\n    /**\r\n     * @see {@link TextFields/TextField#paddedBlock}\r\n     */\r\n    paddedBlock: TextField.propTypes.paddedBlock,\r\n\r\n    /**\r\n     * @see {@link TextFields/TextField#active}\r\n     */\r\n    active: TextField.propTypes.active,\r\n\r\n    /**\r\n     * @see {@link TextFields/TextField#error}\r\n     */\r\n    error: TextField.propTypes.error,\r\n\r\n    /**\r\n     * @see {@link TextFields/TextField#floating}\r\n     */\r\n    floating: TextField.propTypes.floating,\r\n\r\n    /**\r\n     * @see {@link TextFields/TextField#leftIconStateful}\r\n     */\r\n    leftIconStateful: TextField.propTypes.leftIconStateful,\r\n\r\n    /**\r\n     * @see {@link TextFields/TextField#rightIcon}\r\n     */\r\n    rightIcon: TextField.propTypes.rightIcon,\r\n\r\n    /**\r\n     * @see {@link TextFields/TextField#rightIconStateful}\r\n     */\r\n    rightIconStateful: TextField.propTypes.rightIconStateful,\r\n\r\n    /**\r\n     * @see {@link TextFields/TextField#customSize}\r\n     */\r\n    customSize: TextField.propTypes.customSize,\r\n\r\n    /**\r\n     * @see {@link TextFields/TextField#errorText}\r\n     */\r\n    errorText: TextField.propTypes.errorText,\r\n\r\n    /**\r\n     * @see {@link TextFields/TextField#helpText}\r\n     */\r\n    helpText: TextField.propTypes.helpText,\r\n\r\n    /**\r\n     * @see {@link TextFields/TextField#helpOnFocus}\r\n     */\r\n    helpOnFocus: TextField.propTypes.helpOnFocus,\r\n\r\n    /**\r\n     * @see {@link TextFields/TextField#inlineIndicator}\r\n     */\r\n    inlineIndicator: TextField.propTypes.inlineIndicator,\r\n\r\n    /**\r\n     * Boolean if the Portal's functionality of rendering in a separate react tree should be applied\r\n     * to the dialog.\r\n     *\r\n     * @see {@link Helpers/Portal}\r\n     */\r\n    portal: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional DOM Node to render the dialog into. The default is to render as the first child\r\n     * in the `body`.\r\n     */\r\n    renderNode: PropTypes.object,\r\n\r\n    /**\r\n     * Boolean if the dialog should be rendered as the last child of the `renderNode` or `body` instead\r\n     * of the first.\r\n     */\r\n    lastChild: PropTypes.bool,\r\n\r\n    /**\r\n     * @see {@link Dialogs/DialogContainer#disableScrollLocking}\r\n     */\r\n    disableScrollLocking: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the TimePicker should be read only. This will prevent the user from opening the picker\r\n     * and only display the current date in the text field.\r\n     */\r\n    readOnly: PropTypes.bool,\r\n\r\n    isOpen: deprecated(PropTypes.bool, 'Use `visible` instead'),\r\n    initiallyOpen: deprecated(PropTypes.bool, 'Use `defaultVisible` instead'),\r\n    initialTimeMode: deprecated(PropTypes.oneOf(['hour', 'minute']), 'Use `defaultTimeMode` instead'),\r\n  };\r\n\r\n  static defaultProps = {\r\n    animateInline: true,\r\n    defaultTimeMode: 'hour',\r\n    icon: <FontIcon>access_time</FontIcon>,\r\n    DateTimeFormat: DateTimeFormat, // eslint-disable-line object-shorthand\r\n    locales: typeof window !== 'undefined'\r\n      ? window.navigator.userLanguage || window.navigator.language\r\n      : 'en-US',\r\n    okLabel: 'Ok',\r\n    okPrimary: true,\r\n    cancelLabel: 'Cancel',\r\n    cancelPrimary: true,\r\n    closeOnEsc: true,\r\n    disableScrollLocking: false,\r\n    'aria-label': 'Select a time',\r\n    hoverMode: false,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let initialDate;\r\n    if (props.defaultValue) {\r\n      initialDate = new Date(props.defaultValue);\r\n    } else if (props.value) {\r\n      initialDate = new Date(props.value);\r\n    } else {\r\n      initialDate = new Date();\r\n    }\r\n\r\n    const visible = typeof props.initiallyOpen !== 'undefined'\r\n      ? props.initiallyOpen\r\n      : !!props.defaultVisible;\r\n\r\n    this.state = {\r\n      visible,\r\n      ...this._getTimeParts(initialDate, props),\r\n      value: props.defaultValue,\r\n      time: initialDate,\r\n      timeMode: props.initialTimeMode || props.defaultTimeMode,\r\n      tempTime: initialDate,\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (this.props.value !== nextProps.value) {\r\n      const time = nextProps.value || new Date();\r\n      this.setState({ tempTime: time, ...this._getTimeParts(time, nextProps) });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { inline, isOpen } = this.props;\r\n    const visible = typeof isOpen !== 'undefined'\r\n      ? isOpen\r\n      : getField(this.props, this.state, 'visible');\r\n    const pVisible = typeof prevProps.isOpen !== 'undefined'\r\n      ? prevProps.isOpen\r\n      : getField(prevProps, prevState, 'visible');\r\n\r\n    if (visible === pVisible) {\r\n      return;\r\n    }\r\n\r\n    if (visible) {\r\n      if (inline) {\r\n        handleWindowClickListeners(this._handleOutsideClick, true);\r\n        window.addEventListener('keydown', this._closeOnEsc);\r\n      }\r\n    } else if (inline) {\r\n      handleWindowClickListeners(this._handleOutsideClick, false);\r\n      window.removeEventListener('keydown', this._closeOnEsc);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const visible = typeof this.props.isOpen !== 'undefined'\r\n      ? this.props.isOpen\r\n      : getField(this.props, this.state, 'visible');\r\n    if (visible && this.props.inline) {\r\n      handleWindowClickListeners(this._handleOutsideClick, false);\r\n      window.removeEventListener('keydown', this._closeOnEsc);\r\n    }\r\n  }\r\n\r\n  _setContainer = (container) => {\r\n    this._container = container;\r\n  };\r\n\r\n  _getTimeParts(date, props) {\r\n    return extractTimeParts(props.DateTimeFormat, props.locales, date);\r\n  }\r\n\r\n  _closeOnEsc = (e) => {\r\n    if ((e.which || e.keyCode) === ESC) {\r\n      this._handleCancelClick(e);\r\n    }\r\n  };\r\n\r\n  _handleOutsideClick = (e) => {\r\n    if (this._container && !this._container.contains(e.target)) {\r\n      this._handleCancelClick(e);\r\n    }\r\n  };\r\n\r\n  _toggleOpen = (e) => {\r\n    if (this.props.disabled || this.props.readOnly) {\r\n      return;\r\n    }\r\n\r\n    const visible = !(typeof this.props.isOpen !== 'undefined'\r\n      ? this.props.isOpen\r\n      : getField(this.props, this.state, 'visible'));\r\n\r\n    if (this.props.onVisibilityChange) {\r\n      this.props.onVisibilityChange(visible, e);\r\n    }\r\n\r\n    if (typeof this.props.isOpen === 'undefined' && typeof this.props.visible === 'undefined') {\r\n      const { hoverMode } = this.props;\r\n\r\n      if (hoverMode) {\r\n        this._setTimeMode('hour');\r\n      }\r\n\r\n      this.setState({ visible });\r\n    }\r\n  };\r\n\r\n  _setTimeMode = (timeMode) => {\r\n    if (this.state.timeMode === timeMode) {\r\n      return;\r\n    }\r\n\r\n    this.setState({ timeMode });\r\n  };\r\n\r\n  _setTempTime = (time) => {\r\n    if (this.state.tempTime === time) {\r\n      return;\r\n    }\r\n\r\n    this.setState({ tempTime: time, ...this._getTimeParts(time, this.props) });\r\n  };\r\n\r\n  _handleKeyDown = (e) => {\r\n    handleKeyboardAccessibility(e, this._toggleOpen, true, true);\r\n\r\n    if ((e.which || e.keyCode) === TAB && this.state.active) {\r\n      this.setState({ active: false });\r\n    }\r\n  };\r\n\r\n  _handleOkClick = (e) => {\r\n    const { onVisibilityChange, onChange, DateTimeFormat, locales } = this.props;\r\n    const value = new Date(this.state.tempTime);\r\n    if (onChange) {\r\n      onChange(formatTime(DateTimeFormat, locales, value), value, e);\r\n    }\r\n\r\n    if (onVisibilityChange) {\r\n      onVisibilityChange(false, e);\r\n    }\r\n\r\n    const state = { time: value, ...this._getTimeParts(value, this.props) };\r\n    if (typeof this.props.value === 'undefined') {\r\n      state.value = value;\r\n    }\r\n\r\n    if (typeof this.props.isOpen === 'undefined' && typeof this.props.visible === 'undefined') {\r\n      state.visible = false;\r\n    }\r\n\r\n    this.setState(state);\r\n  };\r\n\r\n  _handleCancelClick = (e) => {\r\n    if (this.props.onVisibilityChange) {\r\n      this.props.onVisibilityChange(false, e);\r\n    }\r\n\r\n    let state;\r\n    if (typeof this.props.isOpen === 'undefined' && typeof this.props.visible === 'undefined') {\r\n      state = { visible: false };\r\n    }\r\n\r\n    const value = getField(this.props, this.state, 'value');\r\n    if (value) {\r\n      state = { ...state, ...this._getTimeParts(value, this.props) };\r\n      state.tempTime = this.state.time;\r\n    }\r\n\r\n    if (state) {\r\n      this.setState(state);\r\n    }\r\n  };\r\n\r\n  _getTextFieldValue(props, state) {\r\n    const { DateTimeFormat, locales } = props;\r\n    const value = getField(props, state, 'value');\r\n    if (!value) {\r\n      return '';\r\n    } else if (value instanceof Date) {\r\n      return formatTime(DateTimeFormat, locales, value);\r\n    } else {\r\n      // currently don't support value of string\r\n      return value;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      timeMode,\r\n      tempTime,\r\n      hours,\r\n      minutes,\r\n      timePeriod,\r\n    } = this.state;\r\n\r\n    const {\r\n      style,\r\n      className,\r\n      pickerStyle,\r\n      pickerClassName,\r\n      inputStyle,\r\n      inputClassName,\r\n      textFieldStyle,\r\n      textFieldClassName,\r\n      id,\r\n      disabled,\r\n      label,\r\n      placeholder,\r\n      icon,\r\n      inline,\r\n      displayMode,\r\n      fullWidth,\r\n      lineDirection,\r\n      closeOnEsc,\r\n      hoverMode,\r\n      portal,\r\n      renderNode,\r\n      lastChild,\r\n      animateInline,\r\n      block,\r\n      paddedBlock,\r\n      active,\r\n      error,\r\n      floating,\r\n      required,\r\n      leftIconStateful,\r\n      rightIcon,\r\n      rightIconStateful,\r\n      customSize,\r\n      errorText,\r\n      helpText,\r\n      helpOnFocus,\r\n      inlineIndicator,\r\n      disableScrollLocking,\r\n      'aria-label': ariaLabel,\r\n      /* eslint-disable no-unused-vars */\r\n      value: propValue,\r\n      visible: propVisible,\r\n      readOnly,\r\n      defaultValue,\r\n      defaultVisible,\r\n      defaultTimeMode,\r\n      onVisibilityChange,\r\n\r\n      // deprecated\r\n      isOpen,\r\n      initialTimeMode,\r\n      initiallyOpen,\r\n      ...props\r\n    } = this.props;\r\n\r\n    const visible = typeof this.props.isOpen !== 'undefined'\r\n      ? this.props.isOpen\r\n      : getField(this.props, this.state, 'visible');\r\n\r\n    const picker = (\r\n      <TimePicker\r\n        {...props}\r\n        inline={inline}\r\n        icon={!!icon}\r\n        tempTime={tempTime}\r\n        timeMode={timeMode}\r\n        hours={hours}\r\n        minutes={minutes}\r\n        timePeriod={timePeriod}\r\n        style={pickerStyle}\r\n        className={pickerClassName}\r\n        displayMode={displayMode}\r\n        onOkClick={this._handleOkClick}\r\n        onCancelClick={this._handleCancelClick}\r\n        setTimeMode={this._setTimeMode}\r\n        setTempTime={this._setTempTime}\r\n        hoverMode={hoverMode}\r\n      />\r\n    );\r\n\r\n    let content;\r\n    if (inline) {\r\n      content = <Collapse collapsed={!visible} animate={animateInline}>{picker}</Collapse>;\r\n    } else {\r\n      content = (\r\n        <Dialog\r\n          id={`${id}-dialog`}\r\n          visible={visible}\r\n          onHide={this._handleCancelClick}\r\n          dialogClassName=\"md-dialog--picker\"\r\n          contentClassName=\"md-dialog-content--picker\"\r\n          aria-label={ariaLabel}\r\n          closeOnEsc={closeOnEsc}\r\n          portal={portal}\r\n          lastChild={lastChild}\r\n          renderNode={renderNode}\r\n          focusOnMount={false}\r\n          disableScrollLocking={disableScrollLocking}\r\n        >\r\n          {picker}\r\n        </Dialog>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div style={style} className={cn('md-picker-container', className)} ref={this._setContainer}>\r\n        <TextField\r\n          id={id}\r\n          style={textFieldStyle}\r\n          className={cn({ 'md-pointer--hover': !disabled }, textFieldClassName)}\r\n          inputStyle={inputStyle}\r\n          inputClassName={cn({ 'md-pointer--hover': !disabled }, inputClassName)}\r\n          active={active || visible}\r\n          error={error}\r\n          floating={floating || visible}\r\n          required={required}\r\n          disabled={disabled}\r\n          leftIcon={icon}\r\n          leftIconStateful={leftIconStateful}\r\n          rightIcon={rightIcon}\r\n          rightIconStateful={rightIconStateful}\r\n          inlineIndicator={inlineIndicator}\r\n          block={block}\r\n          paddedBlock={paddedBlock}\r\n          fullWidth={fullWidth}\r\n          lineDirection={lineDirection}\r\n          customSize={customSize}\r\n          helpText={helpText}\r\n          helpOnFocus={helpOnFocus}\r\n          errorText={errorText}\r\n          label={label}\r\n          placeholder={placeholder}\r\n          onClick={this._toggleOpen}\r\n          onKeyDown={this._handleKeyDown}\r\n          value={this._getTextFieldValue(this.props, this.state)}\r\n          readOnly\r\n        />\r\n        {content}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/** @module utils/DateUtils/extractTimeParts */\r\nimport formatTime from './formatTime';\r\n\r\n/**\r\n * Extracts the hours, minutes, and optional time period from\r\n * a date time.\r\n *\r\n * @param {function} DateTimeFormat the DateTimeFormat function to use.\r\n * @param {string|string[]} locales the locales to use.\r\n * @param {Date} time the time to extract from.\r\n * @return {Object} an object of { hours, minutes, timePeriod }\r\n */\r\nexport default function extractTimeParts(DateTimeFormat, locales, time) {\r\n  const formatted = formatTime(DateTimeFormat, locales, time);\r\n\r\n  // IE does not like lookaheads or splitting on [^0-9]\r\n  // it will include the non-printable characters..\r\n  const [hours, minutes] = formatted.match(/[0-9]+/g);\r\n  const [separator, ...remaining] = formatted.match(/[ ,.:A-z]+/g);\r\n  let timePeriod;\r\n  if (remaining && remaining.length) {\r\n    timePeriod = remaining.join('').trim();\r\n  }\r\n\r\n  return {\r\n    hours,\r\n    minutes: separator + minutes,\r\n    timePeriod,\r\n  };\r\n}\r\n\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\r\n\r\nimport between from '../utils/PropTypes/between';\r\n\r\nconst ROATE_DISTANCE = 360 * 1.75;\r\nconst BASE_SIZE = 24; // font-icon font size\r\n\r\n/**\r\n * The `CircularProgress` component is used to give visual feedback while your app\r\n * is loading.\r\n *\r\n * There are two different types of circular progress bars: `Determinate` and `Indeterminate`.\r\n *\r\n * A `Determinate` circular progress bar should be used when you want to keep track of the current\r\n * progress. An example would be downloading a file.\r\n *\r\n * An `Indeterminate` circular progress bar should be used when you can not keep track of the progress\r\n * yourself. An example would be waiting for some API call to complete.\r\n */\r\nexport default class CircularProgress extends PureComponent {\r\n  /* eslint-disable max-len */\r\n  static propTypes = {\r\n    /**\r\n     * The `id` prop is required for accessibility concerns.\r\n     * [Progress Bar Role](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_progressbar_role)\r\n     *\r\n     * > If the progressbar is describing the loading progress of a particular region of a page, the author\r\n     * __SHOULD__ use aria-describedby to point to the status, and set the aria-busy attribute to true on the\r\n     * region until it is finished loading. It is not possible for the user to alter the value of a progressbar\r\n     * because it is always readonly.\r\n     */\r\n    id: isRequiredForA11y(PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ])),\r\n\r\n    /* eslint-enable max-len */\r\n\r\n    /**\r\n     * A style object to apply to the SVG. If this is a determinate `CircularProgress`,\r\n     * the `transform` (and vendor prefixes) styles will be merged with the current\r\n     * progress rotation.\r\n     */\r\n    style: PropTypes.object.isRequired,\r\n\r\n    /**\r\n     * An optional className to apply to the SVG.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * The current value of the progress. If this value is defined, it will\r\n     * be converted to a determinate circular progress. The progress will not\r\n     * advance unless this value changes.\r\n     *\r\n     * This value should also be a number between 0 and 100.\r\n     */\r\n    value: between(PropTypes.number, 0, 100),\r\n\r\n    /**\r\n     * The scale for the circular progress.\r\n     */\r\n    scale: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * You probably don't want to update this. I'm not good at SVG. This should\r\n     * match the SCSS variable `$md-circular-progress-stroke-dashoffset`.\r\n     */\r\n    determinateDashoffset: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * Boolean if the progress should be centered in it's container.\r\n     */\r\n    centered: PropTypes.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    style: {},\r\n    scale: 1,\r\n    determinateDashoffset: 187,\r\n    centered: true,\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      scale,\r\n      style,\r\n      className,\r\n      value,\r\n      determinateDashoffset,\r\n      centered,\r\n      ...props\r\n    } = this.props;\r\n\r\n    const isDeterminate = typeof value === 'number';\r\n    let circleStyle;\r\n    let svgStyle = style;\r\n    if (isDeterminate) {\r\n      const rotate = `rotate3d(0, 0, 1, ${ROATE_DISTANCE / 100 * value}deg)`;\r\n      circleStyle = {\r\n        strokeDashoffset: determinateDashoffset - (determinateDashoffset / 100 * value),\r\n      };\r\n\r\n      svgStyle = Object.assign({}, style, {\r\n        WebkitTransform: cn(style.WebkitTransform, rotate),\r\n        MozTransform: cn(style.MozTransform, rotate),\r\n        transform: cn(style.transform, rotate),\r\n      });\r\n    }\r\n\r\n    const accessibilityProps = {\r\n      role: 'progressbar',\r\n      'aria-valuemin': 0,\r\n      'aria-valuemax': 100,\r\n    };\r\n\r\n    if (isDeterminate) {\r\n      accessibilityProps['aria-valuenow'] = value;\r\n    }\r\n\r\n    return (\r\n      <svg\r\n        {...props}\r\n        {...accessibilityProps}\r\n        style={svgStyle}\r\n        className={cn('md-progress md-progress--circular', {\r\n          'md-block-centered': centered,\r\n          'md-progress--circular-determinate': isDeterminate,\r\n          'md-progress--circular-indeterminate': !isDeterminate,\r\n        }, className)}\r\n        width={scale * BASE_SIZE}\r\n        height={scale * BASE_SIZE}\r\n        viewBox=\"0 0 66 66\"\r\n      >\r\n        <circle\r\n          className={cn('md-circular-progress-path', {\r\n            'md-circular-progress-path--animated': !isDeterminate,\r\n          })}\r\n          strokeWidth=\"6\"\r\n          strokeLinecap=\"round\"\r\n          style={circleStyle}\r\n          cx=\"33\"\r\n          cy=\"33\"\r\n          r=\"30\"\r\n        />\r\n      </svg>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\r\nimport between from '../utils/PropTypes/between';\r\n\r\n/**\r\n * There are 3 different types of linear progress bars: `Determinate`,\r\n * `Indeterminate`, and `Query Indeterminate`.\r\n *\r\n * A `Determinate` linear progress bar should be used when you can keep track of the\r\n * progress and have a percentage complete you can work with. An example would be\r\n * uploading/downloading a file.\r\n *\r\n * An `Indeterminate` linear progress bar should be used when you can not keep track\r\n * of the progress yourself. An example might be waiting for an API call to complete.\r\n *\r\n * A `Query Indeterminate` linear progress bar is used when you are combining\r\n * `Indeterminate` and `Determinate`. A Linear Progress component can be displayed\r\n * as a query indeterminate progress bar by adding the prop `query={true}` to the\r\n * component. Until a progress value is given, it will display the query linear\r\n * progress animation. Afterwards, it will start the determinate animation of where\r\n * you manually keep updating the value of the progress.\r\n */\r\nexport default class LinearProgress extends PureComponent {\r\n  /* eslint-disable max-len */\r\n  static propTypes = {\r\n    /**\r\n     * The `id` prop is required for accessibility concerns.\r\n     * [Progress Bar Role](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_progressbar_role)\r\n     *\r\n     * > If the progressbar is describing the loading progress of a particular region of a page, the author\r\n     * __SHOULD__ use aria-describedby to point to the status, and set the aria-busy attribute to true on the\r\n     * region until it is finished loading. It is not possible for the user to alter the value of a progressbar\r\n     * because it is always readonly.\r\n     */\r\n    id: isRequiredForA11y(PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ])),\r\n\r\n    /* eslint-enable max-len */\r\n    /**\r\n     * An optional className to apply to the linear progress container.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * An optional className to apply to the progress bar element.\r\n     *\r\n     * If a function is specified it will be called to get necessary className.\r\n     * Current progress value and reference to the component will be passed into the function.\r\n     */\r\n    progressClassName: PropTypes.oneOfType([\r\n      PropTypes.func,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * An optional style to apply to the progress bar element.\r\n     *\r\n     * If a function is specified it will be called to get necessary style.\r\n     * Current progress value and reference to the component will be passed into the function.\r\n     */\r\n    progressStyle: PropTypes.oneOfType([\r\n      PropTypes.func,\r\n      PropTypes.object,\r\n    ]),\r\n\r\n    /**\r\n     * The current value of the progress. If this value is defined, it will\r\n     * be converted to a determinate circular progress. The progress will not\r\n     * advance unless this value changes.\r\n     *\r\n     * This value should also be a number between 0 and 100.\r\n     */\r\n    value: between(PropTypes.number, 0, 100),\r\n\r\n    /**\r\n     * Boolean if this should be a query indeterminate progress bar.\r\n     */\r\n    query: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the Linear Progress should be centered. This\r\n     * will only work if the `max-width` style is set.\r\n     */\r\n    centered: PropTypes.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    query: false,\r\n  };\r\n\r\n  render() {\r\n    const { className, progressClassName, progressStyle, value, query, centered, ...props } = this.props;\r\n    const isDeterminate = typeof value === 'number';\r\n\r\n    const accessibilityProps = {\r\n      role: 'progressbar',\r\n      'aria-valuemin': 0,\r\n      'aria-valuemax': 100,\r\n    };\r\n\r\n    let style;\r\n    if (isDeterminate) {\r\n      style = { width: `${value}%` };\r\n      accessibilityProps['aria-valuenow'] = value;\r\n    }\r\n    if (progressStyle) {\r\n      style = Object.assign(style || {},\r\n        typeof progressStyle === 'function'\r\n          ? progressStyle(value, this)\r\n          : progressStyle\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div\r\n        {...props}\r\n        className={cn('md-progress md-progress--linear', { 'md-block-centered': centered }, className)}\r\n      >\r\n        <div\r\n          {...accessibilityProps}\r\n          style={style}\r\n          className={cn('md-progress--linear-active', {\r\n            'md-progress--linear-query': query,\r\n            'md-progress--linear-determinate': isDeterminate,\r\n            'md-progress--linear-indeterminate': !isDeterminate,\r\n          }, typeof progressClassName === 'function'\r\n              ? progressClassName(value, this)\r\n              : progressClassName\r\n          )}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport { UP, DOWN, LEFT, RIGHT } from '../constants/keyCodes';\r\nimport getField from '../utils/getField';\r\nimport minMaxLoop from '../utils/NumberUtils/minMaxLoop';\r\nimport controlled from '../utils/PropTypes/controlled';\r\nimport SelectionControl from './SelectionControl';\r\n\r\n\r\n/**\r\n * A custom PropTypes validator to make sure that each `control` in the `controls` prop\r\n * contains the given `propName`, or the `SelectionControlGroup` has defined that prop.\r\n */\r\nfunction requiredByAllControls(validator) {\r\n  return function validate(props, propName, component, ...others) {\r\n    let err = validator(props, propName, component, ...others);\r\n\r\n    if (!err && typeof props[propName] === 'undefined') {\r\n      const invalids = props.controls.filter(c => !c[propName]).map((_, i) => i);\r\n      if (invalids.length) {\r\n        const invalidPrefix = invalids.length === props.controls.length\r\n          ? 'All `controls`'\r\n          : `The \\`controls\\` at indexes \\`${invalids.join('`, `')}\\``;\r\n        const invalidMsg = `${invalidPrefix} are missing the \\`${propName}\\` prop.`;\r\n\r\n        err = new Error(\r\n          `The \\`${propName}\\` prop is required to make \\`${component}\\` accessible for users of ` +\r\n          `assistive technologies such as screen readers. Either add the \\`${propName}\\` to the \\`${component}\\` ` +\r\n          `or add the \\`${propName}\\` to each \\`control\\` in the \\`controls\\` prop. ${invalidMsg}`\r\n        );\r\n      }\r\n    }\r\n\r\n    return err;\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * The `SelectionControlGroup` component is used to simplify the generation of a list\r\n * of `SelectionControl`. Any common props are extracted to this component and passed\r\n * to the `SelectionControl`.\r\n */\r\nexport default class SelectionControlGroup extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * An optional style to apply to the container.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the container.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to every `SelectionControl`. This will be merged with any `style`\r\n     * that a `control` might have.\r\n     */\r\n    controlStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to every `SelectionControl`. This will be merged with any\r\n     * `className` that a `control` might have.\r\n     */\r\n    controlClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional base id to apply to each `SelectionControl`. When this is included, the id for\r\n     * each control will start with this and end with their current index. If this is omitted,\r\n     * each `control` in the `controls` prop *must* have an `id` prop. This is required for\r\n     * accessibility.\r\n     */\r\n    id: requiredByAllControls(PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ])),\r\n\r\n    /**\r\n     * The type to apply to each `SelectionControl` in the group. Only `checkbox` and `radio` is\r\n     * valid for a grouping.\r\n     */\r\n    type: PropTypes.oneOf(['checkbox', 'radio']).isRequired,\r\n\r\n    /**\r\n     * The component to render the `SelectionControlGroup` in. This can only be a valid dom element\r\n     * since it relies on the ref callback to add keyboard accessibility.\r\n     */\r\n    component: PropTypes.string.isRequired,\r\n\r\n    /**\r\n     * An optional label to display above the group of `SelectionControl`s.\r\n     */\r\n    label: PropTypes.node,\r\n\r\n    /**\r\n     * An optional className to apply to the node surrounding the `label` prop.\r\n     */\r\n    labelClassName: PropTypes.string,\r\n\r\n    /**\r\n     * The component to render the optional `label` in.\r\n     */\r\n    labelComponent: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.func,\r\n    ]).isRequired,\r\n\r\n    /**\r\n     * An optional function to call when any `SelectionControl`'s `checked` state is changed\r\n     * in the group. If the `type` of the group is `radio`, the `value` of the `checked` radio\r\n     * will be given in the callback. If the `type` of the group is `checkbox`, a comma-delimited\r\n     * string of all `checked` checkboxes values will be given.\r\n     *\r\n     * ```js\r\n     * // checkbox\r\n     * onChange('Alpha,Omega', changeEvent);\r\n     *\r\n     * // radio\r\n     * onChange('Omega', changeEvent);\r\n     * ```\r\n     */\r\n    onChange: PropTypes.func,\r\n\r\n    /**\r\n     * A name to use for each `SelectionControl` in the group. If the `type` of the group is\r\n     * `checkbox`, the name will be updated to be an array name so that using\r\n     * `document.querySelector('input[name=\"yourName[]\"].value` will give the comma-delimited\r\n     * string of checked checkboxes.\r\n     *\r\n     * It is either required to have this prop set or every `control` in the `controls` prop to\r\n     * have the `name` prop.\r\n     */\r\n    name: requiredByAllControls(PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ])),\r\n\r\n    /**\r\n     * The default value for the `SelectionControlGroup`. This can either be a single value\r\n     * or a comma-delimited string of checkbox values. When the `type` of the group is `radio`\r\n     * and the group is uncontrolled, it is recommended to set this prop. Otherwise the first\r\n     * value of the `controls` prop will be used as the default value.\r\n     */\r\n    defaultValue: PropTypes.oneOfType([\r\n      PropTypes.bool,\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * An optional value to use for the `SelectionControlGroup`. This will make the component\r\n     * controlled and require the `onChange` prop to be defined. Like the `defaultValue`, this\r\n     * can either be a single value or a comma-delimited list of checkbox values.\r\n     */\r\n    value: controlled(PropTypes.oneOfType([\r\n      PropTypes.bool,\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]), 'onChange'),\r\n\r\n    /**\r\n     * A list of objects to create the `SelectionControl` components. The shape of the object\r\n     * is the `propTypes` of the `SelectionControl` component, except that `value` prop is\r\n     * now required.\r\n     *\r\n     * The `SelectionControl` will inherit any inheritable props from the `SelectionControlGroup`.\r\n     */\r\n    controls: PropTypes.arrayOf(PropTypes.shape({\r\n      key: PropTypes.oneOfType([\r\n        PropTypes.number,\r\n        PropTypes.string,\r\n      ]),\r\n      label: PropTypes.node.isRequired,\r\n      value: PropTypes.oneOfType([\r\n        PropTypes.bool,\r\n        PropTypes.number,\r\n        PropTypes.string,\r\n      ]).isRequired,\r\n    })).isRequired,\r\n\r\n    /**\r\n     * Boolean if the `SelectionControl` should be displayed inline.\r\n     */\r\n    inline: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if all the selection controls in the group are disabled.\r\n     */\r\n    disabled: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional function to call when the keydown event is triggered.\r\n     */\r\n    onKeyDown: PropTypes.func,\r\n\r\n    /**\r\n     * An icon to use for a checked `radio` control. This will be applied to each\r\n     * control that has a `type=\"radio\"` in the `controls` list. This is just a simpler\r\n     * way of applying the custom icons for each radio in the list.\r\n     *\r\n     * This will default to the `checkedRadioIcon` on the `SelectionControl`.\r\n     *\r\n     * @see {@link #controls}\r\n     * @see {@link #uncheckedRadioIcon}\r\n     * @see {@link SelectionControls/SelectionControls#checkedRadioIcon}\r\n     * @see {@link SelectionControls/SelectionControls#uncheckedRadioIcon}\r\n     */\r\n    checkedRadioIcon: PropTypes.node,\r\n\r\n    /**\r\n     * An icon to use for an unchecked `radio` control. This will be applied to each\r\n     * control that has a `type=\"radio\"` in the `controls` list. This is just a simpler\r\n     * way of applying the custom icons for each radio in the list.\r\n     *\r\n     * This will default to the `uncheckedRadioIcon` on the `SelectionControl`.\r\n     *\r\n     * @see {@link #controls}\r\n     * @see {@link #checkedRadioIcon}\r\n     * @see {@link SelectionControls/SelectionControls#checkedRadioIcon}\r\n     * @see {@link SelectionControls/SelectionControls#uncheckedRadioIcon}\r\n     */\r\n    uncheckedRadioIcon: PropTypes.node,\r\n\r\n    /**\r\n     * An icon to use for a checked `checkbox` control. This will be applied to each\r\n     * control that has a `type=\"checkbox\"` in the `controls` list. This is just a simpler\r\n     * way of applying the custom icons for each checkbox in the list.\r\n     *\r\n     * This will default to the `checkedCheckboxIcon` on the `SelectionControl`.\r\n     *\r\n     * @see {@link #controls}\r\n     * @see {@link #uncheckedCheckboxIcon}\r\n     * @see {@link SelectionControls/SelectionControls#checkedCheckboxIcon}\r\n     * @see {@link SelectionControls/SelectionControls#uncheckedCheckboxIcon}\r\n     */\r\n    checkedCheckboxIcon: PropTypes.node,\r\n\r\n    /**\r\n     * An icon to use for an unchecked `checkbox` control. This will be applied to each\r\n     * control that has a `type=\"checkbox\"` in the `controls` list. This is just a simpler\r\n     * way of applying the custom icons for each checkbox in the list.\r\n     *\r\n     * This will default to the `uncheckedCheckboxIcon` on the `SelectionControl`.\r\n     *\r\n     * @see {@link #controls}\r\n     * @see {@link #checkedCheckboxIcon}\r\n     * @see {@link SelectionControls/SelectionControls#checkedCheckboxIcon}\r\n     * @see {@link SelectionControls/SelectionControls#uncheckedCheckboxIcon}\r\n     */\r\n    uncheckedCheckboxIcon: PropTypes.node,\r\n  };\r\n\r\n  static defaultProps = {\r\n    component: 'fieldset',\r\n    labelComponent: 'legend',\r\n    labelClassName: 'md-subheading-1',\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const radio = props.type === 'radio';\r\n    this.state = {};\r\n\r\n    if (typeof props.value === 'undefined') {\r\n      let value = props.defaultValue;\r\n\r\n      if (typeof value === 'undefined') {\r\n        value = radio ? props.controls[0].value : '';\r\n      }\r\n\r\n      this.state.value = value;\r\n    }\r\n\r\n    const groupValue = getField(props, this.state, 'value');\r\n    this._activeIndex = -1;\r\n    props.controls.some(({ value }, i) => {\r\n      if (value === groupValue) {\r\n        this._activeIndex = i;\r\n      }\r\n\r\n      return this._activeIndex > -1;\r\n    });\r\n  }\r\n\r\n  _isChecked(value, controlValue, type) {\r\n    return type === 'radio'\r\n      ? value === controlValue\r\n      : value.split(',').indexOf(controlValue) !== -1;\r\n  }\r\n\r\n  _setGroup = (group) => {\r\n    this._group = group;\r\n  };\r\n\r\n  _handleChange = (e) => {\r\n    let value = e.target.value;\r\n    if (this.props.type === 'checkbox') {\r\n      const { checked } = e.target;\r\n\r\n      const values = getField(this.props, this.state, 'value').split(',');\r\n      const index = values.indexOf(value);\r\n      if (checked) {\r\n        values.push(value);\r\n      } else {\r\n        values.splice(index, 1);\r\n      }\r\n\r\n      value = values.join(',');\r\n    }\r\n\r\n    if (this.props.onChange) {\r\n      this.props.onChange(value, e);\r\n    }\r\n\r\n    if (typeof this.props.value === 'undefined') {\r\n      this.setState({ value });\r\n    }\r\n  };\r\n\r\n  _handleKeyDown = (e) => {\r\n    if (this.props.onKeyDown) {\r\n      this.props.onKeyDown(e);\r\n    }\r\n\r\n    const key = e.which || e.keyCode;\r\n    const dec = key === UP || key === LEFT;\r\n    const inc = key === DOWN || key === RIGHT;\r\n    if (!this._group || (!dec && !inc)) {\r\n      return;\r\n    }\r\n\r\n    e.preventDefault();\r\n    const radios = this._group.querySelectorAll('*[role=\"radio\"]');\r\n    this._activeIndex = minMaxLoop(this._activeIndex, 0, radios.length - 1, inc);\r\n    radios[this._activeIndex].focus();\r\n    const { value } = this.props.controls[this._activeIndex];\r\n    if (getField(this.props, this.state, 'value') !== value) {\r\n      if (this.props.onChange) {\r\n        this.props.onChange(value, e);\r\n      }\r\n\r\n      if (typeof this.props.value === 'undefined') {\r\n        this.setState({ value });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      name,\r\n      type,\r\n      label,\r\n      labelClassName,\r\n      className,\r\n      controlStyle,\r\n      controlClassName,\r\n      component: Component,\r\n      labelComponent: LabelComponent,\r\n      inline,\r\n      disabled,\r\n      checkedRadioIcon,\r\n      uncheckedRadioIcon,\r\n      checkedCheckboxIcon,\r\n      uncheckedCheckboxIcon,\r\n      /* eslint-disable no-unused-vars */\r\n      value: propValue,\r\n      controls: propControls,\r\n      defaultValue,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n\r\n    const value = getField(this.props, this.state, 'value');\r\n    const radio = type === 'radio';\r\n\r\n    const controls = this.props.controls.map((control, i) => {\r\n      let style = control.style;\r\n      if (controlStyle) {\r\n        style = style ? { ...controlStyle, ...style } : controlStyle;\r\n      }\r\n\r\n      const checked = this._isChecked(value, control.value, type);\r\n      const controlProps = {\r\n        id: `${id}${i}`,\r\n        key: `control${i}`,\r\n        name: `${name}${type === 'checkbox' ? '[]' : ''}`,\r\n        type,\r\n        inline,\r\n        disabled,\r\n        checked,\r\n        tabIndex: !radio || checked || (i === 0 && this._activeIndex === -1) ? undefined : -1,\r\n        checkedRadioIcon,\r\n        uncheckedRadioIcon,\r\n        checkedCheckboxIcon,\r\n        uncheckedCheckboxIcon,\r\n        ...control,\r\n        style,\r\n        className: cn(controlClassName, control.className),\r\n      };\r\n\r\n      return <SelectionControl {...controlProps} />;\r\n    });\r\n\r\n    let ariaLabel;\r\n    if (label) {\r\n      ariaLabel = <LabelComponent className={labelClassName}>{label}</LabelComponent>;\r\n    }\r\n\r\n    return (\r\n      <Component\r\n        {...props}\r\n        ref={this._setGroup}\r\n        className={cn('md-selection-control-group', className)}\r\n        onChange={this._handleChange}\r\n        onKeyDown={radio ? this._handleKeyDown : null}\r\n      >\r\n        {ariaLabel}\r\n        {controls}\r\n      </Component>\r\n    );\r\n  }\r\n}\r\n","/** @module utils/NumberUtils/minMaxLoop */\r\n\r\n/**\r\n * Keeps a number within the min and max values. When the number becomes less\r\n * than the min, it will loop around and be the max value. When the number is\r\n * greater than the max, it will loop around and be the min value.\r\n *\r\n * @param {Number} current - the current number\r\n * @param {Number} min - the minimum number allowed\r\n * @param {Number} max - the maximum number allowed\r\n * @param {Boolean} increment - boolean if the value should be incremented or decremented by\r\n *    1.\r\n * @return {Number} the next number\r\n */\r\nexport default function minMaxLoop(current, min, max, increment = true) {\r\n  let next = current + (increment ? 1 : -1);\r\n  if (max < next) {\r\n    next = min;\r\n  } else if (next < min) {\r\n    next = max;\r\n  }\r\n\r\n  return next;\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport deprecated from 'react-prop-types/lib/deprecated';\r\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\r\n\r\nimport controlled from '../utils/PropTypes/controlled';\r\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\r\nimport FontIcon from '../FontIcons/FontIcon';\r\nimport SelectionControl from './SelectionControl';\r\n\r\n/**\r\n * The `Checkbox` component is used for the selection of multiple options from a set.\r\n */\r\nexport default class Checkbox extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * An id to use with the checkbox. This is used for accessibility and so that the label\r\n     * triggers the checkbox toggle.\r\n     */\r\n    id: isRequiredForA11y(PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number,\r\n    ])),\r\n\r\n    /**\r\n     * An optional style to apply to the checkbox's container.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the checkbox's container.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * A label to display with the checkbox. This is required for accessibility and triggering\r\n     * the toggle.\r\n     */\r\n    label: PropTypes.node,\r\n\r\n    /**\r\n     * Boolean if the label should appear before the checkbox icon.\r\n     */\r\n    labelBefore: PropTypes.bool,\r\n\r\n    /**\r\n     * A name to use for the `Checkbox`. This is required for accessibility. If the checkbox is\r\n     * part of a group, it is recommended to make this a string ending in `[]` so that the\r\n     * value can be found from `document.querySelector('input[name=\"someName[]\"]').value`.\r\n     */\r\n    name: isRequiredForA11y(PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ])),\r\n\r\n    /**\r\n     * Boolean if the `Checkbox` is disabled.\r\n     */\r\n    disabled: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional function to call when the `checked` state of the `Checkbox` changes.\r\n     * The callback will include the new checked state and the changeEvent.\r\n     *\r\n     * ```js\r\n     * onChange(changeEvent.target.checked, changeEvent);\r\n     * ```\r\n     */\r\n    onChange: PropTypes.func,\r\n\r\n    /**\r\n     * An optional value for the `Checkbox`. It is recommended to use a value though.\r\n     */\r\n    value: PropTypes.oneOfType([\r\n      PropTypes.bool,\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * Boolean if the `Checkbox` is checked by default.\r\n     */\r\n    defaultChecked: PropTypes.bool,\r\n\r\n    /**\r\n     * A boolean if the `Checkbox` is currently checked. This will required the `onChange` prop\r\n     * to be defined.\r\n     */\r\n    checked: controlled(PropTypes.bool, 'onChange', 'defaultChecked'),\r\n\r\n    /**\r\n     * Boolean if the `Checkbox` should be displayed inline.\r\n     */\r\n    inline: PropTypes.bool,\r\n\r\n    /**\r\n     * The icon to display when the checkbox is checked.\r\n     */\r\n    checkedIcon: PropTypes.node,\r\n\r\n    /**\r\n     * The icon to display when the checkbox is unchecked.\r\n     */\r\n    uncheckedIcon: PropTypes.node,\r\n\r\n    checkedIconChildren: deprecated(PropTypes.node, 'Use `checkedIcon` instead'),\r\n    checkedIconClassName: deprecated(PropTypes.string, 'Use `checkedIcon` instead'),\r\n    uncheckedIconChildren: deprecated(PropTypes.node, 'Use `uncheckedIcon` instead'),\r\n    uncheckedIconClassName: deprecated(PropTypes.string, 'Use `uncheckedIcon` instead'),\r\n  };\r\n\r\n  static defaultProps = {\r\n    checkedIcon: <FontIcon>check_box</FontIcon>,\r\n    uncheckedIcon: <FontIcon>check_box_outline_blank</FontIcon>,\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      checkedIcon,\r\n      uncheckedIcon,\r\n      // deprecated\r\n      checkedIconChildren,\r\n      checkedIconClassName,\r\n      uncheckedIconChildren,\r\n      uncheckedIconClassName,\r\n      ...props\r\n    } = this.props;\r\n\r\n    const checked = getDeprecatedIcon(checkedIconClassName, checkedIconChildren, checkedIcon);\r\n    const unchecked = getDeprecatedIcon(uncheckedIconClassName, uncheckedIconChildren, uncheckedIcon);\r\n\r\n    return (\r\n      <SelectionControl\r\n        type=\"checkbox\"\r\n        checkedCheckboxIcon={checked}\r\n        uncheckedCheckboxIcon={unchecked}\r\n        __superSecreteProp\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport deprecated from 'react-prop-types/lib/deprecated';\r\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\r\n\r\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\r\nimport FontIcon from '../FontIcons/FontIcon';\r\nimport SelectionControl from './SelectionControl';\r\n\r\n/**\r\n * The `Radio` component is used for the selection of a single option from a set. Unfortunately\r\n * the `Radio` component must always be controlled because of the `FontIcon` toggles and how\r\n * the `radio` input type works. It is recommended to use the `SelectionControlGroup` component\r\n * to manage the `radio`.\r\n */\r\nexport default class Radio extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * An id to use with the radio. This is used for accessibility and so that the label\r\n     * triggers the radio toggle.\r\n     */\r\n    id: isRequiredForA11y(PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number,\r\n    ])),\r\n\r\n    /**\r\n     * An optional style to apply to the radio's container.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the radio's container.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * A label to display with the radio. This is required for accessibility and triggering\r\n     * the toggle.\r\n     */\r\n    label: PropTypes.node.isRequired,\r\n\r\n    /**\r\n     * Boolean if the label should appear before the radio icon.\r\n     */\r\n    labelBefore: PropTypes.bool,\r\n\r\n    /**\r\n     * A name to use for the `Radio`. This is required for accessibility.\r\n     */\r\n    name: isRequiredForA11y(PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ])),\r\n\r\n    /**\r\n     * Boolean if the `Radio` is disabled.\r\n     */\r\n    disabled: PropTypes.bool,\r\n\r\n    /**\r\n     * A function to call when the `Radio` triggers the `change` event. The `onChange` callback\r\n     * will include the current value of the checked `radio` and the change event.\r\n     *\r\n     * ```js\r\n     * onChange(changeEvent.target.value, changeEvent);\r\n     * ```\r\n     */\r\n    onChange: PropTypes.func,\r\n\r\n    /**\r\n     * The value for the `Radio` component.\r\n     */\r\n    value: PropTypes.oneOfType([\r\n      PropTypes.bool,\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]).isRequired,\r\n\r\n    /**\r\n     * A boolean if the `Radio` is currently checked.\r\n     */\r\n    checked: PropTypes.bool.isRequired,\r\n\r\n    /**\r\n     * Boolean if the `Radio` should be displayed inline.\r\n     */\r\n    inline: PropTypes.bool,\r\n\r\n    /**\r\n     * The icon to display when the radio is checked/selected.\r\n     */\r\n    checkedIcon: PropTypes.node.isRequired,\r\n\r\n    /**\r\n     * The icon to display when the radio is not checked/selected.\r\n     */\r\n    uncheckedIcon: PropTypes.node.isRequired,\r\n    checkedIconChildren: deprecated(PropTypes.node, 'Use `checkedIcon` instead'),\r\n    checkedIconClassName: deprecated(PropTypes.string, 'Use `checkedIcon` instead'),\r\n    uncheckedIconChildren: deprecated(PropTypes.node, 'Use `uncheckedIcon` instead'),\r\n    uncheckedIconClassName: deprecated(PropTypes.string, 'Use `uncheckedIcon` instead'),\r\n  };\r\n\r\n  static defaultProps = {\r\n    checkedIcon: <FontIcon>radio_button_checked</FontIcon>,\r\n    uncheckedIcon: <FontIcon>radio_button_unchecked</FontIcon>,\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      checkedIcon,\r\n      uncheckedIcon,\r\n      // deprecated\r\n      checkedIconChildren,\r\n      checkedIconClassName,\r\n      uncheckedIconChildren,\r\n      uncheckedIconClassName,\r\n      ...props\r\n    } = this.props;\r\n\r\n    const checked = getDeprecatedIcon(checkedIconClassName, checkedIconChildren, checkedIcon);\r\n    const unchecked = getDeprecatedIcon(uncheckedIconClassName, uncheckedIconChildren, uncheckedIcon);\r\n\r\n    return (\r\n      <SelectionControl\r\n        type=\"radio\"\r\n        checkedCheckboxIcon={checked}\r\n        uncheckedCheckboxIcon={unchecked}\r\n        __superSecreteProp\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport deprecated from 'react-prop-types/lib/deprecated';\r\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\r\n\r\nimport controlled from '../utils/PropTypes/controlled';\r\nimport SelectionControl from './SelectionControl';\r\n\r\nexport default class Switch extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * An id to use with the switch. This is used for accessibility and so that the label\r\n     * triggers the switch toggle.\r\n     */\r\n    id: isRequiredForA11y(PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number,\r\n    ])),\r\n\r\n    /**\r\n     * An optional style to apply to the switch's container.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the switch's container.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * A label to display with the switch. This is required for accessibility and triggering\r\n     * the toggle.\r\n     */\r\n    label: PropTypes.node,\r\n\r\n    /**\r\n     * Boolean if the label should appear before the switch.\r\n     */\r\n    labelBefore: PropTypes.bool,\r\n\r\n    /**\r\n     * A name to use for the `Switch`. This is required for accessibility since behind the scenes\r\n     * the `Switch` is renders as an `<input type=\"checkbox\" />`.\r\n     */\r\n    name: isRequiredForA11y(PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ])),\r\n\r\n    /**\r\n     * Boolean if the `Switch` is disabled.\r\n     */\r\n    disabled: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional function to call when the `checked` state of the `Switch` changes.\r\n     * The callback will include the new checked state and the changeEvent.\r\n     *\r\n     * ```js\r\n     * onChange(changeEvent.target.checked, changeEvent);\r\n     * ```\r\n     */\r\n    onChange: PropTypes.func,\r\n\r\n    /**\r\n     * An optional value for the `Switch`. It is recommended to use a value though.\r\n     */\r\n    value: PropTypes.oneOfType([\r\n      PropTypes.bool,\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * Boolean if the `Switch` is checked by default.\r\n     */\r\n    defaultChecked: PropTypes.bool,\r\n\r\n    /**\r\n     * A boolean if the `Switch` is currently checked. This will required the `onChange` prop\r\n     * to be defined.\r\n     */\r\n    checked: controlled(PropTypes.bool, 'onChange', 'defaultChecked'),\r\n\r\n    defaultToggled: deprecated(PropTypes.bool, 'Use the `defaultChecked` prop instead'),\r\n    toggled: deprecated(PropTypes.bool, 'Use the `checked` prop instead'),\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      toggled,\r\n      defaultToggled,\r\n      ...props\r\n    } = this.props;\r\n\r\n    if (typeof toggled !== 'undefined' && typeof props.checked === 'undefined') {\r\n      props.checked = toggled;\r\n    }\r\n\r\n    if (typeof defaultToggled !== 'undefined' && typeof props.defaultChecked === 'undefined') {\r\n      props.defaultChecked = defaultToggled;\r\n    }\r\n\r\n    return <SelectionControl type=\"switch\" {...props} __superSecreteProp />;\r\n  }\r\n}\r\n","/** @module utils/NumberUtils/calculateValueDistance */\r\n\r\n/**\r\n * This calculates the distance from a screen x location to a position in some element\r\n * by comparing the width of the element and the element's page position to the screen\r\n * x position.\r\n *\r\n * If the distance is not _normalized_ the distance will be updated to be a percentage\r\n * of the element's total width.\r\n *\r\n * @param {Number} x - the screen x location.\r\n * @param {Number} width - the element's width\r\n * @param {Number} left - the element's page x position.\r\n * @param {Boolean} normalize - boolean if the distance should be a percentage.\r\n *\r\n * @return {Number} the distance from the element's left position to the page x\r\n *    location.\r\n */\r\nfunction calculateDistance(x, width, left, normalize) {\r\n  const distance = Math.min(\r\n    width,\r\n    Math.max(0, x - left)\r\n  );\r\n\r\n  return normalize ? distance : distance / width * 100;\r\n}\r\n\r\n/**\r\n * This calculates the new value and distance for a slider. It will compare the page x\r\n * location of a touch or mouse event to the slider's track page x position. If the\r\n * final value and distance should be _normalized_, they will be updated to be rounded\r\n * with the scale and steps in mind.\r\n *\r\n * The distance will always be contained within a percentage of 0 - 100 while the\r\n * value will be contained within the min and max values.\r\n *\r\n * @param {Number} x - the page x location of the touch or mouse event.\r\n * @param {Number} width - the slider's width\r\n * @param {Number} left - the slider's left position in the page.\r\n * @param {Number} scale - the total number values included in the slider.\r\n * @param {Number} step - the amount to increment by.\r\n * @param {Number} min - the min value for the slider.\r\n * @param {Number} max - the max value for the slider.\r\n * @param {Boolean} normalize - boolean if the vaue and distance should be _normalized_.\r\n *\r\n * @return {Object} an object with the value and distance.\r\n */\r\nexport default function calculateValueDistance(x, width, left, scale, step, min, max, normalize) {\r\n  let value;\r\n  let distance = calculateDistance(x, width, left, normalize);\r\n  if (normalize) {\r\n    value = Math.round(distance / (width / scale));\r\n    if (step < 1) {\r\n      const decimals = String(step).split('.')[1];\r\n      const corrector = typeof decimals !== 'undefined' && decimals.length > 0\r\n        ? Math.pow(10, decimals.length)\r\n        : 1;\r\n\r\n      const modded = (value * corrector) % (step * corrector);\r\n      if (modded !== 0 && modded >= step / 2) {\r\n        value += (step - modded);\r\n      } else if (modded !== 0) {\r\n        value -= modded;\r\n      }\r\n    }\r\n\r\n    distance = value / scale * 100;\r\n    value = (value * step) + min;\r\n  } else {\r\n    value = min + step * Math.round(distance / 100 * scale);\r\n  }\r\n\r\n  return {\r\n    distance: Math.max(0, Math.min(100, distance)),\r\n    value: Math.max(min, Math.min(max, value)),\r\n  };\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport themeColors from '../utils/themeColors';\r\n\r\n/**\r\n * This is just the label component for the slider. It will\r\n * return null if there are no children to display.\r\n */\r\nexport default class SliderLabel extends PureComponent {\r\n  static propTypes = {\r\n    className: PropTypes.string,\r\n    children: PropTypes.node,\r\n    htmlFor: (props, propName, component, ...others) => {\r\n      if (typeof props.children === 'undefined') {\r\n        return null;\r\n      }\r\n\r\n      return PropTypes.string.isRequired(props, propName, component, ...others);\r\n    },\r\n  };\r\n\r\n  render() {\r\n    const { children, className, htmlFor, ...props } = this.props;\r\n    if (!children) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <label\r\n        {...props}\r\n        htmlFor={htmlFor}\r\n        className={cn('md-slider-label', themeColors({ text: true }), className)}\r\n      >\r\n        {children}\r\n      </label>\r\n    );\r\n  }\r\n}\r\n","/** @module utils/NumberUtils/updateUnit */\r\n\r\n/**\r\n * Takes in a css unit (px, rem, em, etc) or a number and applies a function to the\r\n * number part of the unit.\r\n *\r\n * If the unit was a number to start with and a `toUnit` is given, the number will\r\n * be given the `toUnit`. Otherwise the number will be returned.\r\n *\r\n * If the unit was a string, the original units will be applied back to the updated\r\n * unit's value.\r\n *\r\n * @param {number|String} unit - the unit to apply a function to.\r\n * @param {function} fn - the function to apply to the number.\r\n * @param {String=} toUnit - an optional unit to cast the updated unit to.\r\n *\r\n * @return {String|number} the updated unit.\r\n */\r\nexport default function updateUnit(unit, fn, toUnit) {\r\n  const updated = fn(parseInt(unit, 10));\r\n\r\n  if (typeof unit === 'number') {\r\n    return toUnit\r\n      ? `${updated}${toUnit}`\r\n      : updated;\r\n  }\r\n\r\n  return `${updated}${unit.replace(/[0-9]/g, '')}`;\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\n/**\r\n * The `TrackFill` component is used for showing a colored bar\r\n * within the `Track` component to show the `Slider`'s position.\r\n *\r\n * If the `Slider` is disabled, this will just return null.\r\n */\r\nexport default class TrackFill extends PureComponent {\r\n  static propTypes = {\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    dragging: PropTypes.bool,\r\n    disabled: PropTypes.bool,\r\n    trackFillWidth: PropTypes.string.isRequired,\r\n  };\r\n\r\n  render() {\r\n    const { style, className, trackFillWidth, dragging, disabled, ...props } = this.props;\r\n    if (disabled) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <hr\r\n        {...props}\r\n        style={Object.assign({}, style, { width: trackFillWidth })}\r\n        className={cn('md-slider-track-fill', className, {\r\n          'md-slider-track-fill--dragging': dragging,\r\n        })}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport AccessibleFakeButton from '../Helpers/AccessibleFakeButton';\r\n\r\n/**\r\n * The `Thumb` component is the little ball for the slider.\r\n */\r\nexport default class Thumb extends PureComponent {\r\n  static propTypes = {\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    thumbLeft: PropTypes.string.isRequired,\r\n    on: PropTypes.bool,\r\n    off: PropTypes.bool,\r\n    active: PropTypes.bool,\r\n    disabled: PropTypes.bool,\r\n    dragging: PropTypes.bool,\r\n    discrete: PropTypes.bool,\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      style,\r\n      className,\r\n      on,\r\n      off,\r\n      active,\r\n      disabled,\r\n      dragging,\r\n      thumbLeft,\r\n      discrete,\r\n      ...props\r\n    } = this.props;\r\n\r\n    return (\r\n      <AccessibleFakeButton\r\n        disabled={disabled}\r\n        {...props}\r\n        style={Object.assign({}, style, { left: thumbLeft })}\r\n        className={cn('md-slider-thumb', className, {\r\n          'md-slider-thumb--active': active,\r\n          'md-slider-thumb--dragging': dragging,\r\n          'md-slider-thumb--disabled': disabled,\r\n          'md-slider-thumb--on': on,\r\n          'md-slider-thumb--continuous-off': !discrete && off,\r\n          'md-slider-thumb--discrete': discrete,\r\n          'md-slider-thumb--discrete-on': discrete && active && on,\r\n          'md-slider-thumb--discrete-off': discrete && !disabled && off,\r\n          'md-slider-thumb--discrete-active': discrete && active,\r\n          'md-slider-thumb--discrete-active-off': discrete && active && off,\r\n        })}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\n/**\r\n * The `ThumbMask` component is used for either:\r\n *\r\n *  - rendering the ink behind the `Thumb` component when the `Thumb`\r\n *  has keyboard focus or touch focus\r\n *  - rendering a underlay to make the `Track` look broken for disabled\r\n *  Sliders.\r\n */\r\nexport default class ThumbMask extends PureComponent {\r\n  static propTypes = {\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    thumbLeft: PropTypes.string.isRequired,\r\n    maskInked: PropTypes.bool,\r\n    dragging: PropTypes.bool,\r\n    discrete: PropTypes.bool,\r\n    leaving: PropTypes.bool,\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      style,\r\n      className,\r\n      thumbLeft,\r\n      disabled,\r\n      dragging,\r\n      maskInked,\r\n      discrete,\r\n      leaving,\r\n      ...props\r\n    } = this.props;\r\n\r\n    return (\r\n      <span\r\n        {...props}\r\n        style={Object.assign({}, style, { left: thumbLeft })}\r\n        className={cn('md-slider-thumb md-slider-thumb--mask', className, {\r\n          'md-slider-thumb--dragging': dragging,\r\n          'md-slider-thumb--mask-inked': maskInked,\r\n          'md-slider-thumb--mask-disabled': disabled,\r\n          'md-slider-thumb--discrete-mask-inked': maskInked && discrete,\r\n          'md-slider-thumb--discrete-mask-leaving': discrete && leaving,\r\n        })}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nexport default class DiscreteValue extends PureComponent {\r\n  static propTypes = {\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    discrete: PropTypes.bool,\r\n    dragging: PropTypes.bool,\r\n    active: PropTypes.bool,\r\n    value: PropTypes.number.isRequired,\r\n    thumbLeft: PropTypes.string.isRequired,\r\n    valuePrecision: PropTypes.number.isRequired,\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      style,\r\n      className,\r\n      discrete,\r\n      dragging,\r\n      thumbLeft,\r\n      active,\r\n      value,\r\n      valuePrecision,\r\n      ...props\r\n    } = this.props;\r\n\r\n    if (!discrete || !active) {\r\n      return null;\r\n    }\r\n\r\n    let valueStr = value.toFixed(valuePrecision);\r\n    if (valuePrecision > 0) {\r\n      const [w, d] = valueStr.split('.');\r\n      if (parseInt(d, 10) === 0) {\r\n        valueStr = w;\r\n      }\r\n    }\r\n    return (\r\n      <span\r\n        {...props}\r\n        style={Object.assign({}, style, { left: thumbLeft })}\r\n        className={cn('md-slider-discrete-value', className, {\r\n          'md-slider-discrete-value--dragging': dragging,\r\n        })}\r\n      >\r\n        {valueStr}\r\n      </span>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport updateUnit from '../utils/NumberUtils/updateUnit';\r\nimport TrackFill from './TrackFill';\r\nimport Thumb from './Thumb';\r\nimport ThumbMask from './ThumbMask';\r\nimport DiscreteValue from './DiscreteValue';\r\n\r\nconst half = w => w / 2;\r\n\r\n/**\r\n * The `Track` component is used for showing the current state of the slider.\r\n * It will render the `TrackFill`, `Thumb`, and `ThumbMask` components.\r\n */\r\nexport default class Track extends PureComponent {\r\n  static propTypes = {\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    thumbStyle: PropTypes.object,\r\n    thumbClassName: PropTypes.string,\r\n    trackFillStyle: PropTypes.object,\r\n    trackFillClassName: PropTypes.string,\r\n    discreteValueStyle: PropTypes.object,\r\n    discreteValueClassName: PropTypes.string,\r\n    on: PropTypes.bool,\r\n    off: PropTypes.bool,\r\n    active: PropTypes.bool,\r\n    dragging: PropTypes.bool,\r\n    disabled: PropTypes.bool,\r\n    thumbLeft: PropTypes.string.isRequired,\r\n    trackFillWidth: PropTypes.string.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n    discrete: PropTypes.bool,\r\n    maskInked: PropTypes.bool,\r\n    maskLeaving: PropTypes.bool,\r\n    onThumbKeyUp: PropTypes.func.isRequired,\r\n    onThumbKeyDown: PropTypes.func.isRequired,\r\n    onThumbFocus: PropTypes.func.isRequired,\r\n    scale: PropTypes.number,\r\n    step: PropTypes.number,\r\n    discreteTicks: PropTypes.number,\r\n    tickWidth: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n    valuePrecision: PropTypes.number.isRequired,\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      on,\r\n      off,\r\n      active,\r\n      disabled,\r\n      dragging,\r\n      className,\r\n      thumbLeft,\r\n      trackFillWidth,\r\n      trackFillStyle,\r\n      trackFillClassName,\r\n      discreteValueStyle,\r\n      discreteValueClassName,\r\n      maskInked,\r\n      maskLeaving,\r\n      thumbStyle,\r\n      thumbClassName,\r\n      discrete,\r\n      onThumbFocus,\r\n      onThumbKeyUp,\r\n      onThumbKeyDown,\r\n      value,\r\n      tickWidth,\r\n      discreteTicks,\r\n      scale,\r\n      step,\r\n      valuePrecision,\r\n      ...props\r\n    } = this.props;\r\n\r\n    const ticks = [];\r\n    if (typeof discreteTicks !== 'undefined' && !disabled && discrete) {\r\n      const amt = scale / (discreteTicks / step);\r\n      const offset = updateUnit(tickWidth, half, 'px');\r\n      const inc = 100 / amt;\r\n\r\n      for (let i = 0; i <= amt; i++) {\r\n        let left = `${i * inc}%`;\r\n        let width = tickWidth;\r\n        if (i === 0 || i === amt) {\r\n          width = updateUnit(tickWidth, half);\r\n        } else {\r\n          left = `calc(${left} - ${offset})`;\r\n        }\r\n\r\n        ticks.push(\r\n          <span\r\n            key={`tick-${i}`}\r\n            className=\"md-slider-discrete-tick\"\r\n            style={{ left, width }}\r\n          />\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div {...props} className={cn('md-slider-track', className)}>\r\n        {ticks}\r\n        <TrackFill\r\n          style={trackFillStyle}\r\n          className={trackFillClassName}\r\n          disabled={disabled}\r\n          dragging={dragging}\r\n          trackFillWidth={trackFillWidth}\r\n        />\r\n        <Thumb\r\n          style={thumbStyle}\r\n          className={thumbClassName}\r\n          on={on}\r\n          off={off}\r\n          disabled={disabled}\r\n          dragging={dragging}\r\n          active={active}\r\n          thumbLeft={thumbLeft}\r\n          onFocus={onThumbFocus}\r\n          onKeyUp={onThumbKeyUp}\r\n          onKeyDown={onThumbKeyDown}\r\n          discrete={discrete}\r\n        />\r\n        <DiscreteValue\r\n          style={discreteValueStyle}\r\n          className={discreteValueClassName}\r\n          discrete={discrete}\r\n          dragging={dragging}\r\n          active={active}\r\n          value={value}\r\n          thumbLeft={thumbLeft}\r\n          valuePrecision={valuePrecision}\r\n        />\r\n        <ThumbMask\r\n          dragging={dragging}\r\n          disabled={disabled}\r\n          thumbLeft={thumbLeft}\r\n          maskInked={maskInked}\r\n          discrete={discrete}\r\n          leaving={maskLeaving}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { findDOMNode } from 'react-dom';\r\nimport cn from 'classnames';\r\nimport deprecated from 'react-prop-types/lib/deprecated';\r\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\r\n\r\nimport { LEFT, RIGHT, TAB } from '../constants/keyCodes';\r\nimport getField from '../utils/getField';\r\nimport isValidClick from '../utils/EventUtils/isValidClick';\r\nimport { setTouchEvent, removeTouchEvent } from '../utils/EventUtils/touches';\r\nimport calculateValueDistance from '../utils/NumberUtils/calculateValueDistance';\r\nimport isWithinStep from '../utils/NumberUtils/isWithinStep';\r\nimport controlled from '../utils/PropTypes/controlled';\r\nimport SliderLabel from './SliderLabel';\r\nimport Track from './Track';\r\nimport TextField from '../TextFields/TextField';\r\n\r\n/**\r\n * The `Slider` component is used to let users select a value from a continuous\r\n * or discrete range of values by moving the slider thumb.\r\n *\r\n * When the user has finished dragging the Slider or increments the value by using\r\n * the edit field/keyboard arrows, the value will be rounded to the nearest `step`.\r\n */\r\nexport default class Slider extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * An id to use for the `Slider`. This is required if the `label` prop\r\n     * is defined.\r\n     */\r\n    id: (props, propName, component, ...others) => {\r\n      if (typeof props.label === 'undefined') {\r\n        return PropTypes.string(props, propName, component, ...others);\r\n      }\r\n\r\n      return isRequiredForA11y(PropTypes.oneOfType([\r\n        PropTypes.number,\r\n        PropTypes.string,\r\n      ]))(props, propName, component, ...others);\r\n    },\r\n\r\n    /**\r\n     * An optional style to apply to the slider's container.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the slider's container.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the slider's thumb.\r\n     */\r\n    thumbStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the slider's thumb.\r\n     */\r\n    thumbClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the slider's track.\r\n     */\r\n    trackStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the slider's track.\r\n     */\r\n    trackClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the slider's track fill.\r\n     */\r\n    trackFillStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the slider's track fill.\r\n     */\r\n    trackFillClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to a discrete slider's value.\r\n     */\r\n    discreteValueStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to a discrete slider's value.\r\n     */\r\n    discreteValueClassName: PropTypes.string,\r\n\r\n    /**\r\n     * The default value for the slider. This number must be between the min and max values if\r\n     * defined. If this is undefined, it's value will be set to the min value.\r\n     */\r\n    defaultValue: PropTypes.number,\r\n\r\n    /**\r\n     * The min value for the slider. This value **must** be less than the `max` value.\r\n     */\r\n    min: (props, propName, component, ...others) => {\r\n      let err = PropTypes.number.isRequired(props, propName, component, ...others);\r\n      if (!err) {\r\n        const min = props[propName];\r\n        let name;\r\n        if (min > props.value) {\r\n          name = 'value';\r\n        } else if (typeof props.defaultValue !== 'undefined' && min > props.defaultValue) {\r\n          name = 'defaultValue';\r\n        }\r\n\r\n        if (name) {\r\n          err = new Error(\r\n            `The '${propName}' prop must be less than or equal to the '${name}' prop for the '${component}' but ` +\r\n            `received: 'min: ${min}' and '${name}: ${props[name]}'`\r\n          );\r\n        }\r\n      }\r\n\r\n      return err;\r\n    },\r\n\r\n    /**\r\n     * The max value for the slider. This value **must** be greater than the `min` value.\r\n     */\r\n    max: (props, propName, component, ...others) => {\r\n      let err = PropTypes.number.isRequired(props, propName, component, ...others);\r\n      if (!err) {\r\n        const max = props[propName];\r\n        let name;\r\n        if (max < props.value) {\r\n          name = 'value';\r\n        } else if (max < props.defaultValue) {\r\n          name = 'defaultValue';\r\n        }\r\n\r\n        if (name) {\r\n          err = new Error(\r\n            `The '${propName}' prop must be greater than or equal to the '${name}' prop for the '${component}' but ` +\r\n            `received: '${propName}: ${max}' and '${name}: ${props[name]}'`\r\n          );\r\n        }\r\n      }\r\n\r\n      return err;\r\n    },\r\n\r\n    /**\r\n     * Boolean if the slider is disabled.\r\n     */\r\n    disabled: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional value for the slider. This will make the component controlled\r\n     * and require the `onChange` function.\r\n     */\r\n    value: controlled(PropTypes.number, 'onChange'),\r\n\r\n    /**\r\n     * This is called when the slider's value gets updated. The value can be updated\r\n     * by one of the following:\r\n     *\r\n     * - Clicking a section of the slider\r\n     * - Dragging the slider with the mouse\r\n     * - Touching a section of the slider.\r\n     * - Dragging the slider with touch\r\n     * - Using the text field to update the value either by typing or incrementing\r\n     * - Using the left or right arrow keys to increment/decrement the value.\r\n     *\r\n     * The callback for this function is as follows:\r\n     *\r\n     * ```js\r\n     * onChange(value, event);\r\n     * ```\r\n     *\r\n     * where the event can either be:\r\n     * - a touch start event\r\n     * - a touch move event\r\n     * - a touch end event\r\n     * - a mouse down event\r\n     * - a mouse move event\r\n     * - a mouse up event\r\n     * - a key up event\r\n     * - a key down event\r\n     */\r\n    onChange: PropTypes.func,\r\n\r\n    /**\r\n     * This is only called when the user is dragging the slider with either\r\n     * the mouse or touch. Probably not really useful. It just includes the\r\n     * new drag percentage while the `onChange` does not.\r\n     *\r\n     * The callback for this function is defined as:\r\n     *\r\n     * ```js\r\n     * onDragChange(dragPercentage, value, (touchMove || mouseMove) event);\r\n     * ```\r\n     */\r\n    onDragChange: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the slider's container has\r\n     * the mousedown event.\r\n     */\r\n    onMouseDown: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the slider's container has\r\n     * the touchstart event.\r\n     */\r\n    onTouchStart: PropTypes.func,\r\n\r\n    /**\r\n     * An optional icon or letter to place to the left of the slider.\r\n     * if you want to use a non-font icon or a letter, use the `md-slider-ind`\r\n     * className on your element.\r\n     */\r\n    leftIcon: PropTypes.element,\r\n\r\n    /**\r\n     * An optional icon or letter to place to the right of the slider.\r\n     * if you want to use a non-font icon or a letter, use the `md-slider-ind`\r\n     * className on your element.\r\n     *\r\n     * > NOTE: This can not be used if the `editable` prop is true.\r\n     */\r\n    rightIcon: PropTypes.element,\r\n\r\n    /**\r\n     * An optional label to display above the slider. If this prop\r\n     * is set, then an `id` must also be given.\r\n     */\r\n    label: PropTypes.node,\r\n\r\n    /**\r\n     * The incremental amount when the user hits left or right with the\r\n     * keyboard arrows, or the user hits the up or down buttons in the\r\n     * editable number text field. This number must be a number between\r\n     * 0 and 1 or a whole number above 1.\r\n     */\r\n    step: (props, propName, component, ...others) => {\r\n      let err = PropTypes.number.isRequired(props, propName, component, ...others);\r\n      if (!err) {\r\n        const step = props[propName];\r\n        if (step <= 0) {\r\n          err = new Error(\r\n            `The '${propName}' for the '${component}' must be a number greater than 0. The ` +\r\n            `current value is '${step}'.`\r\n          );\r\n        } else {\r\n          const valueDefined = typeof props.value !== 'undefined';\r\n          const defaultDefined = typeof props.defaultValue !== 'undefined';\r\n          let value = props.value;\r\n          if (!valueDefined) {\r\n            value = defaultDefined ? props.defaultValue : props.min;\r\n          }\r\n\r\n          let name;\r\n          if (!isWithinStep(value, step)) {\r\n            if (valueDefined) {\r\n              name = 'value';\r\n            } else if (defaultDefined) {\r\n              name = 'defaultValue';\r\n            } else {\r\n              name = 'min';\r\n            }\r\n          }\r\n\r\n          if (name) {\r\n            err = new Error(\r\n              `The '${name}' prop on '${component}' should be a number divisible by the ` +\r\n              `'${propName}' prop. The current value is '${props[name]}' and the '${propName}' ` +\r\n              `is '${step}'.`\r\n            );\r\n          }\r\n        }\r\n      }\r\n\r\n      return err;\r\n    },\r\n\r\n    /**\r\n     * Boolean if the Slider should be editable. This will place a number text field\r\n     * to the right of the slider. If this prop is set to `true`, the `rightIcon`\r\n     * prop can not be set.\r\n     */\r\n    editable: (props, propName, component, ...others) => {\r\n      if (typeof props[propName] === 'undefined') {\r\n        return null;\r\n      }\r\n\r\n      let err = PropTypes.bool.isRequired(props, propName, component, ...others);\r\n      if (!err && typeof props.rightIcon !== 'undefined') {\r\n        err = new Error(\r\n          `The '${component}' is unable to be 'editable' and include a 'rightIcon'.`\r\n        );\r\n      }\r\n\r\n      return err;\r\n    },\r\n\r\n    /**\r\n     * The width for the number text field when the Slider is editable.\r\n     */\r\n    inputWidth: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]).isRequired,\r\n\r\n    /**\r\n     * Boolean if the slider should be discrete. This will update the slider to include a\r\n     * _balloon_ with the current value inside. It will also not allow the `Slider` to be\r\n     * editable.\r\n     */\r\n    discrete: (props, propName, component, ...others) => {\r\n      if (typeof props[propName] === 'undefined') {\r\n        return null;\r\n      }\r\n\r\n      let err = PropTypes.bool(props, propName, component, ...others);\r\n      if (!err && typeof props.editable !== 'undefined') {\r\n        err = new Error(\r\n          `The '${component}' cannot be 'discrete' and 'editable'. Please choose one.`\r\n        );\r\n      }\r\n\r\n      return err;\r\n    },\r\n\r\n    /**\r\n     * The width of each tick for a discrete slider with ticks. This can either be a number\r\n     * which gets converted to `px`, or a valid CSS unit.\r\n     */\r\n    tickWidth: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]).isRequired,\r\n\r\n    /**\r\n     * This is number divisible by the total number of values included in the Slider. Every\r\n     * value that is divisible by this number will include a tick mark. It is common recommended\r\n     * to have this equal to the `step` prop.\r\n     *\r\n     * This prop is completely optional.\r\n     */\r\n    discreteTicks: (props, propName, component, ...others) => {\r\n      if (typeof props[propName] === 'undefined') {\r\n        return null;\r\n      }\r\n\r\n      let err = PropTypes.number(props, propName, component, ...others);\r\n      if (!err) {\r\n        const { min, max, step } = props;\r\n        const range = Math.abs(max - min);\r\n\r\n        if ((range / props[propName]) % 1 !== 0) {\r\n          err = new Error(\r\n            `The '${propName}' must be a number divisible by the range set by the 'min' and ` +\r\n            `'max' props. The current range is '${range}' by including the min: '${min}' and ` +\r\n            `max: '${max}' values. The current value of '${propName}' is '${props[propName]}'.`\r\n          );\r\n        } else if (props[propName] % step !== 0) {\r\n          err = new Error(\r\n            `The 'step' prop must be a number divisible by the '${propName}'. It is common to have ` +\r\n            `them as the same value. The current 'step' is '${step}' and the '${propName}' is '${props[propName]}'.`\r\n          );\r\n        }\r\n      }\r\n\r\n      return err;\r\n    },\r\n\r\n    /**\r\n     * The transition time for a discrete Slider's keyboard focus ink. This should match the\r\n     * `md-slider-discrete-ink-transition-time` value in your SCSS. This is used because\r\n     * the ink is only visible temporarily for a discrete slider when keyboard focusing.\r\n     */\r\n    discreteInkTransitionTime: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * The precision that the value should be rounded to when the Slider is updated. This\r\n     * needs to be a whole number greater than or equal to 0.\r\n     */\r\n    valuePrecision: (props, propName, component, ...others) => {\r\n      let err = PropTypes.number.isRequired(props, propName, component, ...others);\r\n      if (!err) {\r\n        const precision = props[propName];\r\n\r\n        if (precision % 1 !== 0 || precision < 0) {\r\n          err = new Error(\r\n            `The '${propName}' must be a positive whole number or 0 on the '${component}'. ` +\r\n            `The current '${propName}' is '${precision}'`\r\n          );\r\n        }\r\n      }\r\n\r\n      return err;\r\n    },\r\n\r\n    stepPrecision: deprecated(PropTypes.number, 'Use `step` and `valuePrecision` instead'),\r\n  };\r\n\r\n  static defaultProps = {\r\n    min: 0,\r\n    max: 100,\r\n    step: 1,\r\n    inputWidth: 40,\r\n    tickWidth: 6,\r\n    discreteInkTransitionTime: 300,\r\n    valuePrecision: 0,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { min, max, step } = props;\r\n    const scale = Math.abs(max - min) / step;\r\n\r\n    let value = typeof props.value !== 'undefined'\r\n      ? props.value\r\n      : props.defaultValue;\r\n\r\n    if (typeof value === 'undefined') {\r\n      value = min;\r\n    }\r\n\r\n    const distance = this._calcDistance(value, min, max);\r\n    const thumbLeft = this._calcLeft(distance);\r\n    const trackFillWidth = `${distance}%`;\r\n\r\n    if (typeof props.value !== 'undefined') {\r\n      value = undefined;\r\n    }\r\n\r\n    let trackWidth;\r\n    if (props.label && !props.editable && !props.leftIcon && !props.rightIcon) {\r\n      trackWidth = '100%';\r\n    }\r\n\r\n    this.state = {\r\n      value,\r\n      scale,\r\n      distance,\r\n      thumbLeft,\r\n      trackWidth,\r\n      trackFillWidth,\r\n      active: false,\r\n      dragging: false,\r\n      maskInked: false,\r\n    };\r\n    this._dragAdded = false;\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { leftIcon, rightIcon, label, min, max, step, value } = this.props;\r\n    if (value !== nextProps.value) {\r\n      const distance = this._calcDistance(nextProps.value, nextProps.min, nextProps.max);\r\n      this.setState({ distance, trackFillWidth: `${distance}%`, thumbLeft: this._calcLeft(distance) });\r\n    }\r\n\r\n    if (leftIcon !== nextProps.leftIcon\r\n      || rightIcon !== nextProps.rightIcon\r\n      || label !== nextProps.label\r\n    ) {\r\n      this._calcTrackWidth(nextProps);\r\n    }\r\n\r\n    if (min !== nextProps.min || max !== nextProps.max || step !== nextProps.step) {\r\n      this.setState({ scale: Math.abs(nextProps.max - nextProps.min) / nextProps.step });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { active, manualIncrement } = this.state;\r\n    let fn = window[`${active ? 'add' : 'remove'}EventListener`];\r\n    if (active !== prevState.active) {\r\n      fn('click', this._blurOnOutsideClick);\r\n\r\n      if (active) {\r\n        this._focusThumb();\r\n      }\r\n    }\r\n\r\n    const addDrag = active && !manualIncrement;\r\n    fn = window[`${addDrag ? 'add' : 'remove'}EventListener`];\r\n    if (this._dragAdded !== addDrag) {\r\n      fn('mousemove', this._handleDragMove);\r\n      fn('mouseup', this._handleDragEnd);\r\n      setTouchEvent(addDrag, window, 'move', this._handleDragMove);\r\n      setTouchEvent(addDrag, window, 'end', this._handleDragEnd);\r\n\r\n      this._dragAdded = addDrag;\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const rm = window.removeEventListener;\r\n    rm('click', this._blurOnOutsideClick);\r\n    rm('mousemove', this._handleMouseMove);\r\n    rm('mouseup', this._handleMouseUp);\r\n    removeTouchEvent(window, 'move', this._handleDragMove);\r\n    removeTouchEvent(window, 'end', this._handleDragEnd);\r\n\r\n    if (this._inkTimeout) {\r\n      clearTimeout(this._inkTimeout);\r\n    }\r\n\r\n    if (this._focusTimeout) {\r\n      clearTimeout(this._focusTimeout);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the `left` position for the thumb based on the value given.\r\n   *\r\n   * @param {number} value - The current value.\r\n   * @return {string} the `calc` string.\r\n   */\r\n  _calcLeft(value) {\r\n    return `calc(${value}% - 6px)`;\r\n  }\r\n\r\n  _calcDistance(value, min, max) {\r\n    return Math.max(0, Math.min(100, ((value - min) / (max - min)) * 100));\r\n  }\r\n\r\n  /**\r\n   * Checks if a classList does not contain all the *bad* class names.\r\n   *\r\n   * @param {function} classList - The classList to check.\r\n   * @return {Boolean} true if the classList does not contain any of the *bad* class names.\r\n   */\r\n  _isValidClassList(classList) {\r\n    let invalid = false;\r\n    ['md-slider-label', 'md-slider-ind', 'md-icon'].some(cl => {\r\n      invalid = classList.contains(cl);\r\n      return invalid;\r\n    });\r\n\r\n    return !invalid;\r\n  }\r\n\r\n  _isInTextField(e) {\r\n    const { className } = e.target;\r\n\r\n    // SVG's className is an object instead of a string\r\n    return typeof className.match === 'function' && className.match(/text-field/);\r\n  }\r\n\r\n  /**\r\n   * Checks if the target is within the text field container.\r\n   *\r\n   * @param {Object} target - The event target.\r\n   * @return {Boolean} true if the target is in the text field.\r\n   */\r\n  _isTextField = (target) => this._field && this._field.contains(target);\r\n\r\n  /**\r\n   * Updates the slider's thumb position and the slider's track fill width based\r\n   * on the thumb's current x position on the screen.\r\n   *\r\n   * The slider distance will be *normalized* when:\r\n   *  - The user does a quick jump\r\n   *  - The user stops dragging with the mouse\r\n   *  - The user drops dragging with touch\r\n   *\r\n   * If the position is not *normalized*, the `onDragChange` prop will be called\r\n   * with the new distance percentage, the value, and the move event.\r\n   *\r\n   * The `onChange` function will always be called.\r\n   *\r\n   * @param {Object} e - The current event to extract an x location from\r\n   * @param {bool} normalize - Boolean if the distance should be normalized\r\n   *    to the current scale of the slider.\r\n   */\r\n  _updatePosition = (e, normalize) => {\r\n    const x = (e.changedTouches ? e.changedTouches[0] : e).clientX;\r\n    const { scale } = this.state;\r\n    const { onChange, onDragChange, min, max, step } = this.props;\r\n\r\n    const { value, distance } = calculateValueDistance(\r\n      x,\r\n      this._track.offsetWidth,\r\n      this._track.getBoundingClientRect().left,\r\n      scale,\r\n      step,\r\n      min,\r\n      max,\r\n      normalize\r\n    );\r\n\r\n    const isNewValue = getField(this.props, this.state, 'value') !== value;\r\n    if (onChange && isNewValue) {\r\n      onChange(value, e);\r\n    }\r\n\r\n    if (!normalize && onDragChange && (isNewValue || this.state.distance !== distance)) {\r\n      onDragChange(distance, value, e);\r\n    }\r\n\r\n    const state = {\r\n      active: true,\r\n      distance,\r\n      manualIncrement: false,\r\n      dragging: !normalize,\r\n      thumbLeft: this._calcLeft(distance),\r\n      trackFillWidth: `${distance}%`,\r\n    };\r\n\r\n    if (e.type === 'touchend' || e.type === 'mousedown') {\r\n      state.maskInked = false;\r\n    }\r\n\r\n    if (typeof this.props.value === 'undefined') {\r\n      state.value = value;\r\n    }\r\n\r\n    this.setState(state);\r\n  };\r\n\r\n  /**\r\n   * This will either allow a user to start dragging the slider or quickly\r\n   * jump to a new value on the slider if the slider is not disabled.\r\n   *\r\n   * This will handle the `touchstart` and `mousedown` events.\r\n   *\r\n   * @param {Object} e - The touchstart or mousedown event.\r\n   */\r\n  _handleDragStart = (e) => {\r\n    if (e.type === 'mousedown' && this.props.onMouseDown) {\r\n      this.props.onMouseDown(e);\r\n    } else if (e.type === 'touchstart' && this.props.onTouchStart) {\r\n      this.props.onTouchStart(e);\r\n    }\r\n\r\n    if (this.props.disabled || (e.type === 'mousedown' && !isValidClick(e, 'mousedown')) || this._isInTextField(e)) {\r\n      return;\r\n    }\r\n\r\n    const { classList } = e.target;\r\n    const isDiscreteValue = classList.contains('md-slider-discrete-value');\r\n    if (classList.contains('md-slider-thumb') || isDiscreteValue) {\r\n      // Prevents text highlighting while dragging.\r\n      if (e.type.match(/mouse/)) {\r\n        e.preventDefault();\r\n      }\r\n      this.setState({ dragging: true, active: true, manualIncrement: false, maskInked: false });\r\n    } else if (!this._isTextField(e.target) && this._isValidClassList(classList)) {\r\n      this._updatePosition(e, true);\r\n    }\r\n  };\r\n\r\n  _setNode = (node) => {\r\n    this._node = findDOMNode(node);\r\n  };\r\n\r\n  _setTrack = (track) => {\r\n    this._track = findDOMNode(track);\r\n  };\r\n\r\n  _setField = (field) => {\r\n    this._field = findDOMNode(field);\r\n    this._calcTrackWidth(this.props);\r\n  };\r\n\r\n  _handleDragMove = (e) => {\r\n    if (this.props.disabled || !this.state.dragging) {\r\n      return;\r\n    }\r\n\r\n    // Stops the text highlighting while dragging\r\n    if (e.type.match(/mouse/)) {\r\n      e.preventDefault();\r\n    }\r\n\r\n    this._updatePosition(e, false);\r\n  };\r\n\r\n  _handleDragEnd = (e) => {\r\n    if (!this.state.dragging || this.props.disabled || (e.type === 'mouseup' && !isValidClick(e))) {\r\n      return;\r\n    }\r\n\r\n    this._updatePosition(e, true);\r\n  };\r\n\r\n  /**\r\n   * This will set the active state of the slider to false if the user\r\n   * clicks outside of the slider's container.\r\n   *\r\n   * @param {Object} e - The window's click event.\r\n   */\r\n  _blurOnOutsideClick = (e) => {\r\n    if ((this.state.dragging && !this.state.manualIncrement) || this.props.disabled) {\r\n      return;\r\n    }\r\n\r\n    if (!this._node.contains(e.target)) {\r\n      this.setState({ active: false, maskInked: false });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Updates the slider with the `step` prop and calls the `onChange`\r\n   * function with the new value.\r\n   *\r\n   * @param {number} incrementedValue - The newly incremented value of the slider.\r\n   * @param {Object} e - Either the text field's change event, mouse down event, or\r\n   *    touch start event.\r\n   * @param {bool} disableTransition - Boolean if the jump's transition should be disabled.\r\n   */\r\n  _handleIncrement = (incrementedValue, e, disableTransition) => {\r\n    const { onChange, min, max, discrete } = this.props;\r\n\r\n    const value = Math.max(min, Math.min(max, incrementedValue));\r\n    const distance = this._calcDistance(value, min, max);\r\n\r\n    if (onChange) {\r\n      onChange(value, e);\r\n    }\r\n\r\n    const state = {\r\n      distance,\r\n      manualIncrement: true,\r\n      thumbLeft: this._calcLeft(distance),\r\n      trackFillWidth: `${distance}%`,\r\n      dragging: Math.abs(this.state.distance - distance) < 2 && disableTransition,\r\n    };\r\n\r\n    if (typeof this.props.value === 'undefined') {\r\n      state.value = value;\r\n    }\r\n\r\n    if (e.type === 'keydown' && !discrete) {\r\n      state.maskInked = true;\r\n    }\r\n\r\n    this.setState(state);\r\n  };\r\n\r\n  _handleTextFieldChange = (newValue, e) => {\r\n    this._handleIncrement(newValue, e, false);\r\n  };\r\n\r\n  /**\r\n   * This will increment the Slider's value by the `step` prop. If the left or\r\n   * right key arrow is pressed.\r\n   *\r\n   * @param {Object} e - the keydown event.\r\n   */\r\n  _handleKeyDown = (e) => {\r\n    const key = e.which || e.keyCode;\r\n    const { min, max, step, disabled } = this.props;\r\n    if (disabled) {\r\n      return;\r\n    }\r\n\r\n    if (key === TAB) {\r\n      this.setState({ active: false, maskInked: false });\r\n      return;\r\n    } else if ((key !== LEFT && key !== RIGHT)) {\r\n      return;\r\n    }\r\n\r\n    let nextValue = getField(this.props, this.state, 'value');\r\n    nextValue = Math.max(\r\n      min,\r\n      Math.min((key === LEFT ? -step : step) + nextValue, max)\r\n    );\r\n\r\n    this._handleIncrement(nextValue, e, true);\r\n  };\r\n\r\n  /**\r\n   * This function will animate the discrete Slider's ink if it gains focus\r\n   * by a tab event.\r\n   *\r\n   * @param {Object} e - the key up event.\r\n   */\r\n  _handleKeyUp = (e) => {\r\n    if ((e.which || e.keyCode) !== TAB) {\r\n      return;\r\n    }\r\n\r\n    if (this.props.discrete) {\r\n      this._animateDiscreteInk();\r\n    }\r\n\r\n    this.setState({ maskInked: true });\r\n  };\r\n\r\n  _handleFocus = () => {\r\n    this.setState({ active: true });\r\n  };\r\n\r\n  /**\r\n   * For some reason the width of the track gets set to 0 if the `Slider` has a label and\r\n   * does not include the `leftIcon`, `rightIcon`, and is not `editable` OR it is\r\n   * `editable` and does not include the `leftIcon`. All other cases the width works\r\n   * correctly.\r\n   *\r\n   * This function just checks these things, and sets the width accordingly.\r\n   */\r\n  _calcTrackWidth = (props) => {\r\n    const { editable, leftIcon, rightIcon, inputWidth, label } = props;\r\n\r\n    if (!label) {\r\n      this.setState({ trackWidth: null });\r\n      return;\r\n    }\r\n\r\n    let trackWidth = null;\r\n    if (!leftIcon && !rightIcon && !editable) {\r\n      trackWidth = '100%';\r\n    } else if (this._field && editable && !leftIcon) {\r\n      const cs = window.getComputedStyle(this._field);\r\n      const pl = parseInt(cs.getPropertyValue('padding-left'), 10) || 0;\r\n      const ml = parseInt(cs.getPropertyValue('margin-left'), 10) || 0;\r\n\r\n      trackWidth = pl + ml + inputWidth;\r\n    }\r\n\r\n    if (trackWidth !== this.state.trackWidth) {\r\n      this.setState({ trackWidth });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * The ink for a Discrete slider is only visible for a short time on initial\r\n   * focus. This function will handle the in/out transitions.\r\n   */\r\n  _animateDiscreteInk = () => {\r\n    const wait = this.props.discreteInkTransitionTime;\r\n    if (this._inkTimeout) {\r\n      clearTimeout(this._inkTimeout);\r\n    }\r\n\r\n    this._inkTimeout = setTimeout(() => {\r\n      this.setState({ leaving: true, maskInked: false });\r\n\r\n      this._inkTimeout = setTimeout(() => {\r\n        this._inkTimeout = null;\r\n        this.setState({ leaving: false });\r\n      }, wait);\r\n    }, wait);\r\n  };\r\n\r\n  /**\r\n   * This is a helper function for focusing the Slider's thumb component. There\r\n   * is a short delay because the body sometimes gets focused immediately after\r\n   * if there is no timeout..\r\n   */\r\n  _focusThumb = () => {\r\n    if (this._focusTimeout) {\r\n      clearTimeout(this._focusTimeout);\r\n    }\r\n\r\n    this._focusTimeout = setTimeout(() => {\r\n      this._focusTimeout = null;\r\n      if (!this._thumb) {\r\n        this._thumb = this._node.querySelector('.md-slider-thumb');\r\n      }\r\n\r\n      this._thumb.focus();\r\n    }, 100);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      dragging,\r\n      active,\r\n      thumbLeft,\r\n      trackFillWidth,\r\n      maskInked,\r\n      trackWidth,\r\n      scale,\r\n      distance,\r\n    } = this.state;\r\n\r\n    const {\r\n      id,\r\n      min,\r\n      max,\r\n      disabled,\r\n      className,\r\n      trackStyle,\r\n      trackClassName,\r\n      thumbStyle,\r\n      thumbClassName,\r\n      discreteValueStyle,\r\n      discreteValueClassName,\r\n      label,\r\n      editable,\r\n      step,\r\n      inputWidth,\r\n      leftIcon,\r\n      rightIcon,\r\n      discrete,\r\n      discreteTicks,\r\n      tickWidth,\r\n      valuePrecision,\r\n      /* eslint-disable no-unused-vars */\r\n      value: propValue,\r\n      onChange,\r\n      onDragChange,\r\n      discreteInkTransitionTime,\r\n\r\n      // deprecated\r\n      stepPrecision,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n\r\n    const value = getField(this.props, this.state);\r\n    let rightChildren = rightIcon;\r\n    if (editable) {\r\n      rightChildren = (\r\n        <TextField\r\n          id={`${id}-editor`}\r\n          ref={this._setField}\r\n          type=\"number\"\r\n          value={value}\r\n          inputClassName=\"md-slider-editor\"\r\n          style={{ width: inputWidth }}\r\n          onChange={this._handleTextFieldChange}\r\n          step={step}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div\r\n        {...props}\r\n        ref={this._setNode}\r\n        className={cn('md-slider-container', className, {\r\n          'md-pointer--hover': !disabled,\r\n        })}\r\n        onMouseDown={this._handleDragStart}\r\n        onTouchStart={this._handleDragStart}\r\n      >\r\n        <SliderLabel htmlFor={id}>{label}</SliderLabel>\r\n        <input\r\n          id={id}\r\n          type=\"range\"\r\n          className=\"md-slider-input\"\r\n          readOnly\r\n          min={min}\r\n          max={max}\r\n          value={value}\r\n          disabled={disabled}\r\n        />\r\n        {leftIcon}\r\n        <Track\r\n          ref={this._setTrack}\r\n          style={Object.assign({}, trackStyle, { width: trackWidth })}\r\n          className={cn(trackClassName, {\r\n            'md-slider-track--ind-left': leftIcon,\r\n            'md-slider-track--ind-right': rightIcon,\r\n          })}\r\n          thumbStyle={thumbStyle}\r\n          thumbClassName={thumbClassName}\r\n          discreteValueStyle={discreteValueStyle}\r\n          discreteValueClassName={discreteValueClassName}\r\n          active={active}\r\n          dragging={dragging}\r\n          disabled={disabled}\r\n          thumbLeft={thumbLeft}\r\n          trackFillWidth={trackFillWidth}\r\n          on={!disabled && distance > 0}\r\n          off={distance === 0}\r\n          maskInked={maskInked}\r\n          onThumbKeyUp={this._handleKeyUp}\r\n          onThumbKeyDown={this._handleKeyDown}\r\n          onThumbFocus={this._handleFocus}\r\n          discrete={discrete}\r\n          tickWidth={tickWidth}\r\n          discreteTicks={discreteTicks}\r\n          valuePrecision={valuePrecision}\r\n          step={step}\r\n          scale={scale}\r\n          value={value}\r\n        />\r\n        {rightChildren}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","const gcc = 'getComposedComponent';\r\n\r\n/**\r\n * Just checks if the fab is actually a ref to the FAB Button.\r\n */\r\nexport default function isInvalidAnimate(fab) {\r\n  return typeof fab[gcc] !== 'function' ||\r\n    typeof fab[gcc]()[gcc] !== 'function' ||\r\n    typeof fab[gcc]()[gcc]()._animateForSnackbar !== 'function';\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport Button from '../Buttons/Button';\r\nimport isInvalidAnimate from './isInvalidAnimate';\r\n\r\nexport default class Snackbar extends PureComponent {\r\n  static propTypes = {\r\n    id: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    children: PropTypes.node,\r\n    onDismiss: PropTypes.func.isRequired,\r\n    toast: PropTypes.shape({\r\n      text: PropTypes.node.isRequired,\r\n      action: PropTypes.oneOfType([\r\n        PropTypes.node,\r\n        PropTypes.shape({\r\n          label: PropTypes.node,\r\n          children: PropTypes.node,\r\n          onClick: PropTypes.func,\r\n        }),\r\n      ]),\r\n      onAppear: PropTypes.func,\r\n    }).isRequired,\r\n    multiline: PropTypes.bool,\r\n    autohide: PropTypes.bool,\r\n    autohideTimeout: PropTypes.number,\r\n    fab: PropTypes.object,\r\n    leaveTimeout: PropTypes.number.isRequired,\r\n  };\r\n\r\n  componentWillMount() {\r\n    const { fab, multiline, toast: { onAppear } } = this.props;\r\n    if (onAppear) {\r\n      onAppear();\r\n    }\r\n\r\n    if (!fab || isInvalidAnimate(fab)) {\r\n      return;\r\n    }\r\n\r\n    this._fab = fab.getComposedComponent().getComposedComponent();\r\n    this._fab._animateForSnackbar(multiline);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._handleAutohide();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._clearTimeout();\r\n\r\n    if (this._eventType === 'focus') {\r\n      window.removeEventListener('focus', this._handleWindowFocus);\r\n    } else if (this._eventType === 'blur') {\r\n      window.removeEventListener('blur', this._handleWindowBlur);\r\n    }\r\n  }\r\n\r\n  _handleClick = (e) => {\r\n    const { onDismiss, toast: { action }, leaveTimeout, multiline } = this.props;\r\n    if (typeof action.onClick === 'function') {\r\n      action.onClick(e);\r\n    }\r\n\r\n    if (this._fab) {\r\n      this._fab._animateForSnackbar(multiline, leaveTimeout);\r\n    }\r\n\r\n    onDismiss();\r\n  };\r\n\r\n  _clearTimeout = () => {\r\n    if (this._timeout) {\r\n      clearTimeout(this._timeout);\r\n      this._timeout = null;\r\n    }\r\n  };\r\n\r\n  _handleAutohide = () => {\r\n    const { autohide, autohideTimeout, onDismiss, multiline, leaveTimeout } = this.props;\r\n    if (!autohide) {\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('blur', this._handleWindowBlur);\r\n    this._eventType = 'blur';\r\n    this._timeout = setTimeout(() => {\r\n      this._timeout = null;\r\n      this._eventType = null;\r\n\r\n      window.removeEventListener('blur', this._handleWindowBlur);\r\n\r\n      if (this._fab) {\r\n        this._fab._animateForSnackbar(multiline, leaveTimeout);\r\n      }\r\n\r\n      onDismiss();\r\n    }, autohideTimeout || this.state.toast);\r\n  };\r\n\r\n  _handleWindowBlur = () => {\r\n    this._clearTimeout();\r\n    window.removeEventListener('blur', this._handleWindowBlur);\r\n    window.addEventListener('focus', this._handleWindowFocus);\r\n    this._eventType = 'focus';\r\n  };\r\n\r\n  _handleWindowFocus = () => {\r\n    window.removeEventListener('focus', this._handleWindowFocus);\r\n    this._eventType = null;\r\n    this._handleAutohide();\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      className,\r\n      toast,\r\n      multiline,\r\n      /* eslint-disable no-unused-vars */\r\n      id: propId,\r\n      fab,\r\n      autohide,\r\n      autohideTimeout,\r\n      leaveTimeout,\r\n      onDismiss,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n    let { text, action } = toast;\r\n    let { id } = this.props;\r\n\r\n    let Component = 'p';\r\n    if (action) {\r\n      Component = 'section';\r\n      text = <p className=\"md-snackbar--toast md-snackbar--action\">{text}</p>;\r\n\r\n      let btnProps = {\r\n        flat: true,\r\n        onClick: this._handleClick,\r\n        children: action,\r\n        secondary: true,\r\n        className: 'md-btn--snackbar',\r\n      };\r\n\r\n      if (typeof action !== 'string') {\r\n        btnProps = Object.assign(btnProps, action, {\r\n          className: cn(btnProps.className, action.className),\r\n          onClick: this._handleClick,\r\n        });\r\n      }\r\n\r\n\r\n      action = <Button {...btnProps} />;\r\n    }\r\n\r\n    if (!id) {\r\n      id = `snackbar-alert${action ? '-dialog' : ''}`;\r\n    }\r\n\r\n    const role = `alert${action ? 'dialog' : ''}`;\r\n    return (\r\n      <Component\r\n        {...props}\r\n        id={id}\r\n        role={role}\r\n        className={cn('md-snackbar', {\r\n          'md-snackbar--multiline': multiline,\r\n          'md-snackbar--toast': !action,\r\n        }, className)}\r\n      >\r\n        {text}\r\n        {action}\r\n      </Component>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { findDOMNode } from 'react-dom';\r\nimport CSSTransitionGroup from 'react-transition-group/CSSTransitionGroup';\r\nimport deprecated from 'react-prop-types/lib/deprecated';\r\n\r\nimport getField from '../utils/getField';\r\nimport TICK from '../constants/CSSTransitionGroupTick';\r\nimport isInvalidAnimate from './isInvalidAnimate';\r\nimport Portal from '../Helpers/Portal';\r\nimport Snackbar from './Snackbar';\r\n\r\nconst CHAINED_TOAST_DELAY = 50;\r\n\r\n/**\r\n * The `Snackbar` component is used for displaying a concise and small message to the user about\r\n * an operation performed.\r\n *\r\n * > The main component for the `Snackbar` is actually named the `SnackbarContainer`, so you need\r\n * to make sure the import is `react-md/lib/Snackbars` or `react-md/lib/Snackbars/SnackbarContainer`.\r\n * The first import is preferable.\r\n */\r\nexport default class SnackbarContainer extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * An id for the Snackbar once a toast has been added and is visible. This is a recommended\r\n     * prop for accessibility concerns. If it is omitted, the id will become `'snackbar-alert'`\r\n     * when there is no action on the toast, or `'snackbar-alert-dialog'` when there is an action\r\n     * on the toast.\r\n     */\r\n    id: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * An optional style to apply to the snackbar once it appears.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the snackbar once it appears.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * An immutable controlled queue of toasts that should appear in the snackbar.\r\n     * The snackbar will always display the first toast in this list. When the user has\r\n     * either clicked the action of the toast, or the `autohideTimeout` has been reached,\r\n     * the `onDismiss` function will be called. The `onDismiss` function should remove the\r\n     * first toast and return a new list of remaining toasts.\r\n     *\r\n     * ```js\r\n     * let toasts = [];\r\n     * const onDismiss = () => {\r\n     *   const [, ...remainingToasts] = toasts;\r\n     *   toasts = remainingToasts;\r\n     * };\r\n     * ```\r\n     */\r\n    toasts: PropTypes.arrayOf(PropTypes.shape({\r\n      /**\r\n       * The text to display in the toast.\r\n       */\r\n      text: PropTypes.node.isRequired,\r\n\r\n      /**\r\n       * An optional action to take. If this value is a string, the `label` for the\r\n       * button will be this value, Otherwise, all the keys in the action object will\r\n       * be applied to the `Button`.\r\n       */\r\n      action: PropTypes.oneOfType([\r\n        PropTypes.node,\r\n        PropTypes.shape({\r\n          onClick: PropTypes.func,\r\n          children: PropTypes.node,\r\n          // Deprecated\r\n          label: PropTypes.node,\r\n        }),\r\n      ]),\r\n    })).isRequired,\r\n\r\n    /**\r\n     * A function to call that will dismiss a toast. This will automatically be bound to\r\n     * any toast that has an `action` and it will also be called when the `autohideTimeout`\r\n     * has been reached.\r\n     */\r\n    onDismiss: PropTypes.func.isRequired,\r\n\r\n    /**\r\n     * Boolean if the snackbar's toasts should automatically be dismissed after the\r\n     * `autohideTimeout` has been reached.\r\n     */\r\n    autohide: PropTypes.bool,\r\n\r\n    /**\r\n     * The amount of time before the snackbar should be dequeued and the next toast\r\n     * should be displayed.\r\n     */\r\n    autohideTimeout: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * The transition name to use for the snackbar appearing and disappearing.\r\n     */\r\n    transitionName: PropTypes.string.isRequired,\r\n\r\n    /**\r\n     * The transition time for the snackbar to enter. This should match the `$md-snackbar-transition-time`\r\n     * sass variable.\r\n     */\r\n    transitionEnterTimeout: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * The transition time for the snackbar to leave. This should match the `$md-snackbar-transition-time`\r\n     * sass variable.\r\n     */\r\n    transitionLeaveTimeout: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * When the app contains a floating action button that is fixed to the bottom of the screen,\r\n     * you should set this to be a ref of the floating action button. When a snackbar appears,\r\n     * the FAB will be moved to not overlay the snackbar.\r\n     */\r\n    fab: (props, propName, componentName, location, propFullName) => {\r\n      const propValue = props[propName];\r\n      const propType = typeof propValue;\r\n\r\n      if (!propValue) {\r\n        return null;\r\n      }\r\n\r\n      if (propType !== 'object' || typeof propValue.render !== 'function' || isInvalidAnimate(propValue)) {\r\n        const componentNameSafe = componentName || '<<anonymous>>';\r\n        const propFullNameSafe = propFullName || propName;\r\n        return new Error(\r\n          `Invalid ${location} \\`${propFullNameSafe}\\` supplied to \\`${componentNameSafe}\\`, expected a ` +\r\n          'ref to a floating `Button` component. This should not be a DOMElement from `findDOMNode` but instead ' +\r\n          'the React ref object.'\r\n        );\r\n      }\r\n\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * Boolean if the Portal's functionality of rendering in a separate react tree should be applied\r\n     * to the snackbar.\r\n     *\r\n     * @see {@link Helpers/Portal}\r\n     */\r\n    portal: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional DOM node to render the Snackbar in. If this is omitted, it will render as the first\r\n     * child in the `body`.\r\n     */\r\n    renderNode: PropTypes.object,\r\n\r\n    /**\r\n     * Boolean if the snackbar should render as the last child in the `renderNode` or `body` instead of\r\n     * as the first.\r\n     */\r\n    lastChild: PropTypes.bool,\r\n    dismiss: deprecated(PropTypes.func, 'Use `onDismiss` instead'),\r\n  };\r\n\r\n  static defaultProps = {\r\n    autohide: true,\r\n    toasts: [],\r\n    autohideTimeout: 3000,\r\n    transitionName: 'md-snackbar',\r\n    transitionEnterTimeout: 300,\r\n    transitionLeaveTimeout: 300,\r\n  };\r\n\r\n  static contextTypes = {\r\n    renderNode: PropTypes.object,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const visible = !!props.toasts.length;\r\n    this.state = {\r\n      visible,\r\n      toast: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { toasts } = this.props;\r\n    if (toasts.length) {\r\n      this._initAndToast(toasts[0]);\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const [toast] = nextProps.toasts;\r\n    const [prevToast] = this.props.toasts;\r\n    if (toast === prevToast || toast === this.state.toast) {\r\n      return;\r\n    }\r\n\r\n    if (!toast) {\r\n      this._createLeaveTimer();\r\n    } else if (!this.state.visible) {\r\n      this._initAndToast(toast);\r\n    } else {\r\n      this._createSwapTimer(toast);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this._initTimeout) {\r\n      clearTimeout(this._initTimeout);\r\n    }\r\n\r\n    if (this._leaveTimeout) {\r\n      clearTimeout(this._leaveTimeout);\r\n    }\r\n\r\n    if (this._swapTimeout) {\r\n      clearTimeout(this._swapTimeout);\r\n    }\r\n\r\n    if (this._dismissTimeout) {\r\n      clearTimeout(this._dismissTimeout);\r\n    }\r\n  }\r\n\r\n  _setContainer = (container) => {\r\n    this._container = findDOMNode(container);\r\n  };\r\n\r\n  /**\r\n   * This function takes in a new toast object and checks if the message will span\r\n   * multiple lines of text by creating the new snackbar before the `Snackbar` component\r\n   * gets made, checking the height of the message, and then removing the temporary\r\n   * snackbar.\r\n   */\r\n  _isMultiline = (toast) => {\r\n    const container = this._container;\r\n    if (container === null) {\r\n      return false;\r\n    }\r\n\r\n    const message = document.createElement('p');\r\n    message.classList.add('md-snackbar--toast');\r\n    message.innerHTML = toast.text;\r\n\r\n    let snackbar;\r\n    if (toast.action) {\r\n      message.classList.add('md-snackbar--action');\r\n\r\n      snackbar = document.createElement('section');\r\n      snackbar.className = 'md-snackbar';\r\n      snackbar.appendChild(message);\r\n\r\n      const action = document.createElement('button');\r\n      action.innerHTML = typeof toast.action === 'string' ? toast.action : toast.action.label;\r\n      action.className = 'md-btn md-btn--flat md-btn--text md-btn--snackbar';\r\n      snackbar.appendChild(action);\r\n    } else {\r\n      snackbar = message;\r\n    }\r\n\r\n    // Only style we really want from the .md-snackbar\r\n    snackbar.style.maxWidth = '568px';\r\n\r\n    container.appendChild(snackbar);\r\n    const multiline = message.offsetHeight > 20;\r\n    container.removeChild(snackbar);\r\n\r\n    return multiline;\r\n  };\r\n\r\n  _initAndToast = (toast) => {\r\n    this._initTimeout = setTimeout(() => {\r\n      this._initTimeout = null;\r\n\r\n      this.setState({ toast, multiline: this._isMultiline(toast) });\r\n    }, TICK);\r\n\r\n    this.setState({ visible: true });\r\n  };\r\n\r\n  _createLeaveTimer = () => {\r\n    const { transitionLeaveTimeout: time } = this.props;\r\n    this._leaveTimeout = setTimeout(() => {\r\n      this._leaveTimeout = null;\r\n\r\n      this.setState({ visible: false });\r\n    }, time + TICK);\r\n\r\n    this.setState({ toast: null });\r\n  };\r\n\r\n  _createSwapTimer = (toast) => {\r\n    this._swapTimeout = setTimeout(() => {\r\n      this._swapTimeout = null;\r\n\r\n      this.setState({ toast, multiline: this._isMultiline(toast) });\r\n    }, this.props.transitionLeaveTimeout + CHAINED_TOAST_DELAY);\r\n\r\n    this.setState({ toast: null });\r\n  };\r\n\r\n  render() {\r\n    const { visible, toast, multiline } = this.state;\r\n    const {\r\n      transitionName,\r\n      transitionEnterTimeout,\r\n      transitionLeaveTimeout,\r\n      dismiss,\r\n      onDismiss,\r\n      lastChild,\r\n      portal,\r\n      renderNode: propRenderNode, // eslint-disable-line no-unused-vars\r\n      toasts, // eslint-disable-line no-unused-vars\r\n      ...props\r\n    } = this.props;\r\n    const renderNode = getField(this.props, this.context, 'renderNode');\r\n\r\n    let snackbar;\r\n    if (toast) {\r\n      snackbar = (\r\n        <Snackbar\r\n          {...props}\r\n          key=\"snackbar\"\r\n          leaveTimeout={transitionLeaveTimeout}\r\n          toast={toast}\r\n          multiline={multiline}\r\n          onDismiss={onDismiss || dismiss}\r\n        />\r\n      );\r\n    }\r\n\r\n    const container = (\r\n      <CSSTransitionGroup\r\n        ref={this._setContainer}\r\n        key=\"container\"\r\n        className=\"md-snackbar-container\"\r\n        transitionName={transitionName}\r\n        transitionEnterTimeout={transitionEnterTimeout}\r\n        transitionLeaveTimeout={transitionLeaveTimeout}\r\n      >\r\n        {snackbar}\r\n      </CSSTransitionGroup>\r\n    );\r\n\r\n    if (!portal) {\r\n      return visible ? container : null;\r\n    }\r\n\r\n    return (\r\n      <Portal visible={visible} renderNode={renderNode} lastChild={lastChild}>\r\n        {container}\r\n      </Portal>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport deprecated from 'react-prop-types/lib/deprecated';\r\n\r\nimport themeColors from '../utils/themeColors';\r\n\r\n/**\r\n * The `SVGIcon` component is used for rendering inline SVG icons or sprite-mapped SVGs\r\n * as an icon.\r\n */\r\nexport default class SVGIcon extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * An optional style to apply.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * Boolean if the primary theme color should be applied.\r\n     */\r\n    primary: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the secondary theme color should be applied.\r\n     */\r\n    secondary: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the icon is considered disabled and should inherit the\r\n     * disabled color.\r\n     */\r\n    disabled: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the icon is considered errored and should inherit the error color.\r\n     */\r\n    error: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the color of the icon should be inherited by parent elements.\r\n     */\r\n    inherit: PropTypes.bool,\r\n\r\n    /**\r\n     * The role to apply to the SVG. When using icons, it is generally recommended to leave it as the default\r\n     * `img` so that it is insured as a graphic.\r\n     */\r\n    role: PropTypes.oneOf(['img', 'presentation']),\r\n\r\n    /**\r\n     * This prop is the title attribute to provide to the `<svg>` element itself. This should be used when you\r\n     * are using a spritesheet that has defined `<title>` with each SVG symbol.\r\n     */\r\n    titleAttr: PropTypes.string,\r\n\r\n    /**\r\n     * An optional list of ids to use to label the SVG icon with. This is helpful to add when you use the `title`\r\n     * and `desc` props as this is used to create ids for those two props. This is super beneficial to screen readers.\r\n     *\r\n     * When this is defined, it is a space-delimited string of ids to provide to the title and desc (in order). If\r\n     * this is omitted and the `use` prop is defined, it will take everything after the `#` sign and append `-title` and\r\n     * `-desc` as a fallback. Check out the examples for more information about this.\r\n     *\r\n     * @see {@link #title}\r\n     * @see {@link #desc}\r\n     */\r\n    'aria-labelledby': PropTypes.string,\r\n\r\n    /**\r\n     * An optional title to give to your SVG icon. This is generally recommended for accessibility when not using\r\n     * the `use` prop, or your spritemap does not contain `<title>` and `<desc>.\r\n     *\r\n     * @see {@link #aria-labelledby}\r\n     */\r\n    title: PropTypes.string,\r\n\r\n    /**\r\n     * An optional description to give to your SVG icon. This is generally recommended for accessibility when not using\r\n     * the `use` prop, or your spritemap does not contain `<title>` and `<desc>.\r\n     *\r\n     * @see {@link #aria-labelledby}\r\n     */\r\n    desc: PropTypes.string,\r\n\r\n    /**\r\n     * This should be a link to a part of an SVG spritemap. So normally one of the following:\r\n     * - `'#some-custom-svg'`\r\n     * - `'/images/spritemap.svg#some-custom-svg'`\r\n     *\r\n     * This prop **should not** be used with the `children` prop as only one will be rendered.\r\n     *\r\n     * > NOTE: IE **does not support** external SVGs. Please see the demo for more details.\r\n     */\r\n    use: PropTypes.string,\r\n\r\n    /**\r\n     * Any `<svg>` children to render to create your icon. This can not be used with the `use` prop.\r\n     */\r\n    children: PropTypes.oneOfType([\r\n      PropTypes.element,\r\n      PropTypes.arrayOf(PropTypes.element),\r\n      PropTypes.node,\r\n    ]),\r\n\r\n    /**\r\n     * Boolean if the SVG should gain the `focusable` attribute. This is disabled by default since IE11\r\n     * and Edge actually default this to true and keyboard's will tab focus all SVGs.\r\n     */\r\n    focusable: PropTypes.string,\r\n\r\n    /**\r\n     * An optional size to apply to the SVG. This can be used to set both the\r\n     * `height` and `width` simultaneously. This will be provided as inline styles\r\n     * since the `height` and `width` are normally controlled by CSS, and CSS has\r\n     * higher precedence than the `height`/`width` attributes.\r\n     */\r\n    size: PropTypes.number,\r\n\r\n    /**\r\n     * The `height` prop should not be used since the `height` and `width` are controlled by CSS and the CSS\r\n     * has a higher precedence than inline attributes. If you want to set the `height`, it should be done via\r\n     * CSS or the `size` prop.\r\n     *\r\n     * @see {@link #size}\r\n     */\r\n    height: deprecated(PropTypes.number, 'Use the `size` prop instead'),\r\n\r\n    /**\r\n     * The `width` prop should not be used since the `height` and `width` are controlled by CSS and the CSS\r\n     * has a higher precedence than inline attributes. If you want to set the `height`, it should be done via\r\n     * CSS or the `size` prop.\r\n     *\r\n     * @see {@link #size}\r\n     */\r\n    width: deprecated(PropTypes.number, 'Use the `size` prop instead'),\r\n\r\n    /**\r\n     * The viewBox attribute allows you to specify that a given set of graphics stretch to\r\n     * fit a particular container element.\r\n     *\r\n     * The value of the viewBox attribute is a list of four numbers min-x, min-y, width and\r\n     * height, separated by white space and/or a comma, which specify a rectangle in user\r\n     * space which should be mapped to the bounds of the viewport established by the given\r\n     * element, taking into account attribute preserveAspectRatio.\r\n     *\r\n     * Negative values for width or height are not permitted and a value of zero disables\r\n     * rendering of the element.An optional viewbox for the SVG.\r\n     *\r\n     * For example, if the SVG element is 250 (width) by 200 (height) and you provide\r\n     * `viewBox=\"0 0 25 20\"`, the coordinates inside the SVG will go from the top left corner\r\n     * (0, 0) to the bottom right (25, 20) and each unit will be worth `10px`.\r\n     */\r\n    viewBox: PropTypes.string,\r\n\r\n    /**\r\n     * An optional xmlns string to provide. The `use` prop will not work without this prop\r\n     * defined.\r\n     */\r\n    xmlns: PropTypes.string,\r\n  };\r\n\r\n  static defaultProps = {\r\n    role: 'img',\r\n    focusable: 'false',\r\n    xmlns: 'http://www.w3.org/2000/svg',\r\n    viewBox: '0 0 24 24',\r\n  };\r\n\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.state = {\r\n      styles: this._mergeStyles(props),\r\n      ...this._getIds(props),\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { style, size, use, title, desc, 'aria-labelledby': labels } = this.props;\r\n    let nextState;\r\n    if (style !== nextProps.style || size !== nextProps.size) {\r\n      nextState = { styles: this._mergeStyles(nextProps) };\r\n    }\r\n\r\n\r\n    if (title !== nextProps.title || desc !== nextProps.desc ||\r\n      ((nextProps.title || nextProps.desc) && (use !== nextProps.use || labels !== nextProps['aria-labelledby']))\r\n    ) {\r\n      nextState = { ...nextState, ...this._getIds(nextProps) };\r\n    }\r\n\r\n    if (nextState) {\r\n      this.setState(nextState);\r\n    }\r\n  }\r\n\r\n  _getIds = ({ use, 'aria-labelledby': labels, title, desc }) => {\r\n    let titleId = null;\r\n    let descId = null;\r\n    let labelledBy = null;\r\n    if (title || desc) {\r\n      if (use) {\r\n        const baseId = use.replace(/.*#/, '');\r\n        titleId = `${baseId}-title`;\r\n        descId = `${baseId}-desc`;\r\n\r\n        if (title) {\r\n          labelledBy = `${baseId}-title`;\r\n        }\r\n\r\n        if (desc) {\r\n          labelledBy = `${labelledBy ? `${labelledBy} ` : ''}${descId}`;\r\n        }\r\n      } else if (labels) {\r\n        [titleId, descId] = labels.split(' ');\r\n      }\r\n    }\r\n\r\n    return { titleId, descId, labelledBy };\r\n  };\r\n\r\n  _mergeStyles = ({ style, size }) => {\r\n    if (style && size) {\r\n      return { height: size, width: size, ...style };\r\n    } else if (style) {\r\n      return style;\r\n    } else if (size) {\r\n      return { height: size, width: size };\r\n    }\r\n\r\n    return undefined;\r\n  };\r\n\r\n  render() {\r\n    const { styles, titleId, descId, labelledBy } = this.state;\r\n    const {\r\n      className,\r\n      disabled,\r\n      use,\r\n      primary,\r\n      secondary,\r\n      error,\r\n      inherit,\r\n      titleAttr,\r\n      'aria-labelledby': ariaLabelledBy,\r\n      /* eslint-disable no-unused-vars */\r\n      size,\r\n      title: propTitle,\r\n      desc: propDesc,\r\n      style: propStyle,\r\n      children: propChildren,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n\r\n    let { children, title, desc } = this.props;\r\n    if (!children && use) {\r\n      children = <use xlinkHref={use} />;\r\n    }\r\n\r\n    if (title) {\r\n      title = <title id={titleId}>{title}</title>;\r\n    }\r\n\r\n    if (desc) {\r\n      desc = <desc id={descId}>{desc}</desc>;\r\n    }\r\n\r\n    return (\r\n      <svg\r\n        {...props}\r\n        title={titleAttr}\r\n        aria-labelledby={ariaLabelledBy || labelledBy}\r\n        style={styles}\r\n        className={cn('md-icon', themeColors({\r\n          disabled,\r\n          error,\r\n          inherit,\r\n          primary,\r\n          secondary,\r\n        }, className))}\r\n      >\r\n        {title}\r\n        {desc}\r\n        {children}\r\n      </svg>\r\n    );\r\n  }\r\n}\r\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","var core = module.exports = { version: '2.5.4' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","var global = require('./_global');\nvar core = require('./_core');\nvar ctx = require('./_ctx');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && has(exports, key)) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n","var global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function (key) {\n  return store[key] || (store[key] = {});\n};\n","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n","exports.f = Object.getOwnPropertySymbols;\n","exports.f = {}.propertyIsEnumerable;\n","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n","'use strict';\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nvar toObject = require('./_to-object');\nvar IObject = require('./_iobject');\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || require('./_fails')(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) { B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n  } return T;\n} : $assign;\n","// 19.1.3.1 Object.assign(target, source)\nvar $export = require('./_export');\n\n$export($export.S + $export.F, 'Object', { assign: require('./_object-assign') });\n","require('../../modules/es6.object.assign');\nmodule.exports = require('../../modules/_core').Object.assign;\n","module.exports = { \"default\": require(\"core-js/library/fn/object/assign\"), __esModule: true };","\"use strict\";\n\nexports.__esModule = true;\n\nvar _assign = require(\"../core-js/object/assign\");\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _assign2.default || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};","\"use strict\";\n\nexports.__esModule = true;\n\nexports.default = function (obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n};","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export');\nvar core = require('./_core');\nvar fails = require('./_fails');\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n","// 19.1.2.9 Object.getPrototypeOf(O)\nvar toObject = require('./_to-object');\nvar $getPrototypeOf = require('./_object-gpo');\n\nrequire('./_object-sap')('getPrototypeOf', function () {\n  return function getPrototypeOf(it) {\n    return $getPrototypeOf(toObject(it));\n  };\n});\n","require('../../modules/es6.object.get-prototype-of');\nmodule.exports = require('../../modules/_core').Object.getPrototypeOf;\n","module.exports = { \"default\": require(\"core-js/library/fn/object/get-prototype-of\"), __esModule: true };","\"use strict\";\n\nexports.__esModule = true;\n\nexports.default = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};","var $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperty: require('./_object-dp').f });\n","require('../../modules/es6.object.define-property');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperty(it, key, desc) {\n  return $Object.defineProperty(it, key, desc);\n};\n","module.exports = { \"default\": require(\"core-js/library/fn/object/define-property\"), __esModule: true };","\"use strict\";\n\nexports.__esModule = true;\n\nvar _defineProperty = require(\"../core-js/object/define-property\");\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      (0, _defineProperty2.default)(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();","var toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n","module.exports = require('./_hide');\n","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n","'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n","'use strict';\nvar $at = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","require('./es6.array.iterator');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar TO_STRING_TAG = require('./_wks')('toStringTag');\n\nvar DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +\n  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +\n  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +\n  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +\n  'TextTrackList,TouchList').split(',');\n\nfor (var i = 0; i < DOMIterables.length; i++) {\n  var NAME = DOMIterables[i];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = Iterators.Array;\n}\n","exports.f = require('./_wks');\n","require('../../modules/es6.string.iterator');\nrequire('../../modules/web.dom.iterable');\nmodule.exports = require('../../modules/_wks-ext').f('iterator');\n","module.exports = { \"default\": require(\"core-js/library/fn/symbol/iterator\"), __esModule: true };","var META = require('./_uid')('meta');\nvar isObject = require('./_is-object');\nvar has = require('./_has');\nvar setDesc = require('./_object-dp').f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !require('./_fails')(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function (it) {\n  setDesc(it, META, { value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  } });\n};\nvar fastKey = function (it, create) {\n  // return primitive with prefix\n  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function (it, create) {\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n","var global = require('./_global');\nvar core = require('./_core');\nvar LIBRARY = require('./_library');\nvar wksExt = require('./_wks-ext');\nvar defineProperty = require('./_object-dp').f;\nmodule.exports = function (name) {\n  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});\n  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });\n};\n","// 7.2.2 IsArray(argument)\nvar cof = require('./_cof');\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n","// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = require('./_object-keys-internal');\nvar hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n","// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = require('./_to-iobject');\nvar gOPN = require('./_object-gopn').f;\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return gOPN(it);\n  } catch (e) {\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n};\n","var pIE = require('./_object-pie');\nvar createDesc = require('./_property-desc');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar has = require('./_has');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nexports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n","'use strict';\n// ECMAScript 6 symbols shim\nvar global = require('./_global');\nvar has = require('./_has');\nvar DESCRIPTORS = require('./_descriptors');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar META = require('./_meta').KEY;\nvar $fails = require('./_fails');\nvar shared = require('./_shared');\nvar setToStringTag = require('./_set-to-string-tag');\nvar uid = require('./_uid');\nvar wks = require('./_wks');\nvar wksExt = require('./_wks-ext');\nvar wksDefine = require('./_wks-define');\nvar enumKeys = require('./_enum-keys');\nvar isArray = require('./_is-array');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar createDesc = require('./_property-desc');\nvar _create = require('./_object-create');\nvar gOPNExt = require('./_object-gopn-ext');\nvar $GOPD = require('./_object-gopd');\nvar $DP = require('./_object-dp');\nvar $keys = require('./_object-keys');\nvar gOPD = $GOPD.f;\nvar dP = $DP.f;\nvar gOPN = gOPNExt.f;\nvar $Symbol = global.Symbol;\nvar $JSON = global.JSON;\nvar _stringify = $JSON && $JSON.stringify;\nvar PROTOTYPE = 'prototype';\nvar HIDDEN = wks('_hidden');\nvar TO_PRIMITIVE = wks('toPrimitive');\nvar isEnum = {}.propertyIsEnumerable;\nvar SymbolRegistry = shared('symbol-registry');\nvar AllSymbols = shared('symbols');\nvar OPSymbols = shared('op-symbols');\nvar ObjectProto = Object[PROTOTYPE];\nvar USE_NATIVE = typeof $Symbol == 'function';\nvar QObject = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDesc = DESCRIPTORS && $fails(function () {\n  return _create(dP({}, 'a', {\n    get: function () { return dP(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (it, key, D) {\n  var protoDesc = gOPD(ObjectProto, key);\n  if (protoDesc) delete ObjectProto[key];\n  dP(it, key, D);\n  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);\n} : dP;\n\nvar wrap = function (tag) {\n  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);\n  sym._k = tag;\n  return sym;\n};\n\nvar isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  return it instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(it, key, D) {\n  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);\n  anObject(it);\n  key = toPrimitive(key, true);\n  anObject(D);\n  if (has(AllSymbols, key)) {\n    if (!D.enumerable) {\n      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));\n      it[HIDDEN][key] = true;\n    } else {\n      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;\n      D = _create(D, { enumerable: createDesc(0, false) });\n    } return setSymbolDesc(it, key, D);\n  } return dP(it, key, D);\n};\nvar $defineProperties = function defineProperties(it, P) {\n  anObject(it);\n  var keys = enumKeys(P = toIObject(P));\n  var i = 0;\n  var l = keys.length;\n  var key;\n  while (l > i) $defineProperty(it, key = keys[i++], P[key]);\n  return it;\n};\nvar $create = function create(it, P) {\n  return P === undefined ? _create(it) : $defineProperties(_create(it), P);\n};\nvar $propertyIsEnumerable = function propertyIsEnumerable(key) {\n  var E = isEnum.call(this, key = toPrimitive(key, true));\n  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;\n  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;\n};\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {\n  it = toIObject(it);\n  key = toPrimitive(key, true);\n  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;\n  var D = gOPD(it, key);\n  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;\n  return D;\n};\nvar $getOwnPropertyNames = function getOwnPropertyNames(it) {\n  var names = gOPN(toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);\n  } return result;\n};\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(it) {\n  var IS_OP = it === ObjectProto;\n  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);\n  } return result;\n};\n\n// 19.4.1.1 Symbol([description])\nif (!USE_NATIVE) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');\n    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);\n    var $set = function (value) {\n      if (this === ObjectProto) $set.call(OPSymbols, value);\n      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDesc(this, tag, createDesc(1, value));\n    };\n    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });\n    return wrap(tag);\n  };\n  redefine($Symbol[PROTOTYPE], 'toString', function toString() {\n    return this._k;\n  });\n\n  $GOPD.f = $getOwnPropertyDescriptor;\n  $DP.f = $defineProperty;\n  require('./_object-gopn').f = gOPNExt.f = $getOwnPropertyNames;\n  require('./_object-pie').f = $propertyIsEnumerable;\n  require('./_object-gops').f = $getOwnPropertySymbols;\n\n  if (DESCRIPTORS && !require('./_library')) {\n    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);\n  }\n\n  wksExt.f = function (name) {\n    return wrap(wks(name));\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });\n\nfor (var es6Symbols = (\n  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14\n  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'\n).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);\n\nfor (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);\n\n$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {\n  // 19.4.2.1 Symbol.for(key)\n  'for': function (key) {\n    return has(SymbolRegistry, key += '')\n      ? SymbolRegistry[key]\n      : SymbolRegistry[key] = $Symbol(key);\n  },\n  // 19.4.2.5 Symbol.keyFor(sym)\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');\n    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;\n  },\n  useSetter: function () { setter = true; },\n  useSimple: function () { setter = false; }\n});\n\n$export($export.S + $export.F * !USE_NATIVE, 'Object', {\n  // 19.1.2.2 Object.create(O [, Properties])\n  create: $create,\n  // 19.1.2.4 Object.defineProperty(O, P, Attributes)\n  defineProperty: $defineProperty,\n  // 19.1.2.3 Object.defineProperties(O, Properties)\n  defineProperties: $defineProperties,\n  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\n  // 19.1.2.7 Object.getOwnPropertyNames(O)\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // 19.1.2.8 Object.getOwnPropertySymbols(O)\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// 24.3.2 JSON.stringify(value [, replacer [, space]])\n$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {\n  var S = $Symbol();\n  // MS Edge converts symbol values to JSON as {}\n  // WebKit converts symbol values to JSON as null\n  // V8 throws on boxed symbols\n  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';\n})), 'JSON', {\n  stringify: function stringify(it) {\n    var args = [it];\n    var i = 1;\n    var replacer, $replacer;\n    while (arguments.length > i) args.push(arguments[i++]);\n    $replacer = replacer = args[1];\n    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n    if (!isArray(replacer)) replacer = function (key, value) {\n      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);\n      if (!isSymbol(value)) return value;\n    };\n    args[1] = replacer;\n    return _stringify.apply($JSON, args);\n  }\n});\n\n// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)\n$Symbol[PROTOTYPE][TO_PRIMITIVE] || require('./_hide')($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n// 19.4.3.5 Symbol.prototype[@@toStringTag]\nsetToStringTag($Symbol, 'Symbol');\n// 20.2.1.9 Math[@@toStringTag]\nsetToStringTag(Math, 'Math', true);\n// 24.3.3 JSON[@@toStringTag]\nsetToStringTag(global.JSON, 'JSON', true);\n","// all enumerable object keys, includes symbols\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nmodule.exports = function (it) {\n  var result = getKeys(it);\n  var getSymbols = gOPS.f;\n  if (getSymbols) {\n    var symbols = getSymbols(it);\n    var isEnum = pIE.f;\n    var i = 0;\n    var key;\n    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);\n  } return result;\n};\n","require('./_wks-define')('asyncIterator');\n","require('./_wks-define')('observable');\n","require('../../modules/es6.symbol');\nrequire('../../modules/es6.object.to-string');\nrequire('../../modules/es7.symbol.async-iterator');\nrequire('../../modules/es7.symbol.observable');\nmodule.exports = require('../../modules/_core').Symbol;\n","module.exports = { \"default\": require(\"core-js/library/fn/symbol\"), __esModule: true };","\"use strict\";\n\nexports.__esModule = true;\n\nvar _iterator = require(\"../core-js/symbol/iterator\");\n\nvar _iterator2 = _interopRequireDefault(_iterator);\n\nvar _symbol = require(\"../core-js/symbol\");\n\nvar _symbol2 = _interopRequireDefault(_symbol);\n\nvar _typeof = typeof _symbol2.default === \"function\" && typeof _iterator2.default === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === \"function\" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? \"symbol\" : typeof obj; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = typeof _symbol2.default === \"function\" && _typeof(_iterator2.default) === \"symbol\" ? function (obj) {\n  return typeof obj === \"undefined\" ? \"undefined\" : _typeof(obj);\n} : function (obj) {\n  return obj && typeof _symbol2.default === \"function\" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? \"symbol\" : typeof obj === \"undefined\" ? \"undefined\" : _typeof(obj);\n};","\"use strict\";\n\nexports.__esModule = true;\n\nvar _typeof2 = require(\"../helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && ((typeof call === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(call)) === \"object\" || typeof call === \"function\") ? call : self;\n};","// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nvar isObject = require('./_is-object');\nvar anObject = require('./_an-object');\nvar check = function (O, proto) {\n  anObject(O);\n  if (!isObject(proto) && proto !== null) throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n    function (test, buggy, set) {\n      try {\n        set = require('./_ctx')(Function.call, require('./_object-gopd').f(Object.prototype, '__proto__').set, 2);\n        set(test, []);\n        buggy = !(test instanceof Array);\n      } catch (e) { buggy = true; }\n      return function setPrototypeOf(O, proto) {\n        check(O, proto);\n        if (buggy) O.__proto__ = proto;\n        else set(O, proto);\n        return O;\n      };\n    }({}, false) : undefined),\n  check: check\n};\n","// 19.1.3.19 Object.setPrototypeOf(O, proto)\nvar $export = require('./_export');\n$export($export.S, 'Object', { setPrototypeOf: require('./_set-proto').set });\n","require('../../modules/es6.object.set-prototype-of');\nmodule.exports = require('../../modules/_core').Object.setPrototypeOf;\n","module.exports = { \"default\": require(\"core-js/library/fn/object/set-prototype-of\"), __esModule: true };","var $export = require('./_export');\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\n$export($export.S, 'Object', { create: require('./_object-create') });\n","require('../../modules/es6.object.create');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function create(P, D) {\n  return $Object.create(P, D);\n};\n","module.exports = { \"default\": require(\"core-js/library/fn/object/create\"), __esModule: true };","\"use strict\";\n\nexports.__esModule = true;\n\nvar _setPrototypeOf = require(\"../core-js/object/set-prototype-of\");\n\nvar _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);\n\nvar _create = require(\"../core-js/object/create\");\n\nvar _create2 = _interopRequireDefault(_create);\n\nvar _typeof2 = require(\"../helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(superClass)));\n  }\n\n  subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _inDOM = require('../util/inDOM');\n\nvar _inDOM2 = _interopRequireDefault(_inDOM);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar on = function on() {};\nif (_inDOM2.default) {\n  on = function () {\n\n    if (document.addEventListener) return function (node, eventName, handler, capture) {\n      return node.addEventListener(eventName, handler, capture || false);\n    };else if (document.attachEvent) return function (node, eventName, handler) {\n      return node.attachEvent('on' + eventName, function (e) {\n        e = e || window.event;\n        e.target = e.target || e.srcElement;\n        e.currentTarget = node;\n        handler.call(node, e);\n      });\n    };\n  }();\n}\n\nexports.default = on;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _inDOM = require('../util/inDOM');\n\nvar _inDOM2 = _interopRequireDefault(_inDOM);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar off = function off() {};\nif (_inDOM2.default) {\n  off = function () {\n    if (document.addEventListener) return function (node, eventName, handler, capture) {\n      return node.removeEventListener(eventName, handler, capture || false);\n    };else if (document.attachEvent) return function (node, eventName, handler) {\n      return node.detachEvent('on' + eventName, handler);\n    };\n  }();\n}\n\nexports.default = off;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar checkIndexBounds = function checkIndexBounds(props) {\n  var index = props.index,\n      children = props.children;\n\n\n  var childrenCount = _react.Children.count(children);\n\n  process.env.NODE_ENV !== \"production\" ? (0, _warning2.default)(index >= 0 && index <= childrenCount, 'react-swipeable-view: the new index: ' + index + ' is out of bounds: [0-' + childrenCount + '].') : void 0;\n};\n\nexports.default = checkIndexBounds;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  RESISTANCE_COEF: 0.6,\n\n  // This value is closed to what browsers are using internally to\n  // trigger a native scroll.\n  UNCERTAINTY_THRESHOLD: 3 // px\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = computeIndex;\n\nvar _react = require('react');\n\nvar _constant = require('./constant');\n\nvar _constant2 = _interopRequireDefault(_constant);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction computeIndex(params) {\n  var children = params.children,\n      startIndex = params.startIndex,\n      startX = params.startX,\n      pageX = params.pageX,\n      viewLength = params.viewLength,\n      resistance = params.resistance;\n\n\n  var indexMax = _react.Children.count(children) - 1;\n  var index = startIndex + (startX - pageX) / viewLength;\n  var newStartX = void 0;\n\n  if (!resistance) {\n    // Reset the starting point\n    if (index < 0) {\n      index = 0;\n      newStartX = (index - startIndex) * viewLength + pageX;\n    } else if (index > indexMax) {\n      index = indexMax;\n      newStartX = (index - startIndex) * viewLength + pageX;\n    }\n  } else if (index < 0) {\n    index = Math.exp(index * _constant2.default.RESISTANCE_COEF) - 1;\n  } else if (index > indexMax) {\n    index = indexMax + 1 - Math.exp((indexMax - index) * _constant2.default.RESISTANCE_COEF);\n  }\n\n  return {\n    index: index,\n    startX: newStartX\n  };\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar getDisplaySameSlide = function getDisplaySameSlide(props, nextProps) {\n  var displaySameSlide = false;\n\n  if (props.children.length && nextProps.children.length) {\n    var oldChildren = props.children[props.index];\n    var oldKey = oldChildren ? oldChildren.key : 'empty';\n\n    if (oldKey !== null) {\n      var newChildren = nextProps.children[nextProps.index];\n      var newKey = newChildren ? newChildren.key : 'empty';\n\n      if (oldKey === newKey) {\n        displaySameSlide = true;\n      }\n    }\n  }\n\n  return displaySameSlide;\n};\n\nexports.default = getDisplaySameSlide;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// Extended version of % with negative integer support.\nfunction mod(n, m) {\n  var q = n % m;\n  return q < 0 ? q + m : q;\n}\n\nexports.default = mod;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _checkIndexBounds = require('./checkIndexBounds');\n\nObject.defineProperty(exports, 'checkIndexBounds', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_checkIndexBounds).default;\n  }\n});\n\nvar _computeIndex = require('./computeIndex');\n\nObject.defineProperty(exports, 'computeIndex', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_computeIndex).default;\n  }\n});\n\nvar _constant = require('./constant');\n\nObject.defineProperty(exports, 'constant', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_constant).default;\n  }\n});\n\nvar _getDisplaySameSlide = require('./getDisplaySameSlide');\n\nObject.defineProperty(exports, 'getDisplaySameSlide', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_getDisplaySameSlide).default;\n  }\n});\n\nvar _mod = require('./mod');\n\nObject.defineProperty(exports, 'mod', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_mod).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nexports.getDomTreeShapes = getDomTreeShapes;\nexports.findNativeHandler = findNativeHandler;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _properties = require('dom-helpers/transition/properties');\n\nvar _properties2 = _interopRequireDefault(_properties);\n\nvar _on = require('dom-helpers/events/on');\n\nvar _on2 = _interopRequireDefault(_on);\n\nvar _off = require('dom-helpers/events/off');\n\nvar _off2 = _interopRequireDefault(_off);\n\nvar _reactSwipeableViewsCore = require('react-swipeable-views-core');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction addEventListenerEnhanced(node, event, handler, options) {\n  (0, _on2.default)(node, event, handler, options);\n  return {\n    remove: function remove() {\n      (0, _off2.default)(node, event, handler, options);\n    }\n  };\n}\n\nvar styleInjected = false;\n\n// Support old version of iOS and IE 10.\n// To be deleted in 2019.\nfunction injectStyle() {\n  // Inject once for all the instances\n  if (!styleInjected) {\n    var style = document.createElement('style');\n    style.innerHTML = '\\n      .react-swipeable-view-container {\\n        display: -webkit-box;\\n        display: -ms-flexbox;\\n      }\\n      .react-swipeable-view-container > div {\\n        -ms-flex-negative: 0;\\n      }\\n    ';\n\n    if (document.body) {\n      document.body.appendChild(style);\n    }\n    styleInjected = true;\n  }\n}\n\nvar styles = {\n  container: {\n    direction: 'ltr',\n    display: 'flex',\n    willChange: 'transform'\n  },\n  slide: {\n    width: '100%',\n    WebkitFlexShrink: 0,\n    flexShrink: 0,\n    overflow: 'auto'\n  }\n};\n\nvar axisProperties = {\n  root: {\n    x: {\n      overflowX: 'hidden'\n    },\n    'x-reverse': {\n      overflowX: 'hidden'\n    },\n    y: {\n      overflowY: 'hidden'\n    },\n    'y-reverse': {\n      overflowY: 'hidden'\n    }\n  },\n  flexDirection: {\n    x: 'row',\n    'x-reverse': 'row-reverse',\n    y: 'column',\n    'y-reverse': 'column-reverse'\n  },\n  transform: {\n    x: function x(translate) {\n      return 'translate(' + -translate + '%, 0)';\n    },\n    'x-reverse': function xReverse(translate) {\n      return 'translate(' + translate + '%, 0)';\n    },\n    y: function y(translate) {\n      return 'translate(0, ' + -translate + '%)';\n    },\n    'y-reverse': function yReverse(translate) {\n      return 'translate(0, ' + translate + '%)';\n    }\n  },\n  length: {\n    x: 'width',\n    'x-reverse': 'width',\n    y: 'height',\n    'y-reverse': 'height'\n  },\n  rotationMatrix: {\n    x: {\n      x: [1, 0],\n      y: [0, 1]\n    },\n    'x-reverse': {\n      x: [-1, 0],\n      y: [0, 1]\n    },\n    y: {\n      x: [0, 1],\n      y: [1, 0]\n    },\n    'y-reverse': {\n      x: [0, -1],\n      y: [1, 0]\n    }\n  },\n  scrollPosition: {\n    x: 'scrollLeft',\n    'x-reverse': 'scrollLeft',\n    y: 'scrollTop',\n    'y-reverse': 'scrollTop'\n  },\n  scrollLength: {\n    x: 'scrollWidth',\n    'x-reverse': 'scrollWidth',\n    y: 'scrollHeight',\n    'y-reverse': 'scrollHeight'\n  },\n  clientLength: {\n    x: 'clientWidth',\n    'x-reverse': 'clientWidth',\n    y: 'clientHeight',\n    'y-reverse': 'clientHeight'\n  }\n};\n\nfunction createTransition(property, options) {\n  var duration = options.duration,\n      easeFunction = options.easeFunction,\n      delay = options.delay;\n\n\n  return property + ' ' + duration + ' ' + easeFunction + ' ' + delay;\n}\n\n// We are using a 2x2 rotation matrix.\nfunction applyRotationMatrix(touch, axis) {\n  var rotationMatrix = axisProperties.rotationMatrix[axis];\n\n  return {\n    pageX: rotationMatrix.x[0] * touch.pageX + rotationMatrix.x[1] * touch.pageY,\n    pageY: rotationMatrix.y[0] * touch.pageX + rotationMatrix.y[1] * touch.pageY\n  };\n}\n\nfunction adaptMouse(event) {\n  event.touches = [{ pageX: event.pageX, pageY: event.pageY }];\n  return event;\n}\n\nfunction getDomTreeShapes(element, rootNode) {\n  var domTreeShapes = [];\n\n  while (element && element !== rootNode) {\n    // We reach a Swipeable View, no need to look higher in the dom tree.\n    if (element.hasAttribute('data-swipeable')) {\n      break;\n    }\n\n    var style = window.getComputedStyle(element);\n\n    if (\n    // Ignore the scroll children if the element is absolute positioned.\n    style.getPropertyValue('position') === 'absolute' ||\n    // Ignore the scroll children if the element has an overflowX hidden\n    style.getPropertyValue('overflow-x') === 'hidden') {\n      domTreeShapes = [];\n    } else if (element.clientWidth > 0 && element.scrollWidth > element.clientWidth || element.clientHeight > 0 && element.scrollHeight > element.clientHeight) {\n      // Ignore the nodes that have no width.\n      // Keep elements with a scroll\n      domTreeShapes.push({\n        element: element,\n        scrollWidth: element.scrollWidth,\n        scrollHeight: element.scrollHeight,\n        clientWidth: element.clientWidth,\n        clientHeight: element.clientHeight,\n        scrollLeft: element.scrollLeft,\n        scrollTop: element.scrollTop\n      });\n    }\n\n    element = element.parentNode;\n  }\n\n  return domTreeShapes;\n}\n\n// We can only have one node at the time claiming ownership for handling the swipe.\n// Otherwise, the UX would be confusing.\n// That's why we use a singleton here.\nvar nodeHowClaimedTheScroll = null;\n\nfunction findNativeHandler(params) {\n  var domTreeShapes = params.domTreeShapes,\n      pageX = params.pageX,\n      startX = params.startX,\n      axis = params.axis;\n\n\n  return domTreeShapes.some(function (shape) {\n    // Determine if we are going backward or forward.\n    var goingForward = pageX >= startX;\n    if (axis === 'x' || axis === 'y') {\n      goingForward = !goingForward;\n    }\n\n    var scrollPosition = shape[axisProperties.scrollPosition[axis]];\n\n    var areNotAtStart = scrollPosition > 0;\n    var areNotAtEnd = scrollPosition + shape[axisProperties.clientLength[axis]] < shape[axisProperties.scrollLength[axis]];\n\n    if (goingForward && areNotAtEnd || !goingForward && areNotAtStart) {\n      nodeHowClaimedTheScroll = shape.element;\n      return true;\n    }\n\n    return false;\n  });\n}\n\nvar SwipeableViews = function (_Component) {\n  (0, _inherits3.default)(SwipeableViews, _Component);\n\n  function SwipeableViews() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, SwipeableViews);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = SwipeableViews.__proto__ || (0, _getPrototypeOf2.default)(SwipeableViews)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      indexLatest: null,\n      // Set to true as soon as the component is swiping.\n      // It's the state counter part of this.isSwiping.\n      isDragging: false,\n      // Help with SSR logic and lazy loading logic.\n      isFirstRender: true,\n      heightLatest: 0,\n      // Let the render method that we are going to display the same slide than previously.\n      displaySameSlide: true\n    }, _this.rootNode = null, _this.containerNode = null, _this.ignoreNextScrollEvents = false, _this.viewLength = 0, _this.startX = 0, _this.lastX = 0, _this.vx = 0, _this.startY = 0, _this.isSwiping = undefined, _this.started = false, _this.startIndex = 0, _this.transitionListener = null, _this.touchMoveListener = null, _this.activeSlide = null, _this.indexCurrent = null, _this.handleSwipeStart = function (event) {\n      var axis = _this.props.axis;\n\n      // Latency and rapid rerenders on some devices can leave\n      // a period where rootNode briefly equals null.\n\n      if (_this.rootNode === null) {\n        return;\n      }\n\n      var touch = applyRotationMatrix(event.touches[0], axis);\n\n      _this.viewLength = _this.rootNode.getBoundingClientRect()[axisProperties.length[axis]];\n      _this.startX = touch.pageX;\n      _this.lastX = touch.pageX;\n      _this.vx = 0;\n      _this.startY = touch.pageY;\n      _this.isSwiping = undefined;\n      _this.started = true;\n\n      var computedStyle = window.getComputedStyle(_this.containerNode);\n      var transform = computedStyle.getPropertyValue('-webkit-transform') || computedStyle.getPropertyValue('transform');\n\n      if (transform && transform !== 'none') {\n        var transformValues = transform.split('(')[1].split(')')[0].split(',');\n        var rootStyle = window.getComputedStyle(_this.rootNode);\n\n        var tranformNormalized = applyRotationMatrix({\n          pageX: parseInt(transformValues[4], 10),\n          pageY: parseInt(transformValues[5], 10)\n        }, axis);\n\n        _this.startIndex = -tranformNormalized.pageX / (_this.viewLength - parseInt(rootStyle.paddingLeft, 10) - parseInt(rootStyle.paddingRight, 10));\n      }\n    }, _this.handleSwipeMove = function (event) {\n      // The touch start event can be cancel.\n      // Makes sure we set a starting point.\n      if (!_this.started) {\n        _this.handleTouchStart(event);\n        return;\n      }\n\n      // Latency and rapid rerenders on some devices\n      // can leave a period where rootNode briefly equals null.\n      if (_this.rootNode === null) {\n        return;\n      }\n\n      // We are not supposed to hanlde this touch move.\n      if (nodeHowClaimedTheScroll !== null && nodeHowClaimedTheScroll !== _this.rootNode) {\n        return;\n      }\n\n      var _this$props = _this.props,\n          axis = _this$props.axis,\n          children = _this$props.children,\n          ignoreNativeScroll = _this$props.ignoreNativeScroll,\n          onSwitching = _this$props.onSwitching,\n          resistance = _this$props.resistance;\n\n\n      var touch = applyRotationMatrix(event.touches[0], axis);\n\n      // We don't know yet.\n      if (_this.isSwiping === undefined) {\n        var dx = Math.abs(_this.startX - touch.pageX);\n        var dy = Math.abs(_this.startY - touch.pageY);\n\n        var isSwiping = dx > dy && dx > _reactSwipeableViewsCore.constant.UNCERTAINTY_THRESHOLD;\n\n        // We let the parent handle the scroll.\n        if (!resistance && (axis === 'y' || axis === 'y-reverse') && (_this.indexCurrent === 0 && _this.startX < touch.pageX || _this.indexCurrent === _react.Children.count(_this.props.children) - 1 && _this.startX > touch.pageX)) {\n          _this.isSwiping = false;\n          return;\n        }\n\n        // We are likely to be swiping, let's prevent the scroll event.\n        if (dx > dy) {\n          event.preventDefault();\n        }\n\n        if (isSwiping === true || dy > _reactSwipeableViewsCore.constant.UNCERTAINTY_THRESHOLD) {\n          _this.isSwiping = isSwiping;\n          _this.startX = touch.pageX; // Shift the starting point.\n\n          return; // Let's wait the next touch event to move something.\n        }\n      }\n\n      if (_this.isSwiping !== true) {\n        return;\n      }\n\n      // We are swiping, let's prevent the scroll event.\n      event.preventDefault();\n\n      // Low Pass filter.\n      _this.vx = _this.vx * 0.5 + (touch.pageX - _this.lastX) * 0.5;\n      _this.lastX = touch.pageX;\n\n      var _computeIndex = (0, _reactSwipeableViewsCore.computeIndex)({\n        children: children,\n        resistance: resistance,\n        pageX: touch.pageX,\n        startIndex: _this.startIndex,\n        startX: _this.startX,\n        viewLength: _this.viewLength\n      }),\n          index = _computeIndex.index,\n          startX = _computeIndex.startX;\n\n      // Add support for native scroll elements.\n\n\n      if (nodeHowClaimedTheScroll === null && !ignoreNativeScroll) {\n        var domTreeShapes = getDomTreeShapes(event.target, _this.rootNode);\n        var hasFoundNativeHandler = findNativeHandler({\n          domTreeShapes: domTreeShapes,\n          startX: _this.startX,\n          pageX: touch.pageX,\n          axis: axis\n        });\n\n        // We abort the touch move handler.\n        if (hasFoundNativeHandler) {\n          return;\n        }\n      }\n\n      // We are moving toward the edges.\n      if (startX) {\n        _this.startX = startX;\n      } else if (nodeHowClaimedTheScroll === null) {\n        nodeHowClaimedTheScroll = _this.rootNode;\n      }\n\n      _this.setIndexCurrent(index);\n\n      var callback = function callback() {\n        if (onSwitching) {\n          onSwitching(index, 'move');\n        }\n      };\n\n      if (_this.state.displaySameSlide || !_this.state.isDragging) {\n        _this.setState({\n          displaySameSlide: false,\n          isDragging: true\n        }, callback);\n      }\n\n      callback();\n    }, _this.handleSwipeEnd = function () {\n      nodeHowClaimedTheScroll = null;\n\n      // The touch start event can be cancel.\n      // Makes sure that a starting point is set.\n      if (!_this.started) {\n        return;\n      }\n\n      _this.started = false;\n\n      if (_this.isSwiping !== true) {\n        return;\n      }\n\n      var indexLatest = _this.state.indexLatest;\n      var indexCurrent = _this.indexCurrent;\n      var delta = indexLatest - indexCurrent;\n\n      var indexNew = void 0;\n\n      // Quick movement\n      if (Math.abs(_this.vx) > _this.props.threshold) {\n        if (_this.vx > 0) {\n          indexNew = Math.floor(indexCurrent);\n        } else {\n          indexNew = Math.ceil(indexCurrent);\n        }\n      } else if (Math.abs(delta) > _this.props.hysteresis) {\n        // Some hysteresis with indexLatest.\n        indexNew = delta > 0 ? Math.floor(indexCurrent) : Math.ceil(indexCurrent);\n      } else {\n        indexNew = indexLatest;\n      }\n\n      var indexMax = _react.Children.count(_this.props.children) - 1;\n\n      if (indexNew < 0) {\n        indexNew = 0;\n      } else if (indexNew > indexMax) {\n        indexNew = indexMax;\n      }\n\n      _this.setIndexCurrent(indexNew);\n      _this.setState({\n        indexLatest: indexNew,\n        isDragging: false\n      }, function () {\n        if (_this.props.onSwitching) {\n          _this.props.onSwitching(indexNew, 'end');\n        }\n\n        if (_this.props.onChangeIndex && indexNew !== indexLatest) {\n          _this.props.onChangeIndex(indexNew, indexLatest, {\n            reason: 'swipe'\n          });\n        }\n\n        // Manually calling handleTransitionEnd in that case as isn't otherwise.\n        if (indexCurrent === indexLatest) {\n          _this.handleTransitionEnd();\n        }\n      });\n    }, _this.handleTouchStart = function (event) {\n      if (_this.props.onTouchStart) {\n        _this.props.onTouchStart(event);\n      }\n      _this.handleSwipeStart(event);\n    }, _this.handleTouchEnd = function (event) {\n      if (_this.props.onTouchEnd) {\n        _this.props.onTouchEnd(event);\n      }\n      _this.handleSwipeEnd(event);\n    }, _this.handleMouseDown = function (event) {\n      if (_this.props.onMouseDown) {\n        _this.props.onMouseDown(event);\n      }\n      event.persist();\n      _this.handleSwipeStart(adaptMouse(event));\n    }, _this.handleMouseUp = function (event) {\n      if (_this.props.onMouseUp) {\n        _this.props.onMouseUp(event);\n      }\n      _this.handleSwipeEnd(adaptMouse(event));\n    }, _this.handleMouseLeave = function (event) {\n      if (_this.props.onMouseLeave) {\n        _this.props.onMouseLeave(event);\n      }\n\n      // Filter out events\n      if (_this.started) {\n        _this.handleSwipeEnd(adaptMouse(event));\n      }\n    }, _this.handleMouseMove = function (event) {\n      if (_this.props.onMouseMove) {\n        _this.props.onMouseMove(event);\n      }\n\n      // Filter out events\n      if (_this.started) {\n        _this.handleSwipeMove(adaptMouse(event));\n      }\n    }, _this.handleScroll = function (event) {\n      if (_this.props.onScroll) {\n        _this.props.onScroll(event);\n      }\n\n      // Ignore events bubbling up.\n      if (event.target !== _this.rootNode) {\n        return;\n      }\n\n      if (_this.ignoreNextScrollEvents) {\n        _this.ignoreNextScrollEvents = false;\n        return;\n      }\n\n      var indexLatest = _this.state.indexLatest;\n      var indexNew = Math.ceil(event.target.scrollLeft / event.target.clientWidth) + indexLatest;\n\n      _this.ignoreNextScrollEvents = true;\n      // Reset the scroll position.\n      event.target.scrollLeft = 0;\n\n      if (_this.props.onChangeIndex && indexNew !== indexLatest) {\n        _this.props.onChangeIndex(indexNew, indexLatest, {\n          reason: 'focus'\n        });\n      }\n    }, _this.updateHeight = function () {\n      if (_this.activeSlide !== null) {\n        var child = _this.activeSlide.children[0];\n        if (child !== undefined && child.offsetHeight !== undefined && _this.state.heightLatest !== child.offsetHeight) {\n          _this.setState({\n            heightLatest: child.offsetHeight\n          });\n        }\n      }\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  (0, _createClass3.default)(SwipeableViews, [{\n    key: 'getChildContext',\n    value: function getChildContext() {\n      var _this2 = this;\n\n      return {\n        swipeableViews: {\n          slideUpdateHeight: function slideUpdateHeight() {\n            _this2.updateHeight();\n          }\n        }\n      };\n    }\n  }, {\n    key: 'componentWillMount',\n    value: function componentWillMount() {\n      if (process.env.NODE_ENV !== 'production') {\n        (0, _reactSwipeableViewsCore.checkIndexBounds)(this.props);\n      }\n\n      this.setIndexCurrent(this.props.index);\n      this.setState({\n        indexLatest: this.props.index\n      });\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      // Subscribe to transition end events.\n      this.transitionListener = addEventListenerEnhanced(this.containerNode, _properties2.default.end, function (event) {\n        if (event.target !== _this3.containerNode) {\n          return;\n        }\n\n        _this3.handleTransitionEnd();\n      });\n\n      // Block the thread to handle that event.\n      this.touchMoveListener = addEventListenerEnhanced(this.rootNode, 'touchmove', function (event) {\n        // Handling touch events is disabled.\n        if (_this3.props.disabled) {\n          return;\n        }\n        _this3.handleSwipeMove(event);\n      }, {\n        passive: false\n      });\n\n      // eslint-disable-next-line react/no-did-mount-set-state\n      this.setState({\n        isFirstRender: false\n      });\n\n      injectStyle();\n\n      // Send all functions in an object if action param is set.\n      if (this.props.action) {\n        this.props.action({\n          updateHeight: this.updateHeight\n        });\n      }\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var index = nextProps.index;\n\n\n      if (typeof index === 'number' && index !== this.props.index) {\n        if (process.env.NODE_ENV !== 'production') {\n          (0, _reactSwipeableViewsCore.checkIndexBounds)(nextProps);\n        }\n\n        this.setIndexCurrent(index);\n        this.setState({\n          // If true, we are going to change the children. We shoudn't animate it.\n          displaySameSlide: (0, _reactSwipeableViewsCore.getDisplaySameSlide)(this.props, nextProps),\n          indexLatest: index\n        });\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.transitionListener.remove();\n      this.touchMoveListener.remove();\n    }\n  }, {\n    key: 'setIndexCurrent',\n    value: function setIndexCurrent(indexCurrent) {\n      if (!this.props.animateTransitions && this.indexCurrent !== indexCurrent) {\n        this.handleTransitionEnd();\n      }\n\n      this.indexCurrent = indexCurrent;\n\n      if (this.containerNode) {\n        var axis = this.props.axis;\n\n        var transform = axisProperties.transform[axis](indexCurrent * 100);\n        this.containerNode.style.WebkitTransform = transform;\n        this.containerNode.style.transform = transform;\n      }\n    }\n  }, {\n    key: 'handleTransitionEnd',\n    value: function handleTransitionEnd() {\n      if (!this.props.onTransitionEnd) {\n        return;\n      }\n\n      // Filters out when changing the children\n      if (this.state.displaySameSlide) {\n        return;\n      }\n\n      // The rest callback is triggered when swiping. It's just noise.\n      // We filter it out.\n      if (!this.state.isDragging) {\n        this.props.onTransitionEnd();\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this4 = this;\n\n      var _props = this.props,\n          action = _props.action,\n          animateHeight = _props.animateHeight,\n          animateTransitions = _props.animateTransitions,\n          axis = _props.axis,\n          children = _props.children,\n          containerStyleProp = _props.containerStyle,\n          disabled = _props.disabled,\n          disableLazyLoading = _props.disableLazyLoading,\n          enableMouseEvents = _props.enableMouseEvents,\n          hysteresis = _props.hysteresis,\n          ignoreNativeScroll = _props.ignoreNativeScroll,\n          index = _props.index,\n          onChangeIndex = _props.onChangeIndex,\n          onSwitching = _props.onSwitching,\n          onTransitionEnd = _props.onTransitionEnd,\n          resistance = _props.resistance,\n          slideStyleProp = _props.slideStyle,\n          slideClassName = _props.slideClassName,\n          springConfig = _props.springConfig,\n          style = _props.style,\n          threshold = _props.threshold,\n          other = (0, _objectWithoutProperties3.default)(_props, ['action', 'animateHeight', 'animateTransitions', 'axis', 'children', 'containerStyle', 'disabled', 'disableLazyLoading', 'enableMouseEvents', 'hysteresis', 'ignoreNativeScroll', 'index', 'onChangeIndex', 'onSwitching', 'onTransitionEnd', 'resistance', 'slideStyle', 'slideClassName', 'springConfig', 'style', 'threshold']);\n      var _state = this.state,\n          displaySameSlide = _state.displaySameSlide,\n          heightLatest = _state.heightLatest,\n          isDragging = _state.isDragging,\n          isFirstRender = _state.isFirstRender,\n          indexLatest = _state.indexLatest;\n\n      var touchEvents = !disabled ? {\n        onTouchStart: this.handleTouchStart,\n        onTouchEnd: this.handleTouchEnd\n      } : {};\n      var mouseEvents = !disabled && enableMouseEvents ? {\n        onMouseDown: this.handleMouseDown,\n        onMouseUp: this.handleMouseUp,\n        onMouseLeave: this.handleMouseLeave,\n        onMouseMove: this.handleMouseMove\n      } : {};\n\n      // There is no point to animate if we are already providing a height.\n      process.env.NODE_ENV !== \"production\" ? (0, _warning2.default)(!animateHeight || !containerStyleProp || !containerStyleProp.height, 'react-swipeable-view: You are setting animateHeight to true but you are\\nalso providing a custom height.\\nThe custom height has a higher priority than the animateHeight property.\\nSo animateHeight is most likely having no effect at all.') : void 0;\n\n      var slideStyle = (0, _extends3.default)({}, styles.slide, slideStyleProp);\n\n      var transition = void 0;\n      var WebkitTransition = void 0;\n\n      if (isDragging || !animateTransitions || displaySameSlide) {\n        transition = 'all 0s ease 0s';\n        WebkitTransition = 'all 0s ease 0s';\n      } else {\n        transition = createTransition('transform', springConfig);\n        WebkitTransition = createTransition('-webkit-transform', springConfig);\n\n        if (heightLatest !== 0) {\n          var additionalTranstion = ', ' + createTransition('height', springConfig);\n          transition += additionalTranstion;\n          WebkitTransition += additionalTranstion;\n        }\n      }\n\n      var containerStyle = {\n        height: null,\n        WebkitFlexDirection: axisProperties.flexDirection[axis],\n        flexDirection: axisProperties.flexDirection[axis],\n        WebkitTransition: WebkitTransition,\n        transition: transition\n      };\n\n      // Apply the styles for SSR considerations\n      if (disableLazyLoading || !isFirstRender) {\n        var transform = axisProperties.transform[axis](this.indexCurrent * 100);\n        containerStyle.WebkitTransform = transform;\n        containerStyle.transform = transform;\n      }\n\n      if (animateHeight) {\n        containerStyle.height = heightLatest;\n      }\n\n      return _react2.default.createElement(\n        'div',\n        (0, _extends3.default)({\n          ref: function ref(node) {\n            _this4.rootNode = node;\n          },\n          style: (0, _extends3.default)({}, axisProperties.root[axis], style)\n        }, other, touchEvents, mouseEvents, {\n          onScroll: this.handleScroll\n        }),\n        _react2.default.createElement(\n          'div',\n          {\n            ref: function ref(node) {\n              _this4.containerNode = node;\n            },\n            style: (0, _extends3.default)({}, containerStyle, styles.container, containerStyleProp),\n            className: 'react-swipeable-view-container'\n          },\n          _react.Children.map(children, function (child, indexChild) {\n            if (!disableLazyLoading && isFirstRender && indexChild !== indexLatest) {\n              return null;\n            }\n\n            process.env.NODE_ENV !== \"production\" ? (0, _warning2.default)((0, _react.isValidElement)(child), 'react-swipeable-view: one of the children provided is invalid: ' + child + '.\\nWe are expecting a valid React Element') : void 0;\n\n            var ref = void 0;\n            var hidden = true;\n\n            if (indexChild === indexLatest) {\n              hidden = false;\n\n              if (animateHeight) {\n                ref = function ref(node) {\n                  _this4.activeSlide = node;\n                  _this4.updateHeight();\n                };\n                slideStyle.overflowY = 'hidden';\n              }\n            }\n\n            return _react2.default.createElement(\n              'div',\n              {\n                ref: ref,\n                style: slideStyle,\n                className: slideClassName,\n                'aria-hidden': hidden,\n                'data-swipeable': 'true'\n              },\n              child\n            );\n          })\n        )\n      );\n    }\n  }]);\n  return SwipeableViews;\n}(_react.Component);\n\n// Added as an ads for people using the React dev tools in production.\n// So they know, the tool used to build the awesome UI they\n// are looking at/retro engineering.\n\n\nSwipeableViews.displayName = 'ReactSwipableView';\n\nSwipeableViews.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * This is callback property. It's called by the component on mount.\n   * This is useful when you want to trigger an action programmatically.\n   * It currently only supports updateHeight() action.\n   *\n   * @param {object} actions This object contains all posible actions\n   * that can be triggered programmatically.\n   */\n  action: _propTypes2.default.func,\n  /**\n   * If `true`, the height of the container will be animated to match the current slide height.\n   * Animating another style property has a negative impact regarding performance.\n   */\n  animateHeight: _propTypes2.default.bool,\n  /**\n   * If `false`, changes to the index prop will not cause an animated transition.\n   */\n  animateTransitions: _propTypes2.default.bool,\n  /**\n   * The axis on which the slides will slide.\n   */\n  axis: _propTypes2.default.oneOf(['x', 'x-reverse', 'y', 'y-reverse']),\n  /**\n   * Use this property to provide your slides.\n   */\n  children: _propTypes2.default.node.isRequired,\n  /**\n   * This is the inlined style that will be applied\n   * to each slide container.\n   */\n  containerStyle: _propTypes2.default.object,\n  /**\n   * If `true`, it will disable touch events.\n   * This is useful when you want to prohibit the user from changing slides.\n   */\n  disabled: _propTypes2.default.bool,\n  /**\n   * This is the config used to disable lazyloding,\n   * if `true` will render all the views in first rendering.\n   */\n  disableLazyLoading: _propTypes2.default.bool,\n  /**\n   * If `true`, it will enable mouse events.\n   * This will allow the user to perform the relevant swipe actions with a mouse.\n   */\n  enableMouseEvents: _propTypes2.default.bool,\n  /**\n   * Configure hysteresis between slides. This value determines how far\n   * should user swipe to switch slide.\n   */\n  hysteresis: _propTypes2.default.number,\n  /**\n   * If `true`, it will ignore native scroll container.\n   * It can be used to filter out false positive that blocks the swipe.\n   */\n  ignoreNativeScroll: _propTypes2.default.bool,\n  /**\n   * This is the index of the slide to show.\n   * This is useful when you want to change the default slide shown.\n   * Or when you have tabs linked to each slide.\n   */\n  index: _propTypes2.default.number,\n  /**\n   * This is callback prop. It's call by the\n   * component when the shown slide change after a swipe made by the user.\n   * This is useful when you have tabs linked to each slide.\n   *\n   * @param {integer} index This is the current index of the slide.\n   * @param {integer} indexLatest This is the oldest index of the slide.\n   * @param {object} meta Meta data containing more information about the event.\n   */\n  onChangeIndex: _propTypes2.default.func,\n  /**\n   * @ignore\n   */\n  onMouseDown: _propTypes2.default.func,\n  /**\n   * @ignore\n   */\n  onMouseLeave: _propTypes2.default.func,\n  /**\n   * @ignore\n   */\n  onMouseMove: _propTypes2.default.func,\n  /**\n   * @ignore\n   */\n  onMouseUp: _propTypes2.default.func,\n  /**\n   * @ignore\n   */\n  onScroll: _propTypes2.default.func,\n  /**\n   * This is callback prop. It's called by the\n   * component when the slide switching.\n   * This is useful when you want to implement something corresponding\n   * to the current slide position.\n   *\n   * @param {integer} index This is the current index of the slide.\n   * @param {string} type Can be either `move` or `end`.\n   */\n  onSwitching: _propTypes2.default.func,\n  /**\n   * @ignore\n   */\n  onTouchEnd: _propTypes2.default.func,\n  /**\n   * @ignore\n   */\n  onTouchMove: _propTypes2.default.func,\n  /**\n   * @ignore\n   */\n  onTouchStart: _propTypes2.default.func,\n  /**\n   * The callback that fires when the animation comes to a rest.\n   * This is useful to defer CPU intensive task.\n   */\n  onTransitionEnd: _propTypes2.default.func,\n  /**\n   * If `true`, it will add bounds effect on the edges.\n   */\n  resistance: _propTypes2.default.bool,\n  /**\n   * This is the className that will be applied\n   * on the slide component.\n   */\n  slideClassName: _propTypes2.default.string,\n  /**\n   * This is the inlined style that will be applied\n   * on the slide component.\n   */\n  slideStyle: _propTypes2.default.object,\n  /**\n   * This is the config used to create CSS transitions.\n   * This is useful to change the dynamic of the transition.\n   */\n  springConfig: _propTypes2.default.shape({\n    duration: _propTypes2.default.string,\n    easeFunction: _propTypes2.default.string,\n    delay: _propTypes2.default.string\n  }),\n  /**\n   * This is the inlined style that will be applied\n   * on the root component.\n   */\n  style: _propTypes2.default.object,\n  /**\n   * This is the threshold used for detecting a quick swipe.\n   * If the computed speed is above this value, the index change.\n   */\n  threshold: _propTypes2.default.number\n} : {};\n\nSwipeableViews.defaultProps = {\n  animateHeight: false,\n  animateTransitions: true,\n  axis: 'x',\n  disabled: false,\n  disableLazyLoading: false,\n  enableMouseEvents: false,\n  hysteresis: 0.6,\n  ignoreNativeScroll: false,\n  index: 0,\n  threshold: 5,\n  springConfig: {\n    duration: '0.35s',\n    easeFunction: 'cubic-bezier(0.15, 0.3, 0.25, 1)',\n    delay: '0s'\n  },\n  resistance: false\n};\n\nSwipeableViews.childContextTypes = {\n  swipeableViews: _propTypes2.default.shape({\n    slideUpdateHeight: _propTypes2.default.func\n  })\n};\n\nexports.default = SwipeableViews;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _SwipeableViews = require('./SwipeableViews');\n\nvar _SwipeableViews2 = _interopRequireDefault(_SwipeableViews);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _SwipeableViews2.default;","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\r\n\r\n/**\r\n * This component is just a simple accessibility wrapper when using tabs. If you use the\r\n * `TabsContainer` component, you *should* not manually use this as the `TabsContainer`\r\n * generates this for you.\r\n */\r\nexport default class TabPanel extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * An id for the panel. This is used for a11y. This should equal the `controlsId`\r\n     * of whichever tab's children will be placed in here.\r\n     */\r\n    id: isRequiredForA11y(PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ])),\r\n\r\n    /**\r\n     * An id for the tab that owns this panel. This should equal the `id` of whichever\r\n     * tab's children will be placed in here.\r\n     */\r\n    controlledById: isRequiredForA11y(PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ])),\r\n\r\n    /**\r\n     * An optional style to apply.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * The component to render the panel as.\r\n     */\r\n    component: PropTypes.oneOfType([\r\n      PropTypes.func,\r\n      PropTypes.string,\r\n    ]).isRequired,\r\n\r\n    /**\r\n     * Boolean if the panel is currently active. This is used to generated the `aria-hidden`\r\n     * attribute.\r\n     */\r\n    active: PropTypes.bool,\r\n\r\n    /**\r\n     * Any children to display.\r\n     */\r\n    children: PropTypes.node,\r\n  };\r\n\r\n  static defaultProps = {\r\n    component: 'div',\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      component: Component,\r\n      id,\r\n      active,\r\n      className,\r\n      controlledById,\r\n      children,\r\n      ...props\r\n    } = this.props;\r\n\r\n    return (\r\n      <Component\r\n        {...props}\r\n        id={id}\r\n        className={cn('md-tab-panel', className)}\r\n        role=\"tabpanel\"\r\n        aria-hidden={!active}\r\n        aria-labelledby={controlledById}\r\n      >\r\n        {children}\r\n      </Component>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent, Children, cloneElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { findDOMNode } from 'react-dom';\r\nimport cn from 'classnames';\r\nimport SwipeableViews from 'react-swipeable-views';\r\n\r\nimport getField from '../utils/getField';\r\nimport controlled from '../utils/PropTypes/controlled';\r\nimport between from '../utils/PropTypes/between';\r\nimport ResizeObserver from '../Helpers/ResizeObserver';\r\nimport Paper from '../Papers/Paper';\r\nimport TabPanel from './TabPanel';\r\n\r\n/**\r\n * The `TabsContainer` component is used when you want to have your `Tabs` connected with\r\n * the `SwipeableViews`. This component will traverse the children subtree and extract out\r\n * the `children` from each tab, and render them in a swipeable container. However,\r\n * since this is using the `React.Children` traversal, You will have to keep the `Tabs`\r\n * and `Tab` component as a direct descendent. You are unable to make a separate component\r\n * that encompasses the `Tab` component.\r\n *\r\n * ```js\r\n * // valid\r\n * <TabsContainer>\r\n *   <Tabs>\r\n *     <Tab />\r\n *   </Tabs>\r\n * </TabsContainer>\r\n *\r\n * // invalid\r\n * <TabsContainer>\r\n *   <Tabs>\r\n *     <MyCustomTab />\r\n *   </Tabs>\r\n * </TabsContainer>\r\n * ```\r\n *\r\n * This is because it seems you are unable to access the `MyCustomTab`'s child Tab props correctly.\r\n * You can however have the tab's children as a separate component if you wish.\r\n */\r\nexport default class TabsContainer extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * An optional style to apply to the container.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the container.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to each `TabPanel` that gets generated. Each tab's children\r\n     * will get wrapped in a `TabPanel` component.\r\n     */\r\n    panelStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to each each `TabPanel` that gets generated. Each tab's\r\n     * children will get wrapped in a `TabPanel` component.\r\n     */\r\n    panelClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the header component when the tabs are fixed to the top of the page.\r\n     * The optional toolbar and tabs get wrapped in a `Paper` component.\r\n     */\r\n    headerStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the header component when the tabs are fixed to the top of the page.\r\n     * The optional toolbar and tabs get wrapped in a `Paper` component.\r\n     */\r\n    headerClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the `SwipeableViews`.\r\n     *\r\n     * @see https://github.com/oliviertassinari/react-swipeable-views#user-content-swipeableviews-\r\n     */\r\n    swipeableViewsStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the `SwipeableViews` container.\r\n     */\r\n    swipeableViewsClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to each slide component or a function that returns such style.\r\n     *\r\n     * Default style and height of slide component will be passed in the function.\r\n     * The function should return a style that will be merged with default style, or `null`.\r\n     *\r\n     * @see https://github.com/oliviertassinari/react-swipeable-views#user-content-swipeableviews-\r\n     */\r\n    slideStyle: PropTypes.oneOfType([\r\n      PropTypes.object,\r\n      PropTypes.func,\r\n    ]),\r\n\r\n    /**\r\n     * The property that should be used to set height of a slide component.\r\n     */\r\n    slideHeightProp: PropTypes.oneOf(['height', 'minHeight', 'maxHeight']),\r\n\r\n    /**\r\n     * This should be a `Tabs` component with children of `Tab`. This is used to figure out which\r\n     * tab's content is currently visible.\r\n     */\r\n    children: PropTypes.element.isRequired,\r\n\r\n    /**\r\n     * The component to render the container as.\r\n     */\r\n    component: PropTypes.oneOfType([\r\n      PropTypes.func,\r\n      PropTypes.string,\r\n    ]).isRequired,\r\n\r\n    /**\r\n     * The component to render each `TabPanel` as.\r\n     */\r\n    panelComponent: PropTypes.oneOfType([\r\n      PropTypes.func,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * An optional toolbar to render above the tabs.\r\n     */\r\n    toolbar: PropTypes.element,\r\n\r\n    /**\r\n     * An optional active tab index to use. If this is defined, the component will be controlled\r\n     * and require the `onTabChange` prop to be defined.\r\n     */\r\n    activeTabIndex: controlled(PropTypes.number, 'onTabChange', 'defaultTabIndex'),\r\n\r\n    /**\r\n     * An optional function to call when a new tab is selected by swiping or clicking a tab. When\r\n     * a new tab has been clicked, the callback will include the active tab index, the tab's `id`,\r\n     * the tab's `controlsId`, the tab's `children`, and the click event.\r\n     *\r\n     * If the tab was changed by swiping, it will only contain the new active tab index.\r\n     *\r\n     * ```js\r\n     * onTabChange(newActiveTabIndex, tabId, tabControlsId, tabChildren, event);\r\n     * ```\r\n     */\r\n    onTabChange: PropTypes.func,\r\n\r\n    /**\r\n     * The default tab index to use when the component is uncontrolled.\r\n     */\r\n    defaultTabIndex: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * Boolean if the `toolbar` and `Tabs` should be cloned with `colored: true`.\r\n     */\r\n    colored: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the `toolbar` should be applied with the theme color. This _really_ only\r\n     * applies when you create a `fixed` tabs container.\r\n     */\r\n    themed: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the tabs and the optional toolbar should be fixed to the top of the page.\r\n     */\r\n    fixed: PropTypes.bool,\r\n\r\n    /**\r\n     * A boolean if a `fixed` `TabsContainer` has tabs with a label and an icon.\r\n     */\r\n    labelAndIcon: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional component to render the fixed tabs header as.\r\n     */\r\n    headerComponent: PropTypes.oneOfType([\r\n      PropTypes.func,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * The zDepth for the fixed tabs header.\r\n     */\r\n    headerZDepth: between(PropTypes.number, 0, 5),\r\n\r\n    /**\r\n     * Any additional props to apply to the SwipeableViews component. View the\r\n     * [SwipeableViews API](https://github.com/oliviertassinari/react-swipeable-views#api)\r\n     * for valid attributes.\r\n     *\r\n     * You will not be able to set the `style`, `className`, `slideStyle`, `index`,\r\n     * or `onChangeIndex` props for the SwipeableViews.\r\n     *\r\n     * The styling and classnames can be updated with the other TabsContainer props.\r\n     */\r\n    swipeableViewsProps: PropTypes.object,\r\n  };\r\n\r\n  static defaultProps = {\r\n    component: 'section',\r\n    defaultTabIndex: 0,\r\n    headerZDepth: 1,\r\n    slideHeightProp: 'height',\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n    if (typeof props.activeTabIndex === 'undefined') {\r\n      this.state.activeTabIndex = props.defaultTabIndex;\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._resizePanel();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const prevIndex = getField(prevProps, prevState, 'activeTabIndex');\r\n    const currIndex = getField(this.props, this.state, 'activeTabIndex');\r\n\r\n    if (prevIndex !== currIndex) {\r\n      this._resizePanel();\r\n    }\r\n  }\r\n\r\n  _handleTabChange = (index, tabId, tabControlsId, tabChildren, event) => {\r\n    if (this.props.onTabChange) {\r\n      this.props.onTabChange(index, tabId, tabControlsId, tabChildren, event);\r\n    }\r\n\r\n    if (typeof this.props.activeTabIndex === 'undefined') {\r\n      this.setState({ activeTabIndex: index });\r\n    }\r\n  };\r\n\r\n  _handleSwipeChange = (activeTabIndex) => {\r\n    this._handleTabChange(activeTabIndex);\r\n  };\r\n\r\n  _setContainer = (container) => {\r\n    this._container = findDOMNode(container);\r\n  };\r\n\r\n  _resizePanel = () => {\r\n    if (!this._container) {\r\n      return;\r\n    }\r\n\r\n    const activePanel = this._container.querySelector('.md-tab-panel[aria-hidden=false]');\r\n    if (activePanel && this.state.panelHeight !== activePanel.scrollHeight) {\r\n      this.setState({ panelHeight: activePanel.scrollHeight });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { panelHeight } = this.state;\r\n    const {\r\n      component: Component,\r\n      style,\r\n      className,\r\n      panelStyle,\r\n      panelClassName,\r\n      panelComponent,\r\n      headerStyle,\r\n      headerClassName,\r\n      slideStyle,\r\n      slideHeightProp,\r\n      swipeableViewsStyle,\r\n      swipeableViewsClassName,\r\n      headerComponent,\r\n      headerZDepth,\r\n      children,\r\n      colored,\r\n      fixed,\r\n      labelAndIcon,\r\n      swipeableViewsProps,\r\n      themed,\r\n      /* eslint-disable no-unused-vars */\r\n      toolbar: propToolbar,\r\n      activeTabIndex: propActiveTabeIndex,\r\n      onTabChange,\r\n      defaultTabIndex,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n    let { toolbar } = this.props;\r\n\r\n    const activeTabIndex = getField(this.props, this.state, 'activeTabIndex');\r\n\r\n    const tabsEl = Children.only(children);\r\n    const tabId = tabsEl.props.tabId;\r\n    const content = Children.map(tabsEl.props.children, (tab, index) => {\r\n      if (!tab) {\r\n        return tab;\r\n      }\r\n\r\n      return (\r\n        <TabPanel\r\n          id={tab.props.controlsId || `${tabId}-panel-${index}`}\r\n          active={activeTabIndex === index}\r\n          style={panelStyle}\r\n          className={panelClassName}\r\n          component={panelComponent}\r\n          controlledById={tab.props.id || `${tabId}-${index}`}\r\n        >\r\n          <ResizeObserver watchHeight onResize={this._resizePanel} />\r\n          {tab.props.children}\r\n        </TabPanel>\r\n      );\r\n    });\r\n\r\n    const childrenProps = Children.only(children).props;\r\n    const tabs = cloneElement(children, {\r\n      colored: typeof childrenProps.colored !== 'undefined' ? childrenProps.colored : colored,\r\n      onTabChange: this._handleTabChange,\r\n      activeTabIndex,\r\n    });\r\n\r\n    let prominentToolbar = false;\r\n    if (toolbar) {\r\n      const toolbarProps = Children.only(toolbar).props;\r\n      toolbar = cloneElement(toolbar, {\r\n        component: toolbarProps.component || 'div',\r\n        colored: typeof toolbarProps.colored !== 'undefined' ? childrenProps.colored : colored,\r\n      });\r\n\r\n      prominentToolbar = toolbarProps.prominent || toolbarProps.prominentTitle;\r\n    }\r\n\r\n    let header;\r\n    if (fixed) {\r\n      header = (\r\n        <Paper\r\n          style={headerStyle}\r\n          className={cn('md-tabs-fixed-container', {\r\n            'md-toolbar--themed': themed,\r\n          }, headerClassName)}\r\n          zDepth={headerZDepth}\r\n          component={headerComponent}\r\n        >\r\n          {toolbar}\r\n          {tabs}\r\n        </Paper>\r\n      );\r\n    }\r\n\r\n    const baseSlideStyle = { [slideHeightProp]: panelHeight };\r\n\r\n    return (\r\n      <Component\r\n        style={style}\r\n        className={cn('md-tabs-container', className)}\r\n        {...props}\r\n        ref={this._setContainer}\r\n      >\r\n        {header}\r\n        {header ? null : toolbar}\r\n        {header ? null : tabs}\r\n        <SwipeableViews\r\n          {...swipeableViewsProps}\r\n          style={swipeableViewsStyle}\r\n          className={cn('md-tabs-content', {\r\n            'md-tabs-content--offset': !toolbar && !labelAndIcon && fixed,\r\n            'md-tabs-content--offset-icon': !toolbar && fixed && labelAndIcon,\r\n            'md-tabs-content--offset-toolbar': toolbar && fixed && !prominentToolbar && !labelAndIcon,\r\n            'md-tabs-content--offset-toolbar-prominent': toolbar && fixed && prominentToolbar && !labelAndIcon,\r\n            'md-tabs-content--offset-toolbar-icon': fixed && toolbar && labelAndIcon && !prominentToolbar,\r\n            'md-tabs-content--offset-toolbar-prominent-icon': fixed && toolbar && labelAndIcon && prominentToolbar,\r\n          }, swipeableViewsClassName)}\r\n          slideStyle={{\r\n            ...baseSlideStyle,\r\n            ...(typeof slideStyle === 'function' ? slideStyle(baseSlideStyle, panelHeight) : slideStyle),\r\n          }}\r\n          index={activeTabIndex}\r\n          onChangeIndex={this._handleSwipeChange}\r\n        >\r\n          {content}\r\n        </SwipeableViews>\r\n      </Component>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Motion, spring } from 'react-motion';\r\n\r\nexport default class TabIndicator extends PureComponent {\r\n  static propTypes = {\r\n    offset: PropTypes.number.isRequired,\r\n    width: PropTypes.number.isRequired,\r\n    visible: PropTypes.bool,\r\n  };\r\n\r\n  render() {\r\n    const { visible } = this.props;\r\n    return (\r\n      <Motion\r\n        style={{\r\n          x: spring(this.props.offset),\r\n          width: spring(this.props.width),\r\n          height: spring(visible ? 2 : 0),\r\n        }}\r\n      >\r\n        {({ x, height, width }) => {\r\n          const transform = `translate3d(${x}px, 0, 0)`;\r\n          return (\r\n            <span\r\n              style={{\r\n                height,\r\n                width,\r\n                WebkitTransform: transform,\r\n                MozTransform: transform,\r\n                msTransform: transform,\r\n                transform,\r\n              }}\r\n              className=\"md-tab-indicator\"\r\n            />\r\n          );\r\n        }}\r\n      </Motion>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\r\n\r\nimport Menu from '../Menus/Menu';\r\nimport AccessibleFakeInkedButton from '../Helpers/AccessibleFakeInkedButton';\r\nimport mapToListParts from '../utils/mapToListParts';\r\n\r\n/**\r\n * The `MenuTab` component is used when there are too many desktop tabs\r\n * to be displayed without any overflow. If the `Tabs` component is used,\r\n * this will automatically be included when the `menuOverflow` prop is true.\r\n */\r\nexport default class MenuTab extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * An id to give the tab's menu.\r\n     */\r\n    id: isRequiredForA11y(PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ])),\r\n\r\n    /**\r\n     * The current active tab index. This is used to determine which list item\r\n     * is active in the menu, and if the styles for an active tab should be applied\r\n     * to the menu.\r\n     */\r\n    activeTabIndex: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * An tab index that caused the overflow to happen.\r\n     */\r\n    overflowAtIndex: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * A list of tabs that should be rendered in the menu once opened. This can either\r\n     * be:\r\n     *\r\n     * - a `ListItem`, `Divider`, or `Subheader` component\r\n     * - a string to use as the `primaryText` for a list item\r\n     * - an object that defines props to generate a `ListItem`, `Divider`, or `Subheader` component\r\n     */\r\n    tabs: PropTypes.arrayOf(PropTypes.oneOfType([\r\n      PropTypes.element,\r\n      PropTypes.string,\r\n      PropTypes.shape({\r\n        divider: PropTypes.bool,\r\n        subheader: PropTypes.bool,\r\n        primaryText: PropTypes.node,\r\n      }),\r\n    ])).isRequired,\r\n\r\n    /**\r\n     * An optional style to apply to the menu.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the menu.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the tab in the menu.\r\n     */\r\n    tabStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the tab in the menu.\r\n     */\r\n    tabClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional function to call when the tab is clicked.\r\n     */\r\n    onClick: PropTypes.func,\r\n\r\n    /**\r\n     * The label to display in the tab. This should normally be some text with\r\n     * a drop down arrow next to it.\r\n     */\r\n    label: PropTypes.node.isRequired,\r\n  };\r\n\r\n  state = { visible: false }\r\n\r\n  _toggleVisible = (e) => {\r\n    if (this.props.onClick) {\r\n      this.props.onClick(e);\r\n    }\r\n\r\n    this.setState({ visible: !this.state.visible });\r\n  };\r\n\r\n  _handleClose = () => {\r\n    this.setState({ visible: false });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      style,\r\n      className,\r\n      tabStyle,\r\n      tabClassName,\r\n      tabs,\r\n      label,\r\n      activeTabIndex,\r\n      overflowAtIndex,\r\n      ...props\r\n    } = this.props;\r\n    const active = activeTabIndex >= overflowAtIndex;\r\n\r\n    const tab = (\r\n      <AccessibleFakeInkedButton\r\n        {...props}\r\n        onClick={this._toggleVisible}\r\n        style={tabStyle}\r\n        className={cn('md-tab md-tab--menu', tabClassName)}\r\n      >\r\n        {label}\r\n      </AccessibleFakeInkedButton>\r\n    );\r\n\r\n    return (\r\n      <Menu\r\n        id={id}\r\n        style={style}\r\n        className={cn('md-menu--tab', {\r\n          'md-tab--active': active,\r\n          'md-tab--inactive': !active,\r\n        }, className)}\r\n        toggle={tab}\r\n        visible={this.state.visible}\r\n        onClose={this._handleClose}\r\n      >\r\n        {tabs.map(mapToListParts)}\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport Button from '../Buttons/Button';\r\n\r\nexport default class TabOverflowButton extends PureComponent {\r\n  static propTypes = {\r\n    left: PropTypes.bool,\r\n    icon: PropTypes.bool,\r\n  };\r\n\r\n  render() {\r\n    const { left, icon, ...props } = this.props;\r\n    return (\r\n      <Button\r\n        {...props}\r\n        icon\r\n        className={cn('md-icon--inherit md-btn--tab-overflow', {\r\n          'md-btn--tab-overflow-left': left,\r\n          'md-btn--tab-overflow-right': !left,\r\n          'md-btn--tab-overflow-icon': icon,\r\n        })}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent, Children, cloneElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport deprecated from 'react-prop-types/lib/deprecated';\r\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\r\n\r\nimport getField from '../utils/getField';\r\nimport controlled from '../utils/PropTypes/controlled';\r\nimport TabIndicator from './TabIndicator';\r\nimport IconSeparator from '../Helpers/IconSeparator';\r\nimport ResizeObserver from '../Helpers/ResizeObserver';\r\nimport FontIcon from '../FontIcons/FontIcon';\r\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\r\nimport MenuTab from './MenuTab';\r\nimport TabOverflowButton from './TabOverflowButton';\r\n\r\nconst MOBILE_PADDING = 72;\r\nconst DESKTOP_PADDING = 80;\r\nconst MOBILE_TAB_MIN_WIDTH = 72;\r\nconst DESKTOP_TAB_MIN_WIDTH = 160;\r\n\r\n\r\n/**\r\n * The `Tabs` component is used to manage the state of which tab is currently active.\r\n */\r\nexport default class Tabs extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * A base id to use for each `Tab`. When the child tabs are created, they are cloned\r\n     * with some additional accessibility props. Each tab will get a prop with this and the\r\n     * current index of the tab.\r\n     */\r\n    tabId: isRequiredForA11y(PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ])),\r\n\r\n    /**\r\n     * An optional style to apply.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * The className to use when a tab is currently active. The default className does not\r\n     * actually apply any styles.\r\n     *\r\n     * If this prop is set, it will override any `activeClassName` props applied to the child\r\n     * `Tab`s. Either set a custom `activeClassName` on each `Tab`, or use this prop to apply\r\n     * the same `activeClassName` to each `Tab`.\r\n     *\r\n     * @see {@link Tabs/Tab#activeClassName}\r\n     */\r\n    activeTabClassName: PropTypes.string,\r\n\r\n    /**\r\n     * The className to use when the tab is not active and not selected. By default,\r\n     * this will set inactive tabs' color to `$md-white-base`. This works great\r\n     * if the tabs are placed on a colored toolbar but fails when the tabs are not colored\r\n     * or on a white background. In these cases, it is recommended to change this value\r\n     * to `md-text--secondary` or some other class name.\r\n     *\r\n     * If this prop is set, it will override any `inactiveClassName` props applied to the child\r\n     * `Tab`s. Either set a custom `inactiveClassName` on each `Tab`, or use this prop to apply\r\n     * the same `inactiveClassName` to each `Tab`.\r\n     *\r\n     * @see {@link Tabs/Tab#inactiveClassName}\r\n     */\r\n    inactiveTabClassName: PropTypes.string,\r\n\r\n    /**\r\n     * The component to render the tabs in.\r\n     */\r\n    component: PropTypes.oneOfType([\r\n      PropTypes.func,\r\n      PropTypes.string,\r\n    ]).isRequired,\r\n\r\n    /**\r\n     * This should either be a single `Tab` component or a list of `Tab` components. Unfortunately,\r\n     * the child *must* be exactly a `Tab` component because this is unable to extract the correct\r\n     * `label` and `children` from a custom `Tab` component.\r\n     */\r\n    children: PropTypes.oneOfType([\r\n      PropTypes.element,\r\n      PropTypes.arrayOf(PropTypes.element),\r\n    ]).isRequired,\r\n\r\n    /**\r\n     * Boolean if the tabs should be centered instead of aligned to the keyline. The tabs will\r\n     * only be aligned to the keyline when there are more than 3 tabs and the `alignToKeyline`\r\n     * prop is `false`.\r\n     */\r\n    centered: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the tabs should align to a toolbar's title keyline. If this is undefined,\r\n     * the tabs will try to align to the keyline when there are more than 3 tabs.\r\n     */\r\n    alignToKeyline: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the tabs should be colored with the primary color. If this is false or undefined,\r\n     * the tabs will be colored for the light or dark theme.\r\n     */\r\n    colored: PropTypes.bool,\r\n\r\n    /**\r\n     * A boolean if the overflow tabs on desktop displays should appear in a menu. If this is false,\r\n     * the additional tabs will be available by using pagination buttons.\r\n     */\r\n    overflowMenu: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional function to call when the active tab is changed. The callback will include\r\n     * the new active tab index and a click event.\r\n     *\r\n     * ```js\r\n     * onTabChange(newTabIndex, event);\r\n     * ```\r\n     */\r\n    onTabChange: PropTypes.func,\r\n\r\n    /**\r\n     * An optional active tab index to use. If this is defined, it will make the component controlled\r\n     * and require the `onTabChange` prop to be defined.\r\n     */\r\n    activeTabIndex: controlled(PropTypes.number, 'onTabChange', 'defaultTabIndex'),\r\n\r\n    /**\r\n     * The default tab index to use when the component is uncontrolled.\r\n     */\r\n    defaultTabIndex: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * When the `overflowMenu` prop is false, this will be used to render the \"next slice of tabs\"\r\n     * when there are too many tabs to display at once on desktop screens.\r\n     */\r\n    nextIcon: PropTypes.element,\r\n\r\n    /**\r\n     * When the `overflowMenu` prop is false, this will be used to render the \"previous slice of tabs\"\r\n     * when there are too many tabs to display at once on desktop screens.\r\n     */\r\n    previousIcon: PropTypes.element,\r\n\r\n    /**\r\n     * When the `overflowMenu` prop is true, this will be used to render the `MenuTab` overflow menu.\r\n     * This will be to render the icon to the right of the label.\r\n     */\r\n    overflowMenuIcon: PropTypes.element,\r\n\r\n    /**\r\n     * When the `overflowMenu` prop is true, this will be used to render the `MenuTab` overflow menu.\r\n     * This will be the text that displays as a tab.\r\n     */\r\n    overflowMenuLabel: PropTypes.node.isRequired,\r\n\r\n    /**\r\n     * Boolean if the tabs are currently rendered on a mobile or tablet device. This is used to calculate\r\n     * overflow/padding on the tabs.\r\n     */\r\n    mobile: PropTypes.bool,\r\n    defaultMedia: deprecated(PropTypes.oneOf(['mobile', 'tablet', 'desktop']), 'Use `mobile` instead'),\r\n    desktopMinWidth: deprecated(PropTypes.number, 'Use `mobile` instead'),\r\n    nextIconChildren: deprecated(PropTypes.node, 'Use the `nextIcon` prop instead'),\r\n    nextIconClassName: deprecated(PropTypes.string, 'Use the `nextIcon` prop instead'),\r\n    previousIconChildren: deprecated(PropTypes.node, 'Use the `previousIcon` prop instead'),\r\n    previousIconClassName: deprecated(PropTypes.string, 'Use the `previousIcon` prop instead'),\r\n    overflowMenuIconChildren: deprecated(PropTypes.node, 'Use the `overflowMenuIcon` prop instead'),\r\n    overflowMenuIconClassName: deprecated(PropTypes.string, 'Use the `overflowMenuIcon` prop instead'),\r\n  };\r\n\r\n  static defaultProps = {\r\n    component: 'ul',\r\n    defaultTabIndex: 0,\r\n    nextIcon: <FontIcon>keyboard_arrow_right</FontIcon>,\r\n    previousIcon: <FontIcon>keyboard_arrow_left</FontIcon>,\r\n    overflowMenuLabel: 'More',\r\n    overflowMenuIcon: <FontIcon>arrow_drop_down</FontIcon>,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const defaultTabIndex = typeof props.activeTabIndex === 'undefined' ? props.defaultTabIndex : props.activeTabIndex;\r\n    const indicatorWidth = props.mobile ? MOBILE_TAB_MIN_WIDTH : DESKTOP_TAB_MIN_WIDTH;\r\n    this.state = {\r\n      indicatorWidth,\r\n      indicatorOffset: indicatorWidth * defaultTabIndex,\r\n      indicatorVisible: true,\r\n      overflowIndex: 0,\r\n    };\r\n\r\n    if (typeof props.activeTabIndex === 'undefined') {\r\n      this.state.activeTabIndex = defaultTabIndex;\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (this.props.activeTabIndex !== nextProps.activeTabIndex) {\r\n      this.setState({\r\n        ...this._calcIndicatorPosition(this._container, 0, nextProps.activeTabIndex, this.state.overflowAtIndex),\r\n      }, this._scrollActiveIntoView);\r\n    } else if (!this._shouldAlign(nextProps) && this._shouldAlign(this.props)) {\r\n      this.setState({ paddingLeft: null });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this._shouldAlign(this.props) && this.state.overflowAtIndex !== prevState.overflowAtIndex) {\r\n      const paddingLeft = this._calcPaddingLeft(this._container, this.state.mobile);\r\n      // Have to wait for the overflow menus to appear, then wop\r\n      /* eslint-disable react/no-did-update-set-state */\r\n      this.setState({ paddingLeft });\r\n    } else {\r\n      const labels = Children.map(Children.toArray(this.props.children), ({ props: { label } }) => label);\r\n      const prevLabels = Children.map(Children.toArray(prevProps.children), ({ props: { label } }) => label);\r\n      if (labels.length !== prevLabels.length || labels.filter((_, i) => labels[i] !== prevLabels[i]).length) {\r\n        this.setState({\r\n          ...this._calcIndicatorPosition(this._container, 0, this.props.activeTabIndex, this.state.overflowAtIndex),\r\n        }, this._scrollActiveIntoView);\r\n      }\r\n    }\r\n  }\r\n\r\n  _shouldAlign(props) {\r\n    return typeof props.alignToKeyline === 'boolean'\r\n      ? props.alignToKeyline\r\n      : Children.toArray(props.children).filter(child => !!child).length > 3;\r\n  }\r\n\r\n  _calcPaddingLeft(container, mobile) {\r\n    const mediaPadding = mobile ? MOBILE_PADDING : DESKTOP_PADDING;\r\n    const tab = container.querySelector('.md-tab');\r\n    const { offsetLeft: labelOffset } = tab.querySelector('.md-tab-label');\r\n\r\n    return mediaPadding - labelOffset;\r\n  }\r\n\r\n  _calcOverflowIndex(container, paddingLeft = 0, menu) {\r\n    const containerWidth = container.offsetWidth;\r\n    let overflowIndex = 0;\r\n    if (containerWidth < container.scrollWidth) {\r\n      const tabs = Array.prototype.slice.call(container.querySelectorAll('.md-tab'));\r\n      let totalWidth = 0;\r\n      tabs.some((tab, i) => {\r\n        overflowIndex = i;\r\n        totalWidth += tab.offsetWidth;\r\n\r\n        return totalWidth > containerWidth;\r\n      });\r\n    }\r\n\r\n    return Math.max(0, overflowIndex - (menu ? 1 : 0));\r\n  }\r\n\r\n  _calcIndicatorPosition(container, paddingLeft = 0, activeTabIndex, overflowAtIndex) {\r\n    let activeItem;\r\n    if (typeof activeTabIndex === 'number') {\r\n      if (overflowAtIndex > 0 && activeTabIndex >= overflowAtIndex) {\r\n        activeItem = container.querySelector('.md-menu--tab');\r\n      } else {\r\n        activeItem = container.querySelectorAll('.md-tab')[activeTabIndex];\r\n      }\r\n    } else {\r\n      activeItem = container.querySelector('.md-tab--active');\r\n    }\r\n\r\n    if (!activeItem) {\r\n      return { indicatorVisible: false };\r\n    }\r\n\r\n    const { offsetWidth: indicatorWidth, offsetLeft: indicatorOffset } = activeItem;\r\n    return {\r\n      indicatorWidth,\r\n      indicatorOffset: indicatorOffset + paddingLeft,\r\n      indicatorVisible: !overflowAtIndex || overflowAtIndex > activeTabIndex,\r\n    };\r\n  }\r\n\r\n  _setContainer = (container) => {\r\n    this._container = container;\r\n    this._positionElements(this._container !== null);\r\n  };\r\n\r\n  _positionElements = (initialRender) => {\r\n    initialRender = typeof initialRender === 'boolean' && initialRender;\r\n    if (!this._container) {\r\n      return;\r\n    }\r\n\r\n    const { centered, overflowMenu } = this.props;\r\n    const { mobile } = this.props;\r\n\r\n    let paddingLeft;\r\n    if (!centered && this._shouldAlign(this.props)) {\r\n      paddingLeft = this._calcPaddingLeft(this._container, mobile);\r\n    }\r\n\r\n    let overflowAtIndex;\r\n    if (!mobile) {\r\n      overflowAtIndex = this._calcOverflowIndex(this._container, paddingLeft, overflowMenu);\r\n    }\r\n\r\n    const indicatorPosition = this._calcIndicatorPosition(this._container, initialRender ? paddingLeft : 0);\r\n\r\n    this.setState({ mobile, paddingLeft, overflowAtIndex, ...indicatorPosition }, this._scrollActiveIntoView);\r\n  };\r\n\r\n  _scrollActiveIntoView = () => {\r\n    if (!this._container || !this.state.mobile) {\r\n      return;\r\n    }\r\n\r\n    const active = this._container.querySelector('.md-tab--active');\r\n    if (!active) {\r\n      return;\r\n    }\r\n\r\n    const allTabs = Array.prototype.slice.call(this._container.querySelectorAll('.md-tab'));\r\n    if (allTabs[0] === active) {\r\n      this._container.scrollLeft = 0;\r\n      return;\r\n    }\r\n\r\n    const { offsetWidth: containerWidth, scrollLeft } = this._container;\r\n    const { offsetWidth: activeWidth, offsetLeft: activeOffset } = active;\r\n    const inFullViewLeft = activeOffset - scrollLeft >= 0;\r\n    const inFullViewRight = (activeOffset + activeWidth) - (containerWidth + scrollLeft) <= 0;\r\n    if (inFullViewLeft && inFullViewRight) {\r\n      return;\r\n    }\r\n\r\n    let offset = 0;\r\n    allTabs.some((tab, i) => {\r\n      if (i < this.props.activeTabIndex) {\r\n        offset += tab.offsetWidth;\r\n      }\r\n\r\n      return i < this.state.activeTabIndex;\r\n    });\r\n\r\n    this._container.scrollLeft = offset;\r\n  };\r\n\r\n  _handleTabChange = (index, tabId, tabControlsId, tabChildren, event) => {\r\n    if (this.props.onTabChange) {\r\n      this.props.onTabChange(index, tabId, tabControlsId, tabChildren, event);\r\n    }\r\n\r\n    if (typeof this.props.activeTabIndex === 'undefined') {\r\n      this.setState({\r\n        activeTabIndex: index,\r\n        ...this._calcIndicatorPosition(this._container, 0, index, this.state.overflowAtIndex),\r\n      });\r\n    }\r\n  };\r\n\r\n  _mapToOverflowTabProps = (tab, i) => {\r\n    const index = i + this.state.overflowAtIndex;\r\n    const active = getField(this.props, this.state, 'activeTabIndex') === index;\r\n    const tabEl = Children.only(tab);\r\n    const handleTabChange = this._handleTabChange;\r\n\r\n    return {\r\n      active,\r\n      primaryText: tabEl.props.label,\r\n      onClick: function handleClick(event) {\r\n        const { onClick, id, controlsId, children } = tabEl.props;\r\n        if (onClick) {\r\n          onClick(index, event);\r\n        }\r\n\r\n        handleTabChange(index, id, controlsId, children, event);\r\n      },\r\n    };\r\n  };\r\n\r\n  _nextIndexes = (increment) => {\r\n    const { overflowIndex, overflowAtIndex } = this.state;\r\n    const visibleAmt = (overflowAtIndex - overflowIndex) * (increment ? 1 : -1);\r\n\r\n    this.setState({\r\n      overflowIndex: overflowIndex + visibleAmt,\r\n      overflowAtIndex: overflowAtIndex + visibleAmt,\r\n    });\r\n  };\r\n\r\n  _showNextTabs = () => {\r\n    this._nextIndexes(true);\r\n  };\r\n\r\n  _showPreviousTabs = () => {\r\n    this._nextIndexes(false);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      indicatorOffset,\r\n      indicatorWidth,\r\n      indicatorVisible,\r\n      overflowIndex,\r\n      overflowAtIndex,\r\n      paddingLeft,\r\n    } = this.state;\r\n\r\n    const {\r\n      component: Component,\r\n      style,\r\n      className,\r\n      activeTabClassName,\r\n      inactiveTabClassName,\r\n      colored,\r\n      centered,\r\n      tabId,\r\n      overflowMenu,\r\n      overflowMenuLabel,\r\n      nextIcon,\r\n      previousIcon,\r\n      overflowMenuIcon,\r\n\r\n      // deprecated\r\n      overflowMenuIconChildren,\r\n      overflowMenuIconClassName,\r\n      nextIconChildren,\r\n      nextIconClassName,\r\n      previousIconChildren,\r\n      previousIconClassName,\r\n      /* eslint-disable no-unused-vars */\r\n      activeTabIndex: propActiveIndex,\r\n      defaultTabIndex,\r\n      onTabChange,\r\n      alignToKeyline,\r\n      mobile,\r\n\r\n      // Deprecated\r\n      defaultMedia,\r\n      desktopMinWidth,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n\r\n    const activeTabIndex = getField(this.props, this.state, 'activeTabIndex');\r\n\r\n    let icon = false;\r\n    let children = Children.map(Children.toArray(this.props.children), (tab, index) => {\r\n      const handleOnClick = (tabIndex, id, tabControlsId, tabChildren, event) => {\r\n        if (tab.props.onClick) {\r\n          tab.props.onClick(tabId, id, tabControlsId, tabChildren, event);\r\n        }\r\n\r\n        this._handleTabChange(tabIndex, id, tabControlsId, tabChildren, event);\r\n      };\r\n\r\n      if (tab.props.icon) {\r\n        icon = true;\r\n      }\r\n\r\n      return cloneElement(tab, {\r\n        index,\r\n        activeClassName: activeTabClassName,\r\n        inactiveClassName: inactiveTabClassName,\r\n        id: tab.props.id || `${tabId}-${index}`,\r\n        controlsId: tab.props.controlsId || `${tabId}-panel-${index}`,\r\n        active: index === activeTabIndex,\r\n        onClick: handleOnClick,\r\n      });\r\n    });\r\n\r\n    let overflow;\r\n    let nextControl;\r\n    let previousControl;\r\n    if (overflowAtIndex) {\r\n      const length = children.length;\r\n      if (overflowMenu) {\r\n        overflow = (\r\n          <MenuTab\r\n            id={`${tabId}-overflow-menu`}\r\n            activeTabIndex={activeTabIndex}\r\n            overflowAtIndex={overflowAtIndex}\r\n            label={(\r\n              <IconSeparator label={overflowMenuLabel}>\r\n                {getDeprecatedIcon(overflowMenuIconClassName, overflowMenuIconChildren, overflowMenuIcon)}\r\n              </IconSeparator>\r\n            )}\r\n            tabs={children.slice(overflowAtIndex, children.length).map(this._mapToOverflowTabProps)}\r\n          />\r\n        );\r\n      }\r\n\r\n      children = children.slice(overflowIndex, overflowAtIndex);\r\n\r\n      if (!overflowMenu && overflowIndex > 0) {\r\n        previousControl = (\r\n          <TabOverflowButton\r\n            left\r\n            icon={icon}\r\n            iconEl={getDeprecatedIcon(previousIconClassName, previousIconChildren, previousIcon)}\r\n            onClick={this._showPreviousTabs}\r\n          />\r\n        );\r\n      }\r\n\r\n      if (!overflowMenu && length > 3 && overflowAtIndex + overflowIndex <= length) {\r\n        nextControl = (\r\n          <TabOverflowButton\r\n            icon={icon}\r\n            onClick={this._showNextTabs}\r\n            iconEl={getDeprecatedIcon(nextIconClassName, nextIconChildren, nextIcon)}\r\n          />\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Component\r\n        {...props}\r\n        style={{ ...style, paddingLeft }}\r\n        className={cn('md-tabs', {\r\n          'md-tabs--pagination': overflowAtIndex && !overflowMenu,\r\n          'md-tabs--centered': centered,\r\n          'md-background--primary': colored,\r\n        }, className)}\r\n        role=\"tablist\"\r\n      >\r\n        <ResizeObserver watchWidth watchHeight onResize={this._positionElements} elRef={this._setContainer} />\r\n        {previousControl}\r\n        {children}\r\n        {nextControl}\r\n        {overflow}\r\n        <TabIndicator offset={indicatorOffset} width={indicatorWidth} visible={indicatorVisible} />\r\n      </Component>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent, Children, cloneElement, isValidElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport oneRequired from '../utils/PropTypes/oneRequired';\r\nimport AccessibleFakeInkedButton from '../Helpers/AccessibleFakeInkedButton';\r\n\r\n/**\r\n * The `Tab` component is used for rendering a single tab in the `Tabs` component.\r\n * It can optionally have either a `label`, an `icon` or both.\r\n */\r\nexport default class Tab extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * An id for the tab. This is required for a11y. If you use the `Tabs` component, this\r\n     * will automatically be generated for you and injected into this component.\r\n     */\r\n    id: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * An id for a `TabPanel` that holds the children from this tab. This is required for a11y.\r\n     * If you use the `Tabs` component, this will automatically be generated for you and injected\r\n     * into this component.\r\n     */\r\n    controlsId: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * An optional style to apply.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * The className to use when the tab is currently active. The default className does\r\n     * not actually apply any styles.\r\n     *\r\n     * @see {@link Tabs/Tabs#activeTabClassName}\r\n     */\r\n    activeClassName: PropTypes.string,\r\n\r\n    /**\r\n     * The className to use when the tab is not active. By default, this will set inactive\r\n     * tabs' color to `$md-white-base`. This works great if the tabs are placed on a\r\n     * colored toolbar but fails when the tabs are not colored or on a white background.\r\n     * In these cases, it is recommended to change this value to `md-text--secondary`\r\n     * or some other class name.\r\n     *\r\n     * @see {@link Tabs/Tabs#inactiveTabClassName}\r\n     */\r\n    inactiveClassName: PropTypes.string,\r\n\r\n    /**\r\n     * The component to render as.\r\n     */\r\n    component: PropTypes.oneOfType([\r\n      PropTypes.func,\r\n      PropTypes.string,\r\n    ]).isRequired,\r\n\r\n    /**\r\n     * Any children to display once the tab has been selected.\r\n     */\r\n    children: PropTypes.node,\r\n\r\n    /**\r\n     * An optional icon to display in the tab. This can either be used alone, or it\r\n     * will be placed above the `label` if both are given.\r\n     */\r\n    icon: PropTypes.element,\r\n\r\n    /**\r\n     * An optional label to display in the tab. This can either be used alone, or it\r\n     * will be placed below the `icon` if both are given.\r\n     */\r\n    label: oneRequired(PropTypes.node, 'icon'),\r\n\r\n    /**\r\n     * An optional function to call when the tab is clicked. The callback includes this tab's index,\r\n     * id, controlsId, children, and finally click event. All the additional parameters are included\r\n     * if you are not using the `TabsContainer` component. The `id` and `controlsId` are mainly passed\r\n     * for accessibility.\r\n     *\r\n     * ```js\r\n     * onClick(index, id, controlsId, children, event);\r\n     * ```\r\n     */\r\n    onClick: PropTypes.func,\r\n\r\n    /**\r\n     * Boolean if the tab is currently active. If you use the `Tabs` component, this is automatically\r\n     * injected.\r\n     */\r\n    active: PropTypes.bool,\r\n\r\n    /**\r\n     * Tab's index. If you use the `Tabs` component, this is automatically injected.\r\n     */\r\n    index: PropTypes.number,\r\n  };\r\n\r\n  static defaultProps = {\r\n    component: 'li',\r\n    activeClassName: 'md-tab--active',\r\n    inactiveClassName: 'md-tab--inactive',\r\n  };\r\n\r\n  _handleClick = (e) => {\r\n    if (this.props.onClick) {\r\n      this.props.onClick(this.props.index, this.props.id, this.props.controlsId, this.props.children, e);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      controlsId,\r\n      className,\r\n      activeClassName,\r\n      inactiveClassName,\r\n      active,\r\n      /* eslint-disable no-unused-vars */\r\n      icon: propIcon,\r\n      label: propLabel,\r\n      index,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n\r\n    let { icon, label } = this.props;\r\n    if (icon) {\r\n      const iconEl = Children.only(icon);\r\n      icon = cloneElement(icon, {\r\n        className: cn('md-icon--tab', iconEl.props.className),\r\n      });\r\n    }\r\n\r\n    if (isValidElement(label)) {\r\n      const labelEl = Children.only(label);\r\n      label = cloneElement(label, {\r\n        className: cn('md-tab-label', labelEl.props.className),\r\n      });\r\n    } else {\r\n      label = <div className=\"md-tab-label\">{label}</div>;\r\n    }\r\n    return (\r\n      <AccessibleFakeInkedButton\r\n        {...props}\r\n        id={id}\r\n        role=\"tab\"\r\n        onClick={this._handleClick}\r\n        className={cn('md-tab', {\r\n          'md-tab--icon': label && icon,\r\n          [activeClassName]: activeClassName && active,\r\n          [inactiveClassName]: inactiveClassName && !active,\r\n        }, className)}\r\n        aria-controls={controlsId}\r\n        aria-selected={active}\r\n      >\r\n        {icon}\r\n        {label}\r\n      </AccessibleFakeInkedButton>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport TooltipContainer from './TooltipContainer';\r\n\r\n\r\n/**\r\n * Adds a tooltip for a component/element given as the only child.\r\n *\r\n * The component should render its children, or the tooltip will not be shown.\r\n * Also the component should be positioned by `className` or `style`\r\n * (CSS property `position` should have value `relative`, `absolute` or `fixed`),\r\n * or the tooltip can appear incorrectly.\r\n * Use `setPosition={true}` to automatically add `position: 'relative'` to the `style` of the wrapped component.\r\n *\r\n * Besides of `children` and `setPosition` all props set for `Tooltipped` component are passed through\r\n * to `TooltipContainer` that is added as a child of the wrapped component and controls the tooltip.\r\n *\r\n * ```js\r\n * <Tooltipped\r\n *   label=\"Tooltip for text\"\r\n *   position=\"left\"\r\n *   delay={1000}\r\n * >\r\n *   <span style={{position: 'absolute', top: '10px', left: '70%'}}>\r\n *     Some text\r\n *     <div>Another line of text</div>\r\n *   </span>\r\n * </Tooltipped>\r\n * ```\r\n *\r\n * ```js\r\n * <Tooltipped\r\n *   setPosition={true}\r\n *   label=\"Avatar's tooltip\"\r\n *   position=\"top\"\r\n * >\r\n *   <span style={{marginLeft: '30px'}}>\r\n *       <Avatar random>T</Avatar>\r\n *   </span>\r\n * </Tooltipped>\r\n * ```\r\n */\r\nexport default function Tooltipped({ children, setPosition, ...props }) {\r\n  let target = React.Children.only(children);\r\n  const targetProps = target.props;\r\n\r\n  if (props.label) {\r\n    let clonedProps = targetProps;\r\n    if (setPosition) {\r\n      clonedProps = {\r\n        ...clonedProps,\r\n        style: { ...clonedProps.style, position: 'relative' },\r\n      };\r\n    }\r\n\r\n    target = React.cloneElement(target, clonedProps, [\r\n      targetProps.children,\r\n      <TooltipContainer key=\"tooltipContainer\" {...props} />,\r\n    ]);\r\n  }\r\n\r\n  return target;\r\n}\r\n\r\nTooltipped.displayName = 'Tooltipped';\r\n\r\nTooltipped.propTypes = {\r\n  /**\r\n   * A component/element the tooltip should be linked to.\r\n   */\r\n  children: PropTypes.element.isRequired,\r\n  /**\r\n   * Tooltip's content.\r\n   */\r\n  label: PropTypes.node,\r\n  /**\r\n   * Whether `position: relative` should be added to the `style` property of the wrapped component.\r\n   */\r\n  setPosition: PropTypes.bool,\r\n};\r\n","export default '1.2.13';\r\n"],"names":["makeEmptyFunction","arg","emptyFunction","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","this","thatReturnsArgument","condition","format","a","b","c","d","e","f","error","undefined","Error","args","argIndex","replace","name","framesToPop","getOwnPropertySymbols","Object","hasOwnProperty","prototype","propIsEnumerable","propertyIsEnumerable","assign","test1","String","getOwnPropertyNames","test2","i","fromCharCode","map","n","join","test3","split","forEach","letter","keys","err","shouldUseNative","module","shim","props","propName","componentName","location","propFullName","secret","ReactPropTypesSecret","invariant","getShim","ReactPropTypes","array","isRequired","bool","func","number","object","string","symbol","any","arrayOf","element","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","require$$1","len","arguments","length","filter","fn","reduce","current","next","apply","exports","children","result","_react","Children","child","key","prev","getValueForKey","nextKeysPending","pendingKeys","prevKey","push","childMapping","nextKey","pendingNextKey","_extends","target","source","call","_chainFunction2","_interopRequireDefault","_chainFunction","_react2","_propTypes","_warning","obj","__esModule","default","TransitionGroup","_React$Component","context","instance","Constructor","TypeError","_classCallCheck","_this","self","ReferenceError","_possibleConstructorReturn","performAppear","component","currentlyTransitioningKeys","componentWillAppear","_handleDoneAppearing","bind","componentDidAppear","currentChildMapping","_ChildMapping","performLeave","performEnter","componentWillEnter","_handleDoneEntering","componentDidEnter","componentWillLeave","_handleDoneLeaving","componentDidLeave","keysToEnter","setState","state","newChildren","childRefs","create","subClass","superClass","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_inherits","componentWillMount","keysToLeave","componentDidMount","initialChildMapping","componentWillReceiveProps","nextProps","nextChildMapping","prevChildMapping","hasPrev","_key","hasNext","componentDidUpdate","_this2","render","_this3","childrenToRender","_loop","isCallbackRef","ref","factoryChild","childFactory","r","cloneElement","transitionLeave","transitionName","transitionAppear","transitionEnter","transitionLeaveTimeout","transitionEnterTimeout","transitionAppearTimeout","createElement","Component","displayName","propTypes","defaultProps","defineProperty","className","classList","contains","baseVal","indexOf","add","_hasClass2","setAttribute","_hasClass","replaceClassName","origClass","classToRemove","RegExp","remove","window","document","_inDOM2","_inDOM","compatRaf","cancel","raf","curr","Date","getTime","ms","Math","max","req","setTimeout","getKey","vendor","k","toUpperCase","substr","some","rafKey","cb","id","transform","prefix","transitionEnd","animationEnd","transitionProperty","transitionDuration","transitionTiming","transitionDelay","animationName","animationDuration","animationTiming","animationDelay","_getTransitionPropert","style","vendorMap","O","toLowerCase","Moz","Webkit","vendors","getTransitionProperties","end","property","timing","delay","duration","transitionType","timeoutPropName","enabledPropName","_propTypes2","enter","leave","active","enterActive","leaveActive","appear","appearActive","_addClass2","_addClass","_removeClass2","_removeClass","_requestAnimationFrame2","_requestAnimationFrame","events","_properties","CSSTransitionGroupChild","_temp","_len","Array","concat","done","transition","appearTimeout","enterTimeout","leaveTimeout","classNameAndNodeQueue","transitionTimeouts","componentWillUnmount","unmounted","timeout","clearTimeout","animationType","finishCallback","_reactDom","activeClassName","timer","removeListeners","queueClassAndNode","listener","finish","addEventListener","removeEventListener","rafHandle","flushClassNameAndNodeQueue","scrollTop","only","_TransitionGroup2","_TransitionGroup","_CSSTransitionGroupChild2","_CSSTransitionGroupChild","_PropTypes","nameShape","CSSTransitionGroup","_wrapChild","hasOwn","classNames","classes","argType","isArray","getField","field","omit","newProps","cachedCanvas","getTextWidth","text","el","canvas","getContext","styles","getComputedStyle","font","sizing","fontSize","lineHeight","fontFamily","fontStyle","fontVariant","fontWeight","measureText","width","LEFT_MOUSE","TAB","ENTER","SPACE","LEFT","UP","RIGHT","DOWN","HorizontalAnchors","VerticalAnchors","INNER_LEFT","CENTER","INNER_RIGHT","TOP","OVERLAP","BOTTOM","Positions","themeColors","themeText","background","disabled","hint","primary","secondary","inherit","ink","card","hover","colors","cn","getCollapserStyles","flipped","suffix","suffixFlipped","isFormPartRole","nodeName","role","getAttribute","handleKeyboardAccessibility","onClick","listenToEnter","listenToSpace","which","keyCode","space","tagName","match","preventDefault","form","type","closest","nodeType","parentElement","submit","querySelector","click","TOP_LEFT","TOP_RIGHT","BOTTOM_LEFT","BOTTOM_RIGHT","BELOW","deprecated","_warning2","warned","validator","reason","componentNameSafe","propFullNameSafe","messageKey","_resetWarned","AccessibleFakeButton","pressed","tabFocused","focus","_node","blur","_setNode","findDOMNode","_handleClick","_handleKeyDown","onKeyDown","_handleKeyUp","onKeyUp","onTabFocus","_handleBlur","onBlur","tabbedClassName","tabIndex","noFocusOutline","childElements","toArray","unshift","React","PureComponent","getDisplayName","ComposedComponent","hoc","getPagePosition","direction","scroll","pageXOffset","compatMode","documentElement","body","calcPageOffset","left","right","rect","getBoundingClientRect","top","isValidClick","button","shiftKey","supportsPassive","opts","setTouchEvent","eventType","callback","options","passive","addTouchEvent","removeTouchEvent","captureNextEvent","capture","stopPropagation","calculateHypotenuse","sqrt","aborted","_timeout","_abort","expanding","pulsing","leaving","transitionOverlap","expanded","TICK","pulse","onRemove","size","InkContainer","inks","createInk","pageX","pageY","_createInk","_removeTimeout","_removeInk","_getKeyboardContainer","_inkContainer","offsetWidth","offsetHeight","x","y","pageOffset","now","slice","pop","_container","_setContainers","group","_initOrRemoveEvents","keyboardDiff","mouseDiff","touchDiff","mouseDisabled","_isListenerDisabled","disabledInteractions","touchDisabled","keyboardDisabled","_handleFocus","_handleSubmit","_stopPropagationToFocus","_handleMouseDown","_handleMouseUp","_handleTouchStart","_handleTouchEnd","_maybeDelayClick","waitForInkTransition","_handleRemove","_clicked","_skipNextMouse","_mouseLeave","_handleMouseLeave","_aborted","_handleTouchMove","changedTouches","lastInk","index","abortedInk","splice","activeElement","di","ndi","mouseDisabledDiff","_isListenerDisabledDiff","touchDisabledDiff","keyboardDisabledDiff","interaction","nextDisabledInteractions","ni","inkStyle","inkClassName","Ink","inkDisabled","composed","_composed","getComposedComponent","_setInkRef","inkContainer","_setComposedComponent","__SUPER_SECRET_REF__","inkTransitionOverlap","inkTransitionEnterTimeout","inkTransitionLeaveTimeout","inkContainerStyle","inkContainerClassName","inkDisabledInteractions","contextTypes","inkContextTypes","injectInk","ret","val","secondPerFrame","v","destX","precision","newV","newX","abs","reusedTuple","getNanoSeconds","hrtime","loadTime","performance","process","hr","moduleLoadTime","nodeLoadTime","upTime","uptime","root","global","caf","last","queue","_now","cp","cancelled","round","handle","requestAnimationFrame","cancelAnimationFrame","currentStyle","currentVelocity","styleValue","_createClass","defineProperties","descriptor","protoProps","staticProps","_mapToZero2","_mapToZero","_stripStyle2","_stripStyle","_stepper4","_stepper3","_performanceNow2","_performanceNow","_raf2","_raf","_shouldStopAnimation2","_shouldStopAnimation","msPerFrame","Motion","wasAnimating","animationID","prevTime","accumulatedTime","unreadPropStyle","clearUnreadPropStyle","destStyle","dirty","_state","lastIdealStyle","lastIdealVelocity","startAnimationIfNecessary","timestamp","propsStyle","onRest","currentTime","timeDelta","currentFrameCompletion","floor","framesToCatchUp","newLastIdealStyle","newLastIdealVelocity","newCurrentStyle","newCurrentVelocity","newLastIdealStyleValue","newLastIdealVelocityValue","_stepper","stiffness","damping","_stepper2","nextIdealX","nextIdealV","defaultState","defaultStyle","_props","renderedChildren","StaggeredMotion","unreadPropStyles","currentStyles","currentVelocities","lastIdealStyles","lastIdealVelocities","someDirty","destStyles","shouldStopAnimationAll","newLastIdealStyles","newLastIdealVelocities","newCurrentStyles","newCurrentVelocities","j","defaultStyles","prevKeyIndex","nextKeyIndex","fill","sort","nextOrderA","nextOrderB","prevOrderA","prevOrderB","pivot","_mergeDiff2","_mergeDiff","rehydrateStyles","mergedPropsStyles","plainStyles","cUnreadPropStyles","mergedPropsStyle","data","mergeAndSync","willEnter","willLeave","didLeave","oldMergedPropsStyles","oldCurrentStyles","oldCurrentVelocities","oldLastIdealStyles","oldLastIdealVelocities","newMergedPropsStyles","oldIndex","oldMergedPropsStyle","leavingStyle","newMergedPropsStyleCell","foundOldIndex","plainStyle","velocity","TransitionMotion","unmounting","_mergeAndSync","propStyles","_mergeAndSync2","newMergedPropsStyle","styleThatEntered","defaultStyleCell","s","_mergeAndSync3","hydratedStyles","noWobble","gentle","wobbly","stiff","config","defaultConfig","_presets2","_presets","_interopRequire","_Motion","_StaggeredMotion","_TransitionMotion","_spring","_reorderKeys","Collapse","_setHeight","_child","height","paddingTop","paddingBottom","cs","parseInt","getPropertyValue","minHeight","collapsed","initialOpen","min","nextValue","spring","motionStyle","springConfig","animate","nextStyle","ICON_SIZE","FontIcon","_mergeStyles","forceSize","forceFontSize","iconClassName","getDeprecatedIcon","icon","TileAddon","avatar","avatarIcon","iconSized","ListItemText","primaryText","primaryTextStyle","primaryTextClassName","secondaryText","secondaryTextStyle","secondaryTextClassName","threeLines","secondaryTextNode","Subheader","inset","List","listLevel","cascadingFixedTo","cascadingMenu","list","scrollHeight","ordered","subheader","inline","primarySubheader","cascadingZDepth","subheaderEl","childContextTypes","fixedToShape","mobileSafari","handleWindowClickListeners","enabled","ua","navigator","userAgent","iOS","webkit","cursor","ZERO_WIDTH_CHARACTER","getSelectedTextPosition","clientX","clientY","getSelection","toString","selection","createRange","rangeCount","range","getRangeAt","cloneRange","getClientRects","rects","span","appendChild","createTextNode","insertNode","spanParent","parentNode","removeChild","normalize","getScroll","scrollX","scrollY","scrollLeft","getScreenSize","position","viewport","bottom","isOutHorizontally","fixedTo","threshold","fixedLeft","fixedRight","childLeft","childRight","offset","screenEdge","isOutVertically","toggle","fixedTop","fixedBottom","childTop","childBottom","MapShim","Map","getIndex","arr","entry","anonymous","__entries__","prototypeAccessors","get","set","delete","entries","has","clear","ctx","isBrowser","global$1","Function","requestAnimationFrame$1","trailingTimeout","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","throttle","addObserver","observer","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","gatherActive","hasActive","broadcastActive","observe","attributes","childList","characterData","subtree","disconnect","propertyName","getInstance","instance_","defineConfigurable","getWindowOf","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","positions","getHTMLElementContentRect","clientWidth","clientHeight","paddings","getPaddings","horizPad","vertPad","boxSizing","vertScrollbar","horizScrollbar","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","getBBox","getContentRect","bbox","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","broadcastRect","ResizeObserverEntry","rectInit","Constr","contentRect","DOMRectReadOnly","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","callback_","controller_","callbackCtx_","Element","observations","unobserve","clearActive","this$1","observation","WeakMap","ResizeObserver","method","_target","_observer","_height","_width","_scrollHeight","_scrollWidth","_measure","scrollWidth","_isHeightChange","_isWidthChange","onResize","watchHeight","watchWidth","_handleRef","container","_getTarget","ResizeObserverAPI","elRef","nextTarget","t","getElementById","aria-hidden","Layover","_lastXFix","_lastYFix","_initialX","_initialY","_initialTop","_initialLeft","_toggle","visible","sameWidth","centered","simplified","anchor","_getAnchor","_handleOutsideClick","_contextRect","_dialog","_manageFixedToListener","_inFixed","_init","_reset","visibileDiff","childStyle","prevProps","closeOnOutsideClick","prevEnabled","_clickTimeout","_manageWindowResizeListener","belowAnchor","animationPosition","block","fullWidth","fillViewportWidth","fillViewportHeight","onClose","repositionOnScroll","repositionOnResize","toggleQuery","yThreshold","xThreshold","onContextMenu","preventContextMenu","minLeft","minRight","minBottom","childId","_fixateChild","_handleResize","_setContainer","_handleContextMenu","_isCenteredDialog","_this4","_createStyles","dialogRect","_handleScroll","_windowResizeTimeout","_handleWindowResize","maxHeight","_initialWinX","_initialWinY","fixed","offsetParent","_initialFix","clone","cloneNode","webkitTransform","transfrom","webkitTransition","vp","childHeight","childWidth","toggleHeight","toggleWidth","addToTop","addToLeft","multiplier","_childComponent","_positionChild","_ticking","_handleTick","_attemptFix","verticalThreshold","horizontalThreshold","isOutOfBounds","winX","winY","toggleTop","innerHeight","newTop","scrollEl","Menu","_handleClose","close","_isIgnoreTarget","_isCloseTarget","persist","cascading","cascadingAnchor","listStyle","listClassName","listProps","listZDepth","listInline","listHeightRestricted","contained","isOpen","propFixedTo","listId","autoclose","limitHeight","expanderIconChildren","expanderIconClassName","simple","below","listVisible","_warned","anchorShape","ListItem","_tile","_setTile","tile","_tileNode","itemRef","_handleMouseOver","onMouseOver","onMouseLeave","onTouchStart","_touched","touchedAt","onTouchEnd","time","_touchTimeout","defined","initiallyOpen","defaultOpen","defaultVisible","tileStyle","tileClassName","contentStyle","contentClassName","leftNodeStyle","leftNodeClassName","rightNodeStyle","rightNodeClassName","nestedListStyle","nestedListClassName","nestedListHeightRestricted","leftIcon","leftAvatar","rightIcon","rightAvatar","nestedItems","prependNested","activeBoxStyle","activeBoxClassName","animateNestedItems","expanderIcon","expanderLeft","ItemComponent","itemComponent","itemProps","tileProps","passPropsToItem","ariaSize","ariaPos","cascadingId","leftNode","rightNode","nestedList","collapser","icond","avatard","sharedProps","isValued","addSuffix","str","trim","FloatingLabel","label","htmlFor","floating","iconOffset","customSize","Message","TextFieldMessage","errorText","helpText","_isMessageVisible","_anyChanges","p1","p2","changed","helpOnFocus","maxLength","currentLength","isMessageVisible","message","PasswordButton","keyboardFocus","_button","passwordVisible","TextArea","_field","getValue","_calcRowHeight","rows","rowHeight","_setMask","mask","_mask","_setField","_rowHeight","_syncHeightWithMask","maxRows","_handleChange","onChange","defaultValue","InputField","inlineIndicator","multiline","Divider","vertical","TextFieldDivider","lineDirection","DEFAULT_TEXT_FIELD_SIZE","WILL_RECEIVE_KEYS","DID_UPDATE_KEYS","TextField","_getLength","_canvas","resize","passwordInitiallyVisible","_calcWidth","nextState","_isErrored","_focus","stateful","dir","iconEl","inputStyle","inputClassName","required","leftIconStateful","rightIconStateful","passwordIcon","paddedBlock","onDoubleClick","onTouchMove","onTouchCancel","onMouseDown","onMouseUp","toolbar","passwordIconChildren","passwordIconClassName","placeholder","onFocus","adjustMinWidth","floatingLabel","_cloneIcon","_togglePasswordField","rightIconed","md-text-field--toolbar","divider","_handleContainerClick","div","_calcIconWidth","marginLeft","from","indicator","iconContainer","first","second","third","ceil","disableShrink","Autocomplete","dataLabel","matches","dataDiff","menuFn","tabbed","suggestionStyle","textFieldStyle","textFieldClassName","inlineSuggestionStyle","inlineSuggestionClassName","menuId","simplifiedMenu","total","dataValue","deleteKeys","clearOnAutocomplete","autocompleteWithLabel","findInlineSuggestion","inlineSuggestionPadding","onAutocomplete","onMenuOpen","onMenuClose","focusInputOnAutocomplete","autocomplete","_handleTextFieldKeyDown","_toggleMenu","suggestion","_setMenu","_close","_handleMenuKeyDown","_mapToListItem","fuzzyFilter","haystack","needle","reg","hay","isValidElement","caseInsensitiveFilter","filterText","findIgnoreCase","hayStr","event","_findInlineSuggestions","_handleInlineAutocomplete","suggestionIndex","_focusSuggestion","_menu","items","querySelectorAll","_handleItemClick","m","negative","matchIndex","l","item","datum","dataum","substring","menu","Avatar","color","_setRandomColor","suffixes","random","src","alt","content","_getColor","Badge","single","_isSingleChild","_normalizeCount","badgeContent","count","Number","isNaN","badgeStyle","badgeClassName","defaultTheme","circular","badgeId","invisibleOnZero","useCircular","aria-describedby","badge","isReact16","createPortal","Portal","_portal","_applyStyles","_renderPortal","renderNode","lastChild","insertBefore","firstChild","_removePortal","forceUpdate","onOpen","isBetween","num","Paper","zDepth","raiseOnHover","BottomNav","onNavChange","colored","iconChildren","labelClassName","md-bottom-nav-label--shifting-inactive","labelEl","BottomNavigation","initiallyVisible","activeIndex","defaultActiveIndex","dynamic","_addTouchEvents","_removeTouchEvents","onVisibilityChange","portalVisible","actions","portal","links","dynamicThreshold","containerStyle","containerClassName","navigation","action","_handleNavChange","_animateIn","_animateOut","_pageY","_scrolling","touchY","passedThreshold","getBtnStyles","flat","raised","swapTheming","mini","fixedPosition","flatStyles","raisedStyles","textTheming","backgroundTheming","IconSeparator","labelStyle","iconBefore","labelProps","Tooltip","entering","TooltipContainer","_delayedTimeout","_unlinkTarget","_showTooltip","_hideTooltip","_setTarget","_stopContextMenu","tooltipStyle","tooltipClassName","tooltip","tooltipLabel","tooltipDelay","tooltipPosition","tooltipContainerStyle","tooltipContainerClassName","tooltipTransitionEnterTimeout","tooltipTransitionLeaveTimeout","Button","_blur","_attemptedBlur","_handleMouseEnter","onMouseEnter","_animateForSnackbar","_snackbarTimeout","snackbar","snackbarType","href","forceIconSize","forceIconFontSize","svg","iconBtnType","visibleChildren","resolvedIconChildren","injectTooltip","Card","raise","_handleExpandClick","onExpanderClick","initiallyExpanded","defaultExpanded","expanderTooltipLabel","expanderTooltipDelay","expanderTooltipPosition","isExpanded","tableCard","expanderIndex","parts","isExpander","expander","expandable","CardExpander","onExpandClick","CardActions","stacked","CardTitleBlock","subtitle","title","CardTitle","avatarClassName","CardText","Chip","removable","rotateIcon","removeIconChildren","removeIconClassName","chipIconCN","DataTable","defaultSelectedRows","indeterminate","_allSelected","_removed","_initial","checkedIcon","uncheckedIcon","indeterminateIcon","plain","baseId","selectableRows","checkboxHeaderLabel","checkboxLabelTemplate","fixedHeader","fixedFooter","checkedIconChildren","checkedIconClassName","uncheckedIconChildren","uncheckedIconClassName","indeterminateIconChildren","indeterminateIconClassName","allSelected","selectedRows","_toggleSelectedRow","_createCheckbox","_removeCheckbox","all","checked","tableStyle","tableClassName","fixedWrapperStyle","fixedWrapperClassName","fixedScrollWrapperStyle","fixedScrollWrapperClassName","responsive","fixedDividers","fixedHeight","fixedWidth","headerHeight","footerHeight","onRowToggle","table","_setTable","borderTop","borderBot","header","footer","_table","selected","version","row","selectedCount","TableHeader","headerContextTypes","TableBody","uncontrolled","rowContextTypes","DISABLED_INTERACTIONS","SwitchThumb","AccessibleFakeInkedButton","SwitchTrack","SelectionControl","_setInput","input","_input","_setControl","control","_control","_getIcon","charAt","defaultChecked","labelBefore","ariaLabel","ariaLabelledBy","checkedCheckboxIcon","uncheckedCheckboxIcon","checkedRadioIcon","uncheckedRadioIcon","__superSecreteProp","checkedRadioIconChildren","checkedRadioIconClassName","uncheckedRadioIconChildren","uncheckedRadioIconClassName","checkedCheckboxIconChildren","checkedCheckboxIconClassName","uncheckedCheckboxIconChildren","uncheckedCheckboxIconClassName","isSwitch","findTable","TableCheckbox","_td","_header","_handleMount","td","rowIndex","createCheckbox","removeCheckbox","rowId","baseName","Cell","TableRow","_ignoreHoverState","_handleCheckboxClick","_row","onCheckboxClick","toggleSelectedRow","_setRow","selectable","autoAdjust","checkbox","columns","col","adjusted","CELL_SCOPE","TableColumn","fixedStyle","fixedClassName","numeric","sorted","sortIcon","selectColumnHeader","grow","sortIconBefore","sortIconChildren","scope","cellIndex","sortIconClassName","sortable","displayedChildren","ariaSort","baseClassNames","mergedClassNames","SelectFieldInput","_transitionNewValue","transitionTime","activeLabel","dropdownIcon","visibleLabel","labelActive","SelectFieldToggle","ARIA_ACTIVE","SelectField","_getActive","_scrollActiveIntoView","_items","_activeItem","_deleteKeys","_getDeleteKeys","itemLabel","itemValue","menuItems","preferLabel","key1","key2","toggleStyle","toggleClassName","menuTransitionName","menuTransitionEnterTimeout","menuTransitionLeaveTimeout","getItemProps","stripActiveItem","keyboardMatchingTimeout","onMenuToggle","stretchList","menuStyle","menuClassName","noAutoAdjust","useSameWidth","_reduceItems","_getActiveItemLabel","_getItemPart","found","_attemptItemFocus","_setListItem","listRef","offsetTop","dataset","_selectItem","dataIndex","up","down","_advanceFocus","_selectItemByLetter","decrement","valued","itemStripped","lastIndex","nextIndex","charCode","isLetter","isKeypad","_matchingTimeout","lastSearch","_selectFirstMatch","search","activeItem","objectType","getProps","TableFooter","TablePagination","controlledPage","page","controlledRowsPerPage","rowsPerPage","defaultRowsPerPage","defaultPage","rpp","p","start","controlsMarginLeft","selectFieldStyle","selectFieldClassName","selectFieldInputStyle","selectFieldInputClassName","rowsPerPageLabel","rowsPerPageItems","incrementIcon","decrementIcon","incrementIconChildren","incrementIconClassName","decrementIconChildren","decrementIconClassName","incrementId","decrementId","onPagination","pagination","_throttledPosition","colSpan","_setControls","_setRowsPerPage","_decrement","_increment","controls","_controls","_position","newStart","nextPage","FOCUSABLE_QUERY","tag","FocusContainer","_enableFocusTrap","_disableFocusTrap","_attemptInitialFocus","initialFocus","toFocus","_focusables","_containFocus","containerRef","focusOnMount","containFocus","_shifted","additionalKeys","additionalFocusKeys","focusables","DialogTitle","FOOTER_PADDING","DialogFooter","maxWidth","_generateActions","_toElement","remaining","propStacked","stackedDefined","DIFF_KEYS","Dialog","_renderNode","_getStyles","contentStyles","onLeave","contentPadded","titleStyle","titleClassName","footerStyle","footerClassName","Content","contentComponent","contentProps","fullPage","autopadContent","paddedContent","autosizeContent","stackedActions","containerX","containerY","labelledBy","titleId","padDefined","dialogChildren","_setContent","_handleContentResize","_setRenderNode","dialog","_content","totalHeight","currentHeight","EditDialog","dialogStyle","dialogClassName","dialogContentStyle","dialogContentClassName","textFieldId","large","dialogZDepth","findFixedTo","EditDialogColumn","_makeActions","_column","_fixedTo","okLabel","okPrimary","okSecondary","okProps","cancelLabel","cancelPrimary","cancelSecondary","cancelProps","layoverStyle","layoverClassName","inlineIcon","simplifiedDialog","noIcon","inlineIconChildren","inlineIconClassName","dialogId","onOkClick","onCancelClick","okOnOutsideClick","scrollIntoView","scrollIntoViewPadding","visibleOnFocus","scrollThreshold","enforceMinWidth","inlineEditIcon","md-edit-dialog__blocked-field","dialogLabel","_handleOpen","_handleCancel","_handleOk","_skipNextOpen","offsetLeft","cancelValue","onOutsideClick","withTableFixes","isIndexed","column","SelectFieldColumn","wrapperStyle","wrapperClassName","mapToListParts","remainingProps","DropdownMenu","propChildren","MenuButton","buttonId","buttonChildren","onMenuClick","onMenuMouseDown","onMenuMouseUp","onMenuMouseEnter","onMenuMouseMove","onMenuMouseLeave","onMenuTouchStart","onMenuTouchMove","onMenuTouchCancel","onMenuTouchEnd","onMenuFocus","onMenuBlur","onMenuKeyDown","onMenuKeyUp","toggleChildren","MenuButtonColumn","DropdownMenuColumn","TableCardHeader","animating","nVisible","noAdjust","noClone","contextualTitleId","contextualChildren","noActionsAdjust","noChildrenAdjust","noLeftChildrenClone","leftChildren","contextualTitle","_cloneCellRight","_cloneLeftChildren","contextualHeader","mergedStyles","overflow","toggleScroll","scrollable","selector","queryable","scrollTo","DialogContainer","dialogVisible","defaultVisibleTransitionable","_mountDialog","_pageX","_inTimeout","_activeElement","_mountPortal","closeOnEsc","escapable","modal","prevEscapable","_handleEscClose","propVisible","onShow","onHide","disableScrollLocking","actionLeft","actionRight","_handleDialogMounting","_unmountPortal","Overlay","isInPortal","DrawerTypes","FULL_HEIGHT","CLIPPED","FLOATING","PERSISTENT","PERSISTENT_MINI","TEMPORARY","TEMPORARY_MINI","isTemporary","isPermanent","isMini","Drawer","defaultMedia","overlay","overlayActive","desktop","drawerActive","mobileMinWidth","tabletMinWidth","desktopMinWidth","mobileType","tabletType","desktopType","constantType","mobile","tablet","matchesMedia","media","matchMedia","_updateType","_updateMedia","_animate","_closeTimeout","navStyle","navClassName","navItems","clickableDesktopOverlay","overlayStyle","overlayClassName","navItemsId","onMediaTypeChange","autocloseAfterInk","onVisibilityToggle","closeOnNavItemClick","temporary","permanent","_setNavigation","_handleNavClick","overlayVisible","drawer","_closeDrawer","getCurrentMedia","diffType","diffMedia","prevVisible","_navigation","PanelContent","onSave","onCancel","saveProps","saveType","saveLabel","savePrimary","saveSecondary","cancelType","footerChildren","actionFooter","SINGLE_LINE_HEIGHT","ExpansionPanel","_determineIfTwoLine","twoLine","_isExpanded","onExpandToggle","_handleSave","closeOnSave","closeOnCancel","secondaryLabel","expandedSecondaryLabel","focused","columnWidths","headerStyle","headerClassName","overflown","expandIconChildren","expandIconClassName","animateContent","panelLabel","minWidth","ExpansionList","focusedIndex","_determineTabFocus","_calcColumnWidths","panels","_removeFocus","_isOverflown","widths","panel","collapserWidth","paddingLeft","paddingRight","w","_getColumnWidths","maxes","nextWidths","recalculateThreshold","prevState","FileInput","multiple","files","accept","allowDuplicates","labelChildren","FileUpload","abort","file","fileName","reader","_uploadFile","onAbort","onError","onLoad","onLoadStart","onLoadEnd","onProgress","readAs","fr","FileReader","onerror","onabort","onloadstart","onloadend","onload","onprogress","lengthComputable","loaded","readAsDataURL","readAsText","readAsArrayBuffer","_handleUpload","fileList","maxSize","onSizeError","errorFiles","fileReader","bem","base","modifiers","Grid","getClassName","noSpacing","gutter","spacing","align","order","phoneSize","phoneOrder","phoneOffset","phoneHidden","tabletSize","tabletOrder","tabletOffset","tabletHidden","desktopSize","desktopOrder","desktopOffset","desktopHidden","GridList","getClassNames","cellClassName","cellStyle","ListItemControl","primaryAction","secondaryAction","Media","forceAspect","aspectRatio","MediaOverlay","ToolbarTitle","prominent","fullClassName","titleEl","Toolbar","prominentTitle","themed","singleColor","nav","titleMenu","actionsRight","navEl","rightActions","JumpToContentLink","CloseButton","onCloseClick","closeIcon","MiniListItem","toMiniListItem","NavigationDrawer","initialDrawerType","drawerType","mobileDrawerType","tabletDrawerType","desktopDrawerType","constantDrawerType","others","persistentIcon","contentId","jumpLabel","persistentIconChildren","persistentIconClassName","closeIconChildren","closeIconClassName","_toggleVisibility","toolbarStyle","toolbarClassName","drawerStyle","drawerClassName","miniDrawerStyle","miniDrawerClassName","miniNavStyle","miniNavClassName","miniDrawerId","miniNavItemsId","drawerId","drawerTitle","drawerZDepth","drawerChildren","drawerHeaderChildren","drawerTransitionDuration","toolbarId","toolbarTitle","toolbarTitleMenu","toolbarTitleStyle","toolbarTitleClassName","toolbarActions","toolbarProminent","toolbarProminentTitle","toolbarThemeType","toolbarSingleColor","toolbarChildren","toolbarZDepth","extractMini","miniDrawerHeader","miniDrawerChildren","includeDrawerHeader","temporaryIcon","temporaryIconChildren","temporaryIconClassName","menuIconChildren","menuIconClassName","drawerHeader","onDrawerChange","contentActive","persistent","clipped","toolbarRelative","closeButton","miniDrawer","miniList","pMini","_handleVisibility","_handleTypeChange","DrawerType","_msg","mediaState","isValidDate","getLastDay","date","getFullYear","getMonth","addMonth","amount","newMonthDate","getDate","day","setDate","setMonth","addDate","part","addDay","setFullYear","addYear","isSameMonth","d1","d2","bothNullValue","isSameYear","isSameDay","DateTimeFormat","Intl","locales","formatOptions","toLocaleString","PickerControl","DatePickerHeader","_selectYear","changeCalendarMode","_selectCalendar","_getFormattedDate","calendarTempDate","year","weekday","month","calendarMode","stripTime","hours","setHours","toDayOfWeek","dow","getDay","diff","CalendarDate","_setFocus","btn","_setActive","desktopActive","_setInactive","today","fullyActive","CalendarMonth","calendarDate","onCalendarDateClick","minDate","maxDate","firstDayOfWeek","disableWeekEnds","dateClassName","showAllDays","outerDateClassName","disableOuterDates","days","firstDay","lastDay","currentDate","endDate","activeDateTime","todayTime","currentMonth","isMinDateDisabled","isMaxDateDisabled","isWeekendDisabled","isMonthBefore","toCompare","CalendarHeader","_createState","titleFormat","weekdayClassName","weekdayFormat","formatter","dows","onPreviousClick","previousIcon","onNextClick","nextIcon","isPreviousDisabled","isNextDisabled","DatePickerCalendar","Year","_setActiveFocus","md-year--active","YearPicker","_getYearRange","yearsDisplayed","_getFullYear","startYear","endYear","currentYear","years","onCalendarYearClick","DatePicker","displayMode","calendarClassName","yearPickerClassName","calendarDateClassName","calendarOuterDateClassName","calendarTitleClassName","calendarTitleFormat","calendarWeekdayClassName","calendarWeekdayFormat","picker","DatePickerContainer","_getDate","_validateDateRange","defaultCalendarDate","initialCalendarDate","initialCalendarMode","defaultCalendarMode","minEqual","maxEqual","_closeOnEsc","pickerStyle","pickerClassName","pickerHeaderClassName","pickerContentClassName","pickerFooterClassName","animateInline","propNextIcon","propPreviousIcon","previousIconChildren","previousIconClassName","nextIconChildren","nextIconClassName","readOnly","_handleCancelClick","_handleOkClick","_changeCalendarMode","_previousMonth","_nextMonth","_setCalendarTempDate","_setCalendarTempYear","md-pointer--hover","_toggleOpen","_getFormattedValue","userLanguage","language","autoOk","nextDate","nextTemp","formatTime","hour","minute","calcTimeFromPoint","point","center","innerRadius","minutes","hour12","cx","cy","degrees","atan2","PI","sectors","sectorSize","isInCircle","pow","CLOCK_PADDING","ClockTime","onKeyboardFocus","_setTime","_time","_setPosition","radius","timeRadians","outerRadius","sin","cos","ClockHand","coords","_calcCurrentDegrees","invisibleMinute","rotateTransform","ClockFace","_setFace","face","_face","_setPositioning","_center","_left","_top","hoverMode","_enableMouseMoving","_disableMouseMoving","_handleMouseMove","moving","_calcNewTime","onTimeChosen","timePeriod","interval","times","_","clockTime","addHours","getHours","TimePeriods","_setAM","setTempTime","tempTime","_setPM","TimePickerHeader","_setHour","setTimeMode","_setMinute","timeMode","timePeriods","TimePicker","_updateTime","newTime","timePart","isAM","is12","setMinutes","_handleTimeChosen","hoursInt","minutesInt","TimePickerContainer","initialDate","_getTimeParts","initialTimeMode","defaultTimeMode","formatted","separator","_setTimeMode","_setTempTime","_getTextFieldValue","CircularProgress","scale","determinateDashoffset","isDeterminate","circleStyle","svgStyle","rotate","ROATE_DISTANCE","WebkitTransform","MozTransform","accessibilityProps","LinearProgress","progressClassName","progressStyle","query","md-block-centered","SelectionControlGroup","_setGroup","_group","values","dec","inc","radios","_activeIndex","minMaxLoop","radio","groupValue","controlValue","controlStyle","controlClassName","LabelComponent","labelComponent","_isChecked","controlProps","Checkbox","unchecked","Radio","Switch","toggled","defaultToggled","calculateValueDistance","step","distance","decimals","corrector","modded","SliderLabel","updateUnit","unit","toUnit","updated","TrackFill","trackFillWidth","dragging","Thumb","on","off","thumbLeft","discrete","ThumbMask","maskInked","DiscreteValue","valuePrecision","valueStr","toFixed","half","Track","trackFillStyle","trackFillClassName","discreteValueStyle","discreteValueClassName","maskLeaving","thumbStyle","thumbClassName","onThumbFocus","onThumbKeyUp","onThumbKeyDown","tickWidth","discreteTicks","ticks","amt","Slider","_calcDistance","_calcLeft","trackWidth","editable","_dragAdded","_calcTrackWidth","manualIncrement","_blurOnOutsideClick","_focusThumb","addDrag","_handleDragMove","_handleDragEnd","rm","_inkTimeout","_focusTimeout","invalid","cl","trackStyle","trackClassName","inputWidth","onDragChange","discreteInkTransitionTime","stepPrecision","rightChildren","_handleTextFieldChange","_handleDragStart","_setTrack","_isTextField","_updatePosition","_track","isNewValue","_isInTextField","isDiscreteValue","_isValidClassList","track","_handleIncrement","incrementedValue","disableTransition","newValue","_animateDiscreteInk","wait","_thumb","gcc","Snackbar","onDismiss","toast","_fab","_clearTimeout","_handleAutohide","autohide","autohideTimeout","_handleWindowBlur","_eventType","_handleWindowFocus","fab","onAppear","btnProps","CHAINED_TOAST_DELAY","SnackbarContainer","_isMultiline","innerHTML","_initAndToast","_initTimeout","_createLeaveTimer","_leaveTimeout","_createSwapTimer","_swapTimeout","toasts","_dismissTimeout","dismiss","SVGIcon","_getIds","use","labels","desc","descId","titleAttr","xlinkHref","__g","core","__e","that","it","aFunction","isObject","exec","require$$0","is","require$$2","S","valueOf","dP","P","Attributes","anObject","toPrimitive","IE8_DOM_DEFINE","bitmap","createDesc","PROTOTYPE","$export","own","out","IS_FORCED","F","IS_GLOBAL","G","IS_STATIC","IS_PROTO","IS_BIND","B","IS_WRAP","W","expProto","C","virtual","R","hide","U","IS_INCLUDES","cof","IObject","SHARED","store","px","shared","uid","arrayIndexOf","$this","fromIndex","toIObject","toInteger","IE_PROTO","names","$keys","enumBugKeys","$assign","A","Symbol","K","T","toObject","aLen","getSymbols","gOPS","isEnum","pIE","getKeys","_assign2","_assign","KEY","exp","ObjectProto","getPrototypeOf","$getPrototypeOf","fails","$Object","_defineProperty2","_defineProperty","Properties","Empty","createDict","iframeDocument","iframe","display","contentWindow","open","write","lt","dPs","USE_SYMBOL","def","TAG","stat","IteratorPrototype","TO_STRING","ITERATOR","BUGGY","VALUES","returnThis","Base","NAME","DEFAULT","IS_SET","FORCED","setToStringTag","methods","getMethod","kind","proto","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","Iterators","redefine","$at","pos","charCodeAt","iterated","_t","_i","_k","Arguments","TO_STRING_TAG","DOMIterables","Collection","META","setDesc","isExtensible","FREEZE","preventExtensions","setMeta","meta","NEED","fastKey","getWeak","onFreeze","$Symbol","wksExt","hiddenKeys","gOPN","windowNames","getWindowNames","gOPD","getOwnPropertyDescriptor","$GOPD","$DP","gOPNExt","$JSON","JSON","_stringify","stringify","HIDDEN","wks","TO_PRIMITIVE","SymbolRegistry","AllSymbols","OPSymbols","USE_NATIVE","QObject","setter","findChild","setSymbolDesc","DESCRIPTORS","$fails","_create","D","protoDesc","wrap","sym","isSymbol","iterator","$defineProperty","$defineProperties","symbols","enumKeys","$propertyIsEnumerable","E","$getOwnPropertyDescriptor","$getOwnPropertyNames","$getOwnPropertySymbols","IS_OP","$set","require$$3","es6Symbols","wellKnownSymbols","wksDefine","for","keyFor","useSetter","useSimple","replacer","$replacer","require$$5","require$$4","_iterator2","_iterator","_symbol2","_symbol","_typeof","_typeof3","_typeof2","check","test","buggy","_setPrototypeOf2","_setPrototypeOf","_create2","eventName","handler","attachEvent","srcElement","currentTarget","detachEvent","RESISTANCE_COEF","UNCERTAINTY_THRESHOLD","params","startIndex","startX","viewLength","resistance","indexMax","newStartX","_constant2","_constant","displaySameSlide","oldChildren","oldKey","q","_checkIndexBounds","_computeIndex","_getDisplaySameSlide","_mod","_extends3","_extends2","_objectWithoutProperties3","_objectWithoutProperties2","_getPrototypeOf2","_getPrototypeOf","_classCallCheck3","_classCallCheck2","_createClass3","_createClass2","_possibleConstructorReturn3","_possibleConstructorReturn2","_inherits3","_inherits2","getDomTreeShapes","findNativeHandler","_properties2","_on2","_on","_off2","_off","addEventListenerEnhanced","styleInjected","willChange","WebkitFlexShrink","flexShrink","axisProperties","overflowX","x-reverse","overflowY","y-reverse","flexDirection","translate","rotationMatrix","scrollPosition","scrollLength","clientLength","createTransition","easeFunction","applyRotationMatrix","touch","axis","adaptMouse","touches","rootNode","domTreeShapes","hasAttribute","nodeHowClaimedTheScroll","goingForward","areNotAtStart","areNotAtEnd","SwipeableViews","_Component","_ref","_ret","indexLatest","isDragging","isFirstRender","heightLatest","containerNode","ignoreNextScrollEvents","lastX","vx","startY","isSwiping","started","transitionListener","touchMoveListener","activeSlide","indexCurrent","handleSwipeStart","computedStyle","transformValues","rootStyle","tranformNormalized","handleSwipeMove","_this$props","ignoreNativeScroll","onSwitching","dx","dy","_reactSwipeableViewsCore","constant","computeIndex","setIndexCurrent","handleTouchStart","handleSwipeEnd","delta","indexNew","hysteresis","onChangeIndex","handleTransitionEnd","handleTouchEnd","handleMouseDown","handleMouseUp","handleMouseLeave","handleMouseMove","onMouseMove","handleScroll","onScroll","updateHeight","swipeableViews","slideUpdateHeight","injectStyle","animateTransitions","onTransitionEnd","animateHeight","containerStyleProp","disableLazyLoading","enableMouseEvents","slideStyleProp","slideStyle","slideClassName","other","touchEvents","mouseEvents","WebkitTransition","additionalTranstion","WebkitFlexDirection","indexChild","hidden","data-swipeable","_SwipeableViews2","_SwipeableViews","TabPanel","controlledById","TabsContainer","_handleTabChange","tabId","tabControlsId","tabChildren","onTabChange","activeTabIndex","_handleSwipeChange","_resizePanel","activePanel","panelHeight","defaultTabIndex","panelStyle","panelClassName","panelComponent","slideHeightProp","swipeableViewsStyle","swipeableViewsClassName","headerComponent","headerZDepth","labelAndIcon","swipeableViewsProps","tabsEl","tab","controlsId","childrenProps","tabs","prominentToolbar","toolbarProps","baseSlideStyle","TabIndicator","MenuTab","_toggleVisible","tabStyle","tabClassName","overflowAtIndex","TabOverflowButton","MOBILE_TAB_MIN_WIDTH","DESKTOP_TAB_MIN_WIDTH","Tabs","_positionElements","initialRender","overflowMenu","_shouldAlign","_calcPaddingLeft","_calcOverflowIndex","indicatorPosition","_calcIndicatorPosition","allTabs","containerWidth","activeWidth","activeOffset","_mapToOverflowTabProps","tabEl","handleTabChange","_nextIndexes","increment","overflowIndex","visibleAmt","_showNextTabs","_showPreviousTabs","indicatorWidth","prevLabels","alignToKeyline","totalWidth","indicatorVisible","indicatorOffset","activeTabClassName","inactiveTabClassName","overflowMenuLabel","overflowMenuIcon","overflowMenuIconChildren","overflowMenuIconClassName","nextControl","previousControl","Tab","inactiveClassName","Tooltipped","setPosition","targetProps","clonedProps"],"mappings":"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"}