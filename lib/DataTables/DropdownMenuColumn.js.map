{"version":3,"sources":["../../src/js/DataTables/DropdownMenuColumn.js"],"names":["DropdownMenuColumn","props","style","className","menuStyle","menuClassName","header","adjusted","tooltipLabel","tooltipDelay","tooltipPosition","Positions","HorizontalAnchors","VerticalAnchors","propTypes","id","oneOfType","number","string","object","fixedTo","oneOf","repositionOnScroll","bool","repositionOnResize","simplifiedMenu","defaultProps"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;IAEMA,kB;;;;;;;;;;;6BA6GK;AAAA,mBAYH,KAAKC,KAZF;AAAA,UAELC,KAFK,UAELA,KAFK;AAAA,UAGLC,SAHK,UAGLA,SAHK;AAAA,UAILC,SAJK,UAILA,SAJK;AAAA,UAKLC,aALK,UAKLA,aALK;AAAA,UAMLC,MANK,UAMLA,MANK;AAAA,UAOLC,QAPK,UAOLA,QAPK;AAAA,UAQLC,YARK,UAQLA,YARK;AAAA,UASLC,YATK,UASLA,YATK;AAAA,UAULC,eAVK,UAULA,eAVK;AAAA,UAWFT,KAXE;;AAaP,aACE;AAAA;AAAA;AACE,iBAAOC,KADT;AAEE,qBAAWC,SAFb;AAGE,kBAAQG,MAHV;AAIE,oBAAUC,QAJZ;AAKE,wBAAcC,YALhB;AAME,wBAAcC,YANhB;AAOE,2BAAiBC;AAPnB;AASE,2EAAkBT,KAAlB,IAAyB,OAAOG,SAAhC,EAA2C,WAAWC,aAAtD;AATF,OADF;AAaD;;;;;;AAvIGL,kB,CACGW,S,GAAY,uBAAaA,S;AAD5BX,kB,CAEGY,iB,GAAoB,uBAAaA,iB;AAFpCZ,kB,CAGGa,e,GAAkB,uBAAaA,e;AAHlCb,kB,CAIGc,S,GAAY;AACjB;;;;AAIAC,MAAI,oBAAUC,SAAV,CAAoB,CACtB,oBAAUC,MADY,EAEtB,oBAAUC,MAFY,CAApB,CALa;;AAUjB;;;AAGAhB,SAAO,oBAAUiB,MAbA;;AAejB;;;AAGAhB,aAAW,oBAAUe,MAlBJ;;AAoBjB;;;;;AAKAd,aAAW,oBAAUe,MAzBJ;;AA2BjB;;;;;AAKAd,iBAAe,oBAAUa,MAhCR;;AAkCjB;;;;;;;AAOAE,iCAzCiB;;AA2CjB;;;;;AAKAZ,gBAAc,oBAAUU,MAhDP;;AAkDjB;;;;;AAKAT,gBAAc,oBAAUQ,MAvDP;;AAyDjB;;;;;AAKAP,mBAAiB,oBAAUW,KAAV,CAAgB,CAAC,KAAD,EAAQ,OAAR,EAAiB,QAAjB,EAA2B,MAA3B,CAAhB,CA9DA;;AAgEjB;;;;;;AAMAC,sBAAoB,oBAAUC,IAtEb;;AAwEjB;;;;;;AAMAC,sBAAoB,oBAAUD,IA9Eb;;AAgFjB;;;;;;;AAOAE,kBAAgB,oBAAUF,IAvFT;;AAyFjB;;;;AAIAjB,UAAQ,oBAAUiB,IA7FD;;AA+FjB;;;AAGAhB,YAAU,oBAAUgB;AAlGH,C;AAJfvB,kB,CAyGG0B,Y,GAAe;AACpBD,kBAAgB;AADI,C;kBAiCT,8BAAezB,kBAAf,EAAmC,aAAnC,C","file":"DropdownMenuColumn.js","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport fixedToShape from '../Helpers/fixedToShape';\r\nimport withTableFixes from './withTableFixes';\r\nimport DropdownMenu from '../Menus/DropdownMenu';\r\nimport TableColumn from './TableColumn';\r\n\r\nclass DropdownMenuColumn extends PureComponent {\r\n  static Positions = DropdownMenu.Positions;\r\n  static HorizontalAnchors = DropdownMenu.HorizontalAnchors;\r\n  static VerticalAnchors = DropdownMenu.VerticalAnchors;\r\n  static propTypes = {\r\n    /**\r\n     * An optional id to use for the menu button in the column. If this is omitted, it's value will be\r\n     * `${rowId}-${cellIndex}-menu-button`\r\n     */\r\n    id: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * This is the optional style to apply to the `TableColumn`.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * This is the optional className to apply to the `TableColumn`.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * The is the optional style to apply to the menu button's menu container.\r\n     *\r\n     * @see {@link Menus/DropdownMenu#style}\r\n     */\r\n    menuStyle: PropTypes.object,\r\n\r\n    /**\r\n     * The is the optional class name to apply to the menu button's menu container.\r\n     *\r\n     * @see {@link Menus/DropdownMenu#className}\r\n     */\r\n    menuClassName: PropTypes.string,\r\n\r\n    /**\r\n     * This is how the select field should be fixed within the table. When this is omitted,\r\n     * it will automatically use the responsive table as the fixture so that the select field\r\n     * will close/adjust itself to the scrolling of the table.\r\n     *\r\n     * @see {@link Helpers/Layover#fixedTo}\r\n     */\r\n    fixedTo: fixedToShape,\r\n\r\n    /**\r\n     * The optional tooltip to render on hover.\r\n     *\r\n     * @see {@link DataTables/TableColumn#tooltipLabel}\r\n     */\r\n    tooltipLabel: PropTypes.string,\r\n\r\n    /**\r\n     * An optional delay to apply to the tooltip before it appears.\r\n     *\r\n     * @see {@link DataTables/TableColumn#tooltipDelay}\r\n     */\r\n    tooltipDelay: PropTypes.number,\r\n\r\n    /**\r\n     * The position of the tooltip.\r\n     *\r\n     * @see {@link DataTables/TableColumn#tooltipPosition}\r\n     */\r\n    tooltipPosition: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\r\n\r\n    /**\r\n     * Boolean if the menu should automatically try to reposition itself to stay within\r\n     * the viewport when the `fixedTo` element scrolls.\r\n     *\r\n     * @see {@link Helpers/Layover#repositionOnScroll}\r\n     */\r\n    repositionOnScroll: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the menu should automatically try to reposition itself to stay within\r\n     * the viewport when the window resizes.\r\n     *\r\n     * @see {@link Helpers/Layover#repositionOnResize}\r\n     */\r\n    repositionOnResize: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the menu logic should be simplified without any viewport logic and position\r\n     * based on the relative position of the menu. This will most like require some additional\r\n     * styles applied to the menu.\r\n     *\r\n     * @see {@link Helpers/Layover#simplified}\r\n     */\r\n    simplifiedMenu: PropTypes.bool,\r\n\r\n    /**\r\n     * This is injected by the `TableRow` component.\r\n     * @access private\r\n     */\r\n    header: PropTypes.bool,\r\n\r\n    /**\r\n     * @access private\r\n     */\r\n    adjusted: PropTypes.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    simplifiedMenu: false,\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      style,\r\n      className,\r\n      menuStyle,\r\n      menuClassName,\r\n      header,\r\n      adjusted,\r\n      tooltipLabel,\r\n      tooltipDelay,\r\n      tooltipPosition,\r\n      ...props\r\n    } = this.props;\r\n    return (\r\n      <TableColumn\r\n        style={style}\r\n        className={className}\r\n        header={header}\r\n        adjusted={adjusted}\r\n        tooltipLabel={tooltipLabel}\r\n        tooltipDelay={tooltipDelay}\r\n        tooltipPosition={tooltipPosition}\r\n      >\r\n        <DropdownMenu {...props} style={menuStyle} className={menuClassName} />\r\n      </TableColumn>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTableFixes(DropdownMenuColumn, 'menu-button');\r\n"]}