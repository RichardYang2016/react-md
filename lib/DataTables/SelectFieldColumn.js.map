{"version":3,"sources":["../../src/js/DataTables/SelectFieldColumn.js"],"names":["SelectFieldColumn","props","style","className","menuStyle","menuClassName","header","tooltipLabel","tooltipDelay","tooltipPosition","adjusted","wrapperStyle","wrapperClassName","VerticalAnchors","HorizontalAnchors","Positions","propTypes","id","oneOfType","number","string","object","fixedTo","fullWidth","bool","position","oneOf","repositionOnScroll","repositionOnResize","simplifiedMenu","defaultProps","BELOW"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;AAEA;;;;;;;IAOMA,iB;;;;;;;;;;;6BAgIK;AAAA,mBAkBH,KAAKC,KAlBF;AAAA,UAELC,KAFK,UAELA,KAFK;AAAA,UAGLC,SAHK,UAGLA,SAHK;AAAA,UAILC,SAJK,UAILA,SAJK;AAAA,UAKLC,aALK,UAKLA,aALK;AAAA,UAMLC,MANK,UAMLA,MANK;AAAA,UAOLC,YAPK,UAOLA,YAPK;AAAA,UAQLC,YARK,UAQLA,YARK;AAAA,UASLC,eATK,UASLA,eATK;AAAA,UAWLC,QAXK,UAWLA,QAXK;AAAA,UAcLC,YAdK,UAcLA,YAdK;AAAA,UAeLC,gBAfK,UAeLA,gBAfK;AAAA,UAiBFX,KAjBE;;AAoBP,aACE;AAAA;AAAA;AACE,kBAAQK,MADV;AAEE,iBAAOJ,KAFT;AAGE,qBAAW,0BAAG,wBAAH,EAA6BC,SAA7B,CAHb;AAIE,oBAAU,KAJZ;AAKE,wBAAcI,YALhB;AAME,wBAAcC,YANhB;AAOE,2BAAiBC;AAPnB;AASE,0EAAiBR,KAAjB,IAAwB,OAAOG,SAA/B,EAA0C,WAAWC,aAArD;AATF,OADF;AAaD;;;;;;AAjKGL,iB,CACGa,e,GAAkB,sBAAYA,e;AADjCb,iB,CAEGc,iB,GAAoB,sBAAYA,iB;AAFnCd,iB,CAGGe,S,GAAY,sBAAYA,S;AAH3Bf,iB,CAIGgB,S,GAAY;AACjB;;;;AAIAC,MAAI,oBAAUC,SAAV,CAAoB,CACtB,oBAAUC,MADY,EAEtB,oBAAUC,MAFY,CAApB,CALa;;AAUjB;;;AAGAlB,SAAO,oBAAUmB,MAbA;;AAejB;;;AAGAlB,aAAW,oBAAUiB,MAlBJ;;AAoBjB;;;;;AAKAhB,aAAW,oBAAUiB,MAzBJ;;AA2BjB;;;;;AAKAhB,iBAAe,oBAAUe,MAhCR;;AAkCjB;;;;;;;AAOAE,iCAzCiB;;AA2CjB;;;AAGAC,aAAW,oBAAUC,IA9CJ;;AAgDjB;;;;;AAKAC,mCArDiB;;AAuDjB;;;;AAIAnB,UAAQ,oBAAUkB,IA3DD;;AA6DjB;;;AAGAd,YAAU,oBAAUc,IAhEH;;AAkEjB;;;;;AAKAjB,gBAAc,oBAAUa,MAvEP;;AAyEjB;;;;;AAKAZ,gBAAc,oBAAUW,MA9EP;;AAgFjB;;;;;AAKAV,mBAAiB,oBAAUiB,KAAV,CAAgB,CAAC,KAAD,EAAQ,OAAR,EAAiB,QAAjB,EAA2B,MAA3B,CAAhB,CArFA;;AAuFjB;;;;;;AAMAC,sBAAoB,oBAAUH,IA7Fb;;AA+FjB;;;;;;AAMAI,sBAAoB,oBAAUJ,IArGb;;AAuGjB;;;;;;;AAOAK,kBAAgB,oBAAUL,IA9GT;;AAgHjBb,gBAAc,0BAAW,oBAAUU,MAArB,EAA6B,8BAA7B,CAhHG;AAiHjBT,oBAAkB,0BAAW,oBAAUQ,MAArB,EAA6B,8BAA7B;AAjHD,C;AAJfpB,iB,CAwHG8B,Y,GAAe;AACpBL,YAAUzB,kBAAkBe,SAAlB,CAA4BgB,KADlB;AAEpBR,aAAW,IAFS;AAGpBI,sBAAoB,IAHA;AAIpBC,sBAAoB,KAJA;AAKpBC,kBAAgB;AALI,C;kBA4CT,8BAAe7B,iBAAf,EAAkC,cAAlC,C","file":"SelectFieldColumn.js","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport deprecated from 'react-prop-types/lib/deprecated';\r\n\r\nimport fixedToShape from '../Helpers/fixedToShape';\r\nimport positionShape from '../Helpers/positionShape';\r\nimport SelectField from '../SelectFields/SelectField';\r\nimport withTableFixes from './withTableFixes';\r\nimport TableColumn from './TableColumn';\r\n\r\n/**\r\n * The `SelectFieldColumn` component is just a simple wrapper between a `SelectField` and\r\n * the `TableColumn` components.\r\n *\r\n * All props that are on the `SelectField` are also available here (except the naming of style or className).\r\n * See the [SelectField](/components/select-fields?tab=1#select-field-proptypes) for remaining prop descriptions.\r\n */\r\nclass SelectFieldColumn extends PureComponent {\r\n  static VerticalAnchors = SelectField.VerticalAnchors;\r\n  static HorizontalAnchors = SelectField.HorizontalAnchors;\r\n  static Positions = SelectField.Positions;\r\n  static propTypes = {\r\n    /**\r\n     * An optional id to use for the select field in the column. If this is omitted, it's value will be\r\n     * `${rowId}-${cellIndex}-select-field`\r\n     */\r\n    id: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * This is the optional style to apply to the `TableColumn`.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * This is the optional className to apply to the `TableColumn`.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * The is the optional style to apply to the select field's menu container.\r\n     *\r\n     * @see {@link SelectFields/SelectField#style}\r\n     */\r\n    menuStyle: PropTypes.object,\r\n\r\n    /**\r\n     * The is the optional class name to apply to the select field's menu container.\r\n     *\r\n     * @see {@link SelectFields/SelectField#className}\r\n     */\r\n    menuClassName: PropTypes.string,\r\n\r\n    /**\r\n     * This is how the select field should be fixed within the table. When this is omitted,\r\n     * it will automatically use the responsive table as the fixture so that the select field\r\n     * will close/adjust itself to the scrolling of the table.\r\n     *\r\n     * @see {@link Helpers/Layover#fixedTo}\r\n     */\r\n    fixedTo: fixedToShape,\r\n\r\n    /**\r\n     * Boolean if the select field should span the entire width of the column.\r\n     */\r\n    fullWidth: PropTypes.bool,\r\n\r\n    /**\r\n     * The position for the select field.\r\n     *\r\n     * @see {@link SelectFields/SelectField#position}\r\n     */\r\n    position: positionShape,\r\n\r\n    /**\r\n     * This is injected by the `TableRow` component.\r\n     * @access private\r\n     */\r\n    header: PropTypes.bool,\r\n\r\n    /**\r\n     * @access private\r\n     */\r\n    adjusted: PropTypes.bool,\r\n\r\n    /**\r\n     * The optional tooltip to render on hover.\r\n     *\r\n     * @see {@link DataTables/TableColumn#tooltipLabel}\r\n     */\r\n    tooltipLabel: PropTypes.string,\r\n\r\n    /**\r\n     * An optional delay to apply to the tooltip before it appears.\r\n     *\r\n     * @see {@link DataTables/TableColumn#tooltipDelay}\r\n     */\r\n    tooltipDelay: PropTypes.number,\r\n\r\n    /**\r\n     * The position of the tooltip.\r\n     *\r\n     * @see {@link DataTables/TableColumn#tooltipPosition}\r\n     */\r\n    tooltipPosition: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\r\n\r\n    /**\r\n     * Boolean if the menu should automatically try to reposition itself to stay within\r\n     * the viewport when the `fixedTo` element scrolls.\r\n     *\r\n     * @see {@link Helpers/Layover#repositionOnScroll}\r\n     */\r\n    repositionOnScroll: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the menu should automatically try to reposition itself to stay within\r\n     * the viewport when the window resizes.\r\n     *\r\n     * @see {@link Helpers/Layover#repositionOnResize}\r\n     */\r\n    repositionOnResize: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the menu logic should be simplified without any viewport logic and position\r\n     * based on the relative position of the menu. This will most like require some additional\r\n     * styles applied to the menu.\r\n     *\r\n     * @see {@link Helpers/Layover#simplified}\r\n     */\r\n    simplifiedMenu: PropTypes.bool,\r\n\r\n    wrapperStyle: deprecated(PropTypes.object, 'There is no longer a wrapper'),\r\n    wrapperClassName: deprecated(PropTypes.string, 'There is no longer a wrapper'),\r\n  };\r\n\r\n  static defaultProps = {\r\n    position: SelectFieldColumn.Positions.BELOW,\r\n    fullWidth: true,\r\n    repositionOnScroll: true,\r\n    repositionOnResize: false,\r\n    simplifiedMenu: false,\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      style,\r\n      className,\r\n      menuStyle,\r\n      menuClassName,\r\n      header,\r\n      tooltipLabel,\r\n      tooltipDelay,\r\n      tooltipPosition,\r\n      /* eslint-disable no-unused-vars */\r\n      adjusted,\r\n\r\n      // deprecated\r\n      wrapperStyle,\r\n      wrapperClassName,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n\r\n    return (\r\n      <TableColumn\r\n        header={header}\r\n        style={style}\r\n        className={cn('md-select-field-column', className)}\r\n        adjusted={false}\r\n        tooltipLabel={tooltipLabel}\r\n        tooltipDelay={tooltipDelay}\r\n        tooltipPosition={tooltipPosition}\r\n      >\r\n        <SelectField {...props} style={menuStyle} className={menuClassName} />\r\n      </TableColumn>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTableFixes(SelectFieldColumn, 'select-field');\r\n"]}