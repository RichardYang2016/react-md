{"version":3,"sources":["../../src/js/DataTables/TableCheckbox.js"],"names":["TableCheckbox","_td","_header","_handleMount","td","header","querySelector","index","parentNode","rowIndex","tagName","context","createCheckbox","removeCheckbox","props","checked","checkedIcon","uncheckedIcon","indeterminateIcon","indeterminate","footer","rowId","baseName","checkboxHeaderLabel","checkboxLabelTemplate","Cell","label","replace","content","fixedHeader","fixedFooter","cloneElement","className","undefined","propTypes","number","bool","contextTypes","oneOfType","string","isRequired","element","func"],"mappings":"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","file":"TableCheckbox.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport SelectionControl from '../SelectionControls/SelectionControl';\r\n\r\nimport findTable from './findTable';\r\n\r\nexport default class TableCheckbox extends Component {\r\n  static propTypes = {\r\n    index: PropTypes.number,\r\n    checked: PropTypes.bool,\r\n  };\r\n\r\n  static contextTypes = {\r\n    rowId: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]).isRequired,\r\n    baseName: PropTypes.string.isRequired,\r\n    indeterminate: PropTypes.bool,\r\n    checkedIcon: PropTypes.element,\r\n    uncheckedIcon: PropTypes.element,\r\n    indeterminateIcon: PropTypes.element,\r\n    checkboxHeaderLabel: PropTypes.string.isRequired,\r\n    checkboxLabelTemplate: PropTypes.oneOfType([\r\n      PropTypes.func,\r\n      PropTypes.string,\r\n    ]).isRequired,\r\n    createCheckbox: PropTypes.func.isRequired,\r\n    removeCheckbox: PropTypes.func.isRequired,\r\n    header: PropTypes.bool,\r\n    footer: PropTypes.bool,\r\n    fixedHeader: PropTypes.bool.isRequired,\r\n    fixedFooter: PropTypes.bool.isRequired,\r\n  };\r\n\r\n  _td = null;\r\n  _header = false;\r\n\r\n  _handleMount = (td) => {\r\n    if (td) {\r\n      const header = findTable(td).querySelector('thead');\r\n      const index = td.parentNode.rowIndex - (header ? 1 : 0);\r\n\r\n      if (td.parentNode.parentNode.tagName === 'TBODY') {\r\n        this.context.createCheckbox(index);\r\n      }\r\n      this._td = td;\r\n      this._header = header;\r\n    } else if (this._td) {\r\n      const index = this._td.parentNode.rowIndex;\r\n      this.context.removeCheckbox(index - (this._header ? 1 : 0));\r\n      this._td = null;\r\n      this._header = false;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { checked, index, ...props } = this.props;\r\n    const {\r\n      checkedIcon,\r\n      uncheckedIcon,\r\n      indeterminateIcon,\r\n      indeterminate,\r\n      header,\r\n      footer,\r\n      rowId,\r\n      baseName,\r\n      checkboxHeaderLabel,\r\n      checkboxLabelTemplate,\r\n    } = this.context;\r\n\r\n    const Cell = header ? 'th' : 'td';\r\n    let label;\r\n    if (header) {\r\n      label = checkboxHeaderLabel;\r\n    } else if (typeof checkboxLabelTemplate === 'function') {\r\n      label = checkboxLabelTemplate(index);\r\n    } else {\r\n      label = checkboxLabelTemplate.replace(/{{row}}/g, index);\r\n    }\r\n\r\n    let content = (\r\n      <SelectionControl\r\n        {...props}\r\n        id={rowId}\r\n        name={`${baseName}-checkbox`}\r\n        type=\"checkbox\"\r\n        checked={checked}\r\n        checkedCheckboxIcon={checkedIcon}\r\n        uncheckedCheckboxIcon={header && indeterminate ? indeterminateIcon : uncheckedIcon}\r\n        aria-label={label}\r\n      />\r\n    );\r\n    const fixedHeader = header && this.context.fixedHeader;\r\n    const fixedFooter = footer && this.context.fixedFooter;\r\n\r\n    if (fixedHeader) {\r\n      content = (\r\n        <div\r\n          className={cn('md-table-column__fixed', {\r\n            'md-table-column__fixed--header': fixedHeader,\r\n            'md-table-column__fixed--footer': fixedFooter,\r\n          })}\r\n        >\r\n          {React.cloneElement(content, {\r\n            className: cn({\r\n              'md-table-checkbox--header': header,\r\n              'md-table-checkbox--footer': footer,\r\n            }),\r\n          })}\r\n        </div>\r\n      );\r\n    }\r\n\r\n\r\n    return (\r\n      <Cell\r\n        className={cn('md-table-checkbox', {\r\n          'md-table-column--fixed': fixedHeader,\r\n        })}\r\n        scope={header ? 'col' : undefined}\r\n        ref={this._handleMount}\r\n      >\r\n        {content}\r\n      </Cell>\r\n    );\r\n  }\r\n}\r\n"]}