{"version":3,"sources":["../../src/js/DataTables/withTableFixes.js"],"names":["withTableFixes","ComposedComponent","suffix","state","cellIndex","undefined","_fixedTo","props","fixedTo","id","isIndexed","isFixed","column","table","columns","slice","call","parentNode","querySelectorAll","setState","indexOf","forceUpdate","rowId","context","propid","propFixedTo","propCellIndex","Positions","HorizontalAnchors","VerticalAnchors","displayName","propTypes","oneOfType","number","string","contextTypes"],"mappings":";;;;;;;;;;kBAyBwBA,c;;AAzBxB;;;;AACA;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;AAEA;;;;;;;;;;;;;;;AAee,SAASA,cAAT,CAAwBC,iBAAxB,EAA2CC,MAA3C,EAAmD;AAAA;;AAChE;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA,kNAqBEC,KArBF,GAqBU,EAAEC,WAAWC,SAAb,EArBV,QA+CEC,QA/CF,GA+Ca,IA/Cb;AAAA;;AAAA;AAAA;AAAA,0CAuBsB;AAAA,qBACiB,KAAKC,KADtB;AAAA,YACVH,SADU,UACVA,SADU;AAAA,YACCI,OADD,UACCA,OADD;AAAA,YACUC,EADV,UACUA,EADV;;AAElB,YAAMC,YAAY,CAAC,CAACD,EAAF,IAAQL,cAAc,CAAtB,IAA2B,CAAC,CAACA,SAA/C;AACA,YAAMO,UAAUH,YAAY,IAAZ,IAAoB,CAAC,CAACA,OAAtC;AACA,YAAIE,aAAaC,OAAjB,EAA0B;AACxB;AACA;AACD;;AAED,YAAMC,SAAS,2BAAY,IAAZ,CAAf;AACA,YAAMC,QAAQ,yBAAUD,MAAV,CAAd;AACA,aAAKN,QAAL,GAAgB,2BAAYO,KAAZ,CAAhB;;AAEA;AACA;AACA,YAAI,CAACH,SAAL,EAAgB;AACd,cAAMI,UAAU,GAAGC,KAAH,CAASC,IAAT,CAAcJ,OAAOK,UAAP,CAAkBC,gBAAlB,CAAmC,OAAnC,CAAd,CAAhB;AACA,eAAKC,QAAL,CAAc,EAAEf,WAAWU,QAAQM,OAAR,CAAgBR,MAAhB,CAAb,EAAd,EAFc,CAEyC;AACxD,SAHD,MAGO,IAAI,KAAKN,QAAT,EAAmB;AACxB;AACA,eAAKe,WAAL;AACD;AACF;AA7CH;AAAA;AAAA,+BAiDW;AAAA,YACCC,KADD,GACW,KAAKC,OADhB,CACCD,KADD;;AAAA,sBASH,KAAKf,KATF;AAAA,YAIDiB,MAJC,WAILf,EAJK;AAAA,YAKIgB,WALJ,WAKLjB,OALK;AAAA,YAMMkB,aANN,WAMLtB,SANK;AAAA,YAQFG,KARE;;AAAA,YAWDE,EAXC,GAWM,KAAKF,KAXX,CAWDE,EAXC;;AAYP,YAAMD,UAAU,KAAKF,QAAL,KAAkB,IAAlB,IAA0BmB,WAA1B,GAAwCA,WAAxC,GAAsD,KAAKnB,QAA3E;AACA,YAAMF,YAAY,wBAAS,KAAKG,KAAd,EAAqB,KAAKJ,KAA1B,EAAiC,WAAjC,CAAlB;AACA,YAAI,CAACM,EAAL,EAAS;AACPA,eAAQa,KAAR,SAAiBlB,SAAjB,SAA8BF,MAA9B;AACD;;AAED,eAAO,8BAAC,iBAAD,eAAuBK,KAAvB,IAA8B,IAAIE,EAAlC,EAAsC,SAASD,OAA/C,IAAP;AACD;AApEH;;AAAA;AAAA,kCACSmB,SADT,GACqB1B,kBAAkB0B,SADvC,SAESC,iBAFT,GAE6B3B,kBAAkB2B,iBAF/C,SAGSC,eAHT,GAG2B5B,kBAAkB4B,eAH7C,SAISC,WAJT,GAIuB,8BAAe7B,iBAAf,EAAkC,YAAlC,CAJvB,SAKS8B,SALT,GAKqB;AACjBtB,QAAI,oBAAUuB,SAAV,CAAoB,CACtB,oBAAUC,MADY,EAEtB,oBAAUC,MAFY,CAApB,CADa;AAKjB9B,eAAW,oBAAU6B,MALJ;AAMjBzB;AANiB,GALrB,SAcS2B,YAdT,GAcwB;AACpBb,WAAO,oBAAUU,SAAV,CAAoB,CACzB,oBAAUC,MADe,EAEzB,oBAAUC,MAFe,CAApB;AADa,GAdxB;AAsED","file":"withTableFixes.js","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport { findDOMNode } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport getField from '../utils/getField';\r\nimport fixedToShape from '../Helpers/fixedToShape';\r\nimport findTable from './findTable';\r\nimport findFixedTo from './findFixedTo';\r\nimport getDisplayName from '../utils/StringUtils/getDisplayName';\r\n\r\n/**\r\n * This is a utility HOC to fix the components that use the `Menu` component behind the scenes. This will\r\n * correctly add the `id` and `fixedTo` props if they are omitted from the child component's props.\r\n *\r\n * If the id prop is omitted, it will default to the `${rowId}-${cellIndex}-${suffix}` and when the\r\n * `fixedTo` prop is omitted, it will automatically set it to the responsive table wrapper so that\r\n * it will stay in viewport as expected.\r\n *\r\n * This component also attempts to find the `cellIndex` prop if it is not correctly cloned into the\r\n * component.\r\n *\r\n * @param {function|Class} ComposedComponent - the component to compose with the tooltip functionality.\r\n * @param {String} suffix - the id suffix to apply.\r\n * @return {Class} the ComposedComponent with some fixes applied.\r\n */\r\nexport default function withTableFixes(ComposedComponent, suffix) {\r\n  return class TableFixesComponent extends PureComponent {\r\n    static Positions = ComposedComponent.Positions;\r\n    static HorizontalAnchors = ComposedComponent.HorizontalAnchors;\r\n    static VerticalAnchors = ComposedComponent.VerticalAnchors;\r\n    static displayName = getDisplayName(ComposedComponent, 'TableFixes');\r\n    static propTypes = {\r\n      id: PropTypes.oneOfType([\r\n        PropTypes.number,\r\n        PropTypes.string,\r\n      ]),\r\n      cellIndex: PropTypes.number,\r\n      fixedTo: fixedToShape,\r\n    };\r\n\r\n    static contextTypes = {\r\n      rowId: PropTypes.oneOfType([\r\n        PropTypes.number,\r\n        PropTypes.string,\r\n      ]),\r\n    }\r\n\r\n    state = { cellIndex: undefined };\r\n\r\n    componentDidMount() {\r\n      const { cellIndex, fixedTo, id } = this.props;\r\n      const isIndexed = !!id || cellIndex === 0 || !!cellIndex;\r\n      const isFixed = fixedTo === null || !!fixedTo;\r\n      if (isIndexed && isFixed) {\r\n        // all is good\r\n        return;\r\n      }\r\n\r\n      const column = findDOMNode(this);\r\n      const table = findTable(column);\r\n      this._fixedTo = findFixedTo(table);\r\n\r\n      // If a developer creates their own component to wrap the component that uses a menu, the cellIndex prop\r\n      // might not be defined if they don't pass ...props\r\n      if (!isIndexed) {\r\n        const columns = [].slice.call(column.parentNode.querySelectorAll('th,td'));\r\n        this.setState({ cellIndex: columns.indexOf(column) }); // eslint-disable-line react/no-did-mount-set-state\r\n      } else if (this._fixedTo) {\r\n        // need to apply the _fixedTo for the select field\r\n        this.forceUpdate();\r\n      }\r\n    }\r\n\r\n    _fixedTo = null;\r\n\r\n    render() {\r\n      const { rowId } = this.context;\r\n      const {\r\n        /* eslint-disable no-unused-vars */\r\n        id: propid,\r\n        fixedTo: propFixedTo,\r\n        cellIndex: propCellIndex,\r\n        /* eslint-enable no-unused-vars */\r\n        ...props\r\n      } = this.props;\r\n\r\n      let { id } = this.props;\r\n      const fixedTo = this._fixedTo === null || propFixedTo ? propFixedTo : this._fixedTo;\r\n      const cellIndex = getField(this.props, this.state, 'cellIndex');\r\n      if (!id) {\r\n        id = `${rowId}-${cellIndex}-${suffix}`;\r\n      }\r\n\r\n      return <ComposedComponent {...props} id={id} fixedTo={fixedTo} />;\r\n    }\r\n  };\r\n}\r\n"]}