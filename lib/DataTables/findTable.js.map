{"version":3,"sources":["../../src/js/DataTables/findTable.js"],"names":["findTable","el","table","node","parentNode","classList","contains"],"mappings":";;;;;kBAOwBA,S;AAPxB;;;;;;;AAOe,SAASA,SAAT,CAAmBC,EAAnB,EAAuB;AACpC,MAAIC,cAAJ;AACA,MAAIC,OAAOF,EAAX;AACA,SAAOE,QAAQA,KAAKC,UAApB,EAAgC;AAC9B,QAAID,KAAKE,SAAT,EAAoB;AAClB,UAAIF,KAAKE,SAAL,CAAeC,QAAf,CAAwB,eAAxB,CAAJ,EAA8C;AAC5CJ,gBAAQC,IAAR;AACD,OAFD,MAEO,IAAIA,KAAKE,SAAL,CAAeC,QAAf,CAAwB,2BAAxB,CAAJ,EAA0D;AAC/D,eAAOH,IAAP;AACD,OAFM,MAEA,IAAIA,KAAKE,SAAL,CAAeC,QAAf,CAAwB,+BAAxB,CAAJ,EAA8D;AACnE;AACA,eAAOH,KAAKC,UAAL,CAAgBA,UAAvB;AACD,OAHM,MAGA,IAAIF,KAAJ,EAAW;AAChB,eAAOA,KAAP;AACD;AACF;;AAEDC,WAAOA,KAAKC,UAAZ;AACD;;AAED,SAAO,IAAP;AACD","file":"findTable.js","sourcesContent":["/**\r\n * Attempts fo find the base table component from an element in the table.\r\n * This will either be the wrapper for responsive data tables, or the table element.\r\n *\r\n * @param {Object} el - The element to traverse from\r\n * @param {Object} the table or null.\r\n */\r\nexport default function findTable(el) {\r\n  let table;\r\n  let node = el;\r\n  while (node && node.parentNode) {\r\n    if (node.classList) {\r\n      if (node.classList.contains('md-data-table')) {\r\n        table = node;\r\n      } else if (node.classList.contains('md-data-table--responsive')) {\r\n        return node;\r\n      } else if (node.classList.contains('md-data-table__scroll-wrapper')) {\r\n        // fixed-wrapper then responsive\r\n        return node.parentNode.parentNode;\r\n      } else if (table) {\r\n        return table;\r\n      }\r\n    }\r\n\r\n    node = node.parentNode;\r\n  }\r\n\r\n  return null;\r\n}\r\n"]}