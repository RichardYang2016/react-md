{"version":3,"sources":["../../src/js/DataTables/TableColumn.js"],"names":["CELL_SCOPE","header","scope","noop","TableColumn","props","className","fixedStyle","fixedClassName","numeric","children","sorted","sortIcon","tooltip","selectColumnHeader","adjusted","grow","sortIconBefore","propPlain","plain","propScope","cellIndex","sortIconChildren","sortIconClassName","sortable","context","Component","displayedChildren","ariaSort","icon","Children","only","cloneElement","flipped","fixedHeader","fixedFooter","footer","fixed","baseClassNames","text","hint","mergedClassNames","propTypes","style","object","string","node","bool","element","isRequired","tooltipLabel","tooltipDelay","number","tooltipPosition","oneOf","defaultProps","contextTypes"],"mappings":"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","file":"TableColumn.js","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport deprecated from 'react-prop-types/lib/deprecated';\r\n\r\nimport themeColors from '../utils/themeColors';\r\nimport getCollapserStyles from '../utils/getCollapserStyles';\r\nimport getField from '../utils/getField';\r\nimport injectTooltip from '../Tooltips/injectTooltip';\r\nimport FontIcon from '../FontIcons/FontIcon';\r\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\r\nimport IconSeparator from '../Helpers/IconSeparator';\r\n\r\nconst CELL_SCOPE = {\r\n  header: {\r\n    scope: 'col',\r\n  },\r\n  noop: {},\r\n};\r\n\r\n/**\r\n * A column in a table. This is either the `th` or `td` component.\r\n */\r\nclass TableColumn extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * An optional style to apply.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * The optional className for the table column\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the surrounding div when the DataTable has been\r\n     * set to include a fixed header or a fixed footer.\r\n     */\r\n    fixedStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the surrounding div when the DataTable has been\r\n     * set to include a fixed header or a fixed footer.\r\n     */\r\n    fixedClassName: PropTypes.string,\r\n\r\n    /**\r\n     * The children to display in the column.\r\n     */\r\n    children: PropTypes.node,\r\n\r\n    /**\r\n     * Boolean if the column is currently sorted. If this prop is not `undefined`,\r\n     * it will add the sort icon unto this column. You will also need to use the\r\n     * `onClick` function to toggle the `sorted` prop as well as handling the sorting\r\n     * of data.\r\n     *\r\n     * This value should really only be set in the `TableHeader` component.\r\n     */\r\n    sorted: PropTypes.bool,\r\n\r\n    /**\r\n     * The icon to show when a column is sortable.\r\n     */\r\n    sortIcon: PropTypes.element,\r\n\r\n    /**\r\n     * Boolean if the sortIcon should appear before the text in the column.\r\n     */\r\n    sortIconBefore: PropTypes.bool,\r\n\r\n    /**\r\n     * A boolean if the column has numeric data. It will right-align the data.\r\n     */\r\n    numeric: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the table column should gain the `.md-data-table--adjusted` class name. By default,\r\n     * every column will gain this class name unless it is an `EditDialogColumn`, a `SelectFieldColumn`,\r\n     * or the `grow` prop is enabled.\r\n     */\r\n    adjusted: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the column should expand to fill any remaining width in the container. There should\r\n     * really only be one column with the `grow` prop enabled. In addition, it should really only be\r\n     * applied to one of the columns in the TableHeader.\r\n     */\r\n    grow: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if this column is the `th` for a column of `SelectFieldColumn`. This will apply\r\n     * additional styling to the column to position with the select field.\r\n     */\r\n    selectColumnHeader: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if this is a `th` component. This value **should** be set\r\n     * automatically for you if it is in the `TableHeader` component.\r\n     */\r\n    header: PropTypes.bool.isRequired,\r\n\r\n    /**\r\n     * The optional tooltip to render on hover.\r\n     */\r\n    tooltipLabel: PropTypes.node,\r\n\r\n    /**\r\n     * An optional delay to apply to the tooltip before it appears.\r\n     */\r\n    tooltipDelay: PropTypes.number,\r\n\r\n    /**\r\n     * The position of the tooltip.\r\n     */\r\n    tooltipPosition: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\r\n\r\n    /**\r\n     * The injected tooltip.\r\n     * @access private\r\n     */\r\n    tooltip: PropTypes.node,\r\n\r\n    /**\r\n     * Boolean if the `TableColumn` should gain the `plain` styles. This means that the text\r\n     * in the column can wrap and there is no height limit enforced with some additional padding.\r\n     */\r\n    plain: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional scope to apply to the table column. If omitted, the scope will be set to\r\n     * `'col'` if inside of the `TableHeader` component. This is really only needed for\r\n     * header columns.\r\n     */\r\n    scope: PropTypes.oneOf(['row', 'col']),\r\n\r\n    /**\r\n     * This is injected by the `TableRow` component to help with generating ids\r\n     * @access private\r\n     */\r\n    cellIndex: PropTypes.number,\r\n    sortIconChildren: deprecated(PropTypes.node, 'Use the `sortIcon` prop instead'),\r\n    sortIconClassName: deprecated(PropTypes.string, 'Use the `sortIcon` prop instead'),\r\n  };\r\n\r\n  static defaultProps = {\r\n    header: false,\r\n    adjusted: true,\r\n    sortIcon: <FontIcon>arrow_upward</FontIcon>,\r\n    sortIconBefore: true,\r\n  };\r\n\r\n  static contextTypes = {\r\n    plain: PropTypes.bool,\r\n    footer: PropTypes.bool,\r\n    fixedHeader: PropTypes.bool,\r\n    fixedFooter: PropTypes.bool,\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      className,\r\n      fixedStyle,\r\n      fixedClassName,\r\n      numeric,\r\n      header,\r\n      children,\r\n      sorted,\r\n      sortIcon,\r\n      tooltip,\r\n      selectColumnHeader,\r\n      adjusted,\r\n      grow,\r\n      sortIconBefore,\r\n      /* eslint-disable no-unused-vars */\r\n      plain: propPlain,\r\n      scope: propScope,\r\n      cellIndex,\r\n\r\n      // deprecated\r\n      sortIconChildren,\r\n      sortIconClassName,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n\r\n    const sortable = typeof sorted === 'boolean';\r\n    const plain = getField(this.props, this.context, 'plain');\r\n    const Component = header ? 'th' : 'td';\r\n    const scope = getField(this.props, CELL_SCOPE[header ? 'header' : 'noop'], 'scope');\r\n\r\n    let displayedChildren = children;\r\n    let ariaSort;\r\n    if (sortable) {\r\n      ariaSort = sorted ? 'ascending' : 'descending';\r\n      const icon = React.Children.only(getDeprecatedIcon(sortIconClassName, sortIconChildren, sortIcon));\r\n      displayedChildren = (\r\n        <IconSeparator label={children} iconBefore={sortIconBefore}>\r\n          {React.cloneElement(icon, { className: getCollapserStyles({ flipped: !sorted }, icon.props.className) })}\r\n        </IconSeparator>\r\n      );\r\n    }\r\n\r\n    const fixedHeader = header && this.context.fixedHeader;\r\n    const fixedFooter = this.context.footer && this.context.fixedFooter;\r\n    const fixed = fixedHeader || fixedFooter;\r\n    const baseClassNames = themeColors({ text: !header, hint: header }, {\r\n      'md-table-column--relative': tooltip,\r\n      'md-table-column--select-field': selectColumnHeader,\r\n    });\r\n\r\n    const mergedClassNames = cn({\r\n      'md-table-column--header': header,\r\n      'md-table-column--data': !header && !plain,\r\n      'md-table-column--plain': !header && plain,\r\n      'md-table-column--adjusted': adjusted && !grow && !selectColumnHeader,\r\n      'md-table-column--grow': grow,\r\n      'md-table-column--sortable md-pointer--hover': sortable,\r\n      [baseClassNames]: !fixed,\r\n    }, className);\r\n\r\n    if (fixed) {\r\n      displayedChildren = (\r\n        <div\r\n          className={cn('md-table-column__fixed', {\r\n            'md-table-column__fixed--header': fixedHeader,\r\n            'md-table-column__fixed--footer': fixedFooter,\r\n          })}\r\n        >\r\n          <div\r\n            style={fixedStyle}\r\n            className={cn(baseClassNames, mergedClassNames, 'md-table-column__fixed--flex', {\r\n              'md-table-column__fixed--flex-right': numeric,\r\n            }, fixedClassName)}\r\n          >\r\n            {tooltip}\r\n            {displayedChildren}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Component\r\n        aria-sort={ariaSort}\r\n        {...props}\r\n        scope={scope}\r\n        className={cn('md-table-column', {\r\n          'md-table-column--fixed': fixed,\r\n          'md-text-left': !numeric && !fixed,\r\n          'md-text-right': numeric && !fixed,\r\n        }, mergedClassNames)}\r\n      >\r\n        {!fixedHeader && !fixedFooter && tooltip}\r\n        {displayedChildren}\r\n      </Component>\r\n    );\r\n  }\r\n}\r\n\r\nexport default injectTooltip(TableColumn);\r\n"]}