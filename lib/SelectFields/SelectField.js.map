{"version":3,"sources":["../../src/js/SelectFields/SelectField.js"],"names":["MOBILE_LIST_PADDING","ARIA_ACTIVE","SelectField","props","state","error","active","_getActive","value","defaultValue","listProps","role","ref","_scrollActiveIntoView","match","lastSearch","visible","defaultVisible","_items","_activeItem","_deleteKeys","_getDeleteKeys","_container","_field","querySelector","nextProps","itemLabel","itemValue","deleteKeys","menuItems","setState","item","preferLabel","type","key1","key2","itemProps","keys","concat","Array","isArray","id","style","className","listStyle","listClassName","toggleStyle","toggleClassName","anchor","belowAnchor","fixedTo","position","xThreshold","yThreshold","listZDepth","listInline","listHeightRestricted","block","centered","sameWidth","fullWidth","repositionOnScroll","repositionOnResize","simplifiedMenu","minLeft","minRight","minBottom","fillViewportWidth","fillViewportHeight","menuTransitionName","menuTransitionEnterTimeout","menuTransitionLeaveTimeout","isOpen","propError","propMenuId","menuId","propVisible","getItemProps","onClick","onKeyDown","onVisibilityChange","stripActiveItem","keyboardMatchingTimeout","defaultOpen","initiallyOpen","onMenuToggle","stretchList","menuStyle","menuClassName","floatingLabel","noAutoAdjust","adjustMinWidth","listId","activeLabel","below","Positions","BELOW","useSameWidth","toggle","_toggle","_handleFocus","_handleBlur","_close","_handleKeyDown","_handleClick","reduce","_reduceItems","HorizontalAnchors","VerticalAnchors","propTypes","oneOfType","number","string","name","object","inputStyle","inputClassName","bool","isRequired","func","arrayOf","element","onChange","label","node","placeholder","disabled","required","errorText","helpText","helpOnFocus","onFocus","onBlur","dropdownIcon","toolbar","transitionName","transitionTime","closeOnOutsideClick","lineDirection","oneOf","iconChildren","iconClassName","defaultProps","x","INNER_LEFT","y","OVERLAP","TOP_LEFT","_getActiveItemLabel","v","_getItemPart","parseInt","activeIndex","some","index","found","_attemptItemFocus","focus","_setListItem","push","listRef","list","offsetTop","scrollTop","e","target","contains","dataset","_selectItem","parentNode","dataIndex","dataValue","prevValue","key","which","keyCode","up","down","preventDefault","_advanceFocus","_selectItemByLetter","decrement","valued","itemStripped","lastIndex","length","nextIndex","Math","max","min","charCode","String","fromCharCode","isLetter","isKeypad","letter","_matchingTimeout","clearTimeout","setTimeout","_selectFirstMatch","search","toUpperCase","replace","indexOf","activeItem","items","i","isValidElement","primaryText","stripped","objectType","tabIndex","getProps","Object","assign","field"],"mappings":"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","file":"SelectField.js","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { findDOMNode } from 'react-dom';\r\nimport cn from 'classnames';\r\nimport deprecated from 'react-prop-types/lib/deprecated';\r\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\r\n\r\nimport { UP, DOWN, ESC, TAB, ZERO, NINE, KEYPAD_ZERO, KEYPAD_NINE } from '../constants/keyCodes';\r\nimport omit from '../utils/omit';\r\nimport isValued from '../utils/isValued';\r\nimport getField from '../utils/getField';\r\nimport isBetween from '../utils/NumberUtils/isBetween';\r\nimport handleKeyboardAccessibility from '../utils/EventUtils/handleKeyboardAccessibility';\r\nimport controlled from '../utils/PropTypes/controlled';\r\nimport FontIcon from '../FontIcons/FontIcon';\r\nimport anchorShape from '../Helpers/anchorShape';\r\nimport fixedToShape from '../Helpers/fixedToShape';\r\nimport positionShape from '../Helpers/positionShape';\r\nimport Menu from '../Menus/Menu';\r\nimport ListItem from '../Lists/ListItem';\r\n\r\nimport SelectFieldToggle from './SelectFieldToggle';\r\n\r\nconst MOBILE_LIST_PADDING = 8;\r\nconst ARIA_ACTIVE = 'aria-activedescendant';\r\n\r\nexport default class SelectField extends PureComponent {\r\n  static HorizontalAnchors = Menu.HorizontalAnchors;\r\n  static VerticalAnchors = Menu.VerticalAnchors;\r\n  static Positions = Menu.Positions;\r\n\r\n  static propTypes = {\r\n    /**\r\n     * An id to give the select field. This is required for accessibility.\r\n     */\r\n    id: isRequiredForA11y(PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ])),\r\n\r\n    /**\r\n     * An optional name to give to the select field.\r\n     */\r\n    name: PropTypes.string,\r\n\r\n    /**\r\n     * An optional id to provide to the select field's menu. If this is omitted,\r\n     * it will default to `${id}-menu`.\r\n     */\r\n    menuId: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * An optional id to provide to the select field's list.\r\n     *\r\n     * @see {@link #menuId}\r\n     * @see {@link Menus/Menu#menuId}\r\n     */\r\n    listId: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * An optional style to apply to the select field's container (the menu).\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the select field's container (the menu).\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the menu's list.\r\n     */\r\n    listStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the menu's list.\r\n     */\r\n    listClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the select field's toggle.\r\n     */\r\n    toggleStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the select field's toggle.\r\n     */\r\n    toggleClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the `AccessibleFakeInkedButton` that is the trigger\r\n     * for the select field.\r\n     */\r\n    inputStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the `AccessibleFakeInkedButton` that is the trigger\r\n     * for the select field.\r\n     */\r\n    inputClassName: PropTypes.string,\r\n\r\n    /**\r\n     * Boolean if the select field should be have the menu's list visible by default.\r\n     */\r\n    defaultVisible: PropTypes.bool.isRequired,\r\n\r\n    /**\r\n     * Boolean if the select field should have the menu's list visible. This will make\r\n     * the select field controlled and require the `onVisibilityChange` prop to be defined,\r\n     */\r\n    visible: controlled(PropTypes.bool, 'onVisibilityChange', 'defaultVisible'),\r\n\r\n    /**\r\n     * An optional function to call when the select field's menu has it's visibility changed. The callback\r\n     * will include the next visible state and the event that triggered it.\r\n     */\r\n    onVisibilityChange: PropTypes.func,\r\n\r\n    /**\r\n     * A list of `number`, `string`, or `object` that should be used to create `ListItem`\r\n     * in the menu's list. When it is an `object`, it will use the `itemLabel` prop as the\r\n     * `primaryText` and use the value of `itemValue`.\r\n     *\r\n     * @see {@link #itemLabel}\r\n     * @see {@link #itemValue}\r\n     */\r\n    menuItems: PropTypes.arrayOf(PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n      PropTypes.object,\r\n      PropTypes.element,\r\n    ])).isRequired,\r\n\r\n    /**\r\n     * The amount of time that a list of letters should be used when finding a menu item\r\n     * while typing. Since a user can select items by typing multiple letters in a row,\r\n     * this will be used as the timeout for clearing those letters.\r\n     *\r\n     * For example:\r\n     * - User types `g`\r\n     *\r\n     * Full match is now `'g'`.\r\n     *\r\n     * - User delays 200ms and types `u`\r\n     *\r\n     * Full match is now `'gu'`\r\n     *\r\n     * - User delays 1000ms and types `a`.\r\n     *\r\n     * Full match is now `'a'`\r\n     */\r\n    keyboardMatchingTimeout: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * The key to use for extracting a menu item's label if the menu item is an object.\r\n     *\r\n     * Example:\r\n     *\r\n     * ```js\r\n     * const item = { something: 'My Label', somethingElse: 'value' };\r\n     * const itemLabel = 'something';\r\n     * const itemValue = 'somethingElse';\r\n     * ```\r\n     */\r\n    itemLabel: PropTypes.string.isRequired,\r\n\r\n    /**\r\n     * The key to use for extracting a menu item's value if the menu item is an object.\r\n     *\r\n     * Example:\r\n     *\r\n     * ```js\r\n     * const item = { something: 'My Label', somethingElse: 'value' };\r\n     * const itemLabel = 'something';\r\n     * const itemValue = 'somethingElse';\r\n     * ```\r\n     */\r\n    itemValue: PropTypes.string.isRequired,\r\n\r\n    /**\r\n     * The key to use for extracting a menu item's function\r\n     * to get additional `ListItem` props if the menu item is an object.\r\n     *\r\n     * Example:\r\n     *\r\n     * ```js\r\n     * const item = { something: 'My Label', addProps: ({active}) => active ? {secondaryText: 'some text'} : null };\r\n     * const itemLabel = 'something';\r\n     * const itemProps = 'addProps';\r\n     * ```\r\n     *\r\n     * @see {@link #getItemProps}\r\n     */\r\n    itemProps: PropTypes.string.isRequired,\r\n\r\n    /**\r\n     * An optional function to get additional `ListItem` props if the menu item is an object.\r\n     *\r\n     * An object with the following fields will be passed into the function:\r\n     * - `index` - item's index\r\n     * - `active` - whether item is active\r\n     * - `disabled` - whether item is disabled\r\n     * - `itemValue` - item's value\r\n     * - `value` - current list value\r\n     * - `props` - default `ListItem` props\r\n     * - `item` - source item's data\r\n     * - `field` - reference to the component instance\r\n     */\r\n    getItemProps: PropTypes.func,\r\n\r\n    /**\r\n     * The default value to use for the select field. If this is set, it should either match\r\n     * one of the `number` or `string` in your `menuItems` list or be the empty string. If\r\n     * the `menuItems` is a list of `object`, this value should match one of the menu item's\r\n     * `itemValue` or be the empty string.\r\n     *\r\n     * ```js\r\n     * const menuItems = [{ label: 'Something': value: 0 }, { label: 'Something else', value: 1 }];\r\n     *\r\n     * // both valid\r\n     * defaultValue={0}\r\n     * defaultValue=\"\"\r\n     * ```\r\n     */\r\n    defaultValue: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]).isRequired,\r\n\r\n    /**\r\n     * The value to use for the select field. If this is defined, it becomes a controlled component\r\n     * and requires the `onChange` prop to be defined. See the `defaultValue` for more behavior info.\r\n     *\r\n     * @see {@link #defaultValue}\r\n     */\r\n    value: controlled(PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]), 'onChange', 'defaultValue'),\r\n\r\n    /**\r\n     * An optional function to call when the select field's value has been changed either when the user\r\n     * has click/touched/keyboard selected a value in the list, or the user has selected a value by typing\r\n     * in the select field while the menu's list is closed.\r\n     *\r\n     * The callback will include the next text field value, the selected item's index, the event that\r\n     * triggered the change, and the id, name, and value of the select field.\r\n     *\r\n     * ```js\r\n     * onChange(value, index, event, { id, name, value });\r\n     * ```\r\n     */\r\n    onChange: PropTypes.func,\r\n\r\n    /**\r\n     * An optional label to use with the select field. This will be a floating label as seen on the text field.\r\n     */\r\n    label: PropTypes.node,\r\n\r\n    /**\r\n     * An optional placeholder to use in the select field. This will only appear when no value has been selected.\r\n     */\r\n    placeholder: PropTypes.string,\r\n\r\n    /**\r\n     * Boolean if the select field should be disabled.\r\n     */\r\n    disabled: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the select field is required. This will update the label and placeholder to include a `*` suffix.\r\n     */\r\n    required: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the select field is considered to be in an `error` state.\r\n     *\r\n     * @see {@link TextFields/TextField#error}\r\n     */\r\n    error: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional text to display when the text select field is in an error state.\r\n     *\r\n     * @see {@link TextFields/TextField#errorText}\r\n     */\r\n    errorText: PropTypes.node,\r\n\r\n    /**\r\n     * An optional text to display below the select field to provide input help to the user.\r\n     * This will only be displayed if the select field is not in an error state.\r\n     *\r\n     * @see {@link #helpOnFocus}\r\n     * @see {@link TextFields/TextField#errorText}\r\n     */\r\n    helpText: PropTypes.node,\r\n\r\n    /**\r\n     * Boolean if the `helpText` should only appear on focus.\r\n     *\r\n     * @see {@link #helpText}\r\n     * @see {@link TextFields/TextField#helpOnFocus}\r\n     */\r\n    helpOnFocus: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional function to call when any element in the select field has been clicked.\r\n     */\r\n    onClick: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `keydown` event has been triggered anywhere in the\r\n     * select field.\r\n     */\r\n    onKeyDown: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the select field's toggle has gained focus.\r\n     */\r\n    onFocus: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the select field's toggle has been blurred. This\r\n     * will be triggered if the user hits the up or down arrow keys to traverse the list\r\n     * of items.\r\n     */\r\n    onBlur: PropTypes.func,\r\n\r\n    /**\r\n     * The icon to use to display the dropdown arrow.\r\n     */\r\n    dropdownIcon: PropTypes.element,\r\n\r\n    /**\r\n     * Boolean if the select field is in a toolbar. This should automatically be injected by the `Toolbar`\r\n     * component if being used as a `titleMenu` or one of the `actions`.\r\n     *\r\n     * @see {@link Toolbars/Toolbar#titleMenu}\r\n     * @see {@link Toolbars/Toolbar#actions}\r\n     */\r\n    toolbar: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the currently active item should be removed from the list of available `menuItems`.\r\n     * If this is `undefined`, it will strip out the active one only when the\r\n     * `position === SelectField.Positions.BELOW`.\r\n     */\r\n    stripActiveItem: PropTypes.bool,\r\n\r\n    /**\r\n     * The transition name to use when a new value has been selected. By default, it will have the\r\n     * new item _drop_ into the select field's input location.\r\n     */\r\n    transitionName: PropTypes.string.isRequired,\r\n\r\n    /**\r\n     * The transition time to use when a new value has been selected. If this value is `0`, there\r\n     * will be no transition.\r\n     */\r\n    transitionTime: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * This is how the menu's `List` gets anchored to the select field.\r\n     *\r\n     * @see {@link Helpers/Layover#anchor}\r\n     */\r\n    anchor: anchorShape,\r\n\r\n    /**\r\n     * This is the anchor to use when the `position` is set to `Autocomplete.Positions.BELOW`.\r\n     *\r\n     * @see {@link Helpers/Layover#belowAnchor}\r\n     */\r\n    belowAnchor: anchorShape,\r\n\r\n    /**\r\n     * This is the animation position for the list that appears.\r\n     *\r\n     * @see {@link Helpers/Layover#animationPosition}\r\n     */\r\n    position: positionShape,\r\n\r\n    /**\r\n     * This is how the menu's list will be \"fixed\" to the `toggle` component.\r\n     *\r\n     * @see {@link Helpers/Layover#fixedTo}\r\n     */\r\n    fixedTo: fixedToShape,\r\n\r\n    /**\r\n     * Boolean if the menu's list should appear horizontally instead of vertically.\r\n     */\r\n    listInline: PropTypes.bool,\r\n\r\n    /**\r\n     * The list's z-depth for applying box shadow. This should be a number from 0 to 5.\r\n     */\r\n    listZDepth: PropTypes.number,\r\n\r\n    /**\r\n     * Boolean if the list should have its height restricted to the `$md-menu-mobile-max-height`/\r\n     * `$md-menu-desktop-max-height` values.\r\n     *\r\n     * @see [md-menu-mobile-max-height](/components/menus?tab=1#variable-md-menu-mobile-max-height)\r\n     * @see [md-menu-desktop-max-height](/components/menus?tab=1#variable-md-menu-desktop-max-height)\r\n     */\r\n    listHeightRestricted: PropTypes.bool,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#xThreshold}\r\n     */\r\n    xThreshold: PropTypes.number,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#yThreshold}\r\n     */\r\n    yThreshold: PropTypes.number,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#closeOnOutsideClick}\r\n     */\r\n    closeOnOutsideClick: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional transition name to use for the list appearing/disappearing.\r\n     *\r\n     * @see {@link Menus/Menu#transitionName}\r\n     */\r\n    menuTransitionName: PropTypes.string,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#transitionEnterTimeout}\r\n     */\r\n    menuTransitionEnterTimeout: PropTypes.number,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#transitionLeaveTimeout}\r\n     */\r\n    menuTransitionLeaveTimeout: PropTypes.number,\r\n\r\n    /**\r\n     * @see {@link Menus/Menu#block}\r\n     */\r\n    block: PropTypes.bool,\r\n\r\n    /**\r\n     * @see {@link Menus/Menu#fullWidth}\r\n     */\r\n    fullWidth: PropTypes.bool,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#centered}\r\n     */\r\n    centered: Menu.propTypes.centered,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#sameWidth}\r\n     */\r\n    sameWidth: Menu.propTypes.sameWidth,\r\n\r\n    /**\r\n     * Since the `menuItems` get mapped into `ListItem`, this prop is used to remove\r\n     * any unnecessary props from the `ListItem` itself. This is where you\r\n     * would remove parts of your object such as `description` or `__metadata__`.\r\n     */\r\n    deleteKeys: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n      PropTypes.arrayOf(PropTypes.oneOfType([\r\n        PropTypes.number,\r\n        PropTypes.string,\r\n      ])),\r\n    ]),\r\n\r\n    /**\r\n     * Boolean if the menu should automatically try to reposition itself to stay within\r\n     * the viewport when the `fixedTo` element scrolls.\r\n     *\r\n     * @see {@link Helpers/Layover#repositionOnScroll}\r\n     */\r\n    repositionOnScroll: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the menu should automatically try to reposition itself to stay within\r\n     * the viewport when the window resizes.\r\n     *\r\n     * @see {@link Helpers/Layover#repositionOnResize}\r\n     */\r\n    repositionOnResize: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the menu logic should be simplified without any viewport logic and position\r\n     * based on the relative position of the menu. This will most like require some additional\r\n     * styles applied to the menu.\r\n     *\r\n     * @see {@link Helpers/Layover#simplified}\r\n     */\r\n    simplifiedMenu: PropTypes.bool,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#minLeft}\r\n     */\r\n    minLeft: Menu.propTypes.minLeft,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#minRight}\r\n     */\r\n    minRight: Menu.propTypes.minLeft,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#minBottom}\r\n     */\r\n    minBottom: Menu.propTypes.minBottom,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#fillViewportWidth}\r\n     */\r\n    fillViewportWidth: PropTypes.bool,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#fillViewportHeight}\r\n     */\r\n    fillViewportHeight: PropTypes.bool,\r\n\r\n    /**\r\n     * The direction that the underline should appear from.\r\n     */\r\n    lineDirection: PropTypes.oneOf(['left', 'center', 'right']).isRequired,\r\n\r\n    iconChildren: deprecated(PropTypes.node, 'Use `dropdownIcon` instead'),\r\n    iconClassName: deprecated(PropTypes.string, 'Use `dropdownIcon` instead'),\r\n    isOpen: deprecated(PropTypes.bool, 'Use `visible` instead'),\r\n    defaultOpen: deprecated(PropTypes.bool, 'Use `defaultVisible` instead'),\r\n    initiallyOpen: deprecated(PropTypes.bool, 'Use `defaultVisible` instead'),\r\n    onMenuToggle: deprecated(PropTypes.func, 'Use `onVisibilityChange` instead'),\r\n    stretchList: deprecated(\r\n      PropTypes.bool,\r\n      'No longer valid after the changes to the `Menu` component. Possibly use `sameWidth` instead'\r\n    ),\r\n    menuStyle: deprecated(PropTypes.object, 'Use `style` instead'),\r\n    menuClassName: deprecated(PropTypes.string, 'Use `className` instead'),\r\n    floatingLabel: deprecated(\r\n      PropTypes.bool,\r\n      'A select field can only have floating labels now. Only provide the `label` prop'\r\n    ),\r\n    noAutoAdjust: deprecated(PropTypes.bool, 'No longer valid to use since select fields are no longer text fields'),\r\n    adjustMinWidth: deprecated(PropTypes.bool, 'No longer valid to use since select fields are no longer text fields'),\r\n  };\r\n\r\n  static defaultProps = {\r\n    anchor: {\r\n      x: SelectField.HorizontalAnchors.INNER_LEFT,\r\n      y: SelectField.VerticalAnchors.OVERLAP,\r\n    },\r\n    fixedTo: Menu.defaultProps.fixedTo,\r\n    position: SelectField.Positions.TOP_LEFT,\r\n    itemLabel: 'label',\r\n    itemValue: 'value',\r\n    itemProps: 'getProps',\r\n    dropdownIcon: <FontIcon>arrow_drop_down</FontIcon>,\r\n    lineDirection: 'left',\r\n    menuItems: [],\r\n    defaultValue: '',\r\n    defaultVisible: false,\r\n    keyboardMatchingTimeout: 1000,\r\n    transitionName: 'md-drop',\r\n    transitionTime: 300,\r\n    repositionOnScroll: true,\r\n    repositionOnResize: false,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      error: false,\r\n      active: false,\r\n      ...this._getActive(props, { value: props.defaultValue }),\r\n      listProps: {\r\n        role: 'listbox',\r\n        ref: this._scrollActiveIntoView,\r\n        [ARIA_ACTIVE]: null,\r\n      },\r\n      match: null,\r\n      lastSearch: null,\r\n      value: props.defaultValue,\r\n      visible: props.defaultVisible,\r\n    };\r\n\r\n    this._items = [];\r\n    this._activeItem = null;\r\n    this._deleteKeys = this._getDeleteKeys(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._container = findDOMNode(this);\r\n    this._field = this._container.querySelector('.md-select-field');\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { itemLabel, itemValue, deleteKeys } = this.props;\r\n    if (deleteKeys !== nextProps.deleteKeys || itemLabel !== nextProps.itemLabel || itemValue !== nextProps.itemValue) {\r\n      this._deleteKeys = this._getDeleteKeys(nextProps);\r\n    }\r\n\r\n    if (this.props.value !== nextProps.value || this.props.menuItems !== nextProps.menuItems) {\r\n      this.setState(this._getActive(nextProps, this.state));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the current value from the select field. This is used when you have an uncontrolled\r\n   * text field and simply need the value from a ref callback.\r\n   *\r\n   * @return {String} the select field's value\r\n   */\r\n  get value() {\r\n    return getField(this.props, this.state, 'value');\r\n  }\r\n\r\n  _getItemPart(item, itemLabel, itemValue, preferLabel = false) {\r\n    const type = typeof item;\r\n    if (type === 'number' || type === 'string') {\r\n      return item;\r\n    } else if (type === 'object') {\r\n      const key1 = preferLabel ? itemLabel : itemValue;\r\n      const key2 = preferLabel ? itemValue : itemLabel;\r\n      return typeof item[key1] !== 'undefined' ? item[key1] : item[key2];\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  _getDeleteKeys({ itemLabel, itemValue, itemProps, deleteKeys }) {\r\n    const keys = [itemLabel, itemValue, itemProps];\r\n    if (deleteKeys) {\r\n      return keys.concat(Array.isArray(deleteKeys) ? deleteKeys : [deleteKeys]);\r\n    }\r\n\r\n    return keys;\r\n  }\r\n\r\n  _getActiveItemLabel = (item, value, itemLabel, itemValue) => {\r\n    const v = this._getItemPart(item, itemLabel, itemValue);\r\n    const label = this._getItemPart(item, itemLabel, itemValue, true);\r\n\r\n    return v === value || v === parseInt(value, 10) ? label : '';\r\n  };\r\n\r\n  _getActive = (props, state) => {\r\n    let activeLabel = '';\r\n    let activeIndex = -1;\r\n    const value = getField(props, state, 'value');\r\n    if (isValued(value)) {\r\n      const { menuItems, itemLabel, itemValue } = props;\r\n\r\n      menuItems.some((item, index) => {\r\n        activeLabel = this._getActiveItemLabel(item, value, itemLabel, itemValue);\r\n        const found = isValued(activeLabel);\r\n        if (found) {\r\n          activeIndex = index;\r\n        }\r\n\r\n        return found;\r\n      });\r\n    }\r\n\r\n    return { activeLabel, activeIndex };\r\n  };\r\n\r\n  _attemptItemFocus = (index) => {\r\n    if (index === -1) {\r\n      return;\r\n    }\r\n\r\n    const item = this._items[index];\r\n    if (item) {\r\n      item.focus();\r\n    }\r\n  };\r\n\r\n  _setListItem = (item) => {\r\n    if (!item) {\r\n      return;\r\n    }\r\n\r\n    if (item.props.active) {\r\n      this._activeItem = findDOMNode(item);\r\n      item.focus();\r\n\r\n      if (!this.state.listProps[ARIA_ACTIVE]) {\r\n        this.setState({ listProps: { ...this.state.listProps, [ARIA_ACTIVE]: `${this.props.id}-options-active` } });\r\n      }\r\n    }\r\n\r\n    this._items.push(item);\r\n  };\r\n\r\n  _scrollActiveIntoView = (listRef) => {\r\n    if (listRef === null) {\r\n      this._items = [];\r\n      return;\r\n    } else if (!this._activeItem) {\r\n      return;\r\n    }\r\n\r\n    const list = findDOMNode(listRef);\r\n    const { offsetTop } = this._activeItem;\r\n    list.scrollTop = offsetTop > MOBILE_LIST_PADDING ? offsetTop : 0;\r\n  };\r\n\r\n  _toggle = (e) => {\r\n    const { isOpen, onVisibilityChange, onMenuToggle } = this.props;\r\n    const visible = !(typeof isOpen !== 'undefined' ? isOpen : getField(this.props, this.state, 'visible'));\r\n    if (onMenuToggle || onVisibilityChange) {\r\n      (onMenuToggle || onVisibilityChange)(visible, e);\r\n    }\r\n\r\n    let state;\r\n    if (typeof isOpen === 'undefined' && typeof this.props.visible === 'undefined') {\r\n      state = { visible };\r\n    }\r\n\r\n    if (state) {\r\n      this.setState(state);\r\n    }\r\n  };\r\n\r\n  _close = (e) => {\r\n    if (this.props.onVisibilityChange) {\r\n      this.props.onVisibilityChange(false, e);\r\n    }\r\n\r\n    if (e.type === 'keydown' && this._field) {\r\n      this._field.focus();\r\n    }\r\n\r\n    let state;\r\n    if (this.props.required && !getField(this.props, this.state, 'value')) {\r\n      state = { error: true };\r\n    }\r\n\r\n    if (typeof this.props.visible === 'undefined') {\r\n      state = state || {};\r\n      state.visible = false;\r\n    }\r\n\r\n    if (state) {\r\n      this.setState(state);\r\n    }\r\n  };\r\n\r\n  _handleClick = (e) => {\r\n    if (this.props.onClick) {\r\n      this.props.onClick(e);\r\n    }\r\n\r\n    const { isOpen } = this.props;\r\n    const visible = typeof isOpen !== 'undefined' ? isOpen : getField(this.props, this.state, 'visible');\r\n    if (visible && this._container) {\r\n      let node = e.target;\r\n      while (this._container.contains(node)) {\r\n        if (node.dataset && typeof node.dataset.id !== 'undefined') {\r\n          const { id, value } = node.dataset;\r\n          this._selectItem(parseInt(id, 10), value, e);\r\n          return;\r\n        }\r\n\r\n        node = node.parentNode;\r\n      }\r\n    }\r\n  };\r\n\r\n  _selectItem = (dataIndex, dataValue, e) => {\r\n    const { required, menuItems, itemLabel, itemValue, onChange, id, name } = this.props;\r\n    const value = this._getItemPart(menuItems[dataIndex], itemLabel, itemValue);\r\n    const prevValue = getField(this.props, this.state, 'value');\r\n    if (prevValue !== value && onChange) {\r\n      onChange(value, dataIndex, e, { id, name, value });\r\n    }\r\n\r\n    const state = {\r\n      ...this._getActive({ value, itemLabel, itemValue, menuItems }, {}),\r\n      error: !!required && !value && value !== 0,\r\n    };\r\n\r\n    if (typeof this.props.value === 'undefined') {\r\n      state.value = value;\r\n    }\r\n\r\n    this.setState(state);\r\n  };\r\n\r\n  _handleFocus = (e) => {\r\n    if (this.props.onFocus) {\r\n      this.props.onFocus(e);\r\n    }\r\n\r\n    this.setState({ active: true });\r\n  };\r\n\r\n  _handleBlur = (e) => {\r\n    if (this.props.onBlur) {\r\n      this.props.onBlur(e);\r\n    }\r\n\r\n    let { error } = this.state;\r\n    const { isOpen, required } = this.props;\r\n    const visible = typeof isOpen !== 'undefined' ? isOpen : getField(this.props, this.state, 'visible');\r\n    const value = getField(this.props, this.state, 'value');\r\n\r\n    if (required && !visible) {\r\n      error = !value;\r\n    }\r\n\r\n    this.setState({ active: false, error });\r\n  };\r\n\r\n  _handleKeyDown = (e) => {\r\n    const { isOpen, onKeyDown } = this.props;\r\n    if (onKeyDown) {\r\n      onKeyDown(e);\r\n    }\r\n\r\n    const key = e.which || e.keyCode;\r\n    const up = key === UP;\r\n    const down = key === DOWN;\r\n    const visible = typeof isOpen !== 'undefined' ? isOpen : getField(this.props, this.state, 'visible');\r\n\r\n    if (up || down) {\r\n      e.preventDefault();\r\n\r\n      if (!visible) {\r\n        this._toggle(e);\r\n        return;\r\n      }\r\n\r\n      this._advanceFocus(up);\r\n    } else if (!visible && handleKeyboardAccessibility(e, this._toggle, true, true)) {\r\n      return;\r\n    } else if (visible && (key === ESC || key === TAB)) {\r\n      if (this._field && key === ESC) {\r\n        this._field.focus();\r\n      }\r\n\r\n      this._close(e);\r\n      return;\r\n    } else {\r\n      this._selectItemByLetter(key, e);\r\n    }\r\n  };\r\n\r\n  _advanceFocus = (decrement) => {\r\n    const { position, stripActiveItem } = this.props;\r\n    const { activeIndex } = this.state;\r\n\r\n    const below = position === SelectField.Positions.BELOW;\r\n    const value = getField(this.props, this.state, 'value');\r\n    const valued = isValued(value);\r\n    const itemStripped = (typeof stripActiveItem !== 'undefined' ? stripActiveItem : below) && valued;\r\n\r\n    // If the select field is positioned below and there is no value, need to increment the last index\r\n    // by one since this select field removes the active item. Need to account for that here when there\r\n    // is no value.\r\n    const lastIndex = this._items.length - (itemStripped ? 0 : 1);\r\n    if ((decrement && activeIndex <= 0) || (!decrement && activeIndex >= lastIndex)) {\r\n      return;\r\n    }\r\n\r\n    const nextIndex = Math.max(-1, Math.min(lastIndex, activeIndex + (decrement ? -1 : 1)));\r\n    if (nextIndex === activeIndex) {\r\n      return;\r\n    }\r\n\r\n    this._attemptItemFocus(nextIndex - (itemStripped ? 1 : 0));\r\n    this.setState({ activeIndex: nextIndex });\r\n  };\r\n\r\n  _selectItemByLetter = (key, e) => {\r\n    const charCode = String.fromCharCode(key);\r\n    const isLetter = charCode && charCode.match(/[A-Za-z0-9-_ ]/);\r\n    const isKeypad = isBetween(key, KEYPAD_ZERO, KEYPAD_NINE);\r\n    if (!isBetween(key, ZERO, NINE) && !isKeypad && !isLetter) {\r\n      return;\r\n    }\r\n\r\n    const letter = isLetter ? charCode : String(key - (isKeypad ? KEYPAD_ZERO : ZERO));\r\n\r\n    if (this._matchingTimeout) {\r\n      clearTimeout(this._matchingTimeout);\r\n    }\r\n\r\n    this._matchingTimeout = setTimeout(() => {\r\n      this._matchingTimeout = null;\r\n\r\n      this.setState({ match: null, lastSearch: null });\r\n    }, this.props.keyboardMatchingTimeout);\r\n\r\n    this._selectFirstMatch(letter, e);\r\n  };\r\n\r\n  _selectFirstMatch = (letter, e) => {\r\n    const { menuItems, itemLabel, itemValue, isOpen, onChange, id, name } = this.props;\r\n    const { lastSearch } = this.state;\r\n    let match = -1;\r\n    const search = `${lastSearch || ''}${letter}`.toUpperCase();\r\n    menuItems.some((item, index) => {\r\n      if (item && typeof item === 'object' && item.disabled) {\r\n        return false;\r\n      }\r\n\r\n      const label = String(this._getItemPart(item, itemLabel, itemValue, true));\r\n      if (label && label.toUpperCase().replace(/\\s/g, '').indexOf(search) === 0) {\r\n        match = index;\r\n      }\r\n\r\n      return match > -1;\r\n    });\r\n\r\n    const state = {\r\n      match,\r\n      lastSearch: search,\r\n    };\r\n\r\n    if (match !== -1) {\r\n      const activeItem = menuItems[match];\r\n      state.activeLabel = this._getItemPart(activeItem, itemLabel, itemValue, true);\r\n      state.activeIndex = match;\r\n\r\n      const visible = typeof isOpen !== 'undefined' ? isOpen : getField(this.props, this.state, 'visible');\r\n      if (visible) {\r\n        if (state.match !== this.state.match) {\r\n          this._attemptItemFocus(state.activeIndex);\r\n        }\r\n      } else {\r\n        const value = this._getItemPart(activeItem, itemLabel, itemValue);\r\n        const prevValue = getField(this.props, this.state, 'value');\r\n\r\n        if (value !== prevValue && onChange) {\r\n          onChange(value, match, e, { id, name, value });\r\n        }\r\n\r\n        if (typeof this.props.value === 'undefined') {\r\n          state.value = value;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setState(state);\r\n  };\r\n\r\n  _reduceItems = (items, item, i) => {\r\n    if (item === null) {\r\n      return items;\r\n    } else if (React.isValidElement(item)) {\r\n      items.push(item);\r\n      return items;\r\n    }\r\n\r\n    const { getItemProps, id, itemLabel, itemProps, itemValue, position, stripActiveItem } = this.props;\r\n    const below = position === SelectField.Positions.BELOW;\r\n    const value = getField(this.props, this.state, 'value');\r\n\r\n    const dataValue = this._getItemPart(item, itemLabel, itemValue);\r\n    const primaryText = this._getItemPart(item, itemLabel, itemValue, true);\r\n\r\n    const active = dataValue === value || dataValue === parseInt(value, 10);\r\n    const stripped = (typeof stripActiveItem !== 'undefined' ? stripActiveItem : below) && active;\r\n    if (!stripped) {\r\n      const objectType = typeof item === 'object';\r\n      const props = objectType ? omit(item, this._deleteKeys) : {};\r\n      const disabled = props.disabled || false;\r\n      props.ref = disabled ? null : this._setListItem;\r\n      props.id = active ? `${id}-options-active` : null;\r\n      props.active = active;\r\n      props.tabIndex = -1;\r\n      props.primaryText = primaryText;\r\n      props.key = item.key || dataValue;\r\n      props.role = 'option';\r\n      props['data-id'] = disabled ? null : i;\r\n      props['data-value'] = disabled ? null : dataValue;\r\n\r\n      const getProps = (objectType && item[itemProps]) || getItemProps;\r\n      if (typeof getProps === 'function') {\r\n        Object.assign(props, getProps({\r\n          index: i,\r\n          active,\r\n          disabled,\r\n          itemValue,\r\n          value,\r\n          props,\r\n          item,\r\n          field: this,\r\n        }));\r\n      }\r\n\r\n      items.push(<ListItem {...props} />);\r\n    }\r\n\r\n    return items;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      style,\r\n      className,\r\n      listStyle,\r\n      listClassName,\r\n      toggleStyle,\r\n      toggleClassName,\r\n      menuItems,\r\n      anchor,\r\n      belowAnchor,\r\n      fixedTo,\r\n      position,\r\n      xThreshold,\r\n      yThreshold,\r\n      listZDepth,\r\n      listInline,\r\n      listHeightRestricted,\r\n      block,\r\n      centered,\r\n      sameWidth,\r\n      fullWidth,\r\n      repositionOnScroll,\r\n      repositionOnResize,\r\n      simplifiedMenu,\r\n      minLeft,\r\n      minRight,\r\n      minBottom,\r\n      fillViewportWidth,\r\n      fillViewportHeight,\r\n      menuTransitionName,\r\n      menuTransitionEnterTimeout,\r\n      menuTransitionLeaveTimeout,\r\n      isOpen, // deprecated\r\n      /* eslint-disable no-unused-vars */\r\n      error: propError,\r\n      menuId: propMenuId,\r\n      visible: propVisible,\r\n      itemLabel,\r\n      itemValue,\r\n      itemProps,\r\n      getItemProps,\r\n      defaultValue,\r\n      defaultVisible,\r\n      onClick,\r\n      onKeyDown,\r\n      onVisibilityChange,\r\n      deleteKeys,\r\n      stripActiveItem,\r\n      keyboardMatchingTimeout,\r\n\r\n      // Deprecated\r\n      defaultOpen,\r\n      initiallyOpen,\r\n      onMenuToggle,\r\n      stretchList,\r\n      menuStyle,\r\n      menuClassName,\r\n      floatingLabel,\r\n      noAutoAdjust,\r\n      adjustMinWidth,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n\r\n    let { menuId, listId, error } = this.props;\r\n    error = error || this.state.error;\r\n    if (!menuId) {\r\n      menuId = `${id}-menu`;\r\n    }\r\n\r\n    if (!listId) {\r\n      listId = `${menuId}-options`;\r\n    }\r\n\r\n    const { listProps, active, activeLabel } = this.state;\r\n    const below = position === SelectField.Positions.BELOW;\r\n    const visible = typeof isOpen !== 'undefined' ? isOpen : getField(this.props, this.state, 'visible');\r\n    const value = getField(this.props, this.state, 'value');\r\n    const useSameWidth = typeof sameWidth !== 'undefined' ? sameWidth : below;\r\n\r\n    const toggle = (\r\n      <SelectFieldToggle\r\n        {...props}\r\n        id={id}\r\n        style={toggleStyle}\r\n        className={toggleClassName}\r\n        visible={visible}\r\n        value={value}\r\n        below={below}\r\n        error={error}\r\n        active={active}\r\n        activeLabel={activeLabel}\r\n        onClick={this._toggle}\r\n        onFocus={this._handleFocus}\r\n        onBlur={this._handleBlur}\r\n      />\r\n    );\r\n\r\n    return (\r\n      <Menu\r\n        id={menuId}\r\n        listId={listId}\r\n        style={style}\r\n        className={cn('md-menu--select-field', className)}\r\n        listProps={listProps}\r\n        listStyle={listStyle}\r\n        listClassName={listClassName}\r\n        toggle={toggle}\r\n        visible={visible}\r\n        onClose={this._close}\r\n        onKeyDown={this._handleKeyDown}\r\n        onClick={this._handleClick}\r\n        simplified={simplifiedMenu}\r\n        anchor={anchor}\r\n        belowAnchor={belowAnchor}\r\n        fixedTo={fixedTo}\r\n        position={position}\r\n        xThreshold={xThreshold}\r\n        yThreshold={yThreshold}\r\n        listZDepth={listZDepth}\r\n        listInline={listInline}\r\n        listHeightRestricted={listHeightRestricted}\r\n        sameWidth={useSameWidth}\r\n        block={block}\r\n        centered={centered}\r\n        fullWidth={fullWidth}\r\n        minLeft={minLeft}\r\n        minRight={minRight}\r\n        minBottom={minBottom}\r\n        fillViewportWidth={fillViewportWidth}\r\n        fillViewportHeight={fillViewportHeight}\r\n        repositionOnScroll={repositionOnScroll}\r\n        repositionOnResize={repositionOnResize}\r\n        transitionName={menuTransitionName}\r\n        transitionEnterTimeout={menuTransitionEnterTimeout}\r\n        transitionLeaveTimeout={menuTransitionLeaveTimeout}\r\n      >\r\n        {menuItems.reduce(this._reduceItems, [])}\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n"]}