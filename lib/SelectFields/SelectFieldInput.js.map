{"version":3,"sources":["../../src/js/SelectFields/SelectFieldInput.js"],"names":["SelectFieldInput","state","transition","_timeout","_transitionNewValue","props","transitionTime","transitionName","clearTimeout","setTimeout","setState","nextProps","value","id","className","name","label","placeholder","active","activeLabel","error","disabled","required","toolbar","below","lineDirection","dropdownIcon","iconChildren","iconClassName","divider","visibleLabel","labelActive","icon","cloneElement","hint","text","propTypes","oneOfType","number","string","style","object","isRequired","bool","node","element","defaultProps"],"mappings":"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","file":"SelectFieldInput.js","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport TICK from '../constants/CSSTransitionGroupTick';\r\nimport themeColors from '../utils/themeColors';\r\nimport FontIcon from '../FontIcons/FontIcon';\r\nimport AccessibleFakeInkedButton from '../Helpers/AccessibleFakeInkedButton';\r\nimport IconSeparator from '../Helpers/IconSeparator';\r\nimport Paper from '../Papers/Paper';\r\nimport TextFieldDivider from '../TextFields/TextFieldDivider';\r\n\r\nexport default class SelectFieldInput extends PureComponent {\r\n  static propTypes = {\r\n    id: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    name: PropTypes.string,\r\n    value: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]).isRequired,\r\n    disabled: PropTypes.bool,\r\n    required: PropTypes.bool,\r\n    label: PropTypes.node,\r\n    placeholder: PropTypes.string,\r\n    active: PropTypes.bool,\r\n    activeLabel: PropTypes.node,\r\n    below: PropTypes.bool,\r\n    error: PropTypes.bool,\r\n    toolbar: PropTypes.bool,\r\n    dropdownIcon: PropTypes.element,\r\n    iconClassName: PropTypes.string,\r\n    iconChildren: PropTypes.node,\r\n    transitionName: PropTypes.string.isRequired,\r\n    transitionTime: PropTypes.number.isRequired,\r\n    lineDirection: TextFieldDivider.propTypes.lineDirection,\r\n  };\r\n\r\n  static defaultProps = {\r\n    transitionName: 'md-drop',\r\n    transitionTime: 300,\r\n  };\r\n\r\n  state = { transition: null };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (this.props.value !== nextProps.value) {\r\n      this._transitionNewValue();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this._timeout) {\r\n      clearTimeout(this._timeout);\r\n    }\r\n  }\r\n\r\n  _timeout = null;\r\n  _transitionNewValue = () => {\r\n    const { transitionTime, transitionName } = this.props;\r\n    if (this._timeout) {\r\n      clearTimeout(this._timeout);\r\n    }\r\n\r\n    this._timeout = setTimeout(() => {\r\n      this._timeout = setTimeout(() => {\r\n        this._timeout = null;\r\n        this.setState({ transition: null });\r\n      }, transitionTime);\r\n\r\n      this.setState({ transition: `${this.state.transition} ${transitionName}-enter-active` });\r\n    }, TICK);\r\n\r\n    this.setState({ transition: `${transitionName}-enter` });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      className,\r\n      name,\r\n      value,\r\n      label,\r\n      placeholder,\r\n      active,\r\n      activeLabel,\r\n      error,\r\n      disabled,\r\n      required,\r\n      toolbar,\r\n      below,\r\n      lineDirection,\r\n      dropdownIcon,\r\n\r\n      // deprecated\r\n      iconChildren,\r\n      iconClassName,\r\n      /* eslint-disable no-unused-vars */\r\n      transitionName,\r\n      transitionTime,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n\r\n    const { transition } = this.state;\r\n\r\n    let divider;\r\n    if (!below && !toolbar) {\r\n      divider = (\r\n        <TextFieldDivider\r\n          key=\"text-divider\"\r\n          active={active}\r\n          error={error}\r\n          lineDirection={lineDirection}\r\n          className=\"md-divider--select-field\"\r\n        />\r\n      );\r\n    }\r\n\r\n    let visibleLabel = activeLabel;\r\n    if (!activeLabel && activeLabel !== 0) {\r\n      visibleLabel = ((!label || active) && placeholder) || '';\r\n    }\r\n\r\n    const labelActive = !!activeLabel || activeLabel === 0;\r\n\r\n    let icon = dropdownIcon;\r\n    if (iconClassName || iconChildren) {\r\n      icon = <FontIcon iconClassName={iconClassName}>{iconChildren}</FontIcon>;\r\n    }\r\n    icon = React.cloneElement(icon, { disabled });\r\n\r\n    return (\r\n      <AccessibleFakeInkedButton\r\n        {...props}\r\n        id={`${id}-toggle`}\r\n        role=\"listbox\"\r\n        disabled={disabled}\r\n        component={Paper}\r\n        zDepth={below && active ? 1 : 0}\r\n        inkDisabled={!below}\r\n        className={cn('md-select-field', themeColors({\r\n          disabled,\r\n          hint: !labelActive && placeholder,\r\n          text: labelActive,\r\n        }), className)}\r\n      >\r\n        <IconSeparator\r\n          label={visibleLabel}\r\n          labelClassName={transition}\r\n          className={cn('md-text-field', {\r\n            'md-text-field--margin': !below && !label,\r\n            'md-text-field--floating-margin': label,\r\n            'md-text-field--toolbar': toolbar && !below,\r\n            'md-select-field--text-field': !below,\r\n            'md-select-field--btn': below,\r\n          })}\r\n        >\r\n          {icon}\r\n        </IconSeparator>\r\n        {divider}\r\n        <input\r\n          key=\"value\"\r\n          type=\"hidden\"\r\n          id={id}\r\n          name={name}\r\n          value={value}\r\n          required={required}\r\n          disabled={disabled}\r\n        />\r\n      </AccessibleFakeInkedButton>\r\n    );\r\n  }\r\n}\r\n"]}