{"version":3,"sources":["../../src/js/Buttons/RaisedButton.js"],"names":["RaisedButton","props","propTypes","label","node","isRequired","className","string","iconBefore","bool","children","type","primary","secondary","disabled","href","onClick","func","deprecated","defaultProps"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AAEA;;;;AACA;;;;;;;;;;;;IAEqBA,Y;;;;;;;;;;;6BAiEV;AACP,aAAO,6DAAY,KAAKC,KAAjB,IAAwB,YAAxB,IAAP;AACD;;;;;;AAnEkBD,Y,CACZE,S,GAAY;AACjB;;;AAGAC,SAAO,oBAAUC,IAAV,CAAeC,UAJL;;AAMjB;;;AAGAC,aAAW,oBAAUC,MATJ;;AAWjB;;;AAGAC,cAAY,oBAAUC,IAdL;;AAgBjB;;;;AAIAC,YAAU,oBAAUN,IApBH;;AAsBjB;;;AAGAO,QAAM,oBAAUJ,MAzBC;;AA2BjB;;;AAGAK,WAAS,oBAAUH,IA9BF;;AAgCjB;;;AAGAI,aAAW,oBAAUJ,IAnCJ;;AAqCjB;;;AAGAK,YAAU,oBAAUL,IAxCH;;AA0CjB;;;AAGAM,QAAM,oBAAUR,MA7CC;;AA+CjB;;;AAGAS,WAAS,oBAAUC,IAlDF;;AAoDjBC,cAAY,mCACV,oFACA,iFADA,GAEA,gBAHU;AApDK,C;AADAlB,Y,CA4DZmB,Y,GAAe;AACpBR,QAAM,QADc;AAEpBH,cAAY;AAFQ,C;kBA5DHR,Y","file":"RaisedButton.js","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport deprecated from '../utils/PropTypes/componentDeprecated';\r\nimport Button from './Button';\r\n\r\nexport default class RaisedButton extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * The label to display in the button.\r\n     */\r\n    label: PropTypes.node.isRequired,\r\n\r\n    /**\r\n     * An optional className to apply to the button.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * Boolean if the icon should be displayed before the label.\r\n     */\r\n    iconBefore: PropTypes.bool,\r\n\r\n    /**\r\n     * A `FontIcon` to display in the button. It can be placed before\r\n     * or after the label.\r\n     */\r\n    children: PropTypes.node,\r\n\r\n    /**\r\n     * The button type.\r\n     */\r\n    type: PropTypes.string,\r\n\r\n    /**\r\n     * Boolean if the button should be styled with the primary color.\r\n     */\r\n    primary: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the button should be styled with the secondary color.\r\n     */\r\n    secondary: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the button is disabled.\r\n     */\r\n    disabled: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional href to convert the button into a link button.\r\n     */\r\n    href: PropTypes.string,\r\n\r\n    /**\r\n     * An optional function to call when the button is clicked.\r\n     */\r\n    onClick: PropTypes.func,\r\n\r\n    deprecated: deprecated(\r\n      'The behavior of the `RaisedButton` can be achieved with the `Button` component ' +\r\n      'without the additional bundle size. Switch to the `Button` component and add a ' +\r\n      'prop `raised`.'\r\n    ),\r\n  };\r\n\r\n  static defaultProps = {\r\n    type: 'button',\r\n    iconBefore: true,\r\n  };\r\n\r\n  render() {\r\n    return <Button {...this.props} raised />;\r\n  }\r\n}\r\n"]}