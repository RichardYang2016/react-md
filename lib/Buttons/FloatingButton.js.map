{"version":3,"sources":["../../src/js/Buttons/FloatingButton.js"],"names":["FloatingButton","props","className","fixed","mini","children","iconClassName","propTypes","string","node","type","disabled","bool","href","onClick","func","tooltipLabel","tooltipPosition","oneOf","tooltipDelay","number","primary","secondary","deprecated"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;;;;;;;;;;;AAEA;;;;;;;;;;IAUqBA,c;;;;;;;;;;;6BAkFV;AAAA,mBAQH,KAAKC,KARF;AAAA,UAELC,SAFK,UAELA,SAFK;AAAA,UAGLC,KAHK,UAGLA,KAHK;AAAA,UAILC,IAJK,UAILA,IAJK;AAAA,UAKLC,QALK,UAKLA,QALK;AAAA,UAMLC,aANK,UAMLA,aANK;AAAA,UAOFL,KAPE;;AASP,aACE;AAAA;AAAA,qBACMA,KADN;AAEE,qBAAW,0BAAG;AACZ,sCAA0BE,KADd;AAEZ,qCAAyBC;AAFb,WAAH,EAGRF,SAHQ,CAFb;AAME,yBAAeI,aANjB;AAOE;AAPF;AASGD;AATH,OADF;AAaD;;;;;;AAxGkBL,c,CACZO,S,GAAY;AACjB;;;AAGAD,iBAAe,oBAAUE,MAJR;;AAMjB;;;AAGAH,YAAU,oBAAUI,IATH;;AAWjB;;;AAGAP,aAAW,oBAAUM,MAdJ;;AAgBjB;;;AAGAE,QAAM,oBAAUF,MAnBC;;AAqBjB;;;AAGAG,YAAU,oBAAUC,IAxBH;;AA0BjB;;;AAGAC,QAAM,oBAAUL,MA7BC;;AA+BjB;;;AAGAM,WAAS,oBAAUC,IAlCF;;AAoCjB;;;;AAIAC,gBAAc,oBAAUP,IAxCP;;AA0CjB;;;;AAIAQ,mBAAiB,oBAAUC,KAAV,CAAgB,CAAC,KAAD,EAAQ,OAAR,EAAiB,QAAjB,EAA2B,MAA3B,CAAhB,CA9CA;;AAgDjB;;;AAGAC,gBAAc,oBAAUC,MAnDP;;AAqDjB;;;AAGAjB,SAAO,oBAAUS,IAxDA;;AA0DjB;;;;AAIAR,QAAM,oBAAUQ,IA9DC;;AAgEjB;;;AAGAS,WAAS,oBAAUT,IAnEF;;AAqEjB;;;AAGAU,aAAW,oBAAUV,IAxEJ;;AA0EjBW,cAAY,mCACV,sFACA,iFADA,GAEA,kBAHU;AA1EK,C;kBADAvB,c","file":"FloatingButton.js","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport deprecated from '../utils/PropTypes/componentDeprecated';\r\nimport IconButton from './IconButton';\r\n\r\n/**\r\n * A `FloatingButton` is an extension of the `IconButton`.\r\n * A tooltip can be displayed on hover or touch hold if the\r\n * `tooltipLabel` prop is given.\r\n *\r\n * Another name for this button is a `FloatingActionButton` (FAB).\r\n *\r\n * Any other props (such as style or event listeners) will also be\r\n * applied.\r\n */\r\nexport default class FloatingButton extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * The className to use for rendering the `FontIcon`.\r\n     */\r\n    iconClassName: PropTypes.string,\r\n\r\n    /**\r\n     * Any children to use to render the `FontIcon`.\r\n     */\r\n    children: PropTypes.node,\r\n\r\n    /**\r\n     * An optional className to apply to the button.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * The button type.\r\n     */\r\n    type: PropTypes.string,\r\n\r\n    /**\r\n     * Boolean if the button is disabled.\r\n     */\r\n    disabled: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional href to convert the button into a link button.\r\n     */\r\n    href: PropTypes.string,\r\n\r\n    /**\r\n     * An optional function to call when the button is clicked.\r\n     */\r\n    onClick: PropTypes.func,\r\n\r\n    /**\r\n     * An optional label to use if you would like a tooltip to display\r\n     * on hover or touch hold.\r\n     */\r\n    tooltipLabel: PropTypes.node,\r\n\r\n    /**\r\n     * The position that the tooltip should be displayed relative to\r\n     * the button.\r\n     */\r\n    tooltipPosition: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\r\n\r\n    /**\r\n     * An optional amount of delay before the tooltip appears.\r\n     */\r\n    tooltipDelay: PropTypes.number,\r\n\r\n    /**\r\n     * Boolean if the floating button is fixed.\r\n     */\r\n    fixed: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the floating button should be displayed as the mini\r\n     * version.\r\n     */\r\n    mini: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the floating button should be styled with the primary color.\r\n     */\r\n    primary: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the floating button should be styled with the secondary color.\r\n     */\r\n    secondary: PropTypes.bool,\r\n\r\n    deprecated: deprecated(\r\n      'The behavior of the `FloatingButton` can be achieved with the `Button` component ' +\r\n      'without the additional bundle size. Switch to the `Button` component and add a ' +\r\n      'prop `floating`.'\r\n    ),\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      className,\r\n      fixed,\r\n      mini,\r\n      children,\r\n      iconClassName,\r\n      ...props\r\n    } = this.props;\r\n    return (\r\n      <IconButton\r\n        {...props}\r\n        className={cn({\r\n          'md-btn--floating-fixed': fixed,\r\n          'md-btn--floating-mini': mini,\r\n        }, className)}\r\n        iconClassName={iconClassName}\r\n        floating\r\n      >\r\n        {children}\r\n      </IconButton>\r\n    );\r\n  }\r\n}\r\n"]}