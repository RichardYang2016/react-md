{"version":3,"sources":["../../src/js/Subheaders/Subheader.js"],"names":["Subheader","props","Component","component","inset","primary","primaryText","className","children","hint","propTypes","style","object","string","bool","node","isRequired","oneOfType","func","defaultProps"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA;;;;;;;;;;;;;;AAEA;;;IAGqBA,S;;;;;;;;;;;6BA+CV;AAAA,mBASH,KAAKC,KATF;AAAA,UAEMC,SAFN,UAELC,SAFK;AAAA,UAGLC,KAHK,UAGLA,KAHK;AAAA,UAILC,OAJK,UAILA,OAJK;AAAA,UAKLC,WALK,UAKLA,WALK;AAAA,UAMLC,SANK,UAMLA,SANK;AAAA,UAOLC,QAPK,UAOLA,QAPK;AAAA,UAQFP,KARE;;AAWP,aACE;AAAC,iBAAD;AAAA,qBACMA,KADN;AAEE,qBAAW,0BAAG,cAAH,EAAmB;AAC5B,mCAAuBG;AADK,WAAnB,EAER,2BAAY,EAAEC,gBAAF,EAAWI,MAAM,CAACJ,OAAlB,EAAZ,CAFQ,EAEkCE,SAFlC;AAFb;AAMGD,mBANH;AAOGE;AAPH,OADF;AAWD;;;;;;AArEkBR,S,CACZU,S,GAAY;AACjB;;;AAGAC,SAAO,oBAAUC,MAJA;;AAMjB;;;AAGAL,aAAW,oBAAUM,MATJ;;AAWjB;;;AAGAR,WAAS,oBAAUS,IAdF;;AAgBjB;;;;AAIAV,SAAO,oBAAUU,IApBA;;AAsBjB;;;AAGAR,eAAa,oBAAUS,IAAV,CAAeC,UAzBX;;AA2BjB;;;;AAIAR,YAAU,oBAAUO,IA/BH;;AAiCjB;;;AAGAZ,aAAW,oBAAUc,SAAV,CAAoB,CAC7B,oBAAUJ,MADmB,EAE7B,oBAAUK,IAFmB,CAApB,EAGRF;AAvCc,C;AADAhB,S,CA2CZmB,Y,GAAe;AACpBhB,aAAW;AADS,C;kBA3CHH,S","file":"Subheader.js","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport themeColors from '../utils/themeColors';\r\n\r\n/**\r\n * The `Subheader` component is generally used inside of lists or menus.\r\n */\r\nexport default class Subheader extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * An optional style to apply to the subheader.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the subheader.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * Boolean if the subheader should be styled with the primary color.\r\n     */\r\n    primary: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the subheader is inset in the list. This will add additional\r\n     * spacing to align the subheader.\r\n     */\r\n    inset: PropTypes.bool,\r\n\r\n    /**\r\n     * The primary text to use in the subheader.\r\n     */\r\n    primaryText: PropTypes.node.isRequired,\r\n\r\n    /**\r\n     * Any optional children to display after the `primaryText`. This prop is\r\n     * not recommended.\r\n     */\r\n    children: PropTypes.node,\r\n\r\n    /**\r\n     * The component to render the Subheader as.\r\n     */\r\n    component: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.func,\r\n    ]).isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    component: 'li',\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      component: Component,\r\n      inset,\r\n      primary,\r\n      primaryText,\r\n      className,\r\n      children,\r\n      ...props\r\n    } = this.props;\r\n\r\n    return (\r\n      <Component\r\n        {...props}\r\n        className={cn('md-subheader', {\r\n          'md-list-item--inset': inset,\r\n        }, themeColors({ primary, hint: !primary }), className)}\r\n      >\r\n        {primaryText}\r\n        {children}\r\n      </Component>\r\n    );\r\n  }\r\n}\r\n"]}