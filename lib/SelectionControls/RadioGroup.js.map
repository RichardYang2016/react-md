{"version":3,"sources":["../../src/js/SelectionControls/RadioGroup.js"],"names":["RadioGroup","props","children","id","defaultValue","name","value","map","controls","Object","assign","radio","checkedIcon","uncheckedIcon","checkedIconChildren","checkedIconClassName","uncheckedIconChildren","uncheckedIconClassName","propTypes","oneOfType","number","string","className","arrayOf","node","isRequired","inline","bool","onChange","func","_deprecated"],"mappings":";;;;;;;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;;;;;;;+eALA;;;AAOA;;AAEA;;;;;;;IAOqBA,U;;;;;;;;;;;6BAiBV;AAAA,mBACwB,KAAKC,KAD7B;AAAA,UACCC,QADD,UACCA,QADD;AAAA,UACcD,KADd;;AAEP,aAAOA,MAAME,EAAb;AACA,aAAOF,MAAMG,YAAb;;AAHO,oBAKoB,KAAKH,KALzB;AAAA,UAKDE,EALC,WAKDA,EALC;AAAA,UAKGC,YALH,WAKGA,YALH;;AAMP,UAAI,CAACD,EAAL,EAAS;AACPA,aAAQF,MAAMI,IAAd;AACD;;AAED,UAAI,OAAOJ,MAAMK,KAAb,KAAuB,WAA3B,EAAwC;AACtC,YAAI,OAAOF,YAAP,KAAwB,WAA5B,EAAyC;AACvCA,yBAAe,gBAASG,GAAT,CAAaL,QAAb,EAAuB;AAAA,gBAAYI,KAAZ,QAAGL,KAAH,CAAYK,KAAZ;AAAA,mBAA0BA,KAA1B;AAAA,WAAvB,EAAwD,CAAxD,CAAf;AACD;AACF;;AAED,UAAME,WAAW,gBAASD,GAAT,CAAaL,QAAb,EAAuB,iBAAS;AAC/C,YAAMD,QAAQQ,OAAOC,MAAP,CAAc,EAAd,EAAkBC,MAAMV,KAAxB,CAAd;AACA,eAAOA,MAAMW,WAAb;AACA,eAAOX,MAAMY,aAAb;AACA,eAAOZ,MAAMa,mBAAb;AACA,eAAOb,MAAMc,oBAAb;AACA,eAAOd,MAAMe,qBAAb;AACA,eAAOf,MAAMgB,sBAAb;AACA,4BAAYhB,KAAZ;AACD,OATgB,CAAjB;AAUA,aAAO,4EAA2BA,KAA3B,IAAkC,IAAIE,EAAtC,EAA0C,cAAcC,YAAxD,EAAsE,MAAK,OAA3E,EAAmF,UAAUI,QAA7F,IAAP;AACD;;;;;;AA5CkBR,U,CACZkB,S,GAAY;AACjBf,MAAI,oBAAUgB,SAAV,CAAoB,CACtB,oBAAUC,MADY,EAEtB,oBAAUC,MAFY,CAApB,CADa;AAKjBjB,gBAAc,oBAAUiB,MALP;AAMjBC,aAAW,oBAAUD,MANJ;AAOjBnB,YAAU,oBAAUqB,OAAV,CAAkB,oBAAUC,IAA5B,EAAkCC,UAP3B;AAQjBC,UAAQ,oBAAUC,IARD;AASjBC,YAAU,oBAAUC,IATH;AAUjBxB,QAAM,oBAAUgB,MAVC;AAWjBf,SAAO,oBAAUe,MAXA;;AAajBS,eAAa,0BAAW,oBAAUH,IAArB,EAA2B,mDAA3B;AAbI,C;kBADA3B,U","file":"RadioGroup.js","sourcesContent":["/* eslint-disable no-unused-vars, no-shadow */\r\nimport React, { PureComponent, Children } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport deprecated from 'react-prop-types/lib/deprecated';\r\n\r\nimport SelectionControlGroup from './SelectionControlGroup';\r\n\r\n// This will still work, but generate a lot of warnings\r\n\r\n/**\r\n * The `RadioGroup` component is a state manager for the `Radio` component.\r\n * It will automatically inject the name, an onChange function, and\r\n * determine whether a radio is checked.\r\n *\r\n * This is just a simple wrapper to reduce some prop redundancy.\r\n */\r\nexport default class RadioGroup extends PureComponent {\r\n  static propTypes = {\r\n    id: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n    defaultValue: PropTypes.string,\r\n    className: PropTypes.string,\r\n    children: PropTypes.arrayOf(PropTypes.node).isRequired,\r\n    inline: PropTypes.bool,\r\n    onChange: PropTypes.func,\r\n    name: PropTypes.string,\r\n    value: PropTypes.string,\r\n\r\n    _deprecated: deprecated(PropTypes.bool, 'Use the `SelectionControlGroup` component instead'),\r\n  };\r\n\r\n  render() {\r\n    const { children, ...props } = this.props;\r\n    delete props.id;\r\n    delete props.defaultValue;\r\n\r\n    let { id, defaultValue } = this.props;\r\n    if (!id) {\r\n      id = `${props.name}-radios-unique-please`;\r\n    }\r\n\r\n    if (typeof props.value === 'undefined') {\r\n      if (typeof defaultValue === 'undefined') {\r\n        defaultValue = Children.map(children, ({ props: { value } }) => value)[0];\r\n      }\r\n    }\r\n\r\n    const controls = Children.map(children, radio => {\r\n      const props = Object.assign({}, radio.props);\r\n      delete props.checkedIcon;\r\n      delete props.uncheckedIcon;\r\n      delete props.checkedIconChildren;\r\n      delete props.checkedIconClassName;\r\n      delete props.uncheckedIconChildren;\r\n      delete props.uncheckedIconClassName;\r\n      return { ...props };\r\n    });\r\n    return <SelectionControlGroup {...props} id={id} defaultValue={defaultValue} type=\"radio\" controls={controls} />;\r\n  }\r\n}\r\n"]}