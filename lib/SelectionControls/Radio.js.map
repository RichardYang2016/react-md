{"version":3,"sources":["../../src/js/SelectionControls/Radio.js"],"names":["Radio","props","checkedIcon","uncheckedIcon","checkedIconChildren","checkedIconClassName","uncheckedIconChildren","uncheckedIconClassName","checked","unchecked","propTypes","id","oneOfType","string","number","style","object","className","label","node","isRequired","labelBefore","bool","name","disabled","onChange","func","value","inline","defaultProps"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;;;;;;;;;;;AAEA;;;;;;IAMqBA,K;;;;;;;;;;;6BA8FV;AAAA,mBAUH,KAAKC,KAVF;AAAA,UAELC,WAFK,UAELA,WAFK;AAAA,UAGLC,aAHK,UAGLA,aAHK;AAAA,UAKLC,mBALK,UAKLA,mBALK;AAAA,UAMLC,oBANK,UAMLA,oBANK;AAAA,UAOLC,qBAPK,UAOLA,qBAPK;AAAA,UAQLC,sBARK,UAQLA,sBARK;AAAA,UASFN,KATE;;AAYP,UAAMO,UAAU,iCAAkBH,oBAAlB,EAAwCD,mBAAxC,EAA6DF,WAA7D,CAAhB;AACA,UAAMO,YAAY,iCAAkBF,sBAAlB,EAA0CD,qBAA1C,EAAiEH,aAAjE,CAAlB;;AAEA,aACE;AACE,cAAK,OADP;AAEE,6BAAqBK,OAFvB;AAGE,+BAAuBC,SAHzB;AAIE;AAJF,SAKMR,KALN,EADF;AASD;;;;;;AAtHkBD,K,CACZU,S,GAAY;AACjB;;;;AAIAC,MAAI,iCAAkB,oBAAUC,SAAV,CAAoB,CACxC,oBAAUC,MAD8B,EAExC,oBAAUC,MAF8B,CAApB,CAAlB,CALa;;AAUjB;;;AAGAC,SAAO,oBAAUC,MAbA;;AAejB;;;AAGAC,aAAW,oBAAUJ,MAlBJ;;AAoBjB;;;;AAIAK,SAAO,oBAAUC,IAAV,CAAeC,UAxBL;;AA0BjB;;;AAGAC,eAAa,oBAAUC,IA7BN;;AA+BjB;;;AAGAC,QAAM,iCAAkB,oBAAUX,SAAV,CAAoB,CAC1C,oBAAUE,MADgC,EAE1C,oBAAUD,MAFgC,CAApB,CAAlB,CAlCW;;AAuCjB;;;AAGAW,YAAU,oBAAUF,IA1CH;;AA4CjB;;;;;;;;AAQAG,YAAU,oBAAUC,IApDH;;AAsDjB;;;AAGAC,SAAO,oBAAUf,SAAV,CAAoB,CACzB,oBAAUU,IADe,EAEzB,oBAAUR,MAFe,EAGzB,oBAAUD,MAHe,CAApB,EAIJO,UA7Dc;;AA+DjB;;;AAGAZ,WAAS,oBAAUc,IAAV,CAAeF,UAlEP;;AAoEjB;;;AAGAQ,UAAQ,oBAAUN,IAvED;;AAyEjB;;;AAGApB,eAAa,oBAAUiB,IAAV,CAAeC,UA5EX;;AA8EjB;;;AAGAjB,iBAAe,oBAAUgB,IAAV,CAAeC,UAjFb;AAkFjBhB,uBAAqB,0BAAW,oBAAUe,IAArB,EAA2B,2BAA3B,CAlFJ;AAmFjBd,wBAAsB,0BAAW,oBAAUQ,MAArB,EAA6B,2BAA7B,CAnFL;AAoFjBP,yBAAuB,0BAAW,oBAAUa,IAArB,EAA2B,6BAA3B,CApFN;AAqFjBZ,0BAAwB,0BAAW,oBAAUM,MAArB,EAA6B,6BAA7B;AArFP,C;AADAb,K,CAyFZ6B,Y,GAAe;AACpB3B,eAAa;AAAA;AAAA;AAAA;AAAA,GADO;AAEpBC,iBAAe;AAAA;AAAA;AAAA;AAAA;AAFK,C;kBAzFHH,K","file":"Radio.js","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport deprecated from 'react-prop-types/lib/deprecated';\r\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\r\n\r\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\r\nimport FontIcon from '../FontIcons/FontIcon';\r\nimport SelectionControl from './SelectionControl';\r\n\r\n/**\r\n * The `Radio` component is used for the selection of a single option from a set. Unfortunately\r\n * the `Radio` component must always be controlled because of the `FontIcon` toggles and how\r\n * the `radio` input type works. It is recommended to use the `SelectionControlGroup` component\r\n * to manage the `radio`.\r\n */\r\nexport default class Radio extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * An id to use with the radio. This is used for accessibility and so that the label\r\n     * triggers the radio toggle.\r\n     */\r\n    id: isRequiredForA11y(PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number,\r\n    ])),\r\n\r\n    /**\r\n     * An optional style to apply to the radio's container.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the radio's container.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * A label to display with the radio. This is required for accessibility and triggering\r\n     * the toggle.\r\n     */\r\n    label: PropTypes.node.isRequired,\r\n\r\n    /**\r\n     * Boolean if the label should appear before the radio icon.\r\n     */\r\n    labelBefore: PropTypes.bool,\r\n\r\n    /**\r\n     * A name to use for the `Radio`. This is required for accessibility.\r\n     */\r\n    name: isRequiredForA11y(PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ])),\r\n\r\n    /**\r\n     * Boolean if the `Radio` is disabled.\r\n     */\r\n    disabled: PropTypes.bool,\r\n\r\n    /**\r\n     * A function to call when the `Radio` triggers the `change` event. The `onChange` callback\r\n     * will include the current value of the checked `radio` and the change event.\r\n     *\r\n     * ```js\r\n     * onChange(changeEvent.target.value, changeEvent);\r\n     * ```\r\n     */\r\n    onChange: PropTypes.func,\r\n\r\n    /**\r\n     * The value for the `Radio` component.\r\n     */\r\n    value: PropTypes.oneOfType([\r\n      PropTypes.bool,\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]).isRequired,\r\n\r\n    /**\r\n     * A boolean if the `Radio` is currently checked.\r\n     */\r\n    checked: PropTypes.bool.isRequired,\r\n\r\n    /**\r\n     * Boolean if the `Radio` should be displayed inline.\r\n     */\r\n    inline: PropTypes.bool,\r\n\r\n    /**\r\n     * The icon to display when the radio is checked/selected.\r\n     */\r\n    checkedIcon: PropTypes.node.isRequired,\r\n\r\n    /**\r\n     * The icon to display when the radio is not checked/selected.\r\n     */\r\n    uncheckedIcon: PropTypes.node.isRequired,\r\n    checkedIconChildren: deprecated(PropTypes.node, 'Use `checkedIcon` instead'),\r\n    checkedIconClassName: deprecated(PropTypes.string, 'Use `checkedIcon` instead'),\r\n    uncheckedIconChildren: deprecated(PropTypes.node, 'Use `uncheckedIcon` instead'),\r\n    uncheckedIconClassName: deprecated(PropTypes.string, 'Use `uncheckedIcon` instead'),\r\n  };\r\n\r\n  static defaultProps = {\r\n    checkedIcon: <FontIcon>radio_button_checked</FontIcon>,\r\n    uncheckedIcon: <FontIcon>radio_button_unchecked</FontIcon>,\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      checkedIcon,\r\n      uncheckedIcon,\r\n      // deprecated\r\n      checkedIconChildren,\r\n      checkedIconClassName,\r\n      uncheckedIconChildren,\r\n      uncheckedIconClassName,\r\n      ...props\r\n    } = this.props;\r\n\r\n    const checked = getDeprecatedIcon(checkedIconClassName, checkedIconChildren, checkedIcon);\r\n    const unchecked = getDeprecatedIcon(uncheckedIconClassName, uncheckedIconChildren, uncheckedIcon);\r\n\r\n    return (\r\n      <SelectionControl\r\n        type=\"radio\"\r\n        checkedCheckboxIcon={checked}\r\n        uncheckedCheckboxIcon={unchecked}\r\n        __superSecreteProp\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n}\r\n"]}