{"version":3,"sources":["../../src/js/Snackbars/Snackbar.js"],"names":["Snackbar","_handleClick","e","props","onDismiss","action","toast","leaveTimeout","multiline","onClick","_fab","_animateForSnackbar","_clearTimeout","_timeout","clearTimeout","_handleAutohide","autohide","autohideTimeout","window","addEventListener","_handleWindowBlur","_eventType","setTimeout","removeEventListener","state","_handleWindowFocus","fab","onAppear","getComposedComponent","className","propId","id","text","Component","btnProps","flat","children","secondary","Object","assign","role","propTypes","oneOfType","number","string","style","object","node","func","isRequired","shape","label","bool"],"mappings":"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","file":"Snackbar.js","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport Button from '../Buttons/Button';\r\nimport isInvalidAnimate from './isInvalidAnimate';\r\n\r\nexport default class Snackbar extends PureComponent {\r\n  static propTypes = {\r\n    id: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    children: PropTypes.node,\r\n    onDismiss: PropTypes.func.isRequired,\r\n    toast: PropTypes.shape({\r\n      text: PropTypes.node.isRequired,\r\n      action: PropTypes.oneOfType([\r\n        PropTypes.node,\r\n        PropTypes.shape({\r\n          label: PropTypes.node,\r\n          children: PropTypes.node,\r\n          onClick: PropTypes.func,\r\n        }),\r\n      ]),\r\n      onAppear: PropTypes.func,\r\n    }).isRequired,\r\n    multiline: PropTypes.bool,\r\n    autohide: PropTypes.bool,\r\n    autohideTimeout: PropTypes.number,\r\n    fab: PropTypes.object,\r\n    leaveTimeout: PropTypes.number.isRequired,\r\n  };\r\n\r\n  componentWillMount() {\r\n    const { fab, multiline, toast: { onAppear } } = this.props;\r\n    if (onAppear) {\r\n      onAppear();\r\n    }\r\n\r\n    if (!fab || isInvalidAnimate(fab)) {\r\n      return;\r\n    }\r\n\r\n    this._fab = fab.getComposedComponent().getComposedComponent();\r\n    this._fab._animateForSnackbar(multiline);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._handleAutohide();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._clearTimeout();\r\n\r\n    if (this._eventType === 'focus') {\r\n      window.removeEventListener('focus', this._handleWindowFocus);\r\n    } else if (this._eventType === 'blur') {\r\n      window.removeEventListener('blur', this._handleWindowBlur);\r\n    }\r\n  }\r\n\r\n  _handleClick = (e) => {\r\n    const { onDismiss, toast: { action }, leaveTimeout, multiline } = this.props;\r\n    if (typeof action.onClick === 'function') {\r\n      action.onClick(e);\r\n    }\r\n\r\n    if (this._fab) {\r\n      this._fab._animateForSnackbar(multiline, leaveTimeout);\r\n    }\r\n\r\n    onDismiss();\r\n  };\r\n\r\n  _clearTimeout = () => {\r\n    if (this._timeout) {\r\n      clearTimeout(this._timeout);\r\n      this._timeout = null;\r\n    }\r\n  };\r\n\r\n  _handleAutohide = () => {\r\n    const { autohide, autohideTimeout, onDismiss, multiline, leaveTimeout } = this.props;\r\n    if (!autohide) {\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('blur', this._handleWindowBlur);\r\n    this._eventType = 'blur';\r\n    this._timeout = setTimeout(() => {\r\n      this._timeout = null;\r\n      this._eventType = null;\r\n\r\n      window.removeEventListener('blur', this._handleWindowBlur);\r\n\r\n      if (this._fab) {\r\n        this._fab._animateForSnackbar(multiline, leaveTimeout);\r\n      }\r\n\r\n      onDismiss();\r\n    }, autohideTimeout || this.state.toast);\r\n  };\r\n\r\n  _handleWindowBlur = () => {\r\n    this._clearTimeout();\r\n    window.removeEventListener('blur', this._handleWindowBlur);\r\n    window.addEventListener('focus', this._handleWindowFocus);\r\n    this._eventType = 'focus';\r\n  };\r\n\r\n  _handleWindowFocus = () => {\r\n    window.removeEventListener('focus', this._handleWindowFocus);\r\n    this._eventType = null;\r\n    this._handleAutohide();\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      className,\r\n      toast,\r\n      multiline,\r\n      /* eslint-disable no-unused-vars */\r\n      id: propId,\r\n      fab,\r\n      autohide,\r\n      autohideTimeout,\r\n      leaveTimeout,\r\n      onDismiss,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n    let { text, action } = toast;\r\n    let { id } = this.props;\r\n\r\n    let Component = 'p';\r\n    if (action) {\r\n      Component = 'section';\r\n      text = <p className=\"md-snackbar--toast md-snackbar--action\">{text}</p>;\r\n\r\n      let btnProps = {\r\n        flat: true,\r\n        onClick: this._handleClick,\r\n        children: action,\r\n        secondary: true,\r\n        className: 'md-btn--snackbar',\r\n      };\r\n\r\n      if (typeof action !== 'string') {\r\n        btnProps = Object.assign(btnProps, action, {\r\n          className: cn(btnProps.className, action.className),\r\n          onClick: this._handleClick,\r\n        });\r\n      }\r\n\r\n\r\n      action = <Button {...btnProps} />;\r\n    }\r\n\r\n    if (!id) {\r\n      id = `snackbar-alert${action ? '-dialog' : ''}`;\r\n    }\r\n\r\n    const role = `alert${action ? 'dialog' : ''}`;\r\n    return (\r\n      <Component\r\n        {...props}\r\n        id={id}\r\n        role={role}\r\n        className={cn('md-snackbar', {\r\n          'md-snackbar--multiline': multiline,\r\n          'md-snackbar--toast': !action,\r\n        }, className)}\r\n      >\r\n        {text}\r\n        {action}\r\n      </Component>\r\n    );\r\n  }\r\n}\r\n"]}