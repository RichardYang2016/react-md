{"version":3,"sources":["../../src/js/Pickers/Year.js"],"names":["Year","state","desktopActive","_setActiveFocus","btn","props","active","focus","_setActive","setState","_setInactive","_handleClick","e","onClick","year","className","text","primary","propTypes","string","bool","isRequired","func","number"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA;;;;;;;;;;;;AAEA;;;;IAIqBA,I;;;;;;;;;;;;;;kLAQnBC,K,GAAQ,EAAEC,eAAe,KAAjB,E,QAERC,e,GAAkB,UAACC,GAAD,EAAS;AACzB,UAAIA,OAAO,MAAKC,KAAL,CAAWC,MAAtB,EAA8B;AAC5BF,YAAIG,KAAJ;AACD;AACF,K,QAEDC,U,GAAa,YAAM;AACjB,YAAKC,QAAL,CAAc,EAAEP,eAAe,IAAjB,EAAd;AACD,K,QAEDQ,Y,GAAe,YAAM;AACnB,YAAKD,QAAL,CAAc,EAAEP,eAAe,KAAjB,EAAd;AACD,K,QAEDS,Y,GAAe,UAACC,CAAD,EAAO;AACpB,YAAKP,KAAL,CAAWQ,OAAX,CAAmB,MAAKR,KAAL,CAAWS,IAA9B,EAAoCF,CAApC;AACD,K;;;;;6BAEQ;AAAA,UACCV,aADD,GACmB,KAAKD,KADxB,CACCC,aADD;AAAA,mBAE6B,KAAKG,KAFlC;AAAA,UAECC,MAFD,UAECA,MAFD;AAAA,UAESS,SAFT,UAESA,SAFT;AAAA,UAEoBD,IAFpB,UAEoBA,IAFpB;;AAGP,aACE;AAAA;AAAA;AACE,gBAAK,QADP;AAEE,eAAK,KAAKX,eAFZ;AAGE,qBAAW,0BAAG,SAAH,EAAc,EAAE,mBAAmBG,MAArB,EAAd,EAA6C,2BAAY;AAClEU,kBAAM,CAACV,MAAD,IAAW,CAACJ,aADgD;AAElEe,qBAASX,UAAUJ;AAF+C,WAAZ,CAA7C,EAGP,wCAHO,EAGmCa,SAHnC,CAHb;AAOE,mBAAS,KAAKJ;AAPhB;AASGG;AATH,OADF;AAaD;;;;;;AA5CkBd,I,CACZkB,S,GAAY;AACjBH,aAAW,oBAAUI,MADJ;AAEjBb,UAAQ,oBAAUc,IAAV,CAAeC,UAFN;AAGjBR,WAAS,oBAAUS,IAAV,CAAeD,UAHP;AAIjBP,QAAM,oBAAUS,MAAV,CAAiBF;AAJN,C;kBADArB,I","file":"Year.js","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport themeColors from '../utils/themeColors';\r\n\r\n/**\r\n * This is a component for rendering a year in the Date Picker's Year picker\r\n * list.\r\n */\r\nexport default class Year extends PureComponent {\r\n  static propTypes = {\r\n    className: PropTypes.string,\r\n    active: PropTypes.bool.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n  };\r\n\r\n  state = { desktopActive: false };\r\n\r\n  _setActiveFocus = (btn) => {\r\n    if (btn && this.props.active) {\r\n      btn.focus();\r\n    }\r\n  };\r\n\r\n  _setActive = () => {\r\n    this.setState({ desktopActive: true });\r\n  };\r\n\r\n  _setInactive = () => {\r\n    this.setState({ desktopActive: false });\r\n  };\r\n\r\n  _handleClick = (e) => {\r\n    this.props.onClick(this.props.year, e);\r\n  };\r\n\r\n  render() {\r\n    const { desktopActive } = this.state;\r\n    const { active, className, year } = this.props;\r\n    return (\r\n      <button\r\n        type=\"button\"\r\n        ref={this._setActiveFocus}\r\n        className={cn('md-year', { 'md-year--active': active }, themeColors({\r\n          text: !active && !desktopActive,\r\n          primary: active || desktopActive,\r\n        }), 'md-btn md-pointer--hover md-full-width', className)}\r\n        onClick={this._handleClick}\r\n      >\r\n        {year}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n"]}