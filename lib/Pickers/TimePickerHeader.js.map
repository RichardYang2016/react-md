{"version":3,"sources":["../../src/js/Pickers/TimePickerHeader.js"],"names":["TimePickerHeader","_setHour","props","setTimeMode","_setMinute","timeMode","hours","minutes","timePeriod","setTempTime","tempTime","timePeriods","propTypes","instanceOf","Date","isRequired","oneOf","func","string"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AAEA;;;;AACA;;;;;;;;;;;;AAEA;;;;;IAKqBA,gB;;;;;;;;;;;;;;0MAyCnBC,Q,GAAW,YAAM;AACf,YAAKC,KAAL,CAAWC,WAAX,CAAuB,MAAvB;AACD,K,QAEDC,U,GAAa,YAAM;AACjB,YAAKF,KAAL,CAAWC,WAAX,CAAuB,QAAvB;AACD,K;;;;;6BAEQ;AAAA,mBACiE,KAAKD,KADtE;AAAA,UACCG,QADD,UACCA,QADD;AAAA,UACWC,KADX,UACWA,KADX;AAAA,UACkBC,OADlB,UACkBA,OADlB;AAAA,UAC2BC,UAD3B,UAC2BA,UAD3B;AAAA,UACuCC,WADvC,UACuCA,WADvC;AAAA,UACoDC,QADpD,UACoDA,QADpD;;AAEP,UAAIC,oBAAJ;AACA,UAAIH,UAAJ,EAAgB;AACdG,sBAAc,uDAAa,UAAUD,QAAvB,EAAiC,aAAaD,WAA9C,EAA2D,YAAYD,UAAvE,GAAd;AACD;;AAED,aACE;AAAA;AAAA,UAAQ,WAAU,gCAAlB;AACE;AAAA;AAAA,YAAe,SAAS,KAAKP,QAA7B,EAAuC,QAAQI,aAAa,MAA5D;AACE;AAAA;AAAA,cAAI,WAAU,cAAd;AACGC;AADH;AADF,SADF;AAME;AAAA;AAAA,YAAe,SAAS,KAAKF,UAA7B,EAAyC,QAAQC,aAAa,QAA9D;AACE;AAAA;AAAA,cAAI,WAAU,cAAd;AACGE;AADH;AADF,SANF;AAWGI;AAXH,OADF;AAeD;;;;;;AAvEkBX,gB,CACZY,S,GAAY;AACjB;;;AAGAF,YAAU,oBAAUG,UAAV,CAAqBC,IAArB,EAA2BC,UAJpB;;AAMjB;;;AAGAV,YAAU,oBAAUW,KAAV,CAAgB,CAAC,MAAD,EAAS,QAAT,CAAhB,EAAoCD,UAT7B;;AAWjB;;;AAGAZ,eAAa,oBAAUc,IAAV,CAAeF,UAdX;;AAgBjB;;;AAGAN,eAAa,oBAAUQ,IAAV,CAAeF,UAnBX;;AAqBjB;;;;AAIAT,SAAO,oBAAUY,MAAV,CAAiBH,UAzBP;;AA2BjB;;;;AAIAR,WAAS,oBAAUW,MAAV,CAAiBH,UA/BT;;AAiCjB;;;;AAIAP,cAAY,oBAAUU;AArCL,C;kBADAlB,gB","file":"TimePickerHeader.js","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport TimePeriods from './TimePeriods';\r\nimport PickerControl from './PickerControl';\r\n\r\n/**\r\n * The `TimePickerHeader` component is used for rendering the\r\n * current time for the `TimePicker` as well as switching between\r\n * the different views for the time picker.\r\n */\r\nexport default class TimePickerHeader extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * The current time of the time picker.\r\n     */\r\n    tempTime: PropTypes.instanceOf(Date).isRequired,\r\n\r\n    /**\r\n     * The current time type that is being changed.\r\n     */\r\n    timeMode: PropTypes.oneOf(['hour', 'minute']).isRequired,\r\n\r\n    /**\r\n     * A function to update the time mode.\r\n     */\r\n    setTimeMode: PropTypes.func.isRequired,\r\n\r\n    /**\r\n     * A function to update the time for the time picker.\r\n     */\r\n    setTempTime: PropTypes.func.isRequired,\r\n\r\n    /**\r\n     * A formatted hours string for the user's locale. This\r\n     * would be '3' for en-US if the time was '3:15'\r\n     */\r\n    hours: PropTypes.string.isRequired,\r\n\r\n    /**\r\n     * A formatted minutes string for the user's locale.\r\n     * This would be ':15' for en-US if the time was '3:15'.\r\n     */\r\n    minutes: PropTypes.string.isRequired,\r\n\r\n    /**\r\n     * An optional time period to use for locales that use\r\n     * 12 hour clocks and AM/PM.\r\n     */\r\n    timePeriod: PropTypes.string,\r\n  };\r\n\r\n  _setHour = () => {\r\n    this.props.setTimeMode('hour');\r\n  };\r\n\r\n  _setMinute = () => {\r\n    this.props.setTimeMode('minute');\r\n  };\r\n\r\n  render() {\r\n    const { timeMode, hours, minutes, timePeriod, setTempTime, tempTime } = this.props;\r\n    let timePeriods;\r\n    if (timePeriod) {\r\n      timePeriods = <TimePeriods tempTime={tempTime} setTempTime={setTempTime} timePeriod={timePeriod} />;\r\n    }\r\n\r\n    return (\r\n      <header className=\"md-picker-header md-text-right\">\r\n        <PickerControl onClick={this._setHour} active={timeMode === 'hour'}>\r\n          <h4 className=\"md-display-3\">\r\n            {hours}\r\n          </h4>\r\n        </PickerControl>\r\n        <PickerControl onClick={this._setMinute} active={timeMode === 'minute'}>\r\n          <h4 className=\"md-display-3\">\r\n            {minutes}\r\n          </h4>\r\n        </PickerControl>\r\n        {timePeriods}\r\n      </header>\r\n    );\r\n  }\r\n}\r\n"]}