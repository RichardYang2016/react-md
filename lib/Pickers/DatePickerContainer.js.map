{"version":3,"sources":["../../src/js/Pickers/DatePickerContainer.js"],"names":["DatePickerContainer","props","date","value","defaultValue","DateTimeFormat","locales","formatOptions","minDate","maxDate","_getDate","format","Date","_validateDateRange","defaultCalendarDate","initialCalendarDate","calendarTempDate","visible","initiallyOpen","defaultVisible","state","calendarDate","calendarMode","initialCalendarMode","defaultCalendarMode","nextProps","minEqual","maxEqual","setState","prevProps","prevState","inline","isOpen","pVisible","_handleOutsideClick","window","addEventListener","_closeOnEsc","removeEventListener","style","className","pickerStyle","pickerClassName","pickerHeaderClassName","pickerContentClassName","pickerFooterClassName","inputStyle","inputClassName","textFieldStyle","textFieldClassName","label","placeholder","icon","displayMode","fullWidth","lineDirection","id","disabled","closeOnEsc","animateInline","portal","renderNode","lastChild","block","paddedBlock","active","error","floating","required","leftIconStateful","rightIcon","rightIconStateful","customSize","errorText","helpText","helpOnFocus","inlineIndicator","disableScrollLocking","ariaLabel","propNextIcon","nextIcon","propPreviousIcon","previousIcon","previousIconChildren","previousIconClassName","nextIconChildren","nextIconClassName","propValue","propVisible","onChange","readOnly","onVisibilityChange","adjustMinWidth","picker","_handleCancelClick","_handleOkClick","_changeCalendarMode","_previousMonth","_nextMonth","_setCalendarTempDate","_setCalendarTempYear","content","_setContainer","_toggleOpen","_handleKeyDown","_getFormattedValue","propTypes","oneOfType","string","number","object","calendarClassName","yearPickerClassName","node","bool","instanceOf","func","isRequired","arrayOf","okLabel","okPrimary","cancelLabel","cancelPrimary","oneOf","propName","component","others","err","Error","autoOk","yearsDisplayed","shape","weekday","era","year","month","day","hour","minute","second","timeZoneName","firstDayOfWeek","disableWeekEnds","showAllDays","disableOuterDates","calendarDateClassName","calendarOuterDateClassName","calendarTitleClassName","calendarTitleFormat","calendarWeekdayClassName","calendarWeekdayFormat","initialYearsDisplayed","defaultProps","navigator","userLanguage","language","container","_container","e","which","keyCode","contains","target","_timeout","setTimeout","getFullYear","nextDate","setFullYear","nextTemp"],"mappings":"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","file":"DatePickerContainer.js","sourcesContent":["/* eslint-disable new-cap,no-shadow */\r\nimport React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\r\nimport deprecated from 'react-prop-types/lib/deprecated';\r\n\r\nimport { ESC, TAB } from '../constants/keyCodes';\r\nimport getField from '../utils/getField';\r\nimport handleWindowClickListeners from '../utils/EventUtils/handleWindowClickListeners';\r\nimport handleKeyboardAccessibility from '../utils/EventUtils/handleKeyboardAccessibility';\r\nimport controlled from '../utils/PropTypes/controlled';\r\nimport addDate from '../utils/dates/addDate';\r\nimport isSameDay from '../utils/dates/isSameDay';\r\nimport DateTimeFormat from '../utils/DateUtils/DateTimeFormat';\r\n\r\nimport Collapse from '../Helpers/Collapse';\r\nimport FontIcon from '../FontIcons/FontIcon';\r\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\r\nimport TextField from '../TextFields/TextField';\r\nimport Dialog from '../Dialogs/DialogContainer';\r\nimport DatePicker from './DatePicker';\r\n\r\n/**\r\n * The `DatePickerContainer` component is a wrapper for the main `DatePicker` component\r\n * to manage the state and _logic_ for rendering the `DatePicker`. This component will\r\n * either render inline or in a `Dialog` depending if the `inline` prop is set to `true`.\r\n *\r\n * NOTE: This component is actually exported as `DatePicker` when using the `import { member }` syntax.\r\n * The following two lines are equivalent:\r\n *\r\n * ```js\r\n * import { DatePicker } from 'react-md/lib/Pickers';\r\n * import DatePicker from 'react-md/lib/Pickers/DatePickerContainer';\r\n * ```\r\n */\r\nexport default class DatePickerContainer extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * An id for the text field in the date picker. This is require for a11y.\r\n     */\r\n    id: isRequiredForA11y(PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number,\r\n    ])),\r\n\r\n    /**\r\n     * An aria label for the dialog. This is required for a11y.\r\n     */\r\n    'aria-label': isRequiredForA11y(PropTypes.string),\r\n\r\n    /**\r\n     * An optional style to apply to the date picker's container.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the date picker's container.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the date picker.\r\n     */\r\n    pickerStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the date picker.\r\n     */\r\n    pickerClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional className to apply to the header of date picker.\r\n     */\r\n    pickerHeaderClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional className to apply to the content container of date picker.\r\n     */\r\n    pickerContentClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional className to apply to the footer of date picker.\r\n     */\r\n    pickerFooterClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional className to apply to the calendar container of date picker.\r\n     */\r\n    calendarClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional className to apply to the year picker of date picker.\r\n     */\r\n    yearPickerClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the input tag.\r\n     */\r\n    inputStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the input tag.\r\n     */\r\n    inputClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the text field's container.\r\n     */\r\n    textFieldStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the text field's container.\r\n     */\r\n    textFieldClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional icon to display with the date picker.\r\n     *\r\n     * @see {@link TextFields/TextField#leftIcon}\r\n     */\r\n    icon: PropTypes.node,\r\n\r\n    /**\r\n     * Boolean if the date picker is open by default.\r\n     */\r\n    defaultVisible: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional label to be displayed in the date picker's text\r\n     * field.\r\n     */\r\n    label: PropTypes.node,\r\n\r\n    /**\r\n     * An optional placeholder to be displayed in the date picker's text field.\r\n     */\r\n    placeholder: PropTypes.string,\r\n\r\n    /**\r\n     * The value of the date picker. This will make the date picker\r\n     * be a controlled component. This value should either be a\r\n     * formatted date string or a date object.\r\n     */\r\n    value: controlled(PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.instanceOf(Date),\r\n    ]), 'onChange', 'defaultValue'),\r\n\r\n    /**\r\n     * An optional default value to give for the date picker. This should\r\n     * either be a formatted date string or a date object.\r\n     */\r\n    defaultValue: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.instanceOf(Date),\r\n    ]),\r\n\r\n    /**\r\n     * An optional date to use when the calendar is opened for the first time.\r\n     * If this is omitted, it will either be the `defaultValue`, `value`, or\r\n     * today.\r\n     */\r\n    defaultCalendarDate: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.instanceOf(Date),\r\n    ]),\r\n\r\n    /**\r\n     * An optional function to call when the selected date is changed\r\n     * by hitting the OK button. The newly formatted date string,\r\n     * the new Date object, and the change event will be given.\r\n     *\r\n     * `onChange(dateString, dateObject, event)`.\r\n     */\r\n    onChange: PropTypes.func,\r\n\r\n    /**\r\n     * A function to format the dates since it should be formatted to the user's\r\n     * locale. This _should_ be the `Intl.DateTimeFormat` function. You\r\n     * can also create your own if you really wanted. Inadvisable though.\r\n     *\r\n     * See [intl-polyfill](https://github.com/andyearnshaw/Intl.js/) for more info.\r\n     */\r\n    DateTimeFormat: PropTypes.func.isRequired,\r\n\r\n    /**\r\n     * The locales to use for formatting the date. This will default to using\r\n     * the user's language in the browser or `'en-US'` when server rendering.\r\n     */\r\n    locales: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.arrayOf(PropTypes.string),\r\n    ]).isRequired,\r\n\r\n    /**\r\n     * The label to use for the ok button on the date picker.\r\n     */\r\n    okLabel: PropTypes.node.isRequired,\r\n\r\n    /**\r\n     * Boolean if the ok button should be styled with the primary color.\r\n     */\r\n    okPrimary: PropTypes.bool,\r\n\r\n    /**\r\n     * The label to use for the cancel button on the date picker.\r\n     */\r\n    cancelLabel: PropTypes.node.isRequired,\r\n\r\n    /**\r\n     * Boolean if the cancel button should be styled with the primary color.\r\n     */\r\n    cancelPrimary: PropTypes.bool,\r\n\r\n    /**\r\n     * The initial mode to open the calendar in.\r\n     */\r\n    defaultCalendarMode: PropTypes.oneOf(['calendar', 'year']),\r\n\r\n    /**\r\n     * The icon to use to display the previous month icon in the calendar.\r\n     */\r\n    previousIcon: PropTypes.node,\r\n\r\n    /**\r\n     * The icon to use to display the next month icon in the calendar.\r\n     */\r\n    nextIcon: PropTypes.node,\r\n\r\n    /**\r\n     * An optional min date to use for the date picker. This will prevent\r\n     * any dates before this time to be chosen.\r\n     */\r\n    minDate: PropTypes.instanceOf(Date),\r\n\r\n    /**\r\n     * An optional max date to use for the date picker. This will prevent\r\n     * any dates after this time to be chosen.\r\n     */\r\n    maxDate: (props, propName, component, ...others) => {\r\n      const err = PropTypes.instanceOf(Date)(props, propName, component, ...others);\r\n      if (err || !props.minDate || !props[propName]) {\r\n        return err;\r\n      }\r\n\r\n      const { minDate, maxDate } = props;\r\n      if (minDate > maxDate) {\r\n        return new Error(\r\n          `The min date: '${minDate}' is greater than the max date: '${maxDate}'`\r\n        );\r\n      }\r\n\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * Boolean if the date should automatically be selected when a user clicks\r\n     * on a new date instead of making them hit the ok button.\r\n     */\r\n    autoOk: PropTypes.bool,\r\n\r\n    /**\r\n     * The number of years to display.\r\n     */\r\n    yearsDisplayed: PropTypes.number,\r\n\r\n    /**\r\n     * Boolean if the date picker should be displayed inline instead of in a\r\n     * dialog.\r\n     */\r\n    inline: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional force of the display mode of the date picker.\r\n     * This _should_ not really be used since there are media queries\r\n     * to use the correct mode based on device orientation.\r\n     */\r\n    displayMode: PropTypes.oneOf(['landscape', 'portrait']),\r\n\r\n    /**\r\n     * The DateTimeFormat options to apply to format the date.\r\n     */\r\n    formatOptions: PropTypes.shape({\r\n      weekday: PropTypes.oneOf(['narrow', 'short', 'long']),\r\n      era: PropTypes.oneOf(['narrow', 'short', 'long']),\r\n      year: PropTypes.oneOf(['numeric', '2-digit']),\r\n      month: PropTypes.oneOf(['numeric', '2-digit', 'narrow', 'short', 'long']),\r\n      day: PropTypes.oneOf(['numeric', '2-digit']),\r\n      hour: PropTypes.oneOf(['numeric', '2-digit']),\r\n      minute: PropTypes.oneOf(['numeric', '2-digit']),\r\n      second: PropTypes.oneOf(['numeric', '2-digit']),\r\n      timeZoneName: PropTypes.oneOf(['short', 'long']),\r\n    }),\r\n\r\n    /**\r\n     * Boolean if the text field for the Date Picker should be displayed as full width.\r\n     */\r\n    fullWidth: PropTypes.bool,\r\n\r\n    /**\r\n     * The direction that the text field divider expands from when the text field\r\n     * in the date picker gains focus.\r\n     */\r\n    lineDirection: PropTypes.oneOf(['left', 'center', 'right']),\r\n\r\n    /**\r\n     * An optional boolean if the time picker is current visible by dialog or inline.\r\n     * If this is set, the `onOpenToggle` function is required.\r\n     */\r\n    visible: controlled(PropTypes.bool, 'onVisibilityChange', 'defaultVisible'),\r\n\r\n    /**\r\n     * An optional function to call when the date picker is opened in either a dialog, or\r\n     * inline. The callback will include the next state.\r\n     *\r\n     * ```js\r\n     * onVisibilityChange(!visible, e);\r\n     * ```\r\n     */\r\n    onVisibilityChange: PropTypes.func,\r\n\r\n    /**\r\n     * Boolean if the time picker is disabled.\r\n     */\r\n    disabled: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the dialog should be able to close if a keyboard user presses the escape key.\r\n     */\r\n    closeOnEsc: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the inline time picker's visibility should be animated.\r\n     */\r\n    animateInline: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the time is required.\r\n     *\r\n     * @see {@link TextFields/TextField#required}\r\n     */\r\n    required: PropTypes.bool,\r\n\r\n    /**\r\n     * @see {@link TextFields/TextField#block}\r\n     */\r\n    block: TextField.propTypes.block,\r\n\r\n    /**\r\n     * @see {@link TextFields/TextField#paddedBlock}\r\n     */\r\n    paddedBlock: TextField.propTypes.paddedBlock,\r\n\r\n    /**\r\n     * @see {@link TextFields/TextField#active}\r\n     */\r\n    active: TextField.propTypes.active,\r\n\r\n    /**\r\n     * @see {@link TextFields/TextField#error}\r\n     */\r\n    error: TextField.propTypes.error,\r\n\r\n    /**\r\n     * @see {@link TextFields/TextField#floating}\r\n     */\r\n    floating: TextField.propTypes.floating,\r\n\r\n    /**\r\n     * @see {@link TextFields/TextField#leftIconStateful}\r\n     */\r\n    leftIconStateful: TextField.propTypes.leftIconStateful,\r\n\r\n    /**\r\n     * @see {@link TextFields/TextField#rightIcon}\r\n     */\r\n    rightIcon: TextField.propTypes.rightIcon,\r\n\r\n    /**\r\n     * @see {@link TextFields/TextField#rightIconStateful}\r\n     */\r\n    rightIconStateful: TextField.propTypes.rightIconStateful,\r\n\r\n    /**\r\n     * @see {@link TextFields/TextField#customSize}\r\n     */\r\n    customSize: TextField.propTypes.customSize,\r\n\r\n    /**\r\n     * @see {@link TextFields/TextField#errorText}\r\n     */\r\n    errorText: TextField.propTypes.errorText,\r\n\r\n    /**\r\n     * @see {@link TextFields/TextField#helpText}\r\n     */\r\n    helpText: TextField.propTypes.helpText,\r\n\r\n    /**\r\n     * @see {@link TextFields/TextField#helpOnFocus}\r\n     */\r\n    helpOnFocus: TextField.propTypes.helpOnFocus,\r\n\r\n    /**\r\n     * @see {@link TextFields/TextField#inlineIndicator}\r\n     */\r\n    inlineIndicator: TextField.propTypes.inlineIndicator,\r\n\r\n    /**\r\n     * Boolean if the Portal's functionality of rendering in a separate react tree should be applied\r\n     * to the dialog.\r\n     *\r\n     * @see {@link Helpers/Portal}\r\n     */\r\n    portal: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional DOM Node to render the dialog into. The default is to render as the first child\r\n     * in the `body`.\r\n     */\r\n    renderNode: PropTypes.object,\r\n\r\n    /**\r\n     * Boolean if the DatePicker should be read only. This will prevent the user from opening the picker\r\n     * and only display the current date in the text field.\r\n     */\r\n    readOnly: PropTypes.bool,\r\n\r\n    /**\r\n     * The first day of week: 0 for Sunday, 1 for Monday, 2 for Tuesday, and so on.\r\n     */\r\n    firstDayOfWeek: PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6]),\r\n\r\n    /**\r\n     * True if weekends are to be greyed out.\r\n     */\r\n    disableWeekEnds: PropTypes.bool,\r\n\r\n    /**\r\n     * True if dates from adjacent months should be shown in calendar.\r\n     */\r\n    showAllDays: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the dates from adjacent months should be disabled. This will only\r\n     * do something if the `showAllDays` prop is enabled as well.\r\n     *\r\n     * This is really only helpful if youd like the other days to appear, but not be\r\n     * clickable until the user switches to that month.\r\n     *\r\n     * @see {@link #showAllDays}\r\n     */\r\n    disableOuterDates: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional className to apply to a date in calendar.\r\n     */\r\n    calendarDateClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional className to apply to a date from an adjacent month in calendar. This will be applied\r\n     * along with the `calendarDateClassName`.\r\n     *\r\n     * @see {@link #showAllDays}\r\n     * @see {@link #calendarDateClassName}\r\n     */\r\n    calendarOuterDateClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional className to apply to the title in calendar header.\r\n     */\r\n    calendarTitleClassName: PropTypes.string,\r\n\r\n    /**\r\n     * The DateTimeFormat options to apply to format the title in calendar header.\r\n     */\r\n    calendarTitleFormat: PropTypes.shape({\r\n      era: PropTypes.oneOf(['narrow', 'short', 'long']),\r\n      year: PropTypes.oneOf(['numeric', '2-digit']),\r\n      month: PropTypes.oneOf(['numeric', '2-digit', 'narrow', 'short', 'long']),\r\n    }),\r\n\r\n    /**\r\n     * An optional className to apply to a weekday in calendar header.\r\n     */\r\n    calendarWeekdayClassName: PropTypes.string,\r\n\r\n    /**\r\n     * The DateTimeFormat option to apply to format a weekday in calendar header.\r\n     */\r\n    calendarWeekdayFormat: PropTypes.oneOf(['narrow', 'short', 'long']),\r\n\r\n    /**\r\n     * @see {@link Dialogs/DialogContainer#disableScrollLocking}\r\n     */\r\n    disableScrollLocking: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the dialog should be rendered as the last child of the `renderNode` or `body` instead\r\n     * of the first.\r\n     */\r\n    lastChild: PropTypes.bool,\r\n\r\n    previousIconChildren: deprecated(PropTypes.node, 'Use the `previousIcon` prop instead'),\r\n    previousIconClassName: deprecated(PropTypes.string, 'Use the `previousIcon` prop instead'),\r\n    nextIconChildren: deprecated(PropTypes.node, 'use the `nextIcon` prop instead'),\r\n    nextIconClassName: deprecated(PropTypes.string, 'Use the `nextIcon` prop instead'),\r\n    adjustMinWidth: deprecated(PropTypes.bool, 'No longer valid for a text field'),\r\n    isOpen: deprecated(PropTypes.bool, 'Use `visible` instead'),\r\n    initiallyOpen: deprecated(PropTypes.bool, 'Use `defaultVisible` instead'),\r\n    initialCalendarDate: deprecated(PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.instanceOf(Date),\r\n    ]), 'Use `defaultCalendarDate` instead'),\r\n    initialCalendarMode: deprecated(PropTypes.oneOf(['calendar', 'year']), 'Use `defaultCalendarMode` instead'),\r\n    initialYearsDisplayed: deprecated(\r\n      PropTypes.number,\r\n      'Use `yearsDisplayed` instead. I have not implemented infinite loading years'\r\n    ),\r\n  };\r\n\r\n  static defaultProps = {\r\n    animateInline: true,\r\n    previousIcon: <FontIcon>chevron_left</FontIcon>,\r\n    nextIcon: <FontIcon>chevron_right</FontIcon>,\r\n    autoOk: false,\r\n    icon: <FontIcon>date_range</FontIcon>,\r\n    yearsDisplayed: 100,\r\n    defaultCalendarMode: 'calendar',\r\n    DateTimeFormat: DateTimeFormat, // eslint-disable-line object-shorthand\r\n    locales: typeof window !== 'undefined'\r\n      ? window.navigator.userLanguage || window.navigator.language\r\n      : 'en-US',\r\n    okLabel: 'Ok',\r\n    okPrimary: true,\r\n    cancelLabel: 'Cancel',\r\n    cancelPrimary: true,\r\n    closeOnEsc: true,\r\n    disableScrollLocking: false,\r\n    'aria-label': 'Pick a date',\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let date;\r\n    let value;\r\n    const {\r\n      defaultValue,\r\n      DateTimeFormat,\r\n      locales,\r\n      formatOptions,\r\n      minDate,\r\n      maxDate,\r\n    } = props;\r\n\r\n    if (typeof props.value !== 'undefined') {\r\n      date = this._getDate(props.value);\r\n    } else if (defaultValue) {\r\n      date = this._getDate(defaultValue);\r\n      value = typeof defaultValue === 'string'\r\n        ? defaultValue\r\n        : DateTimeFormat(locales, formatOptions).format(defaultValue);\r\n    } else {\r\n      date = new Date();\r\n      value = '';\r\n    }\r\n\r\n    date = this._validateDateRange(date, minDate, maxDate);\r\n\r\n    const defaultCalendarDate = typeof props.initialCalendarDate !== 'undefined'\r\n      ? props.initialCalendarDate\r\n      : props.defaultCalendarDate;\r\n    let calendarTempDate = date;\r\n    if (typeof defaultCalendarDate !== 'undefined' && !props.value && !props.defaultValue) {\r\n      calendarTempDate = this._getDate(defaultCalendarDate);\r\n      date = calendarTempDate;\r\n    } else if (calendarTempDate === null) {\r\n      calendarTempDate = new Date();\r\n      date = new Date();\r\n    }\r\n\r\n    const visible = typeof props.initiallyOpen !== 'undefined'\r\n      ? props.initiallyOpen\r\n      : !!props.defaultVisible;\r\n\r\n    this.state = {\r\n      value,\r\n      visible,\r\n      calendarDate: date,\r\n      calendarTempDate,\r\n      calendarMode: props.initialCalendarMode || props.defaultCalendarMode,\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { value, minDate, maxDate } = nextProps;\r\n    const minEqual = isSameDay(this.props.minDate, minDate);\r\n    const maxEqual = isSameDay(this.props.maxDate, maxDate);\r\n    if (this.props.value !== value || !minEqual || !maxEqual) {\r\n      let { calendarDate } = this.state;\r\n      if (typeof value !== 'undefined') {\r\n        calendarDate = this._getDate(value);\r\n      }\r\n\r\n      calendarDate = this._validateDateRange(calendarDate, minDate, maxDate);\r\n\r\n      if (!isSameDay(this.state.calendarDate, calendarDate)) {\r\n        this.setState({ calendarDate, calendarTempDate: calendarDate });\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { inline, isOpen } = this.props;\r\n    const visible = typeof isOpen !== 'undefined'\r\n      ? isOpen\r\n      : getField(this.props, this.state, 'visible');\r\n    const pVisible = typeof prevProps.isOpen !== 'undefined'\r\n      ? prevProps.isOpen\r\n      : getField(prevProps, prevState, 'visible');\r\n\r\n    if (visible === pVisible) {\r\n      return;\r\n    }\r\n\r\n    if (visible) {\r\n      if (inline) {\r\n        handleWindowClickListeners(this._handleOutsideClick, true);\r\n        window.addEventListener('keydown', this._closeOnEsc);\r\n      }\r\n    } else if (inline) {\r\n      handleWindowClickListeners(this._handleOutsideClick, false);\r\n      window.removeEventListener('keydown', this._closeOnEsc);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const visible = typeof this.props.isOpen !== 'undefined'\r\n      ? this.props.isOpen\r\n      : getField(this.props, this.state, 'visible');\r\n\r\n    if (visible && this.props.inline) {\r\n      handleWindowClickListeners(this._handleOutsideClick, false);\r\n      window.removeEventListener('keydown', this._closeOnEsc);\r\n    }\r\n  }\r\n\r\n  _getDate(value) {\r\n    if (value === '' || value === null) {\r\n      return new Date();\r\n    } else if (typeof value === 'string') {\r\n      return new Date(value);\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  _setContainer= (container) => {\r\n    this._container = container;\r\n  };\r\n\r\n  _closeOnEsc = (e) => {\r\n    if ((e.which || e.keyCode) === ESC) {\r\n      this._handleCancelClick(e);\r\n    }\r\n  };\r\n\r\n  _handleOutsideClick = (e) => {\r\n    if (this._container && !this._container.contains(e.target)) {\r\n      this._handleCancelClick(e);\r\n    }\r\n  };\r\n\r\n  _toggleOpen = (e) => {\r\n    if (this.props.disabled || this.props.readOnly) {\r\n      return;\r\n    }\r\n\r\n    const visible = !(typeof this.props.isOpen !== 'undefined'\r\n      ? this.props.isOpen\r\n      : getField(this.props, this.state, 'visible'));\r\n\r\n    if (this.props.onVisibilityChange) {\r\n      this.props.onVisibilityChange(visible, e);\r\n    }\r\n\r\n    if (typeof this.props.isOpen === 'undefined' && typeof this.props.visible === 'undefined') {\r\n      this.setState({ visible });\r\n    }\r\n  };\r\n\r\n  _handleKeyDown = (e) => {\r\n    handleKeyboardAccessibility(e, this._toggleOpen, true, true);\r\n\r\n    if ((e.which || e.keyCode) === TAB && this.state.active) {\r\n      this.setState({ active: false });\r\n    }\r\n  };\r\n\r\n  _handleOkClick = (e) => {\r\n    const { DateTimeFormat, locales, onChange, formatOptions, onVisibilityChange } = this.props;\r\n    const value = DateTimeFormat(locales, formatOptions).format(this.state.calendarTempDate);\r\n    if (onChange) {\r\n      onChange(value, new Date(this.state.calendarTempDate), e);\r\n    }\r\n\r\n    if (onVisibilityChange) {\r\n      onVisibilityChange(false, e);\r\n    }\r\n\r\n    let state;\r\n    if (typeof this.props.value === 'undefined') {\r\n      state = { value };\r\n    }\r\n\r\n    if (typeof this.props.visible === 'undefined' && typeof this.props.isOpen === 'undefined') {\r\n      state = state || {};\r\n      state.visible = false;\r\n    }\r\n\r\n    if (state) {\r\n      this.setState(state);\r\n    }\r\n  };\r\n\r\n  _handleCancelClick = (e) => {\r\n    const state = { calendarTempDate: this.state.calendarDate };\r\n    if (typeof this.props.isOpen === 'undefined' && typeof this.props.isOpen === 'undefined') {\r\n      state.visible = false;\r\n    }\r\n\r\n    if (this.props.onVisibilityChange) {\r\n      this.props.onVisibilityChange(false, e);\r\n    }\r\n\r\n    this.setState(state);\r\n  };\r\n\r\n  _changeCalendarMode = (calendarMode) => {\r\n    if (this.state.calendarMode === calendarMode) { return; }\r\n\r\n    this.setState({ calendarMode });\r\n  };\r\n\r\n  _previousMonth = () => {\r\n    const calendarDate = addDate(this.state.calendarDate, -1, 'M');\r\n    this.setState({ calendarDate });\r\n  };\r\n\r\n  _nextMonth = () => {\r\n    const calendarDate = addDate(this.state.calendarDate, 1, 'M');\r\n    this.setState({ calendarDate });\r\n  };\r\n\r\n  _setCalendarTempDate = (calendarTempDate) => {\r\n    const { autoOk, DateTimeFormat, locales, onChange, formatOptions } = this.props;\r\n\r\n    const state = { calendarTempDate };\r\n    if (autoOk) {\r\n      const value = DateTimeFormat(locales, formatOptions).format(calendarTempDate);\r\n      if (onChange) {\r\n        onChange(value, new Date(calendarTempDate));\r\n      }\r\n\r\n      if (typeof this.props.value === 'undefined') {\r\n        state.value = value;\r\n      }\r\n\r\n      this._timeout = setTimeout(() => {\r\n        this._timeout = null;\r\n\r\n        if (this.props.onVisibilityChange) {\r\n          this.props.onVisibilityChange(false);\r\n        }\r\n\r\n        if (typeof this.props.visible === 'undefined' && typeof this.props.isOpen === 'undefined') {\r\n          this.setState({ visible: false });\r\n        }\r\n      });\r\n    }\r\n    this.setState(state);\r\n  };\r\n\r\n  _setCalendarTempYear = (year) => {\r\n    const { calendarTempDate, calendarDate } = this.state;\r\n    if (calendarTempDate.getFullYear() === year) { return; }\r\n\r\n    const { minDate, maxDate } = this.props;\r\n    let nextDate = new Date(calendarDate.setFullYear(year));\r\n    let nextTemp = new Date(calendarTempDate.setFullYear(year));\r\n\r\n    if (minDate && nextTemp < minDate) {\r\n      nextDate = new Date(minDate);\r\n      nextTemp = new Date(minDate);\r\n    }\r\n\r\n    if (maxDate && nextTemp > maxDate) {\r\n      nextDate = new Date(maxDate);\r\n      nextTemp = new Date(maxDate);\r\n    }\r\n\r\n    this.setState({\r\n      calendarDate: nextDate,\r\n      calendarTempDate: nextTemp,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Gets the current value from the date picker as a formatted string.\r\n   *\r\n   * @param {Object} props? the props object to use.\r\n   * @param {Object} state? the state object to use.\r\n   * @return {String} a formatted date string or the empty string.\r\n   */\r\n  _getFormattedValue(props, state) {\r\n    const { DateTimeFormat, locales, formatOptions } = props;\r\n    const value = getField(props, state, 'value');\r\n    if (!value) {\r\n      return '';\r\n    } else if (value instanceof Date) {\r\n      return DateTimeFormat(locales, formatOptions).format(new Date(value));\r\n    } else {\r\n      return value;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Attempts to validate the `calendarDate` in the state against the min and\r\n   * max dates.\r\n   *\r\n   * This will return null if the current calendarDate is still within the range.\r\n   *\r\n   * @param {Date} calendarDate - The current calendar date to compare to.\r\n   * @param {Date} minDate - An optional min date to compare to.\r\n   * @param {Date} maxDate - An optional max date to compare to.\r\n   * @return {Object} - The new state object with the updated calendarDate and\r\n   *    calendarTempDate keys or null.\r\n   */\r\n  _validateDateRange(calendarDate, minDate, maxDate) {\r\n    let date = calendarDate;\r\n    if (minDate && minDate > calendarDate) {\r\n      date = new Date(minDate);\r\n    }\r\n\r\n    if (maxDate && maxDate < calendarDate) {\r\n      date = new Date(maxDate);\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      style,\r\n      className,\r\n      pickerStyle,\r\n      pickerClassName,\r\n      pickerHeaderClassName,\r\n      pickerContentClassName,\r\n      pickerFooterClassName,\r\n      inputStyle,\r\n      inputClassName,\r\n      textFieldStyle,\r\n      textFieldClassName,\r\n      label,\r\n      placeholder,\r\n      icon,\r\n      inline,\r\n      displayMode,\r\n      fullWidth,\r\n      lineDirection,\r\n      id,\r\n      disabled,\r\n      closeOnEsc,\r\n      animateInline,\r\n      portal,\r\n      renderNode,\r\n      lastChild,\r\n      block,\r\n      paddedBlock,\r\n      active,\r\n      error,\r\n      floating,\r\n      required,\r\n      leftIconStateful,\r\n      rightIcon,\r\n      rightIconStateful,\r\n      customSize,\r\n      errorText,\r\n      helpText,\r\n      helpOnFocus,\r\n      inlineIndicator,\r\n      disableScrollLocking,\r\n      'aria-label': ariaLabel,\r\n      nextIcon: propNextIcon,\r\n      previousIcon: propPreviousIcon,\r\n\r\n      // deprecated\r\n      isOpen,\r\n      previousIconChildren,\r\n      previousIconClassName,\r\n      nextIconChildren,\r\n      nextIconClassName,\r\n      /* eslint-disable no-unused-vars */\r\n      value: propValue,\r\n      visible: propVisible,\r\n      defaultValue,\r\n      defaultVisible,\r\n      onChange,\r\n      readOnly,\r\n      onVisibilityChange,\r\n      defaultCalendarDate,\r\n\r\n      // deprecated\r\n      initialCalendarDate,\r\n      initiallyOpen,\r\n      adjustMinWidth,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n\r\n    const nextIcon = getDeprecatedIcon(nextIconClassName, nextIconChildren, propNextIcon);\r\n    const previousIcon = getDeprecatedIcon(previousIconClassName, previousIconChildren, propPreviousIcon);\r\n    const visible = typeof isOpen !== 'undefined'\r\n      ? isOpen\r\n      : getField(this.props, this.state, 'visible');\r\n\r\n    const picker = (\r\n      <DatePicker\r\n        {...this.state}\r\n        {...props}\r\n        nextIcon={nextIcon}\r\n        previousIcon={previousIcon}\r\n        icon={!!icon}\r\n        inline={inline}\r\n        style={pickerStyle}\r\n        className={pickerClassName}\r\n        headerClassName={pickerHeaderClassName}\r\n        contentClassName={pickerContentClassName}\r\n        footerClassName={pickerFooterClassName}\r\n        displayMode={displayMode}\r\n        onCancelClick={this._handleCancelClick}\r\n        onOkClick={this._handleOkClick}\r\n        changeCalendarMode={this._changeCalendarMode}\r\n        onPreviousClick={this._previousMonth}\r\n        onNextClick={this._nextMonth}\r\n        onCalendarDateClick={this._setCalendarTempDate}\r\n        onCalendarYearClick={this._setCalendarTempYear}\r\n      />\r\n    );\r\n\r\n    let content;\r\n    if (inline) {\r\n      content = <Collapse collapsed={!visible} animate={animateInline}>{picker}</Collapse>;\r\n    } else {\r\n      content = (\r\n        <Dialog\r\n          id={`${id}-dialog`}\r\n          visible={visible}\r\n          onHide={this._handleCancelClick}\r\n          dialogClassName=\"md-dialog--picker\"\r\n          contentClassName=\"md-dialog-content--picker\"\r\n          aria-label={ariaLabel}\r\n          closeOnEsc={closeOnEsc}\r\n          renderNode={renderNode}\r\n          portal={portal}\r\n          lastChild={lastChild}\r\n          focusOnMount={false}\r\n          disableScrollLocking={disableScrollLocking}\r\n        >\r\n          {picker}\r\n        </Dialog>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div style={style} className={cn('md-picker-container', className)} ref={this._setContainer}>\r\n        <TextField\r\n          id={id}\r\n          style={textFieldStyle}\r\n          className={cn({ 'md-pointer--hover': !disabled }, textFieldClassName)}\r\n          inputStyle={inputStyle}\r\n          inputClassName={cn({ 'md-pointer--hover': !disabled }, inputClassName)}\r\n          active={active || visible}\r\n          error={error}\r\n          floating={floating || visible}\r\n          required={required}\r\n          disabled={disabled}\r\n          leftIcon={icon}\r\n          leftIconStateful={leftIconStateful}\r\n          rightIcon={rightIcon}\r\n          rightIconStateful={rightIconStateful}\r\n          inlineIndicator={inlineIndicator}\r\n          block={block}\r\n          paddedBlock={paddedBlock}\r\n          fullWidth={fullWidth}\r\n          lineDirection={lineDirection}\r\n          customSize={customSize}\r\n          helpText={helpText}\r\n          helpOnFocus={helpOnFocus}\r\n          errorText={errorText}\r\n          label={label}\r\n          placeholder={placeholder}\r\n          onClick={this._toggleOpen}\r\n          onKeyDown={this._handleKeyDown}\r\n          value={this._getFormattedValue(this.props, this.state)}\r\n          readOnly\r\n        />\r\n        {content}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}