{"version":3,"sources":["../../src/js/Pickers/ClockFace.js"],"names":["ClockFace","props","_setFace","face","_face","_setPositioning","radius","offsetWidth","offset","_center","x","left","y","top","_left","_top","state","setState","_handleMouseEnter","hoverMode","_enableMouseMoving","_handleMouseLeave","_disableMouseMoving","_handleMouseDown","e","_handleMouseMove","moving","preventDefault","_calcNewTime","_handleMouseUp","onTimeChosen","contains","target","_handleTouchStart","window","_handleTouchMove","_handleTouchEnd","changedTouches","pageX","pageY","innerRadius","onChange","minutes","timePeriod","addEventListener","removeEventListener","clearInterval","interval","time","size","times","Array","apply","map","_","i","clockTime","undefined","propTypes","number","isRequired","bool","func","string"],"mappings":"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","file":"ClockFace.js","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport isValidClick from '../utils/EventUtils/isValidClick';\r\nimport captureNextEvent from '../utils/EventUtils/captureNextEvent';\r\nimport { addTouchEvent, removeTouchEvent } from '../utils/EventUtils/touches';\r\nimport calcTimeFromPoint from '../utils/NumberUtils/calcTimeFromPoint';\r\nimport calcPageOffset from '../utils/Positioning/calcPageOffset';\r\nimport ResizeObserver from '../Helpers/ResizeObserver';\r\n\r\nimport ClockTime from './ClockTime';\r\nimport ClockHand from './ClockHand';\r\n\r\n/**\r\n * The `ClockFace` component is used for rendering all the clock's times\r\n * and the clock hand.\r\n */\r\nexport default class ClockFace extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * The current time for the clock.\r\n     */\r\n    time: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * Boolean if the clock is on the minutes view.\r\n     */\r\n    minutes: PropTypes.bool.isRequired,\r\n\r\n    /**\r\n     * A function to call when a new time is selected. It gives the\r\n     * new time value. If it is 12 o'clock, 0 will be given.\r\n     */\r\n    onChange: PropTypes.func.isRequired,\r\n\r\n    /**\r\n     * An optional time period string. This should be either AM or PM\r\n     * if the locale uses them.\r\n     */\r\n    timePeriod: PropTypes.string,\r\n\r\n    /**\r\n     * If true the hover mode of the Time Picker is activated.\r\n     * In hover mode no clicks are required to start selecting an hour\r\n     * and the timemode switches automatically when a time was chosen.\r\n     * When a minute is selected the chosen time is applied automatically.\r\n     */\r\n    hoverMode: PropTypes.bool,\r\n\r\n    onTimeChosen: PropTypes.func.isRequired,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { radius: 136, moving: false };\r\n    this._center = {};\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('mousemove', this._handleMouseMove);\r\n    window.removeEventListener('mouseup', this._handleMouseMove);\r\n\r\n    removeTouchEvent(window, 'move', this._handleTouchMove);\r\n    removeTouchEvent(window, 'end', this._handleTouchEnd);\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  _setFace = (face) => {\r\n    this._face = face;\r\n    this._setPositioning();\r\n  }\r\n\r\n  _setPositioning = () => {\r\n    if (!this._face) {\r\n      return;\r\n    }\r\n\r\n    const radius = this._face.offsetWidth / 2;\r\n    const offset = calcPageOffset(this._face);\r\n    this._center = { x: offset.left + radius, y: offset.top + radius };\r\n    this._left = offset.left;\r\n    this._top = offset.top;\r\n\r\n    if (this.state.radius !== radius) {\r\n      this.setState({ radius });\r\n    }\r\n  };\r\n\r\n  _handleMouseEnter = () => {\r\n    const { hoverMode } = this.props;\r\n\r\n    if (hoverMode) {\r\n      this._enableMouseMoving();\r\n    }\r\n  };\r\n\r\n  _handleMouseLeave = () => {\r\n    const { hoverMode } = this.props;\r\n\r\n    if (hoverMode) {\r\n      this._disableMouseMoving();\r\n    }\r\n  };\r\n\r\n  _handleMouseDown = (e) => {\r\n    if (!isValidClick(e)) {\r\n      return;\r\n    }\r\n\r\n    const { hoverMode } = this.props;\r\n\r\n    if (!hoverMode) {\r\n      this._enableMouseMoving();\r\n    }\r\n  };\r\n\r\n  _handleMouseMove = (e) => {\r\n    if (!this.state.moving) {\r\n      return;\r\n    }\r\n\r\n    e.preventDefault();\r\n    this._calcNewTime(e);\r\n  };\r\n\r\n  _handleMouseUp = (e) => {\r\n    if (!isValidClick(e)) {\r\n      return;\r\n    }\r\n\r\n    const { onTimeChosen, hoverMode } = this.props;\r\n\r\n    if (this._face) {\r\n      if (this._face.contains(e.target)) {\r\n        onTimeChosen();\r\n        this._calcNewTime(e);\r\n      } else {\r\n        captureNextEvent('click');\r\n      }\r\n    }\r\n\r\n    if (!hoverMode) {\r\n      this._disableMouseMoving();\r\n    }\r\n  };\r\n\r\n  _handleTouchStart = () => {\r\n    captureNextEvent('mousedown');\r\n\r\n    addTouchEvent(window, 'move', this._handleTouchMove);\r\n    addTouchEvent(window, 'end', this._handleTouchEnd);\r\n    this.setState({ moving: true });\r\n  };\r\n\r\n  _handleTouchMove = (e) => {\r\n    if (!this.state.moving) {\r\n      return;\r\n    }\r\n\r\n    this._calcNewTime(e);\r\n  };\r\n\r\n  _handleTouchEnd = (e) => {\r\n    this._calcNewTime(e);\r\n    if (this._face && !this._face.contains(e.target)) {\r\n      captureNextEvent('click');\r\n    }\r\n\r\n    removeTouchEvent(window, 'move', this._handleTouchMove);\r\n    removeTouchEvent(window, 'end', this._handleTouchEnd);\r\n\r\n    this.setState({ moving: false });\r\n  };\r\n\r\n  _calcNewTime = (e) => {\r\n    const { pageX: x, pageY: y } = e.changedTouches ? e.changedTouches[0] : e;\r\n    const innerRadius = this.state.radius - 48;\r\n    const { onChange, minutes, timePeriod } = this.props;\r\n    onChange(calcTimeFromPoint({ x, y }, this._center, innerRadius, minutes, timePeriod));\r\n  };\r\n\r\n  _enableMouseMoving = () => {\r\n    window.addEventListener('mousemove', this._handleMouseMove);\r\n    window.addEventListener('mouseup', this._handleMouseUp);\r\n\r\n    this.setState({ moving: true });\r\n  };\r\n\r\n  _disableMouseMoving = () => {\r\n    window.removeEventListener('mousemove', this._handleMouseMove);\r\n    window.removeEventListener('mouseup', this._handleMouseUp);\r\n\r\n    this.setState({ moving: false });\r\n  };\r\n\r\n  render() {\r\n    const { time, minutes, timePeriod, onChange, hoverMode } = this.props;\r\n    const { radius } = this.state;\r\n    const size = !minutes && !timePeriod ? 24 : 12;\r\n    const times = Array.apply(null, new Array(size)).map((_, i) => {\r\n      let clockTime = i + 1;\r\n      if (minutes) {\r\n        clockTime = (clockTime * 5) % 60;\r\n      } else {\r\n        clockTime %= 24;\r\n      }\r\n\r\n      return (\r\n        <ClockTime\r\n          key={`time-${i}`}\r\n          index={i + 1}\r\n          time={clockTime}\r\n          active={clockTime === time}\r\n          radius={radius}\r\n          onKeyboardFocus={onChange}\r\n        />\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div\r\n        ref={this._setFace}\r\n        className=\"md-clock-face md-block-centered md-pointer--hover\"\r\n        onMouseDown={this._handleMouseDown}\r\n        onMouseEnter={hoverMode ? this._handleMouseEnter : undefined}\r\n        onMouseLeave={hoverMode ? this._handleMouseLeave : undefined}\r\n        onTouchStart={this._handleTouchStart}\r\n      >\r\n        <ResizeObserver watchHeight onResize={this._setPositioning} />\r\n        {times}\r\n        <ClockHand time={time} coords={radius} minutes={minutes} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}