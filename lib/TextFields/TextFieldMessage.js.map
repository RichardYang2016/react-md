{"version":3,"sources":["../../src/js/TextFields/TextFieldMessage.js"],"names":["TextFieldMessage","props","state","message","error","errorText","helpText","isMessageVisible","_isMessageVisible","nextProps","keys","_anyChanges","setState","p1","p2","changed","some","key","helpOnFocus","active","maxLength","className","currentLength","leftIcon","rightIcon","block","disabled","propTypes","string","bool","node","number"],"mappings":"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","file":"TextFieldMessage.js","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport themeColors from '../utils/themeColors';\r\nimport Message from './Message';\r\n\r\nexport default class TextFieldMessage extends PureComponent {\r\n  static propTypes = {\r\n    className: PropTypes.string,\r\n    error: PropTypes.bool,\r\n    helpText: PropTypes.node,\r\n    errorText: PropTypes.node,\r\n    active: PropTypes.bool,\r\n    helpOnFocus: PropTypes.bool,\r\n    maxLength: PropTypes.number,\r\n    currentLength: PropTypes.number,\r\n    leftIcon: PropTypes.bool,\r\n    rightIcon: PropTypes.bool,\r\n    block: PropTypes.bool,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n\r\n    this.state = {\r\n      message: (props.error && props.errorText) || props.helpText || props.errorText,\r\n      isMessageVisible: this._isMessageVisible(props),\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const keys = ['active', 'error', 'helpOnFocus', 'helpText', 'errorText'];\r\n    if (this._anyChanges(keys, this.props, nextProps)) {\r\n      this.setState({\r\n        isMessageVisible: this._isMessageVisible(nextProps),\r\n        message: (nextProps.error && nextProps.errorText) || nextProps.helpText || nextProps.errorText,\r\n      });\r\n    }\r\n  }\r\n\r\n  _anyChanges(keys, p1, p2) {\r\n    let changed = false;\r\n    keys.some(key => {\r\n      if (p1[key] !== p2[key]) {\r\n        changed = true;\r\n      }\r\n\r\n      return changed;\r\n    });\r\n\r\n    return changed;\r\n  }\r\n\r\n  _isMessageVisible(props) {\r\n    const { error, errorText, helpText, helpOnFocus, active } = props;\r\n    if (error && errorText) {\r\n      return true;\r\n    }\r\n\r\n    return !!(helpText && (!helpOnFocus || active));\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      maxLength,\r\n      error,\r\n      className,\r\n      errorText,\r\n      helpText,\r\n      currentLength,\r\n      leftIcon,\r\n      rightIcon,\r\n      block,\r\n      active,\r\n    } = this.props;\r\n    const { isMessageVisible, message } = this.state;\r\n\r\n    if (currentLength === 'undefined' || (!helpText && !errorText && !maxLength)) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className={cn('md-text-field-message-container', {\r\n          'md-text-field-message-container--count-only': !message || !isMessageVisible,\r\n          'md-text-field-message-container--left-icon-offset': leftIcon,\r\n          'md-text-field-message-container--right-icon-offset': rightIcon,\r\n          'md-full-width': !block,\r\n        }, themeColors({ error, disabled: !error }), className)}\r\n      >\r\n        <Message key=\"message\" active={isMessageVisible}>{message}</Message>\r\n        <Message key=\"counter\" className=\"md-text-field-message--counter\" active={active}>\r\n          {maxLength ? `${currentLength} / ${maxLength}` : null}\r\n        </Message>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}