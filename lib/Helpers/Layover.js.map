{"version":3,"sources":["../../src/js/Helpers/Layover.js"],"names":["Layover","props","child","Children","only","children","state","below","right","styles","style","_lastXFix","_lastYFix","_initialX","_initialY","_initialTop","_initialLeft","_child","_toggle","process","env","NODE_ENV","window","addEventListener","_setContainer","_container","visible","fixedTo","sameWidth","centered","simplified","anchor","_getAnchor","_handleOutsideClick","rect","_contextRect","getBoundingClientRect","_dialog","_manageFixedToListener","_inFixed","_init","nextProps","_reset","visibileDiff","childStyle","setState","prevProps","closeOnOutsideClick","enabled","prevEnabled","_clickTimeout","clearTimeout","setTimeout","_manageWindowResizeListener","belowAnchor","animationPosition","Positions","BELOW","className","block","toggle","fullWidth","fillViewportWidth","fillViewportHeight","onClose","repositionOnScroll","repositionOnResize","toggleQuery","yThreshold","xThreshold","onContextMenu","preventContextMenu","minLeft","minRight","minBottom","childId","id","cloneElement","ref","_fixateChild","observer","_handleResize","transitionEnterTimeout","transitionLeaveTimeout","_handleContextMenu","HorizontalAnchors","VerticalAnchors","propTypes","oneOfType","number","string","object","bool","isRequired","node","func","element","component","transitionName","defaultProps","x","INNER_LEFT","y","OVERLAP","CENTER","BOTTOM","_isCenteredDialog","classList","contains","_createStyles","offsetWidth","offsetHeight","left","top","width","INNER_RIGHT","LEFT","RIGHT","height","TOP","bottom","dialogRect","add","listener","_handleScroll","_windowResizeTimeout","_handleWindowResize","removeEventListener","_mergeStyles","Math","max","maxHeight","scroll","_initialWinX","_initialWinY","transformOrigin","undefined","container","querySelector","error","Error","fixed","getComputedStyle","position","match","offsetParent","_initialFix","clone","cloneNode","webkitTransform","transfrom","webkitTransition","transition","parentNode","appendChild","vp","childHeight","childWidth","removeChild","toggleHeight","toggleWidth","addToTop","addToLeft","multiplier","_childComponent","_positionChild","_height","_width","e","_ticking","requestAnimationFrame","_handleTick","_attemptFix","winX","winY","target","toggleTop","innerHeight","newTop","scrollEl","preventDefault"],"mappings":"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","file":"Layover.js","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport { findDOMNode } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport CSSTransitionGroup from 'react-transition-group/CSSTransitionGroup';\r\nimport cn from 'classnames';\r\n\r\nimport handleWindowClickListeners from '../utils/EventUtils/handleWindowClickListeners';\r\nimport getSelectedTextPosition from '../utils/Positioning/getSelectedTextPosition';\r\nimport getScroll from '../utils/Positioning/getScroll';\r\nimport viewport from '../utils/Positioning/viewport';\r\nimport isOutOfBounds from '../utils/Positioning/isOutOfBounds';\r\nimport anchorShape from './anchorShape';\r\nimport fixedToShape from './fixedToShape';\r\nimport positionShape from './positionShape';\r\nimport HorizontalAnchors from './HorizontalAnchors';\r\nimport VerticalAnchors from './VerticalAnchors';\r\nimport Positions from './Positions';\r\nimport ResizeObserver from './ResizeObserver';\r\n\r\n/**\r\n * The Layover component is used to keep a component fixed to another component\r\n * while the page is scrolling or a container is scrolling. When the fixed component\r\n * is considered out of view, it will be closed.\r\n *\r\n * > NOTE: Don't look at source code. Plz.\r\n */\r\nexport default class Layover extends PureComponent {\r\n  static HorizontalAnchors = HorizontalAnchors;\r\n  static VerticalAnchors = VerticalAnchors;\r\n  static Positions = Positions;\r\n\r\n  static propTypes = {\r\n    /**\r\n     * A id to give the layover itself. This is generally recommended for accessibility. If the\r\n     * child does not have an id, the child will automatically be updated to be `${id}-layover`.\r\n     */\r\n    id: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * An optional style to apply to the layover.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the layover.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * Boolean if the layover's child is currently visible.\r\n     */\r\n    visible: PropTypes.bool.isRequired,\r\n\r\n    /**\r\n     * This should either be a single element or two elements that the layover recalculates\r\n     * its fixed position when scrolling for horizontal and vertical.\r\n     *\r\n     * When it is a single element, it will recalculate for both horizontal and vertical\r\n     * scrolling. Otherwise, you can specify the element for horizontal scrolling and a\r\n     * separate element for vertical scrolling. If one is omitted, it will default to `window`.\r\n     *\r\n     * If the component is no longer considered to be in view after scrolling, the `onClose`\r\n     * prop will be called.\r\n     */\r\n    fixedTo: fixedToShape.isRequired,\r\n\r\n    /**\r\n     * The renderable item that causes the Layover to become visible. This _should_\r\n     * most likely be an `element` or `arrayOf(element)`, but anything is allowed.\r\n     */\r\n    toggle: PropTypes.node,\r\n\r\n    /**\r\n     * Since the `toggle` prop can be anything, I need a way to be able to find an\r\n     * element to base all the calculations on. This can either be a string that\r\n     * gets passed to `layover.querySelector`, a DOM Element, or a function that\r\n     * returns a DOM Element.\r\n     */\r\n    toggleQuery: PropTypes.oneOfType([\r\n      PropTypes.func,\r\n      PropTypes.object,\r\n      PropTypes.string,\r\n    ]).isRequired,\r\n\r\n    /**\r\n     * A single child that should be fixed to the toggle element.\r\n     */\r\n    children: PropTypes.element.isRequired,\r\n\r\n    /**\r\n     * Boolean if the Layover should be displayed as a block instead of as an inline block.\r\n     */\r\n    block: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the `children` should be centered horizontally and vertically while keeping\r\n     * its height in mind as well. This is *only* valid if both the x and y `anchor` targets\r\n     * are `CENTER`.\r\n     */\r\n    centered: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the layover should gain the `md-full-width` class name.\r\n     */\r\n    fullWidth: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the width of the children should be updated automatically to be the width\r\n     * of the toggle element.\r\n     */\r\n    sameWidth: PropTypes.bool,\r\n\r\n    /**\r\n     * The minimum value the `left` style can be for the child component. This is really just used\r\n     * to make sure it doesn't scroll off the left of the page. It can also be used to make\r\n     * full screen layovers on devices when when the `fillViewportWidth` prop is enabled.\r\n     *\r\n     * This can either be a number of pixels or a string for percentages. If this value is a string\r\n     * **it will always be used over the calculated values** so it is preferred to use a number.\r\n     *\r\n     * @see {@link #minRight}\r\n     * @see {@link #fillViewportWidth}\r\n     */\r\n    minLeft: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]).isRequired,\r\n\r\n    /**\r\n     * The minimum value the `right` style can be for the child component. This is really just used\r\n     * to make sure it doesn't scroll off the right of the page when the `fillViewportWidth` prop is\r\n     * enabled.\r\n     *\r\n     * This can either be a number of pixels or a string for percentages. If this value is a string\r\n     * **it will always be used over the calculated values** so it is preferred to use a number.\r\n     *\r\n     * @see {@link #minLeft}\r\n     * @see {@link #fillViewportWidth}\r\n     */\r\n    minRight: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]).isRequired,\r\n\r\n    /**\r\n     * The minimum value that can be used for the `bottom` prop when the `fillViewportHeight` prop is enabled.\r\n     * It is generally recommended to keep this value at `0` to keep it stretched to the bottom of the viewport\r\n     * or setting it to a small positive number to add some padding.\r\n     *\r\n     * This can either be a number of pixels or a string for percentages. If this value is a string\r\n     * **it will always be used over the calculated values** so it is preferred to use a number.\r\n     *\r\n     * @see {@link #fillViewportHeight}\r\n     */\r\n    minBottom: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * Boolean if the layover should make the child fill the entire viewport's width. This will just\r\n     * style the child element with:\r\n     *\r\n     * ```js\r\n     * childStyle = {\r\n     *   left: this.props.minLeft,\r\n     *   right: this.props.minRight,\r\n     * };\r\n     * ```\r\n     *\r\n     * If you add any additional constraints such as `width` or `max-width`, it will not span the entire viewport's\r\n     * width. This prop should generally really only be used on mobile devices. Using this prop along with\r\n     * `fillViewportHeight` for Autocompletes can create great Android mobile searches. See the `fillViewportHeight`\r\n     * for more information about why it is *only Android*.\r\n     *\r\n     * @see {@link #minLeft}\r\n     * @see {@link #minRight}\r\n     * @see {@link #fillViewportHeight}\r\n     */\r\n    fillViewportWidth: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the layover should fill the height of the viewport from the current calculated `top`. This will just\r\n     * style the child element with:\r\n     *\r\n     * ```js\r\n     * childStyle = {\r\n     *   top: currentCalculatedTop,\r\n     *   bottom: this.props.minBottom,\r\n     *   maxHeight: 'none',\r\n     * };\r\n     * ```\r\n     *\r\n     * This is *super* nice on Android devices since it will allow you to create nice toolbar search autocompletes\r\n     * in your app and the list of items will grow until it reaches the soft keyboard. It isn't as nice on iOS since\r\n     * iOS does not subtract the soft keyboard from the viewport's size so the list will still extend to the bottom\r\n     * of the page.\r\n     *\r\n     * @see {@link #minBottom}\r\n     * @see {@link #fillViewportWidth}\r\n     */\r\n    fillViewportHeight: PropTypes.bool,\r\n\r\n    /**\r\n     * A function used to hide the visibility of the children when the children are no longer\r\n     * visible or an element outside of the layover is clicked.\r\n     */\r\n    onClose: PropTypes.func.isRequired,\r\n\r\n    /**\r\n     * The component to render the Layover as.\r\n     */\r\n    component: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.func,\r\n    ]).isRequired,\r\n\r\n    /**\r\n     * The transition name to use for the children appearing/disappearing.\r\n     */\r\n    transitionName: PropTypes.string.isRequired,\r\n\r\n    /**\r\n     * The transition duration for the enter animation. The animation can be disabled by setting\r\n     * this value to 0.\r\n     */\r\n    transitionEnterTimeout: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * The transition duration for the leave animation. The animation can be disabled by setting\r\n     * this value to 0.\r\n     */\r\n    transitionLeaveTimeout: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * This is a threshold that is used to calculate if the `children` is still in\r\n     * view by applying this multiplier to the `children`'s width.\r\n     */\r\n    xThreshold: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * This is a threshold that is used to calculate if the `children` is still in\r\n     * view by applying this multiplier to the `toggle`'s height.\r\n     */\r\n    yThreshold: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * Boolean if the `children` should be hidden when an element outside\r\n     * of the `Layout` component has been clicked.\r\n     */\r\n    closeOnOutsideClick: PropTypes.bool.isRequired,\r\n\r\n    /**\r\n     * This is how the children get \"anchored\" to the `toggle` element and how the\r\n     * auto-fix attempts will be made. Right now, the auto fixes will only be handled\r\n     * on viewport boundaries instead of `fixedTo` boundaries. It was too hard for\r\n     * first attempt.\r\n     *\r\n     * The general behavior will be that an equal-opposite of an anchor will be chosen\r\n     * when that direction is out of viewport. So for example, the children are out\r\n     * of viewport for the right of the screen, and the `anchor.x` value is\r\n     * `Layover.HorizontalPositions.RIGHT`, the children will be swapped to be the `LEFT`\r\n     * of the `toggle` component now.\r\n     *\r\n     * So a full list:\r\n     * - `LEFT` / `RIGHT`\r\n     * - `INNER_LEFT` / `INNER_RIGHT`\r\n     * - `TOP` / `BOTTOM`\r\n     *\r\n     * The `CENTER` and `OVERLAP` positions can not be automatically adjusted.\r\n     *\r\n     * > To be safe, you should use the enum values for the `x` and `y` values.\r\n     * @see {@link #VerticalAnchors}\r\n     * @see {@link #HorizontalAnchors}\r\n     */\r\n    anchor: anchorShape.isRequired,\r\n\r\n    /**\r\n     * This is how the children get \"anchored\" when the `animationPositions` is set to `Layover.Positions.BELOW`.\r\n     * Set this to `null` to continue using the base `anchor` prop instead of switching to this anchor.\r\n     *\r\n     * @see {@link #anchor}\r\n     */\r\n    belowAnchor: anchorShape,\r\n\r\n    /**\r\n     * This is the position that the children should animate from. It directly ties into\r\n     * the `$md-layover-child-positions` Sass variable.\r\n     */\r\n    animationPosition: positionShape.isRequired,\r\n\r\n    /**\r\n     * If you would like the layover to interact as a context menu, provide this prop. It will\r\n     * make the children appear relative to the context menu origin automatically.\r\n     *\r\n     * @see {@link #preventContextMenu}\r\n     */\r\n    onContextMenu: PropTypes.func,\r\n\r\n    /**\r\n     * Boolean if the default behavior of the context menu should be prevented when using the\r\n     * `onContextMenu` prop.\r\n     *\r\n     * @see {@link #onContextMenu}\r\n     */\r\n    preventContextMenu: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the layover should attempt to automatically adjust the position of the element to\r\n     * keep it within the viewport. If this value is set to `false`, the `onClose` prop will be called\r\n     * instead.\r\n     */\r\n    repositionOnScroll: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the layover should attempt to automatically adjust the position of the element to\r\n     * keep it within the viewport. If this value is set to `false`, the `onClose` prop will be called\r\n     * instead.\r\n     */\r\n    repositionOnResize: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the layover should become \"simplified\". This basically disables all the logic for\r\n     * keeping the child within the viewport and allows you to manage all the positioning via CSS.\r\n     *\r\n     * When this is enabled, it updates the `Layover` to have `position: relative` while the child will\r\n     * have `position: absolute` which will allow for simple `top`, `right`, `bottom`, and/or `left` CSS\r\n     * to position as wanted.\r\n     *\r\n     * This is really only helpful in cases where the layover can't calculate things correctly due to\r\n     * being in fixed containers somewhere in the page or some other weird stuff. Hopefully this won't\r\n     * really need to be used much.\r\n     */\r\n    simplified: PropTypes.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    anchor: {\r\n      x: Layover.HorizontalAnchors.INNER_LEFT,\r\n      y: Layover.VerticalAnchors.OVERLAP,\r\n    },\r\n    belowAnchor: {\r\n      x: Layover.HorizontalAnchors.CENTER,\r\n      y: Layover.VerticalAnchors.BOTTOM,\r\n    },\r\n    animationPosition: Layover.Positions.BELOW,\r\n    repositionOnScroll: true,\r\n    repositionOnResize: false,\r\n    component: 'div',\r\n    fixedTo: typeof window !== 'undefined' ? window : {},\r\n    toggleQuery: '.md-text-field-container,button,*[role=\"button\"],*[role=\"listbox\"]',\r\n    transitionName: 'md-layover',\r\n    transitionEnterTimeout: 200,\r\n    transitionLeaveTimeout: 200,\r\n    yThreshold: 0.38,\r\n    xThreshold: 0.38,\r\n    closeOnOutsideClick: true,\r\n    preventContextMenu: true,\r\n    simplified: false,\r\n    minLeft: 0,\r\n    minRight: 0,\r\n    minBottom: 0,\r\n    fillViewportWidth: false,\r\n    fillViewportHeight: false,\r\n  };\r\n\r\n  constructor(props) {\r\n    super();\r\n\r\n    const child = React.Children.only(props.children);\r\n    this.state = {\r\n      below: false,\r\n      right: false,\r\n      styles: child.props.style,\r\n    };\r\n\r\n    this._lastXFix = null;\r\n    this._lastYFix = null;\r\n    this._initialX = null;\r\n    this._initialY = null;\r\n    this._initialTop = null;\r\n    this._initialLeft = null;\r\n    this._child = null;\r\n    this._toggle = null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (process.env.NODE_ENV === 'development') {\r\n      window.addEventListener('load', () => {\r\n        this._setContainer(this._container);\r\n      });\r\n    }\r\n\r\n    const { visible, fixedTo, sameWidth, centered, simplified } = this.props;\r\n    const anchor = this._getAnchor(this.props);\r\n    if (visible) {\r\n      handleWindowClickListeners(this._handleOutsideClick, true);\r\n\r\n      // Don't worry about any of the other logic for a \"simple\" layover\r\n      if (simplified) {\r\n        return;\r\n      }\r\n\r\n      const rect = this._contextRect || this._toggle.getBoundingClientRect();\r\n      if (this._dialog) {\r\n        this._manageFixedToListener(this._dialog, true);\r\n      } else if (!this._inFixed) {\r\n        this._manageFixedToListener(fixedTo, true);\r\n      }\r\n\r\n      this._init(fixedTo, anchor, sameWidth, centered, rect);\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { fixedTo, visible, children, sameWidth, centered, simplified } = nextProps;\r\n    if (simplified) {\r\n      if (this.props.simplified !== simplified) {\r\n        this._reset();\r\n      }\r\n      return;\r\n    }\r\n\r\n    const anchor = this._getAnchor(nextProps);\r\n    const visibileDiff = visible !== this.props.visible;\r\n    const childStyle = React.Children.only(children).props.style;\r\n\r\n    if (visibileDiff) {\r\n      if (!visible) {\r\n        this._reset();\r\n      } else {\r\n        // Initialize the layover logic\r\n        const rect = this._contextRect || this._toggle.getBoundingClientRect();\r\n        if (this._dialog) {\r\n          this._manageFixedToListener(this._dialog, true);\r\n        } else if (!this._inFixed) {\r\n          this._manageFixedToListener(fixedTo, true);\r\n        }\r\n\r\n        this._init(fixedTo, anchor, sameWidth, centered, rect);\r\n      }\r\n    } else if (fixedTo !== this.props.fixedTo && visible) {\r\n      // swap the fixedTo listeners\r\n      this._manageFixedToListener(this.props.fixedTo, false);\r\n      this._manageFixedToListener(fixedTo, true);\r\n    } else if (childStyle !== React.Children.only(this.props.children).props.style) {\r\n      // Re-merge styles... This is only required if all the others fail since all the other\r\n      // logic always merges styles with the children styles\r\n      this.setState({ styles: { ...this.state.styles, ...childStyle } });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { visible, closeOnOutsideClick } = this.props;\r\n    const enabled = visible && closeOnOutsideClick;\r\n    const prevEnabled = prevProps.visible && prevProps.closeOnOutsideClick;\r\n    if (enabled !== prevEnabled) {\r\n      if (this._clickTimeout) {\r\n        clearTimeout(this._clickTimeout);\r\n        this._clickTimeout = null;\r\n      }\r\n\r\n      // This is really an arbitrary timeout time, but firefox needs to have a timeout\r\n      // so the context menu doesn't close automatically due to an \"outside click\" being\r\n      // triggered\r\n      this._clickTimeout = setTimeout(() => {\r\n        this._clickTimeout = null;\r\n        handleWindowClickListeners(this._handleOutsideClick, enabled);\r\n      }, enabled ? 300 : 0);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this._clickTimeout) {\r\n      clearTimeout(this._clickTimeout);\r\n      this._clickTimeout = null;\r\n    }\r\n    handleWindowClickListeners(this._handleOutsideClick, false);\r\n\r\n    if (!this.props.simplified) {\r\n      this._manageFixedToListener(this.props.fixedTo, false);\r\n      this._manageWindowResizeListener(false);\r\n    }\r\n  }\r\n\r\n  _getAnchor({ anchor, belowAnchor, animationPosition }) {\r\n    return animationPosition === Layover.Positions.BELOW && belowAnchor || anchor;\r\n  }\r\n\r\n  _isCenteredDialog = () => this._dialog && this._dialog.classList.contains('md-dialog--centered');\r\n\r\n  _createStyles = (anchor, centered, child, rect) => {\r\n    const { x, y } = anchor;\r\n    const { offsetWidth, offsetHeight } = child;\r\n\r\n    let left;\r\n    let top;\r\n    if (x === HorizontalAnchors.CENTER) {\r\n      left = rect.left + (rect.width / 2) - (offsetWidth / 2);\r\n    } else if (x === HorizontalAnchors.INNER_RIGHT) {\r\n      left = rect.right - offsetWidth;\r\n    } else if (x === HorizontalAnchors.LEFT) {\r\n      left = rect.left - offsetWidth;\r\n    } else if (x === HorizontalAnchors.RIGHT) {\r\n      left = rect.right;\r\n    }\r\n\r\n    if (centered && x === HorizontalAnchors.CENTER && y === VerticalAnchors.CENTER) {\r\n      top = rect.top - (offsetHeight / 2) + (rect.height / 2);\r\n    } else if (y === VerticalAnchors.TOP) {\r\n      top = rect.top - offsetHeight;\r\n    } else if (y === VerticalAnchors.CENTER) {\r\n      top = rect.top + rect.height / 2;\r\n    } else if (y === VerticalAnchors.BOTTOM) {\r\n      top = rect.bottom;\r\n    }\r\n\r\n    if (this._isCenteredDialog()) {\r\n      const dialogRect = this._dialog.getBoundingClientRect();\r\n      left -= dialogRect.left;\r\n      top -= dialogRect.top;\r\n    }\r\n\r\n    const style = {};\r\n    if (top) {\r\n      style.top = top;\r\n    }\r\n\r\n    if (left) {\r\n      style.left = left;\r\n    }\r\n\r\n    return style;\r\n  };\r\n\r\n  /**\r\n   * Whew. Ok. So since the fixedTo prop can either be two elements or a single item,\r\n   * this utility function is used to add/remove the scrolling event listeners for\r\n   * this prop.\r\n   *\r\n   * When the fixedTo prop has a horizontal and/or vertical attribute, the `window`\r\n   * will be the fallback option. If both the horizontal and vertical attributes are\r\n   * defined, the `window` still needs to have a scroll listener to make sure it\r\n   * doesn't go off screen.\r\n   */\r\n  _manageFixedToListener = (fixedTo, add) => {\r\n    const listener = `${add ? 'add' : 'remove'}EventListener`;\r\n    if (fixedTo !== window && (fixedTo.x || fixedTo.y)) {\r\n      const { x, y } = fixedTo;\r\n      if (x) {\r\n        x[listener]('scroll', this._handleScroll);\r\n      } else {\r\n        window[listener]('scroll', this._handleScroll);\r\n      }\r\n\r\n      if (y) {\r\n        y[listener]('scroll', this._handleScroll);\r\n      } else if (!x) {\r\n        // Only add the window event listener once\r\n        window[listener]('scroll', this._handleScroll);\r\n      }\r\n\r\n      if (y && y !== window && x && x !== window) {\r\n        window[listener]('scroll', this._handleScroll);\r\n      }\r\n    } else {\r\n      fixedTo[listener]('scroll', this._handleScroll);\r\n\r\n      if (fixedTo !== window) {\r\n        window[listener]('scroll', this._handleScroll);\r\n      }\r\n    }\r\n  };\r\n\r\n  _manageWindowResizeListener = (enabled) => {\r\n    if (this._windowResizeTimeout) {\r\n      clearTimeout(this._windowResizeTimeout);\r\n      this._windowResizeTimeout = null;\r\n    }\r\n\r\n    if (enabled) {\r\n      // add a 2 second delay before watching resize events since Android soft keyboards trigger a resize event.\r\n      this._windowResizeTimeout = setTimeout(() => {\r\n        this._windowResizeTimeout = null;\r\n        window.addEventListener('resize', this._handleWindowResize);\r\n      }, 2000);\r\n    } else {\r\n      window.removeEventListener('resize', this._handleWindowResize);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * This is just a simple utility function to merge the existing state styles,\r\n   * any new styles, and the children's styles (with most precedence).\r\n   */\r\n  _mergeStyles = (style) => {\r\n    const {\r\n      minLeft,\r\n      minRight,\r\n      minBottom,\r\n      fillViewportWidth,\r\n      fillViewportHeight,\r\n    } = this.props;\r\n    if (fillViewportWidth) {\r\n      style.left = minLeft;\r\n      style.right = minRight;\r\n    } else {\r\n      if (style.left) {\r\n        style.left = Math.max(minLeft, style.left);\r\n      }\r\n\r\n      if (style.right) {\r\n        style.right = Math.max(minRight, style.right);\r\n      }\r\n    }\r\n\r\n    if (fillViewportHeight) {\r\n      style.bottom = minBottom;\r\n      style.maxHeight = 'none';\r\n    } else {\r\n      // These styles are only created when filling the viewport height, so clear\r\n      // them out again\r\n      style.bottom = null;\r\n      style.maxHeight = null;\r\n    }\r\n\r\n    return {\r\n      ...this.state.styles,\r\n      ...style,\r\n      ...React.Children.only(this.props.children).props.style,\r\n    };\r\n  };\r\n\r\n  /**\r\n   * This initializes the popover with the default styles, and the initial bookkeeping\r\n   * variables to update while it is open.\r\n   */\r\n  _init = (fixedTo, anchor, sameWidth, centered, rect) => {\r\n    if (this._child) {\r\n      // The init function can be called again if the user quickly toggles the layover. If that\r\n      // is the case, we want the styles that were set after the _positionChild _attemptFix.\r\n      return;\r\n    }\r\n\r\n    const { height, width } = rect;\r\n    let { top, left, right } = rect;\r\n    let x;\r\n    let y;\r\n    if (this._dialog) {\r\n      const scroll = getScroll(this._dialog);\r\n      x = scroll.x;\r\n      y = scroll.y;\r\n\r\n      if (this._isCenteredDialog()) {\r\n        const dialogRect = this._dialog.getBoundingClientRect();\r\n        left -= dialogRect.left;\r\n        top -= dialogRect.top;\r\n        right -= dialogRect.right;\r\n      }\r\n    } else if (fixedTo !== window && (fixedTo.y || fixedTo.x)) {\r\n      x = getScroll(fixedTo.x || window).x;\r\n      y = getScroll(fixedTo.y || window).y;\r\n    } else {\r\n      const scroll = getScroll(fixedTo);\r\n      x = scroll.x;\r\n      y = scroll.y;\r\n    }\r\n\r\n    this._initialX = x;\r\n    this._initialY = y;\r\n    this._initialLeft = left;\r\n    this._initialTop = top;\r\n\r\n    if (anchor.x === HorizontalAnchors.INNER_RIGHT) {\r\n      this._initialLeft = left + width;\r\n    } else if (anchor.x === HorizontalAnchors.RIGHT) {\r\n      this._initialLeft = right;\r\n    }\r\n\r\n    if (!centered) {\r\n      this._lastYFix = anchor.y === VerticalAnchors.TOP ? 'bottom' : 'top';\r\n    } else {\r\n      // Centered is not fixable\r\n      this._lastYFix = null;\r\n    }\r\n    if (anchor.x === HorizontalAnchors.LEFT || anchor.x === HorizontalAnchors.INNER_LEFT) {\r\n      this._lastXFix = 'right';\r\n    } else if (anchor.x === HorizontalAnchors.RIGHT || anchor.x === HorizontalAnchors.INNER_RIGHT) {\r\n      this._lastXFix = 'left';\r\n    } else {\r\n      // Can't fix others\r\n      this._lastXFix = null;\r\n    }\r\n\r\n    if (anchor.y === VerticalAnchors.BOTTOM) {\r\n      this._initialTop = top + height;\r\n    }\r\n\r\n    if (fixedTo !== window && !fixedTo.y && !fixedTo.x) {\r\n      const scroll = getScroll(window);\r\n      this._initialWinX = scroll.x;\r\n      this._initialWinY = scroll.y;\r\n    }\r\n\r\n    const styles = this._mergeStyles({\r\n      left: this._initialLeft,\r\n      top: this._initialTop,\r\n      transformOrigin: undefined,\r\n      width: sameWidth ? width : undefined,\r\n    });\r\n\r\n    this.setState({ styles });\r\n  };\r\n\r\n  _reset = ({ fixedTo } = this.props) => {\r\n    // Reset all the bookkeeping variables for a fresh start on re-visible\r\n    this._lastXFix = null;\r\n    this._lastYFix = null;\r\n    this._initialX = null;\r\n    this._initialY = null;\r\n    this._initialTop = null;\r\n    this._initialLeft = null;\r\n\r\n    if (!this._inFixed) {\r\n      if (this._dialog) {\r\n        this._manageFixedToListener(this._dialog, false);\r\n      }\r\n\r\n      this._manageFixedToListener(fixedTo, false);\r\n    }\r\n  };\r\n\r\n  _setContainer = (container) => {\r\n    this._container = findDOMNode(container);\r\n    this._toggle = null;\r\n    if (!this._container) {\r\n      return;\r\n    }\r\n\r\n    const { toggleQuery, onContextMenu } = this.props;\r\n    if (typeof toggleQuery === 'function') {\r\n      this._toggle = toggleQuery();\r\n    } else if (typeof toggleQuery === 'string') {\r\n      this._toggle = this._container.querySelector(toggleQuery);\r\n    } else {\r\n      this._toggle = toggleQuery;\r\n    }\r\n\r\n    if (!this._toggle && !onContextMenu && process.env.NODE_ENV !== 'production') {\r\n      const error = new Error(\r\n        'Unable to find a toggle component with the provided `toggleQuery` and `toggle` element. \\n' +\r\n        `\\`toggleQuery\\`: \\`${toggleQuery}\\``\r\n      );\r\n      error.toggleQuery = toggleQuery;\r\n      error.toggle = this.props.toggle;\r\n\r\n      throw error;\r\n    }\r\n\r\n    let node = this._container;\r\n    while (node) {\r\n      const fixed = window.getComputedStyle(node).position === 'fixed';\r\n      if (fixed && node.className.match(/md-dialog--(full-page|centered)/)) {\r\n        this._dialog = node;\r\n        return;\r\n      } else if (fixed && !node.classList.contains('md-layover-child')) {\r\n        this._inFixed = true;\r\n        return;\r\n      }\r\n\r\n      node = node.offsetParent;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Attempts to fix the child by setting it's location ONLY for the entire\r\n   * page viewport. I didn't bother attempting to fix it for additional fixedTo\r\n   * stuff.\r\n   */\r\n  _initialFix = () => {\r\n    // Need to make a clone that disables any transitions to calculate positioning stuff\r\n    const clone = this._child.cloneNode(true);\r\n    clone.style.webkitTransform = 'none';\r\n    clone.style.transfrom = 'none';\r\n    clone.style.webkitTransition = 'none';\r\n    clone.style.transition = 'none';\r\n\r\n    this._child.parentNode.appendChild(clone);\r\n    const vp = viewport(clone);\r\n    const { offsetHeight: childHeight, offsetWidth: childWidth } = clone;\r\n    this._child.parentNode.removeChild(clone);\r\n\r\n    if (vp === true || !this._toggle || !this._child) {\r\n      return;\r\n    }\r\n\r\n    const { x, y } = this._getAnchor(this.props);\r\n    let toggleHeight;\r\n    let toggleWidth;\r\n    if (this._contextRect) {\r\n      toggleHeight = this._contextRect.height;\r\n      toggleWidth = this._contextRect.width;\r\n    } else {\r\n      toggleHeight = this._toggle.offsetHeight;\r\n      toggleWidth = this._toggle.offsetWidth;\r\n    }\r\n\r\n    let addToTop = 0;\r\n    let addToLeft = 0;\r\n\r\n    // Android devices will never get this far because they consider the keyboard as part\r\n    // of the viewport, iOS will and cause it to be a giant negative number. *sigh*\r\n    // Prevent any additional vertical positioning for iOS\r\n    if (!this.props.fillViewportHeight && (!vp.top || !vp.bottom)) {\r\n      const multiplier = vp.top ? -1 : 1;\r\n      if (!vp.bottom && y === VerticalAnchors.OVERLAP) {\r\n        addToTop += toggleHeight;\r\n      } else if (y === VerticalAnchors.TOP || y === VerticalAnchors.BOTTOM) {\r\n        addToTop += (multiplier * toggleHeight);\r\n      }\r\n\r\n      addToTop += (multiplier * childHeight);\r\n\r\n      this._lastYFix = vp.top ? 'bottom' : 'top';\r\n    }\r\n\r\n    if (!this.props.fillViewportWidth && x !== HorizontalAnchors.CENTER && (!vp.left || !vp.right)) {\r\n      if (!vp.left && x === HorizontalAnchors.LEFT) {\r\n        addToLeft += toggleWidth + childWidth;\r\n        this._lastXFix = 'left';\r\n      } else if (!vp.left && x === HorizontalAnchors.INNER_LEFT) {\r\n        addToLeft += toggleWidth;\r\n        this._lastXFix = 'left';\r\n      } else if (!vp.right && x === HorizontalAnchors.RIGHT) {\r\n        addToLeft -= (toggleWidth + childWidth);\r\n        this._lastXFix = 'right';\r\n      } else if (!vp.right && x === HorizontalAnchors.INNER_RIGHT) {\r\n        addToLeft -= toggleWidth;\r\n        this._lastXFix = 'right';\r\n      }\r\n    }\r\n\r\n    if (addToTop !== 0 || addToLeft !== 0) {\r\n      this._initialTop += addToTop;\r\n      this._initialLeft += addToLeft;\r\n\r\n      this.setState({ styles: this._mergeStyles({ top: this._initialTop, left: this._initialLeft }) });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * When the child is initially mounted, it will update the styles for centering\r\n   * the element (if enabled) and then attempt to fix any viewport issues.\r\n   */\r\n  _fixateChild = (child) => {\r\n    this._child = findDOMNode(child);\r\n\r\n    if (this._child !== null) {\r\n      this._childComponent = React.Children.only(this.props.children);\r\n\r\n      // If child also has a ref callback, simulate the same thing\r\n      if (typeof this._childComponent.ref === 'function') {\r\n        this._childComponent.ref(child);\r\n      }\r\n\r\n      if (this.props.simplified || !this._child || (!this._toggle && !this._contextRect)) {\r\n        return;\r\n      }\r\n\r\n      if (this._dialog && this._dialog.classList.contains('md-dialog--centered')) {\r\n        return;\r\n      }\r\n\r\n      this._manageWindowResizeListener(true);\r\n      this._positionChild();\r\n    } else if (this._childComponent && typeof this._childComponent.ref === 'function') {\r\n      this._childComponent.ref(child);\r\n    }\r\n  };\r\n\r\n  _positionChild = () => {\r\n    const { centered } = this.props;\r\n    const anchor = this._getAnchor(this.props);\r\n    const rect = this._contextRect || this._toggle.getBoundingClientRect();\r\n    this._height = rect.height;\r\n    this._width = rect.width;\r\n    const styles = this._createStyles(anchor, centered, this._child, rect);\r\n    if (styles.top || styles.left) {\r\n      this._initialLeft = styles.left || this._initialLeft;\r\n      this._initialTop = styles.top || this._initialTop;\r\n      this.setState({ styles: this._mergeStyles(styles) }, this._initialFix);\r\n    } else {\r\n      this._initialFix();\r\n    }\r\n  };\r\n\r\n  _handleResize = () => {\r\n    if (this.props.visible) {\r\n      this._positionChild();\r\n    }\r\n  };\r\n\r\n  _handleScroll = (e) => {\r\n    if (!this.props.repositionOnScroll) {\r\n      this._manageFixedToListener(this.props.fixedTo, false);\r\n      this.props.onClose(e);\r\n    }\r\n\r\n    if (!this._ticking) {\r\n      requestAnimationFrame(() => this._handleTick(e));\r\n    }\r\n\r\n    this._ticking = true;\r\n  };\r\n\r\n  /**\r\n   * This is the meat of the stuff. Do lots of viewport / container checks to make sure\r\n   * the element should still be visible. If it is still visible, it will update its\r\n   * x and y position for the new scroll position.\r\n   */\r\n  _handleTick = (e) => {\r\n    const { fixedTo, xThreshold, yThreshold } = this.props;\r\n    const vp = viewport(this._child);\r\n    if (vp !== true && vp.left && vp.right) {\r\n      const fixed = !this._contextRect && this._attemptFix(vp);\r\n      if (!fixed) {\r\n        this.props.onClose(e);\r\n        this._ticking = false;\r\n      }\r\n\r\n      return;\r\n    } else if (\r\n      isOutOfBounds(fixedTo, this._child, this._toggle, yThreshold, xThreshold)\r\n    ) {\r\n      this.props.onClose(e);\r\n      this._ticking = false;\r\n      return;\r\n    }\r\n\r\n    let x;\r\n    let y;\r\n    if (this._dialog) {\r\n      const scroll = getScroll(this._dialog);\r\n      x = scroll.x;\r\n      y = scroll.y;\r\n    } else if (fixedTo !== window && (fixedTo.x || fixedTo.y)) {\r\n      x = getScroll(fixedTo.x || window).x;\r\n      y = getScroll(fixedTo.y || window).y;\r\n    } else {\r\n      const scroll = getScroll(fixedTo);\r\n      x = scroll.x;\r\n      y = scroll.y;\r\n    }\r\n\r\n    let winX;\r\n    let winY;\r\n    // When using the additional fixedTo stuff, need to also keep track of the entire\r\n    // window's scrolling..\r\n    if (fixedTo !== window && !fixedTo.x && !fixedTo.y) {\r\n      const scroll = getScroll(window);\r\n      winX = scroll.x;\r\n      winY = scroll.y;\r\n    }\r\n\r\n    const { styles } = this.state;\r\n    let { left, top } = styles;\r\n    if (this._initialX !== x) {\r\n      left = (this._initialX - x) + this._initialLeft;\r\n    }\r\n\r\n    if (winX && this._initialWinX !== winX) {\r\n      left = (this._initialWinX - winX) + this._initialX;\r\n    }\r\n\r\n    if (this._initialY !== y) {\r\n      top = (this._initialY - y) + this._initialTop;\r\n    }\r\n\r\n    if (winY && this._initialWinY !== winY) {\r\n      top = (this._initialWinY - winY) + this._initialTop + (this._initialY - y);\r\n    }\r\n\r\n    if (styles.top !== top || styles.left !== left) {\r\n      this.setState({ styles: this._mergeStyles({ left, top }) }, () => {\r\n        this._ticking = false;\r\n      });\r\n    } else {\r\n      this._ticking = false;\r\n    }\r\n  };\r\n\r\n  _handleOutsideClick = (e) => {\r\n    if (\r\n      (this._contextRect && this._child && !this._child.contains(e.target)) ||\r\n      (this._container && !this._container.contains(e.target))\r\n    ) {\r\n      this.props.onClose(e);\r\n    }\r\n  };\r\n\r\n  _handleWindowResize = (e) => {\r\n    const { onClose, repositionOnResize } = this.props;\r\n    if (repositionOnResize) {\r\n      this._handleResize();\r\n    } else {\r\n      onClose(e);\r\n      this._manageWindowResizeListener(false);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Attempts to fix a viewport problem by swapping the positioning. This only does\r\n   * vertical switching right now.\r\n   *\r\n   * @param {Object} vp - The result of the viewport function\r\n   * @return {boolean} true if the fix was able to be done and successful.\r\n   */\r\n  _attemptFix = (vp) => {\r\n    const { x, y } = this._getAnchor(this.props);\r\n    const centered = x === HorizontalAnchors.CENTER && y === VerticalAnchors.CENTER && this.props.centered;\r\n    if (centered || (this._lastYFix === 'top' && !vp.top) || (this._lastYFix === 'bottom' && !vp.bottom)) {\r\n      return false;\r\n    }\r\n\r\n    const toggleTop = this._toggle.getBoundingClientRect().top;\r\n    const { offsetHeight: toggleHeight } = this._toggle;\r\n    const { offsetHeight: childHeight } = this._child;\r\n\r\n    // Can;t fix if the child can't fit on the page based on the toggle's position\r\n    if (toggleTop + toggleHeight + childHeight > window.innerHeight) {\r\n      return false;\r\n    }\r\n\r\n    const { top } = this._child.getBoundingClientRect();\r\n    let newTop = this._initialTop;\r\n    let addToTop = childHeight * (vp.top ? -1 : 1);\r\n    if (y === VerticalAnchors.OVERLAP) {\r\n      addToTop += ((vp.top ? 1 : -1) * toggleHeight);\r\n    } else if (y === VerticalAnchors.TOP || y === VerticalAnchors.BOTTOM) {\r\n      addToTop += ((this._lastYFix === 'top' ? -1 : 1) * toggleHeight);\r\n    }\r\n\r\n    if (addToTop !== 0) {\r\n      newTop = top + addToTop;\r\n      this._lastYFix = vp.top ? 'bottom' : 'top';\r\n    }\r\n\r\n    if (newTop !== this._initialTop) {\r\n      this._initialTop = newTop;\r\n      const { fixedTo } = this.props;\r\n      let scrollEl = fixedTo;\r\n      if (fixedTo !== window && (fixedTo.y || fixedTo.x)) {\r\n        scrollEl = fixedTo.y || window;\r\n      }\r\n\r\n      this._initialY = getScroll(scrollEl).y;\r\n\r\n      this.setState({ styles: this._mergeStyles({ top: this._initialTop }) }, () => {\r\n        this._ticking = false;\r\n      });\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  _handleContextMenu = (e) => {\r\n    const anchor = this._getAnchor(this.props);\r\n    const { onContextMenu, preventContextMenu, fixedTo, sameWidth, centered, visible } = this.props;\r\n    if (!onContextMenu) {\r\n      return;\r\n    }\r\n\r\n    this._contextRect = getSelectedTextPosition(e);\r\n    if (preventContextMenu && (!this._child || !this._child.contains(e.target))) {\r\n      e.preventDefault();\r\n    }\r\n\r\n    onContextMenu(e);\r\n    if (visible) {\r\n      this._init(fixedTo, anchor, sameWidth, centered, this._contextRect);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      className,\r\n      block,\r\n      toggle,\r\n      visible,\r\n      children,\r\n      fullWidth,\r\n      animationPosition,\r\n      simplified,\r\n      fillViewportWidth,\r\n      fillViewportHeight,\r\n      /* eslint-disable no-unused-vars */\r\n      anchor,\r\n      belowAnchor,\r\n      onClose,\r\n      repositionOnScroll,\r\n      repositionOnResize,\r\n      sameWidth,\r\n      centered,\r\n      fixedTo,\r\n      toggleQuery,\r\n      yThreshold,\r\n      xThreshold,\r\n      onContextMenu,\r\n      preventContextMenu,\r\n      closeOnOutsideClick,\r\n      minLeft,\r\n      minRight,\r\n      minBottom,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n\r\n    let child;\r\n    let childId;\r\n    if (visible) {\r\n      child = React.Children.only(children);\r\n      if (child.props.id) {\r\n        childId = child.props.id;\r\n      } else if (props.id) {\r\n        childId = `${props.id}-layover`;\r\n      }\r\n\r\n      child = React.cloneElement(children, {\r\n        ref: this._fixateChild,\r\n        id: childId,\r\n        style: simplified ? child.props.style : this.state.styles,\r\n        className: cn(`md-layover-child md-layover-child--${animationPosition}`, {\r\n          'md-layover-child--simplified': simplified,\r\n        }, child.props.className),\r\n      });\r\n    }\r\n\r\n    let observer = null;\r\n    if (!simplified && (!fillViewportWidth && !fillViewportHeight)) {\r\n      observer = (\r\n        <ResizeObserver\r\n          watchWidth={!fillViewportWidth}\r\n          watchHeight={!fillViewportHeight}\r\n          target={this._child}\r\n          onResize={this._handleResize}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <CSSTransitionGroup\r\n        {...props}\r\n        className={cn('md-layover', {\r\n          'md-layover--simplified': simplified,\r\n          'md-inline-block': !block && !fullWidth,\r\n          'md-full-width': fullWidth,\r\n        }, className)}\r\n        ref={this._setContainer}\r\n        aria-haspopup\r\n        aria-owns={childId}\r\n        aria-expanded={visible}\r\n        transitionEnter={props.transitionEnterTimeout !== 0}\r\n        transitionLeave={props.transitionLeaveTimeout !== 0}\r\n        onContextMenu={this._handleContextMenu}\r\n      >\r\n        {observer}\r\n        {toggle}\r\n        {child}\r\n      </CSSTransitionGroup>\r\n    );\r\n  }\r\n}\r\n"]}