{"version":3,"sources":["../../src/js/Grids/Cell.js"],"names":["DIFF_KEYS","Cell","props","className","align","position","size","order","offset","phoneSize","phoneOrder","phoneOffset","phoneHidden","tabletSize","tabletOrder","tabletOffset","tabletHidden","desktopSize","desktopOrder","desktopOffset","desktopHidden","state","getClassName","setState","nextProps","some","key","style","Component","component","children","propClassName","propTypes","object","string","oneOfType","func","node","oneOf","number","bool","defaultProps"],"mappings":"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","file":"Cell.js","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport bem from '../utils/bem';\r\n\r\nconst DIFF_KEYS = [\r\n  'className',\r\n  'align',\r\n  'position',\r\n  'size',\r\n  'offset',\r\n  'order',\r\n  'phoneSize',\r\n  'phoneOrder',\r\n  'phoneOffset',\r\n  'phoneHidden',\r\n  'tabletSize',\r\n  'tabletOrder',\r\n  'tabletOffset',\r\n  'tabletHidden',\r\n  'desktopSize',\r\n  'desktopOrder',\r\n  'desktopOffset',\r\n  'desktopHidden',\r\n];\r\n\r\nexport default class Cell extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * An optional style to apply to the Cell component. This will only be applied\r\n     * if the `children` prop is not a callback function.\r\n     *\r\n     * @see {@link #children}\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the Cell component. This will only be applied\r\n     * if the `children` prop is not a callback function.\r\n     *\r\n     * @see {@link #children}\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * The component to render the Cell as. This should probably not be used as much\r\n     * as the `children` callback function.\r\n     */\r\n    component: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.func,\r\n    ]),\r\n\r\n    /**\r\n     * The children can either be renderable React elements or a callback function\r\n     * that accepts the style and className props to apply so that the styles can\r\n     * be manually added to whichever component.\r\n     */\r\n    children: PropTypes.oneOfType([\r\n      PropTypes.func,\r\n      PropTypes.node,\r\n    ]),\r\n\r\n    /**\r\n     * An optional cell alignment to apply. When the `Grid` is not `stacked`,\r\n     * this will apply to vertical alignment within each \"row\" of the grid.\r\n     *\r\n     * Alignments:\r\n     * - `top` - This will align to the top of the row\r\n     * - `middle` - This will align to the middle of the row\r\n     * - `bottom` - This will align to the bottom of the row\r\n     * - `stretch` - This will make the cell stretch to fill all the available space\r\n     *   in the row.\r\n     *\r\n     * @see {@link #position}\r\n     */\r\n    align: PropTypes.oneOf(['top', 'middle', 'bottom', 'stretch']),\r\n\r\n    /**\r\n     * An optional cell position to apply. When the `Grid` is not `stacked`,\r\n     * this will apply to horizontal alignment within each \"row\" of the grid.\r\n     *\r\n     * Positions:\r\n     * - `center` - This will align the cell to be within the center of the row. This really\r\n     *    just applies `margin-left: auto; margin-right: auto`.\r\n     * - `right` - This will align the cell to the end of the row. This really just applies `margin-left: auto`.\r\n     *\r\n     * @see {@link #align}\r\n     */\r\n    position: PropTypes.oneOf(['center', 'right']),\r\n\r\n    /**\r\n     * An optional size to apply to the cell. This sizing will be applied across all media sizes.\r\n     * If the size is greater than the number of columns allowed for the media size, it will just\r\n     * span the entire width.\r\n     */\r\n    size: PropTypes.number,\r\n\r\n    /**\r\n     * An optional order to apply to the cell. This order will be applied across all media sizes.\r\n     */\r\n    order: PropTypes.number,\r\n\r\n    /**\r\n     * An optional offset to apply to the cell. This will add spacing to the left of the cell.\r\n     */\r\n    offset: PropTypes.number,\r\n\r\n    /**\r\n     * An optional size to apply to the cell only on phones.\r\n     */\r\n    phoneSize: PropTypes.number,\r\n\r\n    /**\r\n     * An optional order to apply to the cell only on phones.\r\n     */\r\n    phoneOrder: PropTypes.number,\r\n\r\n    /**\r\n     * An optional offset to apply to the cell only on phones.\r\n     */\r\n    phoneOffset: PropTypes.number,\r\n\r\n    /**\r\n     * Boolean if the cell should be hidden on phones only.\r\n     */\r\n    phoneHidden: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional size to apply to the cell only on tablets.\r\n     */\r\n    tabletSize: PropTypes.number,\r\n\r\n    /**\r\n     * An optional order to apply to the cell only on tablets.\r\n     */\r\n    tabletOrder: PropTypes.number,\r\n\r\n    /**\r\n     * An optional offset to apply to the cell only on tablets.\r\n     */\r\n    tabletOffset: PropTypes.number,\r\n\r\n    /**\r\n     * Boolean if the cell should be hidden on tablets only.\r\n     */\r\n    tabletHidden: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional size to apply to the cell only on desktops.\r\n     */\r\n    desktopSize: PropTypes.number,\r\n\r\n    /**\r\n     * An optional order to apply to the cell only on desktops.\r\n     */\r\n    desktopOrder: PropTypes.number,\r\n\r\n    /**\r\n     * An optional offset to apply to the cell only on desktops.\r\n     */\r\n    desktopOffset: PropTypes.number,\r\n\r\n    /**\r\n     * Boolean if the cell should be hidden on desktops only.\r\n     */\r\n    desktopHidden: PropTypes.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    component: 'div',\r\n    phoneHidden: false,\r\n    tabletHidden: false,\r\n    desktopHidden: false,\r\n  };\r\n\r\n  /**\r\n   * A utility function to get the cell's className based on the Cell's props. This is\r\n   * used behind the scenes to merge and create the className for the cell.\r\n   *\r\n   * ### Example:\r\n   * ```js\r\n   * <div className={Cell.getClassName()}>A simple cell</div>\r\n   * <div className={Cell.getClassName({ size: 1 })}>A cell with size 1</div>\r\n   * ```\r\n   *\r\n   * @param {Object=} props - This should be an object of the `Cell`'s props. It\r\n   *    will extract the needed keys and generate the className.\r\n   * @return {String} the full className to use for the cell\r\n   */\r\n  static getClassName(props = {}) {\r\n    const {\r\n      className,\r\n      align,\r\n      position,\r\n      size,\r\n      order,\r\n      offset,\r\n      phoneSize,\r\n      phoneOrder,\r\n      phoneOffset,\r\n      phoneHidden,\r\n      tabletSize,\r\n      tabletOrder,\r\n      tabletOffset,\r\n      tabletHidden,\r\n      desktopSize,\r\n      desktopOrder,\r\n      desktopOffset,\r\n      desktopHidden,\r\n    } = props;\r\n\r\n    return bem('md-cell', {\r\n      [align]: align,\r\n      [position]: position,\r\n      [size]: size,\r\n      [`order-${order}`]: order,\r\n      [`${offset}-offset`]: offset,\r\n      [`${phoneSize}-phone`]: phoneSize,\r\n      [`order-${phoneOrder}-phone`]: phoneOrder,\r\n      [`${phoneOffset}-phone-offset`]: phoneOffset,\r\n      'phone-hidden': phoneHidden,\r\n      [`${tabletSize}-tablet`]: tabletSize,\r\n      [`order-${tabletOrder}-tablet`]: tabletOrder,\r\n      [`${tabletOffset}-tablet-offset`]: tabletOffset,\r\n      'tablet-hidden': tabletHidden,\r\n      [`${desktopSize}-desktop`]: desktopSize,\r\n      [`order-${desktopOrder}-desktop`]: desktopOrder,\r\n      [`${desktopOffset}-desktop-offset`]: desktopOffset,\r\n      'desktop-hidden': desktopHidden,\r\n    }, className);\r\n  }\r\n\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.state = { className: Cell.getClassName(props) };\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.setState({ className: Cell.getClassName(this.props) });\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (DIFF_KEYS.some(key => this.props[key] !== nextProps[key])) {\r\n      this.setState({ className: Cell.getClassName(nextProps) });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { className } = this.state;\r\n    const {\r\n      style,\r\n      component: Component,\r\n      children,\r\n      /* eslint-disable no-unused-vars */\r\n      className: propClassName,\r\n      align,\r\n      position,\r\n      size,\r\n      offset,\r\n      order,\r\n      phoneSize,\r\n      phoneOrder,\r\n      phoneOffset,\r\n      phoneHidden,\r\n      tabletSize,\r\n      tabletOrder,\r\n      tabletOffset,\r\n      tabletHidden,\r\n      desktopSize,\r\n      desktopOrder,\r\n      desktopOffset,\r\n      desktopHidden,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n\r\n    if (typeof children === 'function') {\r\n      return children({ style, className });\r\n    }\r\n\r\n    return <Component {...props} style={style} className={className}>{children}</Component>;\r\n  }\r\n}\r\n"]}