{"version":3,"sources":["../../src/js/Cards/CardTitle.js"],"names":["CardTitle","props","id","style","className","title","subtitle","expander","isExpander","children","propAvatar","avatar","avatarClassName","only","propTypes","oneOfType","number","string","object","node","isRequired","element","bool"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;;;;;;;;;;;AAEA;;;;IAIqBA,S;;;;;;;;;;;6BAkDV;AAAA,mBAYH,KAAKC,KAZF;AAAA,UAELC,EAFK,UAELA,EAFK;AAAA,UAGLC,KAHK,UAGLA,KAHK;AAAA,UAILC,SAJK,UAILA,SAJK;AAAA,UAKLC,KALK,UAKLA,KALK;AAAA,UAMLC,QANK,UAMLA,QANK;AAAA,UAOLC,QAPK,UAOLA,QAPK;AAAA,UAQLC,UARK,UAQLA,UARK;AAAA,UASLC,QATK,UASLA,QATK;AAAA,UAUGC,UAVH,UAULC,MAVK;AAAA,UAWFV,KAXE;;AAAA,UAcDU,MAdC,GAcU,KAAKV,KAdf,CAcDU,MAdC;;AAeP,UAAIA,MAAJ,EAAY;AAAA,YACSC,eADT,GAC6B,gBAASC,IAAT,CAAcF,MAAd,EAAsBV,KADnD,CACFG,SADE;;AAEVO,iBAAS,yBAAaA,MAAb,EAAqB;AAC5BP,qBAAW,0BAAG,iBAAH,EAAsBQ,eAAtB;AADiB,SAArB,CAAT;AAGD;AACD,aACE;AAAA;AAAA,qBACMX,KADN;AAEE,iBAAOE,KAFT;AAGE,qBAAW,0BAAG,eAAH,EAAoB;AAC7B,sCAA0B,CAACQ;AADE,WAApB,EAERP,SAFQ;AAHb;AAOGO,cAPH;AAQE,kEAAgB,IAAIT,EAApB,EAAwB,OAAOG,KAA/B,EAAsC,UAAUC,QAAhD,EAA0D,QAAQ,CAAC,CAACK,MAApE,GARF;AASGF,gBATH;AAUGD,sBAAcD,YAAY;AAV7B,OADF;AAcD;;;;;;AArFkBP,S,CACZc,S,GAAY;AACjB;;;AAGAZ,MAAI,oBAAUa,SAAV,CAAoB,CACtB,oBAAUC,MADY,EAEtB,oBAAUC,MAFY,CAApB,CAJa;;AASjB;;;AAGAd,SAAO,oBAAUe,MAZA;;AAcjB;;;AAGAd,aAAW,oBAAUa,MAjBJ;;AAmBjB;;;AAGAZ,SAAO,oBAAUc,IAAV,CAAeC,UAtBL;;AAwBjB;;;AAGAd,YAAU,oBAAUa,IA3BH;;AA6BjB;;;;AAIAV,YAAU,oBAAUU,IAjCH;;AAmCjB;;;AAGAR,UAAQ,oBAAUU,OAtCD;;AAwCjB;;;;AAIAd,YAAU,oBAAUe,IA5CH;;AA8CjBd,cAAY,0BAAW,oBAAUc,IAArB,EAA2B,wBAA3B;AA9CK,C;kBADAtB,S","file":"CardTitle.js","sourcesContent":["import React, { Component, Children, cloneElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport deprecated from 'react-prop-types/lib/deprecated';\r\n\r\nimport CardTitleBlock from './CardTitleBlock';\r\nimport CardExpander from './CardExpander';\r\n\r\n/**\r\n * The `CardTitle` component is used to render a title in a Card along\r\n * with an optional subtitle or avatar.\r\n */\r\nexport default class CardTitle extends Component {\r\n  static propTypes = {\r\n    /**\r\n     * An optional id to add to the `title`.\r\n     */\r\n    id: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * An optional style to apply.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * The title to display.\r\n     */\r\n    title: PropTypes.node.isRequired,\r\n\r\n    /**\r\n     * An optional subtitle to display.\r\n     */\r\n    subtitle: PropTypes.node,\r\n\r\n    /**\r\n     * Any additional children to display in the title block\r\n     * after the avatar, title, and subtitle.\r\n     */\r\n    children: PropTypes.node,\r\n\r\n    /**\r\n     * An optional avatar to display before the title and subtitle.\r\n     */\r\n    avatar: PropTypes.element,\r\n\r\n    /**\r\n     * Boolean if the `CardTitle` component should inject a button\r\n     * for expanding all children below it.\r\n     */\r\n    expander: PropTypes.bool,\r\n\r\n    isExpander: deprecated(PropTypes.bool, 'Use `expander` instead'),\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      style,\r\n      className,\r\n      title,\r\n      subtitle,\r\n      expander,\r\n      isExpander,\r\n      children,\r\n      avatar: propAvatar, // eslint-disable-line no-unused-vars\r\n      ...props\r\n    } = this.props;\r\n\r\n    let { avatar } = this.props;\r\n    if (avatar) {\r\n      const { className: avatarClassName } = Children.only(avatar).props;\r\n      avatar = cloneElement(avatar, {\r\n        className: cn('md-avatar--card', avatarClassName),\r\n      });\r\n    }\r\n    return (\r\n      <div\r\n        {...props}\r\n        style={style}\r\n        className={cn('md-card-title', {\r\n          'md-card-title--primary': !avatar,\r\n        }, className)}\r\n      >\r\n        {avatar}\r\n        <CardTitleBlock id={id} title={title} subtitle={subtitle} avatar={!!avatar} />\r\n        {children}\r\n        {isExpander || expander && <CardExpander />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}