{"version":3,"sources":["../../../src/js/utils/Positioning/isOutOfBounds.js"],"names":["isOutOfBounds","isOutHorizontally","fixedTo","child","threshold","getBoundingClientRect","fixedLeft","left","fixedRight","right","childLeft","childRight","offset","offsetWidth","screenEdge","isOutVertically","toggle","fixedTop","top","fixedBottom","bottom","childTop","childBottom","offsetHeight","verticalThreshold","horizontalThreshold","window","x","y"],"mappings":";;;;;kBAoCwBA,a;;AAlCxB;;;;;;AAEA,SAASC,iBAAT,CAA2BC,OAA3B,EAAoCC,KAApC,EAA2CC,SAA3C,EAAsD;AAAA,8BACLF,QAAQG,qBAAR,EADK;AAAA,MACtCC,SADsC,yBAC5CC,IAD4C;AAAA,MACpBC,UADoB,yBAC3BC,KAD2B;;AAAA,8BAELN,MAAME,qBAAN,EAFK;AAAA,MAEtCK,SAFsC,yBAE5CH,IAF4C;AAAA,MAEpBI,UAFoB,yBAE3BF,KAF2B;;AAGpD,MAAMG,SAAST,MAAMU,WAAN,GAAoBT,SAAnC;;AAEA,MAAMG,OAAOG,YAAYE,MAAzB;AACA,MAAMH,QAAQE,aAAaC,MAA3B;;AAEA,MAAME,aAAaJ,cAAc,CAAd,IAAmB,6BAAc,OAAd,MAA2BC,UAAjE;AACA,SAAOL,YAAYC,IAAZ,IAAoBC,aAAaC,KAAjC,IAA0CK,UAAjD;AACD,C,CAdD;;AAgBA,SAASC,eAAT,CAAyBb,OAAzB,EAAkCC,KAAlC,EAAyCa,MAAzC,EAAiDZ,SAAjD,EAA4D;AAAA,+BACXF,QAAQG,qBAAR,EADW;AAAA,MAC7CY,QAD6C,0BAClDC,GADkD;AAAA,MAC3BC,WAD2B,0BACnCC,MADmC;;AAAA,+BAEXjB,MAAME,qBAAN,EAFW;AAAA,MAE7CgB,QAF6C,0BAElDH,GAFkD;AAAA,MAE3BI,WAF2B,0BAEnCF,MAFmC;;AAG1D,MAAMR,SAASI,OAAOO,YAAP,GAAsBnB,SAArC;;AAEA,MAAMU,aAAaO,aAAa,CAAb,IAAkB,6BAAc,QAAd,MAA4BC,WAAjE;AACA,SAAOL,WAAWI,WAAWT,MAAtB,IAAgCO,cAAcE,WAAWT,MAAzD,IAAmEE,UAA1E;AACD;;AAED;;;;;;;;;;;AAWe,SAASd,aAAT,CAAuBE,OAAvB,EAAgCC,KAAhC,EAAuCa,MAAvC,EAA+CQ,iBAA/C,EAAkEC,mBAAlE,EAAuF;AACpG,MAAIvB,YAAYwB,MAAhB,EAAwB;AACtB,WAAO,KAAP;AACD,GAFD,MAEO,IAAIxB,QAAQyB,CAAR,IAAazB,QAAQ0B,CAAzB,EAA4B;AAAA,QACzBD,CADyB,GAChBzB,OADgB,CACzByB,CADyB;AAAA,QACtBC,CADsB,GAChB1B,OADgB,CACtB0B,CADsB;;AAEjC,WAAQ,CAAC,CAACA,CAAF,IAAOb,gBAAgBa,CAAhB,EAAmBzB,KAAnB,EAA0Ba,MAA1B,EAAkCQ,iBAAlC,CAAR,IACJ,CAAC,CAACG,CAAF,IAAO1B,kBAAkB0B,CAAlB,EAAqBxB,KAArB,EAA4BsB,mBAA5B,CADV;AAED;;AAED,SAAOV,gBAAgBb,OAAhB,EAAyBC,KAAzB,EAAgCa,MAAhC,EAAwCQ,iBAAxC,KACLvB,kBAAkBC,OAAlB,EAA2BC,KAA3B,EAAkCsB,mBAAlC,CADF;AAED","file":"isOutOfBounds.js","sourcesContent":["/** @module utils/Positioning/isOutOfBounds */\r\n\r\nimport getScreenSize from './getScreenSize';\r\n\r\nfunction isOutHorizontally(fixedTo, child, threshold) {\r\n  const { left: fixedLeft, right: fixedRight } = fixedTo.getBoundingClientRect();\r\n  const { left: childLeft, right: childRight } = child.getBoundingClientRect();\r\n  const offset = child.offsetWidth * threshold;\r\n\r\n  const left = childLeft + offset;\r\n  const right = childRight - offset;\r\n\r\n  const screenEdge = childLeft === 0 || getScreenSize('Width') === childRight;\r\n  return fixedLeft > left || fixedRight < right || screenEdge;\r\n}\r\n\r\nfunction isOutVertically(fixedTo, child, toggle, threshold) {\r\n  const { top: fixedTop, bottom: fixedBottom } = fixedTo.getBoundingClientRect();\r\n  const { top: childTop, bottom: childBottom } = child.getBoundingClientRect();\r\n  const offset = toggle.offsetHeight * threshold;\r\n\r\n  const screenEdge = childTop === 0 || getScreenSize('Height') === childBottom;\r\n  return fixedTop > childTop + offset || fixedBottom < childTop - offset || screenEdge;\r\n}\r\n\r\n/**\r\n * Checks if the fixedTo object for the Layover component is considered\r\n * out of bounds relative to the container.\r\n *\r\n * @param {Object} fixedTo - The Layover's `fixedTo` prop.\r\n * @param {Object} child - The Layover's `children` prop as a DOM element.\r\n * @param {Object} toggle - The Layover's `toggle` prop as a DOM element.\r\n * @param {number} verticalThreshold - The vertical threshold multiplier to apply.\r\n * @param {number} horizontalThreshold - The horizontal threshold multiplier to apply.\r\n * @return {boolean} true if the Layover's `fixedTo` prop is considered out of bounds.\r\n */\r\nexport default function isOutOfBounds(fixedTo, child, toggle, verticalThreshold, horizontalThreshold) {\r\n  if (fixedTo === window) {\r\n    return false;\r\n  } else if (fixedTo.x || fixedTo.y) {\r\n    const { x, y } = fixedTo;\r\n    return (!!y && isOutVertically(y, child, toggle, verticalThreshold)) ||\r\n      (!!x && isOutHorizontally(x, child, horizontalThreshold));\r\n  }\r\n\r\n  return isOutVertically(fixedTo, child, toggle, verticalThreshold) ||\r\n    isOutHorizontally(fixedTo, child, horizontalThreshold);\r\n}\r\n"]}