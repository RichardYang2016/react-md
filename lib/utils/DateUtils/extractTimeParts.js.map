{"version":3,"sources":["../../../src/js/utils/DateUtils/extractTimeParts.js"],"names":["extractTimeParts","DateTimeFormat","locales","time","formatted","match","hours","minutes","separator","remaining","timePeriod","length","join","trim"],"mappings":";;;;;;ypBAAA;;;kBAYwBA,gB;;AAXxB;;;;;;;;AAEA;;;;;;;;;AASe,SAASA,gBAAT,CAA0BC,cAA1B,EAA0CC,OAA1C,EAAmDC,IAAnD,EAAyD;AACtE,MAAMC,YAAY,0BAAWH,cAAX,EAA2BC,OAA3B,EAAoCC,IAApC,CAAlB;;AAEA;AACA;;AAJsE,yBAK7CC,UAAUC,KAAV,CAAgB,SAAhB,CAL6C;AAAA;AAAA,MAK/DC,KAL+D;AAAA,MAKxDC,OALwD;;AAAA,0BAMpCH,UAAUC,KAAV,CAAgB,aAAhB,CANoC;AAAA;AAAA,MAM/DG,SAN+D;AAAA,MAMjDC,SANiD;;AAOtE,MAAIC,mBAAJ;AACA,MAAID,aAAaA,UAAUE,MAA3B,EAAmC;AACjCD,iBAAaD,UAAUG,IAAV,CAAe,EAAf,EAAmBC,IAAnB,EAAb;AACD;;AAED,SAAO;AACLP,gBADK;AAELC,aAASC,YAAYD,OAFhB;AAGLG;AAHK,GAAP;AAKD","file":"extractTimeParts.js","sourcesContent":["/** @module utils/DateUtils/extractTimeParts */\r\nimport formatTime from './formatTime';\r\n\r\n/**\r\n * Extracts the hours, minutes, and optional time period from\r\n * a date time.\r\n *\r\n * @param {function} DateTimeFormat the DateTimeFormat function to use.\r\n * @param {string|string[]} locales the locales to use.\r\n * @param {Date} time the time to extract from.\r\n * @return {Object} an object of { hours, minutes, timePeriod }\r\n */\r\nexport default function extractTimeParts(DateTimeFormat, locales, time) {\r\n  const formatted = formatTime(DateTimeFormat, locales, time);\r\n\r\n  // IE does not like lookaheads or splitting on [^0-9]\r\n  // it will include the non-printable characters..\r\n  const [hours, minutes] = formatted.match(/[0-9]+/g);\r\n  const [separator, ...remaining] = formatted.match(/[ ,.:A-z]+/g);\r\n  let timePeriod;\r\n  if (remaining && remaining.length) {\r\n    timePeriod = remaining.join('').trim();\r\n  }\r\n\r\n  return {\r\n    hours,\r\n    minutes: separator + minutes,\r\n    timePeriod,\r\n  };\r\n}\r\n\r\n"]}