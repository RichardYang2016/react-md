{"version":3,"sources":["../../../src/js/utils/dates/toDayOfWeek.js"],"names":["toDayOfWeek","date","dow","d","Date","day","getDay","diff","getDate","setDate"],"mappings":";;;;;kBAiBwBA,W;;AAjBxB;;;;;;AAEA;;;;;;;;;;;;;;;AAee,SAASA,WAAT,CAAqBC,IAArB,EAAoC;AAAA,MAATC,GAAS,uEAAH,CAAG;;AACjD,MAAI,CAAC,2BAAYD,IAAZ,CAAL,EAAwB;AACtB,WAAO,IAAP;AACD;;AAED,MAAME,IAAI,IAAIC,IAAJ,CAASH,IAAT,CAAV;AACA,MAAMI,MAAMJ,KAAKK,MAAL,EAAZ;AACA,MAAMC,OAAQJ,EAAEK,OAAF,KAAcH,GAAf,GAAsBH,GAAnC;AACA,SAAO,IAAIE,IAAJ,CAASD,EAAEM,OAAF,CAAUF,IAAV,CAAT,CAAP;AACD","file":"toDayOfWeek.js","sourcesContent":["import isValidDate from './isValidDate';\r\n\r\n/**\r\n * Takes in a date and returns a new date at the specified day of week.\r\n *\r\n * Examples:\r\n * // to Sunday\r\n * - toDayOfWeek(new Date(2018, 0, 1), 0) == new Date(2017, 11, 31)\r\n *\r\n * // to Monday\r\n * - toDayOfWeek(new Date(2018, 0, 1), 1) == new Date(2018, 0, 1)\r\n *\r\n * @param {Date} date - The date to convert to a day of week\r\n * @param {number=0} dow - The day of the week to convert to\r\n * @return {Date} the new date set at the day of week or null if the\r\n *    date is invalid or false-ish.\r\n */\r\nexport default function toDayOfWeek(date, dow = 0) {\r\n  if (!isValidDate(date)) {\r\n    return null;\r\n  }\r\n\r\n  const d = new Date(date);\r\n  const day = date.getDay();\r\n  const diff = (d.getDate() - day) + dow;\r\n  return new Date(d.setDate(diff));\r\n}\r\n"]}