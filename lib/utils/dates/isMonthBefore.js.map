{"version":3,"sources":["../../../src/js/utils/dates/isMonthBefore.js"],"names":["isMonthBefore","date","toCompare","d1","Date","getFullYear","getMonth","d2"],"mappings":";;;;;kBASwBA,a;;AATxB;;;;;;AAEA;;;;;;;AAOe,SAASA,aAAT,CAAuBC,IAAvB,EAA6BC,SAA7B,EAAwC;AACrD,MAAI,CAAC,2BAAYD,IAAZ,CAAD,IAAsB,CAAC,2BAAYC,SAAZ,CAA3B,EAAmD;AACjD,WAAO,KAAP;AACD;;AAED,MAAMC,KAAK,IAAIC,IAAJ,CAASH,KAAKI,WAAL,EAAT,EAA6BJ,KAAKK,QAAL,EAA7B,EAA8C,CAA9C,CAAX;AACA,MAAMC,KAAK,IAAIH,IAAJ,CAASF,UAAUG,WAAV,EAAT,EAAkCH,UAAUI,QAAV,KAAuB,CAAzD,EAA4D,CAA5D,CAAX;AACA,SAAOH,KAAKI,EAAZ;AACD","file":"isMonthBefore.js","sourcesContent":["import isValidDate from './isValidDate';\r\n\r\n/**\r\n * Checks if a date is the month before another date without time\r\n *\r\n * @param {Date} date the date to check if it is before the other\r\n * @param {Date} toCompare the date to compare to\r\n * @return true if the date is before the other date's first day of month.\r\n */\r\nexport default function isMonthBefore(date, toCompare) {\r\n  if (!isValidDate(date) || !isValidDate(toCompare)) {\r\n    return false;\r\n  }\r\n\r\n  const d1 = new Date(date.getFullYear(), date.getMonth(), 1);\r\n  const d2 = new Date(toCompare.getFullYear(), toCompare.getMonth() - 1, 1);\r\n  return d1 > d2;\r\n}\r\n"]}