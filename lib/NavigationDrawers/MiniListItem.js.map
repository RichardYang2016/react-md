{"version":3,"sources":["../../src/js/NavigationDrawers/MiniListItem.js"],"names":["MiniListItem","state","active","_handleMouseOver","e","props","onMouseOver","disabled","setState","_handleMouseLeave","onMouseLeave","_handleTouchStart","onTouchStart","_touched","touchedAt","Date","now","_handleTouchEnd","onTouchEnd","time","_touchTimeout","setTimeout","clearTimeout","style","className","tileStyle","tileClassName","leftIcon","leftAvatar","activeClassName","ItemComponent","itemComponent","primaryText","secondaryText","rightIcon","rightAvatar","threeLines","children","defaultOpen","isOpen","inset","nestedItems","animateNestedItems","expanderIcon","expanderIconChildren","expanderIconClassName","propTypes","object","string","component","oneOfType","func","bool","node","isRequired","defaultProps"],"mappings":"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","file":"MiniListItem.js","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\nimport AccessibleFakeInkedButton from '../Helpers/AccessibleFakeInkedButton';\r\nimport TileAddon from '../Lists/TileAddon';\r\n\r\nexport default class MiniListItem extends PureComponent {\r\n  static propTypes = {\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    tileStyle: PropTypes.object,\r\n    tileClassName: PropTypes.string,\r\n    component: PropTypes.oneOfType([\r\n      PropTypes.func,\r\n      PropTypes.string,\r\n    ]),\r\n    active: PropTypes.bool,\r\n    activeClassName: PropTypes.string,\r\n    leftIcon: PropTypes.node,\r\n    leftAvatar: PropTypes.node,\r\n    disabled: PropTypes.bool,\r\n    onTouchStart: PropTypes.func,\r\n    onTouchEnd: PropTypes.func,\r\n    onMouseOver: PropTypes.func,\r\n    onMouseLeave: PropTypes.func,\r\n    defaultOpen: PropTypes.bool,\r\n    itemComponent: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.func,\r\n    ]).isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    activeClassName: 'md-text--theme-primary',\r\n    component: 'div',\r\n    itemComponent: 'li',\r\n  };\r\n\r\n  state = { active: false };\r\n\r\n  componentWillUnmount() {\r\n    if (this._touchTimeout) {\r\n      clearTimeout(this._touchTimeout);\r\n    }\r\n  }\r\n\r\n  _handleMouseOver = (e) => {\r\n    if (this.props.onMouseOver) {\r\n      this.props.onMouseOver(e);\r\n    }\r\n\r\n    if (!this.props.disabled) {\r\n      this.setState({ active: true });\r\n    }\r\n  };\r\n\r\n  _handleMouseLeave = (e) => {\r\n    if (this.props.onMouseLeave) {\r\n      this.props.onMouseLeave(e);\r\n    }\r\n\r\n    if (!this.props.disabled) {\r\n      this.setState({ active: false });\r\n    }\r\n  };\r\n\r\n  _handleTouchStart = (e) => {\r\n    if (this.props.onTouchStart) {\r\n      this.props.onTouchStart(e);\r\n    }\r\n\r\n    this._touched = true;\r\n\r\n    this.setState({ active: true, touchedAt: Date.now() });\r\n  };\r\n\r\n  _handleTouchEnd = (e) => {\r\n    if (this.props.onTouchEnd) {\r\n      this.props.onTouchEnd(e);\r\n    }\r\n\r\n    const time = Date.now() - this.state.touchedAt;\r\n    this._touchTimeout = setTimeout(() => {\r\n      this._touchTimeout = null;\r\n\r\n      this.setState({ active: false });\r\n    }, time > 450 ? 0 : 450 - time);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      style,\r\n      className,\r\n      tileStyle,\r\n      tileClassName,\r\n      leftIcon,\r\n      leftAvatar,\r\n      active,\r\n      activeClassName,\r\n      itemComponent: ItemComponent,\r\n      /* eslint-disable no-unused-vars,react/prop-types */\r\n      primaryText,\r\n      secondaryText,\r\n      rightIcon,\r\n      rightAvatar,\r\n      threeLines,\r\n      children,\r\n      defaultOpen,\r\n      isOpen,\r\n      inset,\r\n      nestedItems,\r\n      animateNestedItems,\r\n      expanderIcon,\r\n\r\n      // deprecated\r\n      expanderIconChildren,\r\n      expanderIconClassName,\r\n      /* eslint-enable no-unused-vars,react/prop-types */\r\n      ...props\r\n    } = this.props;\r\n\r\n    return (\r\n      <ItemComponent style={style} className={className}>\r\n        <AccessibleFakeInkedButton\r\n          {...props}\r\n          style={tileStyle}\r\n          className={cn('md-list-tile md-list-tile--icon md-list-tile--mini', {\r\n            'md-list-tile--active': this.state.active && !this._touched,\r\n          }, tileClassName)}\r\n          onMouseOver={this._handleMouseOver}\r\n          onMouseLeave={this._handleMouseLeave}\r\n          onTouchStart={this._handleTouchStart}\r\n          onTouchEnd={this._handleTouchEnd}\r\n        >\r\n          <TileAddon\r\n            active={active}\r\n            activeClassName={activeClassName}\r\n            icon={leftIcon}\r\n            avatar={leftAvatar}\r\n          />\r\n        </AccessibleFakeInkedButton>\r\n      </ItemComponent>\r\n    );\r\n  }\r\n}\r\n"]}