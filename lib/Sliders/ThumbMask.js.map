{"version":3,"sources":["../../src/js/Sliders/ThumbMask.js"],"names":["ThumbMask","props","style","className","thumbLeft","disabled","dragging","maskInked","discrete","leaving","Object","assign","left","propTypes","object","string","bool","isRequired"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;;;AAEA;;;;;;;;IAQqBA,S;;;;;;;;;;;6BAYV;AAAA,mBAWH,KAAKC,KAXF;AAAA,UAELC,KAFK,UAELA,KAFK;AAAA,UAGLC,SAHK,UAGLA,SAHK;AAAA,UAILC,SAJK,UAILA,SAJK;AAAA,UAKLC,QALK,UAKLA,QALK;AAAA,UAMLC,QANK,UAMLA,QANK;AAAA,UAOLC,SAPK,UAOLA,SAPK;AAAA,UAQLC,QARK,UAQLA,QARK;AAAA,UASLC,OATK,UASLA,OATK;AAAA,UAUFR,KAVE;;AAaP,aACE,mDACMA,KADN;AAEE,eAAOS,OAAOC,MAAP,CAAc,EAAd,EAAkBT,KAAlB,EAAyB,EAAEU,MAAMR,SAAR,EAAzB,CAFT;AAGE,mBAAW,0BAAG,uCAAH,EAA4CD,SAA5C,EAAuD;AAChE,uCAA6BG,QADmC;AAEhE,yCAA+BC,SAFiC;AAGhE,4CAAkCF,QAH8B;AAIhE,kDAAwCE,aAAaC,QAJW;AAKhE,oDAA0CA,YAAYC;AALU,SAAvD;AAHb,SADF;AAaD;;;;;;AAtCkBT,S,CACZa,S,GAAY;AACjBX,SAAO,oBAAUY,MADA;AAEjBX,aAAW,oBAAUY,MAFJ;AAGjBV,YAAU,oBAAUW,IAHH;AAIjBZ,aAAW,oBAAUW,MAAV,CAAiBE,UAJX;AAKjBV,aAAW,oBAAUS,IALJ;AAMjBV,YAAU,oBAAUU,IANH;AAOjBR,YAAU,oBAAUQ,IAPH;AAQjBP,WAAS,oBAAUO;AARF,C;kBADAhB,S","file":"ThumbMask.js","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\n\r\n/**\r\n * The `ThumbMask` component is used for either:\r\n *\r\n *  - rendering the ink behind the `Thumb` component when the `Thumb`\r\n *  has keyboard focus or touch focus\r\n *  - rendering a underlay to make the `Track` look broken for disabled\r\n *  Sliders.\r\n */\r\nexport default class ThumbMask extends PureComponent {\r\n  static propTypes = {\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    thumbLeft: PropTypes.string.isRequired,\r\n    maskInked: PropTypes.bool,\r\n    dragging: PropTypes.bool,\r\n    discrete: PropTypes.bool,\r\n    leaving: PropTypes.bool,\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      style,\r\n      className,\r\n      thumbLeft,\r\n      disabled,\r\n      dragging,\r\n      maskInked,\r\n      discrete,\r\n      leaving,\r\n      ...props\r\n    } = this.props;\r\n\r\n    return (\r\n      <span\r\n        {...props}\r\n        style={Object.assign({}, style, { left: thumbLeft })}\r\n        className={cn('md-slider-thumb md-slider-thumb--mask', className, {\r\n          'md-slider-thumb--dragging': dragging,\r\n          'md-slider-thumb--mask-inked': maskInked,\r\n          'md-slider-thumb--mask-disabled': disabled,\r\n          'md-slider-thumb--discrete-mask-inked': maskInked && discrete,\r\n          'md-slider-thumb--discrete-mask-leaving': discrete && leaving,\r\n        })}\r\n      />\r\n    );\r\n  }\r\n}\r\n"]}