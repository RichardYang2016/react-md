{"version":3,"sources":["../../src/js/Tooltips/TooltipContainer.js"],"names":["getContainer","tooltip","parentNode","TooltipContainer","state","visible","_delayedTimeout","_unlinkTarget","target","_target","_showTooltip","_hideTooltip","removeEventListener","_handleKeyUp","_setTarget","container","_container","props","addEventListener","_setContainers","span","_stopContextMenu","e","preventDefault","window","setState","type","_touched","delay","clearTimeout","setTimeout","which","keyCode","prevProps","style","className","tooltipStyle","tooltipClassName","label","position","enterTimeout","leaveTimeout","propTypes","object","string","node","isRequired","number","func","oneOfType","defaultProps"],"mappings":";;;;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AAEA;;AACA;;;;AACA;;AACA;;;;;;;;;;;;AAGA,SAASA,YAAT,CAAsBC,OAAtB,EAA+B;AAC7B,SAAOA,QAAQC,UAAf;AACD;;IAEoBC,gB;;;;;;;;;;;;;;0MAkCnBC,K,GAAQ,EAAEC,SAAS,KAAX,E,QAqBRC,e,GAAkB,I,QAElBC,a,GAAgB,YAAM;AACpB,UAAMC,SAAS,MAAKC,OAApB;AACA,UAAID,MAAJ,EAAY;AACV,uCAAiBA,MAAjB,EAAyB,OAAzB,EAAkC,MAAKE,YAAvC;AACA,uCAAiBF,MAAjB,EAAyB,KAAzB,EAAgC,MAAKG,YAArC;AACAH,eAAOI,mBAAP,CAA2B,WAA3B,EAAwC,MAAKF,YAA7C;AACAF,eAAOI,mBAAP,CAA2B,YAA3B,EAAyC,MAAKD,YAA9C;AACAH,eAAOI,mBAAP,CAA2B,OAA3B,EAAoC,MAAKC,YAAzC;AACAL,eAAOI,mBAAP,CAA2B,MAA3B,EAAmC,MAAKD,YAAxC;AACD;AACF,K,QAEDG,U,GAAa,YAAM;AACjB,UAAMC,YAAY,MAAKC,UAAvB;AADiB,UAEXR,MAFW,GAEA,MAAKS,KAFL,CAEXT,MAFW;;;AAIjB,YAAKD,aAAL;;AAEA,UAAI,OAAOC,MAAP,KAAkB,UAAtB,EAAkC;AAChCA,iBAASA,OAAOO,SAAP,QAAT;AACD;AACDP,eAASA,SAAS,2BAAYA,MAAZ,CAAT,GAA+BO,SAAxC;AACA,YAAKN,OAAL,GAAeD,UAAU,IAAzB;;AAEA,UAAIA,MAAJ,EAAY;AACV,oCAAcA,MAAd,EAAsB,OAAtB,EAA+B,MAAKE,YAApC;AACA,oCAAcF,MAAd,EAAsB,KAAtB,EAA6B,MAAKG,YAAlC;AACAH,eAAOU,gBAAP,CAAwB,WAAxB,EAAqC,MAAKR,YAA1C;AACAF,eAAOU,gBAAP,CAAwB,YAAxB,EAAsC,MAAKP,YAA3C;AACAH,eAAOU,gBAAP,CAAwB,OAAxB,EAAiC,MAAKL,YAAtC;AACAL,eAAOU,gBAAP,CAAwB,MAAxB,EAAgC,MAAKP,YAArC;AACD;AACF,K,QAEDQ,c,GAAiB,UAACC,IAAD,EAAU;AACzB,UAAIA,IAAJ,EAAU;AACR,cAAKJ,UAAL,GAAkB,MAAKC,KAAL,CAAWF,SAAX,CAAqBK,KAAKlB,UAA1B,QAAlB;AACD;AACF,K,QAEDmB,gB,GAAmB,UAACC,CAAD,EAAO;AACxBA,QAAEC,cAAF;AACAC,aAAOZ,mBAAP,CAA2B,aAA3B,EAA0C,MAAKS,gBAA/C,EAAiE,IAAjE;AACA,sCAAiB,OAAjB;AACA,YAAKI,QAAL,CAAc,EAAEpB,SAAS,IAAX,EAAd;AACD,K,QAEDK,Y,GAAe,UAACY,CAAD,EAAO;AACpB,UAAIA,EAAEI,IAAF,KAAW,WAAX,IAA0B,MAAKC,QAAnC,EAA6C;AAC3C;AACD;;AAED,UAAIL,EAAEI,IAAF,KAAW,YAAf,EAA6B;AAC3B,cAAKC,QAAL,GAAgB,IAAhB;;AAEAH,eAAON,gBAAP,CAAwB,aAAxB,EAAuC,MAAKG,gBAA5C,EAA8D,IAA9D;AACA;AACD;;AAVmB,UAaZO,KAbY,GAaF,MAAKX,KAbH,CAaZW,KAbY;;AAcpB,UAAI,MAAKtB,eAAT,EAA0B;AACxBuB,qBAAa,MAAKvB,eAAlB;AACD;;AAED,UAAIsB,KAAJ,EAAW;AACT,cAAKtB,eAAL,GAAuBwB,WAAW,YAAM;AACtC,gBAAKxB,eAAL,GAAuB,IAAvB;;AAEA,gBAAKmB,QAAL,CAAc,EAAEpB,SAAS,IAAX,EAAd;AACD,SAJsB,EAIpBuB,KAJoB,CAAvB;AAKD,OAND,MAMO;AACL,cAAKH,QAAL,CAAc,EAAEpB,SAAS,IAAX,EAAd;AACD;AACF,K,QAEDM,Y,GAAe,UAACW,CAAD,EAAO;AACpB,UAAI,MAAKhB,eAAT,EAA0B;AACxBuB,qBAAa,MAAKvB,eAAlB;AACD;;AAED,UAAIgB,EAAEI,IAAF,KAAW,WAAX,IAA0B,MAAKC,QAAnC,EAA6C;AAC3C;AACD;;AAED,YAAKF,QAAL,CAAc,EAAEpB,SAAS,KAAX,EAAd;AACD,K,QAEDQ,Y,GAAe,UAACS,CAAD,EAAO;AACpB,UAAI,CAACA,EAAES,KAAF,IAAWT,EAAEU,OAAd,mBAAJ,EAAoC;AAClC,cAAKtB,YAAL,CAAkBY,CAAlB;AACD;AACF,K;;;;;wCAjHmB;AAClB,WAAKR,UAAL;AACD;;;uCAEkBmB,S,EAAW;AAC5B,UAAI,KAAKhB,KAAL,CAAWT,MAAX,KAAsByB,UAAUzB,MAApC,EAA4C;AAC1C,aAAKM,UAAL;AACD;AACF;;;2CAEsB;AACrB,WAAKP,aAAL;AACA,WAAKE,OAAL,GAAe,IAAf;;AAEA,UAAI,KAAKH,eAAT,EAA0B;AACxBuB,qBAAa,KAAKvB,eAAlB;AACD;AACF;;;6BAkGQ;AAAA,UACCD,OADD,GACa,KAAKD,KADlB,CACCC,OADD;AAAA,mBAWH,KAAKY,KAXF;AAAA,UAGLiB,KAHK,UAGLA,KAHK;AAAA,UAILC,SAJK,UAILA,SAJK;AAAA,UAKLC,YALK,UAKLA,YALK;AAAA,UAMLC,gBANK,UAMLA,gBANK;AAAA,UAOLC,KAPK,UAOLA,KAPK;AAAA,UAQLC,QARK,UAQLA,QARK;AAAA,UASLC,YATK,UASLA,YATK;AAAA,UAULC,YAVK,UAULA,YAVK;;;AAaP,UAAMxC,UACJ;AAAA;AAAA;AACE,eAAI,SADN;AAEE,iBAAOmC,YAFT;AAGE,qBAAWC,gBAHb;AAIE,oBAAUE,QAJZ;AAKE,wBAAcC,YALhB;AAME,wBAAcC;AANhB;AAQGH;AARH,OADF;;AAaA,aACE;AAAA;AAAA;AACE,iBAAOJ,KADT;AAEE,qBAAW,0BAAG,sBAAH,EAA2BC,SAA3B,CAFb;AAGE,qBAAU;AAHZ;AAKE,gDAAM,KAAK,KAAKhB,cAAhB,EAAgC,mBAAhC,GALF;AAMGd,kBAAUJ,OAAV,GAAoB;AANvB,OADF;AAUD;;;;;;AA3LkBE,gB,CACZuC,S,GAAY;AACjBR,SAAO,oBAAUS,MADA;AAEjBR,aAAW,oBAAUS,MAFJ;AAGjBR,gBAAc,oBAAUO,MAHP;AAIjBN,oBAAkB,oBAAUO,MAJX;AAKjBN,SAAO,oBAAUO,IAAV,CAAeC,UALL;AAMjBP,YAAU,kBAAQG,SAAR,CAAkBH,QANX;AAOjBX,SAAO,oBAAUmB,MAPA;AAQjBP,gBAAc,kBAAQE,SAAR,CAAkBF,YARf;AASjBC,gBAAc,kBAAQC,SAAR,CAAkBD,YATf;AAUjB;;;;AAIA1B,aAAW,oBAAUiC,IAdJ;AAejB;;;;;;;AAOAxC,UAAQ,oBAAUyC,SAAV,CAAoB,CAC1B,oBAAUN,MADgB,EAE1B,oBAAUK,IAFgB,CAApB;AAtBS,C;AADA7C,gB,CA6BZ+C,Y,GAAe;AACpBnC,aAAWf,YADS;AAEpB4B,SAAO;AAFa,C;kBA7BHzB,gB","file":"TooltipContainer.js","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport { findDOMNode } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport TransitionGroup from 'react-transition-group/TransitionGroup';\r\nimport cn from 'classnames';\r\n\r\nimport { TAB } from '../constants/keyCodes';\r\nimport captureNextEvent from '../utils/EventUtils/captureNextEvent';\r\nimport { addTouchEvent, removeTouchEvent } from '../utils/EventUtils/touches';\r\nimport Tooltip from './Tooltip';\r\n\r\n\r\nfunction getContainer(tooltip) {\r\n  return tooltip.parentNode;\r\n}\r\n\r\nexport default class TooltipContainer extends PureComponent {\r\n  static propTypes = {\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    tooltipStyle: PropTypes.object,\r\n    tooltipClassName: PropTypes.string,\r\n    label: PropTypes.node.isRequired,\r\n    position: Tooltip.propTypes.position,\r\n    delay: PropTypes.number,\r\n    enterTimeout: Tooltip.propTypes.enterTimeout,\r\n    leaveTimeout: Tooltip.propTypes.leaveTimeout,\r\n    /**\r\n     * A function that returns a DOM element that will be used as the tooltip's container.\r\n     * A ref to the tooltip's DOM element will be passed into the function.\r\n     */\r\n    container: PropTypes.func,\r\n    /**\r\n     * A component/element the tooltip should be linked to,\r\n     * or a function that returns such a component/element.\r\n     * A ref to the tooltip's container will be passed into the function.\r\n     *\r\n     * By default the tooltip's container will be used as the target.\r\n     */\r\n    target: PropTypes.oneOfType([\r\n      PropTypes.object,\r\n      PropTypes.func,\r\n    ]),\r\n  };\r\n\r\n  static defaultProps = {\r\n    container: getContainer,\r\n    delay: 0,\r\n  };\r\n\r\n  state = { visible: false };\r\n\r\n  componentDidMount() {\r\n    this._setTarget();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.target !== prevProps.target) {\r\n      this._setTarget();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._unlinkTarget();\r\n    this._target = null;\r\n\r\n    if (this._delayedTimeout) {\r\n      clearTimeout(this._delayedTimeout);\r\n    }\r\n  }\r\n\r\n  _delayedTimeout = null;\r\n\r\n  _unlinkTarget = () => {\r\n    const target = this._target;\r\n    if (target) {\r\n      removeTouchEvent(target, 'start', this._showTooltip);\r\n      removeTouchEvent(target, 'end', this._hideTooltip);\r\n      target.removeEventListener('mouseover', this._showTooltip);\r\n      target.removeEventListener('mouseleave', this._hideTooltip);\r\n      target.removeEventListener('keyup', this._handleKeyUp);\r\n      target.removeEventListener('blur', this._hideTooltip);\r\n    }\r\n  };\r\n\r\n  _setTarget = () => {\r\n    const container = this._container;\r\n    let { target } = this.props;\r\n\r\n    this._unlinkTarget();\r\n\r\n    if (typeof target === 'function') {\r\n      target = target(container, this);\r\n    }\r\n    target = target ? findDOMNode(target) : container;\r\n    this._target = target || null;\r\n\r\n    if (target) {\r\n      addTouchEvent(target, 'start', this._showTooltip);\r\n      addTouchEvent(target, 'end', this._hideTooltip);\r\n      target.addEventListener('mouseover', this._showTooltip);\r\n      target.addEventListener('mouseleave', this._hideTooltip);\r\n      target.addEventListener('keyup', this._handleKeyUp);\r\n      target.addEventListener('blur', this._hideTooltip);\r\n    }\r\n  };\r\n\r\n  _setContainers = (span) => {\r\n    if (span) {\r\n      this._container = this.props.container(span.parentNode, this);\r\n    }\r\n  };\r\n\r\n  _stopContextMenu = (e) => {\r\n    e.preventDefault();\r\n    window.removeEventListener('contextmenu', this._stopContextMenu, true);\r\n    captureNextEvent('click');\r\n    this.setState({ visible: true });\r\n  };\r\n\r\n  _showTooltip = (e) => {\r\n    if (e.type === 'mouseover' && this._touched) {\r\n      return;\r\n    }\r\n\r\n    if (e.type === 'touchstart') {\r\n      this._touched = true;\r\n\r\n      window.addEventListener('contextmenu', this._stopContextMenu, true);\r\n      return;\r\n    }\r\n\r\n\r\n    const { delay } = this.props;\r\n    if (this._delayedTimeout) {\r\n      clearTimeout(this._delayedTimeout);\r\n    }\r\n\r\n    if (delay) {\r\n      this._delayedTimeout = setTimeout(() => {\r\n        this._delayedTimeout = null;\r\n\r\n        this.setState({ visible: true });\r\n      }, delay);\r\n    } else {\r\n      this.setState({ visible: true });\r\n    }\r\n  };\r\n\r\n  _hideTooltip = (e) => {\r\n    if (this._delayedTimeout) {\r\n      clearTimeout(this._delayedTimeout);\r\n    }\r\n\r\n    if (e.type === 'mouseover' && this._touched) {\r\n      return;\r\n    }\r\n\r\n    this.setState({ visible: false });\r\n  };\r\n\r\n  _handleKeyUp = (e) => {\r\n    if ((e.which || e.keyCode) === TAB) {\r\n      this._showTooltip(e);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { visible } = this.state;\r\n    const {\r\n      style,\r\n      className,\r\n      tooltipStyle,\r\n      tooltipClassName,\r\n      label,\r\n      position,\r\n      enterTimeout,\r\n      leaveTimeout,\r\n    } = this.props;\r\n\r\n    const tooltip = (\r\n      <Tooltip\r\n        key=\"tooltip\"\r\n        style={tooltipStyle}\r\n        className={tooltipClassName}\r\n        position={position}\r\n        enterTimeout={enterTimeout}\r\n        leaveTimeout={leaveTimeout}\r\n      >\r\n        {label}\r\n      </Tooltip>\r\n    );\r\n\r\n    return (\r\n      <TransitionGroup\r\n        style={style}\r\n        className={cn('md-tooltip-container', className)}\r\n        component=\"div\"\r\n      >\r\n        <span ref={this._setContainers} aria-hidden />\r\n        {visible ? tooltip : null}\r\n      </TransitionGroup>\r\n    );\r\n  }\r\n}\r\n"]}