{"version":3,"sources":["../../src/js/Menus/Menu.js"],"names":["Menu","_handleClose","e","props","close","onClose","_handleClick","onClick","node","target","_container","contains","_isIgnoreTarget","_isCloseTarget","persist","_timeout","setTimeout","parentNode","_handleKeyDown","onKeyDown","cascading","id","fixedTo","cascadingAnchor","listLevel","context","cascadingMenu","cascadingZDepth","cascadingFixedTo","cascadingId","clearTimeout","classList","getAttribute","className","listStyle","listClassName","visible","children","listProps","listZDepth","listInline","listHeightRestricted","sameWidth","simplified","contained","isOpen","propFixedTo","propListId","listId","propPosition","position","autoclose","limitHeight","expanderIconChildren","expanderIconClassName","simple","onContextMenu","Positions","BELOW","below","listVisible","HorizontalAnchors","VerticalAnchors","TOP_LEFT","TOP_RIGHT","BOTTOM_LEFT","BOTTOM_RIGHT","_warned","CONTEXT","console","error","propTypes","oneOfType","number","string","style","object","component","func","anchor","belowAnchor","toggle","bool","isRequired","fullWidth","block","centered","preventContextMenu","xThreshold","yThreshold","closeOnOutsideClick","toggleQuery","transitionName","transitionEnterTimeout","transitionLeaveTimeout","repositionOnScroll","repositionOnResize","minLeft","minRight","minBottom","fillViewportWidth","fillViewportHeight","defaultProps","x","INNER_RIGHT","y","OVERLAP","RIGHT","window","contextTypes","childContextTypes"],"mappings":"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","file":"Menu.js","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { findDOMNode } from 'react-dom';\r\nimport cn from 'classnames';\r\nimport deprecated from 'react-prop-types/lib/deprecated';\r\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\r\n\r\nimport TICK from '../constants/CSSTransitionGroupTick';\r\nimport getField from '../utils/getField';\r\nimport handleKeyboardAccessibility from '../utils/EventUtils/handleKeyboardAccessibility';\r\nimport anchorShape from '../Helpers/anchorShape';\r\nimport fixedToShape from '../Helpers/fixedToShape';\r\nimport positionShape from '../Helpers/positionShape';\r\nimport Layover from '../Helpers/Layover';\r\nimport List from '../Lists/List';\r\n\r\n/**\r\n * The `Menu` controlled component is used to display a list of children in the `List`\r\n * component once the `visible` prop is true.\r\n */\r\nexport default class Menu extends PureComponent {\r\n  static HorizontalAnchors = Layover.HorizontalAnchors;\r\n  static VerticalAnchors = Layover.VerticalAnchors;\r\n  static Positions = {\r\n    // Can't do ...Layover.Positions since it triggers the get for CONTEXT\r\n    TOP_LEFT: Layover.Positions.TOP_LEFT,\r\n    TOP_RIGHT: Layover.Positions.TOP_RIGHT,\r\n    BOTTOM_LEFT: Layover.Positions.BOTTOM_LEFT,\r\n    BOTTOM_RIGHT: Layover.Positions.BOTTOM_RIGHT,\r\n    BELOW: Layover.Positions.BELOW,\r\n    _warned: false,\r\n    get CONTEXT() {\r\n      if (!this._warned) {\r\n        /* eslint-disable no-console */\r\n        console.error(\r\n          'The `Menu.Positions.CONTEXT` position has been deprecated and will be removed ' +\r\n          'in the next major release. To make the `Menu` behave as a context menu, provide ' +\r\n          'the `onContextMenu` prop instead.'\r\n        );\r\n        /* eslint-enable no-console */\r\n      }\r\n\r\n      this._warned = true;\r\n      return 'context';\r\n    },\r\n  };\r\n\r\n  static propTypes = {\r\n    /**\r\n     * An id to provide to the menu's container. This is required for accessibility as it generates\r\n     * the `aria-` attributes for dynamic content.\r\n     *\r\n     * @see {@link #listId}\r\n     */\r\n    id: isRequiredForA11y(PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ])),\r\n\r\n    /**\r\n     * An optional id to provide to the menu's list. If this prop is omitted, the list's id will be\r\n     * `\\`${id}-list\\``\r\n     */\r\n    listId: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * An optional style to apply to the main container for the menu.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional class name to apply to the main container for the menu.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the list once the menu has opened.\r\n     */\r\n    listStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional class name to apply to the list once the menu has opened.\r\n     */\r\n    listClassName: PropTypes.string,\r\n\r\n    /**\r\n     * The component to render the main container as.\r\n     *\r\n     * @see {@link Helpers/Layover#component}\r\n     */\r\n    component: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.func,\r\n    ]),\r\n\r\n    /**\r\n     * This is how the menu's `List` gets anchored to the `toggle` element.\r\n     *\r\n     * @see {@link Helpers/Layover#anchor}\r\n     */\r\n    anchor: anchorShape,\r\n\r\n    /**\r\n     * This is the optional anchor to use when the `position` is set to `Menu.Positions.BELOW`.\r\n     * Set this to `null` to use the default `anchor` prop.\r\n     *\r\n     * @see {@link Helpers/Layover#belowAnchor}\r\n     */\r\n    belowAnchor: anchorShape,\r\n\r\n    /**\r\n     * This is the animation position for the list that appears.\r\n     *\r\n     * @see {@link Helpers/Layover#animationPosition}\r\n     */\r\n    position: positionShape,\r\n\r\n    /**\r\n     * This is the component/element that should toggle the menu open.\r\n     *\r\n     * @see {@link Helpers/Layover#toggle}\r\n     */\r\n    toggle: PropTypes.node,\r\n\r\n    /**\r\n     * This is how the menu's list will be \"fixed\" to the `toggle` component.\r\n     *\r\n     * @see {@link Helpers/Layover#fixedTo}\r\n     */\r\n    fixedTo: fixedToShape,\r\n\r\n    /**\r\n     * Any additional props that should be applied to the list in the menu. This is really used\r\n     * when additional `aria-` tags need to be applied.\r\n     */\r\n    listProps: PropTypes.object,\r\n\r\n    /**\r\n     * Boolean if the menu's list should appear horizontally instead of vertically.\r\n     */\r\n    listInline: PropTypes.bool,\r\n\r\n    /**\r\n     * The list's z-depth for applying box shadow. This should be a number from 0 to 5.\r\n     */\r\n    listZDepth: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * Boolean if the list should have its height restricted to the `$md-menu-mobile-max-height`/\r\n     * `$md-menu-desktop-max-height` values.\r\n     *\r\n     * @see [md-menu-mobile-max-height](/components/menus?tab=2#variable-md-menu-mobile-max-height)\r\n     * @see [md-menu-desktop-max-height](/components/menus?tab=2#variable-md-menu-desktop-max-height)\r\n     */\r\n    listHeightRestricted: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the menu's list is visible.\r\n     */\r\n    visible: PropTypes.bool.isRequired,\r\n\r\n    /**\r\n     * Any children to render in the menu's list. This _should_ normally be `ListItem`, or\r\n     * `ListItemControl`.\r\n     */\r\n    children: PropTypes.node,\r\n\r\n    /**\r\n     * An optional function to call when en element in the menu has been clicked.\r\n     */\r\n    onClick: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when a key is pressed anywhere in the menu.\r\n     */\r\n    onKeyDown: PropTypes.func,\r\n\r\n    /**\r\n     * A function to call to close the menu. This is used for closing on outside clicks,\r\n     * closing when a list item has been clicked, or the user presses escape.\r\n     */\r\n    onClose: PropTypes.func.isRequired,\r\n\r\n    /**\r\n     * Boolean if the menu should be cascading. This means that the menu will pop the additional\r\n     * `nestedItems` on any `ListItem` to be appear either to the right or left of the visible list.\r\n     */\r\n    cascading: PropTypes.bool,\r\n\r\n    /**\r\n     * This is how the cascading lists get anchored to the list item.\r\n     *\r\n     * @see {@link Helpers/Layover#anchor}\r\n     */\r\n    cascadingAnchor: Layover.propTypes.anchor,\r\n\r\n    /**\r\n     * This is the z-depth the list should gain for a cascading menu. This only gets applied on\r\n     * items that are more than 1 level deep.\r\n     */\r\n    cascadingZDepth: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * Boolean if the `md-full-width` class name should get applied to the menu's container.\r\n     */\r\n    fullWidth: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the menu should be displayed as a block instead of as an inline block.\r\n     *\r\n     * @see {@link #fullWidth}\r\n     */\r\n    block: PropTypes.bool,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#centered}\r\n     */\r\n    centered: Layover.propTypes.centered,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#sameWidth}\r\n     */\r\n    sameWidth: Layover.propTypes.sameWidth,\r\n\r\n    /**\r\n     * If you would like the menu to interact as a context menu, provide this prop.\r\n     *\r\n     * @see {@link Helpers/Layover#onContextMenu}\r\n     */\r\n    onContextMenu: Layover.propTypes.onContextMenu,\r\n\r\n    /**\r\n     * Boolean if the default behavior of the context menu should be prevented when using the\r\n     * `onContextMenu` prop.\r\n     *\r\n     * @see {@link Helpers/Layover#preventContextMenu}\r\n     */\r\n    preventContextMenu: Layover.propTypes.preventContextMenu,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#xThreshold}\r\n     */\r\n    xThreshold: PropTypes.number,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#yThreshold}\r\n     */\r\n    yThreshold: PropTypes.number,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#closeOnOutsideClick}\r\n     */\r\n    closeOnOutsideClick: PropTypes.bool,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#toggleQuery}\r\n     */\r\n    toggleQuery: PropTypes.oneOfType([\r\n      PropTypes.func,\r\n      PropTypes.object,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * An optional transition name to use for the list appearing/disappearing.\r\n     *\r\n     * @see {@link Helpers/Layover#transitionName}\r\n     */\r\n    transitionName: PropTypes.string,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#transitionEnterTimeout}\r\n     */\r\n    transitionEnterTimeout: PropTypes.number,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#transitionLeaveTimeout}\r\n     */\r\n    transitionLeaveTimeout: PropTypes.number,\r\n\r\n    /**\r\n     * Boolean if the menu should automatically try to reposition itself to stay within\r\n     * the viewport when the `fixedTo` element scrolls.\r\n     *\r\n     * @see {@link Helpers/Layover#repositionOnScroll}\r\n     */\r\n    repositionOnScroll: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the menu should automatically try to reposition itself to stay within\r\n     * the viewport when the window resizes.\r\n     *\r\n     * @see {@link Helpers/Layover#repositionOnResize}\r\n     */\r\n    repositionOnResize: PropTypes.bool,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#simplified}\r\n     */\r\n    simplified: PropTypes.bool,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#minLeft}\r\n     */\r\n    minLeft: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#minRight}\r\n     */\r\n    minRight: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#minBottom}\r\n     */\r\n    minBottom: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#fillViewportWidth}\r\n     */\r\n    fillViewportWidth: PropTypes.bool,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#fillViewportHeight}\r\n     */\r\n    fillViewportHeight: PropTypes.bool,\r\n\r\n    isOpen: deprecated(PropTypes.bool, 'Use `visible` instead'),\r\n    close: deprecated(PropTypes.func, 'Use `onClose` instead'),\r\n    autoclose: deprecated(PropTypes.bool, 'The menus will always autoclose as according to the specs'),\r\n    contained: deprecated(PropTypes.bool, 'Use `sameWidth` instead'),\r\n    limitHeight: deprecated(PropTypes.bool, 'The menus will always be limited in height as according to the specs'),\r\n    expanderIconClassName: deprecated(\r\n      PropTypes.node,\r\n      'The expander for cascading menus will now just be a simple rotate of the existing `ListItem` ' +\r\n      'expander icon'\r\n    ),\r\n    expanderIconChildren: deprecated(\r\n      PropTypes.node,\r\n      'The expander for cascading menus will now just be a simple rotate of the existing `ListItem` ' +\r\n      'expander icon'\r\n    ),\r\n  };\r\n\r\n  static defaultProps = {\r\n    anchor: {\r\n      x: Layover.HorizontalAnchors.INNER_RIGHT,\r\n      y: Layover.VerticalAnchors.OVERLAP,\r\n    },\r\n    cascadingAnchor: {\r\n      x: Layover.HorizontalAnchors.RIGHT,\r\n      y: Layover.VerticalAnchors.OVERLAP,\r\n    },\r\n    position: Layover.Positions.TOP_RIGHT,\r\n    fixedTo: typeof window !== 'undefined' ? window : {},\r\n    listZDepth: 2,\r\n    listHeightRestricted: true,\r\n    cascadingZDepth: 3,\r\n    repositionOnScroll: true,\r\n    repositionOnResize: false,\r\n    simplified: true,\r\n  };\r\n\r\n  static contextTypes = {\r\n    listLevel: PropTypes.number,\r\n    cascadingId: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number,\r\n    ]),\r\n    cascadingMenu: PropTypes.bool,\r\n    cascadingAnchor: anchorShape,\r\n    cascadingZDepth: PropTypes.number,\r\n  };\r\n\r\n  static childContextTypes = {\r\n    listLevel: PropTypes.number,\r\n    cascadingId: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number,\r\n    ]),\r\n    cascadingMenu: PropTypes.bool,\r\n    cascadingFixedTo: fixedToShape,\r\n    cascadingAnchor: anchorShape,\r\n    cascadingZDepth: PropTypes.number,\r\n  };\r\n\r\n  getChildContext() {\r\n    const { cascading, id, fixedTo, cascadingAnchor } = this.props;\r\n    const listLevel = this.context.listLevel || 0;\r\n    const cascadingMenu = typeof cascading !== 'undefined' ? cascading : this.context.cascadingMenu;\r\n    const cascadingZDepth = getField(this.context, this.props, 'cascadingZDepth');\r\n    const cascadingFixedTo = typeof fixedTo !== 'undefined' ? fixedTo : this.context.cascadingFixedTo;\r\n\r\n    return {\r\n      listLevel,\r\n      cascadingId: `${id}-level-${listLevel + 1}`,\r\n      cascadingMenu,\r\n      cascadingAnchor,\r\n      cascadingZDepth,\r\n      cascadingFixedTo,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._container = findDOMNode(this);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this._timeout) {\r\n      clearTimeout(this._timeout);\r\n    }\r\n  }\r\n\r\n  _handleClose = (e) => {\r\n    const { close, onClose } = this.props;\r\n    if (close || onClose) {\r\n      (close || onClose)(e);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Checks if a provided event target or HTML Element is considered a menu click target.\r\n   * This normally is just a ListItem.\r\n   */\r\n  _isCloseTarget(target) {\r\n    return target.classList.contains('md-list-item')\r\n      && !target.classList.contains('md-list-item--nested-container');\r\n  }\r\n\r\n  /**\r\n   * Checks if a provided event target or HTML Element is something that should shortcut/break\r\n   * out of the click event loop because it **should not** close menus when clicked.\r\n   */\r\n  _isIgnoreTarget(target) {\r\n    return target.getAttribute('disabled') !== null\r\n      || target.classList.contains('md-list-control');\r\n  }\r\n\r\n  _handleClick = (e) => {\r\n    if (this.props.onClick) {\r\n      this.props.onClick(e);\r\n    }\r\n\r\n    let node = e.target;\r\n    while (this._container && this._container.contains(node)) {\r\n      if (this._isIgnoreTarget(node)) {\r\n        return;\r\n      } else if (this._isCloseTarget(node)) {\r\n        e.persist();\r\n        // set a timeout so item click events still trigger, and then close\r\n        this._timeout = setTimeout(() => {\r\n          this._timeout = null;\r\n          this._handleClose(e);\r\n        }, TICK);\r\n\r\n        return;\r\n      }\r\n\r\n      node = node.parentNode;\r\n    }\r\n  };\r\n\r\n  _handleKeyDown = (e) => {\r\n    if (this.props.onKeyDown) {\r\n      this.props.onKeyDown(e);\r\n    }\r\n\r\n    handleKeyboardAccessibility(e, this._handleClick, true, true);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      className,\r\n      listStyle,\r\n      listClassName,\r\n      visible,\r\n      children,\r\n      listProps,\r\n      listZDepth,\r\n      listInline,\r\n      listHeightRestricted,\r\n      cascading,\r\n      sameWidth,\r\n      simplified,\r\n      contained, // deprecated\r\n      isOpen, // deprecated\r\n      /* eslint-disable no-unused-vars */\r\n      fixedTo: propFixedTo,\r\n      listId: propListId,\r\n      cascadingAnchor,\r\n      cascadingZDepth,\r\n      onClose,\r\n      position: propPosition,\r\n\r\n      // deprecated\r\n      close,\r\n      autoclose,\r\n      limitHeight,\r\n      expanderIconChildren,\r\n      expanderIconClassName,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n\r\n    let { listId, position } = this.props;\r\n    if (!listId) {\r\n      listId = `${id}-list`;\r\n    }\r\n\r\n    // can't have a simplified menu for cascading and context menus\r\n    const simple = !cascading && !props.onContextMenu && position !== 'context' && simplified;\r\n    if (position === 'context') {\r\n      position = Menu.Positions.BELOW;\r\n    }\r\n\r\n    const below = position === Menu.Positions.BELOW;\r\n    const fixedTo = typeof propFixedTo !== 'undefined' ? propFixedTo : this.context.cascadingFixedTo;\r\n    const listVisible = typeof isOpen !== 'undefined' ? isOpen : visible;\r\n    return (\r\n      <Layover\r\n        {...props}\r\n        id={id}\r\n        className={cn('md-menu-container', {\r\n          'md-menu-container--menu-below': simplified && below,\r\n        }, className)}\r\n        simplified={simple}\r\n        sameWidth={contained || sameWidth}\r\n        fixedTo={fixedTo}\r\n        onClick={this._handleClick}\r\n        onKeyDown={this._handleKeyDown}\r\n        onClose={this._handleClose}\r\n        animationPosition={position}\r\n        visible={listVisible}\r\n        aria-haspopup\r\n        aria-expanded={listVisible}\r\n        aria-owns={listId}\r\n      >\r\n        <List\r\n          {...listProps}\r\n          id={listId}\r\n          key=\"menu-list\"\r\n          style={listStyle}\r\n          className={cn('md-list--menu', {\r\n            'md-list--menu-restricted': listHeightRestricted,\r\n            'md-list--menu-contained': simplified && (sameWidth || contained),\r\n            [`md-list--menu-${position}`]: simplified,\r\n            [`md-paper md-paper--${listZDepth}`]: listZDepth,\r\n          }, listClassName)}\r\n          inline={listInline}\r\n        >\r\n          {children}\r\n        </List>\r\n      </Layover>\r\n    );\r\n  }\r\n}\r\n"]}