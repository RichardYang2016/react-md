{"version":3,"sources":["../../src/js/Menus/MenuButton.js"],"names":["MenuButton","props","id","listId","buttonId","menuStyle","menuClassName","listStyle","listClassName","listProps","listZDepth","listInline","listHeightRestricted","menuItems","buttonChildren","children","anchor","belowAnchor","fixedTo","position","cascading","cascadingAnchor","cascadingZDepth","fullWidth","block","centered","sameWidth","repositionOnScroll","repositionOnResize","xThreshold","yThreshold","closeOnOutsideClick","transitionName","transitionEnterTimeout","transitionLeaveTimeout","visible","defaultVisible","onVisibilityChange","simplifiedMenu","minLeft","minRight","minBottom","fillViewportWidth","fillViewportHeight","onMenuClick","onMenuMouseDown","onMenuMouseUp","onMenuMouseEnter","onMenuMouseMove","onMenuMouseLeave","onMenuTouchStart","onMenuTouchMove","onMenuTouchCancel","onMenuTouchEnd","onMenuFocus","onMenuBlur","onMenuKeyDown","onMenuKeyUp","isOpen","defaultOpen","onMenuToggle","items","toggleChildren","Positions","HorizontalAnchors","VerticalAnchors","propTypes","oneOfType","number","string","style","object","className","bool","isRequired","onClick","func","onMouseDown","onMouseUp","onMouseEnter","onMouseMove","onMouseLeave","onTouchStart","onTouchMove","onTouchEnd","onTouchCancel","onFocus","onBlur","onKeyDown","onKeyUp","node","arrayOf","defaultProps"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;AAEA;;;;IAIqBA,U;;;;;;;;;;;iCA0gBV;AAAA,yBA8DH,KAAKC,KA9DF;AAAA,gBAELC,EAFK,UAELA,EAFK;AAAA,gBAGLC,MAHK,UAGLA,MAHK;AAAA,gBAILC,QAJK,UAILA,QAJK;AAAA,gBAKLC,SALK,UAKLA,SALK;AAAA,gBAMLC,aANK,UAMLA,aANK;AAAA,gBAOLC,SAPK,UAOLA,SAPK;AAAA,gBAQLC,aARK,UAQLA,aARK;AAAA,gBASLC,SATK,UASLA,SATK;AAAA,gBAULC,UAVK,UAULA,UAVK;AAAA,gBAWLC,UAXK,UAWLA,UAXK;AAAA,gBAYLC,oBAZK,UAYLA,oBAZK;AAAA,gBAaLC,SAbK,UAaLA,SAbK;AAAA,gBAcLC,cAdK,UAcLA,cAdK;AAAA,gBAeLC,QAfK,UAeLA,QAfK;AAAA,gBAgBLC,MAhBK,UAgBLA,MAhBK;AAAA,gBAiBLC,WAjBK,UAiBLA,WAjBK;AAAA,gBAkBLC,OAlBK,UAkBLA,OAlBK;AAAA,gBAmBLC,QAnBK,UAmBLA,QAnBK;AAAA,gBAoBLC,SApBK,UAoBLA,SApBK;AAAA,gBAqBLC,eArBK,UAqBLA,eArBK;AAAA,gBAsBLC,eAtBK,UAsBLA,eAtBK;AAAA,gBAuBLC,SAvBK,UAuBLA,SAvBK;AAAA,gBAwBLC,KAxBK,UAwBLA,KAxBK;AAAA,gBAyBLC,QAzBK,UAyBLA,QAzBK;AAAA,gBA0BLC,SA1BK,UA0BLA,SA1BK;AAAA,gBA2BLC,kBA3BK,UA2BLA,kBA3BK;AAAA,gBA4BLC,kBA5BK,UA4BLA,kBA5BK;AAAA,gBA6BLC,UA7BK,UA6BLA,UA7BK;AAAA,gBA8BLC,UA9BK,UA8BLA,UA9BK;AAAA,gBA+BLC,mBA/BK,UA+BLA,mBA/BK;AAAA,gBAgCLC,cAhCK,UAgCLA,cAhCK;AAAA,gBAiCLC,sBAjCK,UAiCLA,sBAjCK;AAAA,gBAkCLC,sBAlCK,UAkCLA,sBAlCK;AAAA,gBAmCLC,OAnCK,UAmCLA,OAnCK;AAAA,gBAoCLC,cApCK,UAoCLA,cApCK;AAAA,gBAqCLC,kBArCK,UAqCLA,kBArCK;AAAA,gBAsCLC,cAtCK,UAsCLA,cAtCK;AAAA,gBAuCLC,OAvCK,UAuCLA,OAvCK;AAAA,gBAwCLC,QAxCK,UAwCLA,QAxCK;AAAA,gBAyCLC,SAzCK,UAyCLA,SAzCK;AAAA,gBA0CLC,iBA1CK,UA0CLA,iBA1CK;AAAA,gBA2CLC,kBA3CK,UA2CLA,kBA3CK;AAAA,gBA4CLC,WA5CK,UA4CLA,WA5CK;AAAA,gBA6CLC,eA7CK,UA6CLA,eA7CK;AAAA,gBA8CLC,aA9CK,UA8CLA,aA9CK;AAAA,gBA+CLC,gBA/CK,UA+CLA,gBA/CK;AAAA,gBAgDLC,eAhDK,UAgDLA,eAhDK;AAAA,gBAiDLC,gBAjDK,UAiDLA,gBAjDK;AAAA,gBAkDLC,gBAlDK,UAkDLA,gBAlDK;AAAA,gBAmDLC,eAnDK,UAmDLA,eAnDK;AAAA,gBAoDLC,iBApDK,UAoDLA,iBApDK;AAAA,gBAqDLC,cArDK,UAqDLA,cArDK;AAAA,gBAsDLC,WAtDK,UAsDLA,WAtDK;AAAA,gBAuDLC,UAvDK,UAuDLA,UAvDK;AAAA,gBAwDLC,aAxDK,UAwDLA,aAxDK;AAAA,gBAyDLC,WAzDK,UAyDLA,WAzDK;AAAA,gBA0DLC,MA1DK,UA0DLA,MA1DK;AAAA,gBA2DLC,WA3DK,UA2DLA,WA3DK;AAAA,gBA4DLC,YA5DK,UA4DLA,YA5DK;AAAA,gBA6DF3D,KA7DE;;AAgEP,gBAAI4D,QAAQ9C,QAAZ;AACA,gBAAI+C,iBAAiBhD,cAArB;AACA,gBAAI,OAAOD,SAAP,KAAqB,WAAzB,EAAsC;AACpCiD,iCAAiB/C,QAAjB;AACA8C,wBAAQhD,SAAR;AACD;;AAED,mBACE;AAAA;AAAA;AACE,wBAAIX,EADN;AAEE,4BAAQC,MAFV;AAGE,2BAAOE,SAHT;AAIE,+BAAWC,aAJb;AAKE,+BAAWC,SALb;AAME,mCAAeC,aANjB;AAOE,+BAAWC,SAPb;AAQE,gCAAYE,UARd;AASE,gCAAYD,UATd;AAUE,0CAAsBE,oBAVxB;AAWE,6BAAS,OAAO8C,MAAP,KAAkB,WAAlB,GAAgCA,MAAhC,GAAyCvB,OAXpD;AAYE,oCAAgB,OAAOwB,WAAP,KAAuB,WAAvB,GAAqCA,WAArC,GAAmDvB,cAZrE;AAaE,+BAAWyB,KAbb;AAcE,oCAAgBvB,cAdlB;AAeE,4BAAQtB,MAfV;AAgBE,iCAAaC,WAhBf;AAiBE,6BAASC,OAjBX;AAkBE,8BAAUC,QAlBZ;AAmBE,+BAAWC,SAnBb;AAoBE,qCAAiBC,eApBnB;AAqBE,qCAAiBC,eArBnB;AAsBE,+BAAWC,SAtBb;AAuBE,2BAAOC,KAvBT;AAwBE,8BAAUC,QAxBZ;AAyBE,+BAAWC,SAzBb;AA0BE,6BAASa,OA1BX;AA2BE,8BAAUC,QA3BZ;AA4BE,+BAAWC,SA5Bb;AA6BE,uCAAmBC,iBA7BrB;AA8BE,wCAAoBC,kBA9BtB;AA+BE,wCAAoBhB,kBA/BtB;AAgCE,wCAAoBC,kBAhCtB;AAiCE,gCAAYC,UAjCd;AAkCE,gCAAYC,UAlCd;AAmCE,yCAAqBC,mBAnCvB;AAoCE,oCAAgBC,cApClB;AAqCE,4CAAwBC,sBArC1B;AAsCE,4CAAwBC,sBAtC1B;AAuCE,wCAAoB0B,gBAAgBvB,kBAvCtC;AAwCE,6BAASO,WAxCX;AAyCE,iCAAaC,eAzCf;AA0CE,+BAAWC,aA1Cb;AA2CE,kCAAcC,gBA3ChB;AA4CE,iCAAaC,eA5Cf;AA6CE,kCAAcC,gBA7ChB;AA8CE,kCAAcC,gBA9ChB;AA+CE,iCAAaC,eA/Cf;AAgDE,mCAAeC,iBAhDjB;AAiDE,gCAAYC,cAjDd;AAkDE,6BAASC,WAlDX;AAmDE,4BAAQC,UAnDV;AAoDE,+BAAWC,aApDb;AAqDE,6BAASC;AArDX;AAuDE;AAAA;AAAA,iCAAYxD,KAAZ,IAAmB,IAAIG,QAAvB;AACG0D;AADH;AAvDF,aADF;AA6DD;;;;;;AA9oBkB9D,U,CACZ+D,S,GAAY,uBAAaA,S;AADb/D,U,CAEZgE,iB,GAAoB,uBAAaA,iB;AAFrBhE,U,CAGZiE,e,GAAkB,uBAAaA,e;AAHnBjE,U,CAIZkE,S,GAAY;AACjB;;;;;AAKAhE,QAAI,oBAAUiE,SAAV,CAAoB,CACtB,oBAAUC,MADY,EAEtB,oBAAUC,MAFY,CAApB,CANa;;AAWjB;;;;;AAKAlE,YAAQ,oBAAUgE,SAAV,CAAoB,CAC1B,oBAAUC,MADgB,EAE1B,oBAAUC,MAFgB,CAApB,CAhBS;;AAqBjB;;;;AAIAjE,cAAU,oBAAU+D,SAAV,CAAoB,CAC5B,oBAAUC,MADkB,EAE5B,oBAAUC,MAFkB,CAApB,CAzBO;;AA8BjB;;;AAGAC,WAAO,oBAAUC,MAjCA;;AAmCjB;;;AAGAC,eAAW,oBAAUH,MAtCJ;;AAwCjB;;;AAGAhE,eAAW,oBAAUkE,MA3CJ;;AA6CjB;;;AAGAjE,mBAAe,oBAAU+D,MAhDR;;AAkDjB;;;AAGA9D,eAAW,oBAAUgE,MArDJ;;AAuDjB;;;AAGA/D,mBAAe,oBAAU6D,MA1DR;;AA4DjB;;;;;AAKA5D,eAAW,oBAAU8D,MAjEJ;;AAmEjB;;;;;AAKA7D,gBAAY,oBAAU0D,MAxEL;;AA0EjB;;;;;AAKAzD,gBAAY,oBAAU8D,IA/EL;;AAiFjB;;;;;AAKA7D,0BAAsB,oBAAU6D,IAtFf;;AAwFjB;;;;;AAKAtC,aAAS,0BAAW,oBAAUsC,IAArB,EAA2B,oBAA3B,EAAiD,gBAAjD,CA7FQ;;AA+FjB;;;AAGArC,oBAAgB,oBAAUqC,IAAV,CAAeC,UAlGd;;AAoGjB;;;;;AAKAC,aAAS,oBAAUC,IAzGF;;AA2GjB;;;;;AAKAC,iBAAa,oBAAUD,IAhHN;;AAkHjB;;;;;AAKAE,eAAW,oBAAUF,IAvHJ;;AAyHjB;;;;;AAKAG,kBAAc,oBAAUH,IA9HP;;AAgIjB;;;;;AAKAI,iBAAa,oBAAUJ,IArIN;;AAuIjB;;;;;AAKAK,kBAAc,oBAAUL,IA5IP;;AA8IjB;;;;;AAKAM,kBAAc,oBAAUN,IAnJP;;AAqJjB;;;;;AAKAO,iBAAa,oBAAUP,IA1JN;;AA4JjB;;;;;AAKAQ,gBAAY,oBAAUR,IAjKL;;AAmKjB;;;;;AAKAS,mBAAe,oBAAUT,IAxKR;;AA0KjB;;;;;AAKAU,aAAS,oBAAUV,IA/KF;;AAiLjB;;;;;AAKAW,YAAQ,oBAAUX,IAtLD;;AAwLjB;;;;;AAKAY,eAAW,oBAAUZ,IA7LJ;;AA+LjB;;;;;AAKAa,aAAS,oBAAUb,IApMF;;AAsMjB;;;;;;AAMAhC,iBAAa,oBAAUgC,IA5MN;;AA8MjB;;;;;AAKA/B,qBAAiB,oBAAU+B,IAnNV;;AAqNjB;;;;;AAKA9B,mBAAe,oBAAU8B,IA1NR;;AA4NjB;;;;;AAKA7B,sBAAkB,oBAAU6B,IAjOX;;AAmOjB;;;;;AAKA5B,qBAAiB,oBAAU4B,IAxOV;;AA0OjB;;;;;AAKA3B,sBAAkB,oBAAU2B,IA/OX;;AAiPjB;;;;;AAKA1B,sBAAkB,oBAAU0B,IAtPX;;AAwPjB;;;;;AAKAzB,qBAAiB,oBAAUyB,IA7PV;;AA+PjB;;;;;AAKAvB,oBAAgB,oBAAUuB,IApQT;;AAsQjB;;;;;AAKAxB,uBAAmB,oBAAUwB,IA3QZ;;AA6QjB;;;;;AAKAtB,iBAAa,oBAAUsB,IAlRN;;AAoRjB;;;;;AAKArB,gBAAY,oBAAUqB,IAzRL;;AA2RjB;;;;;AAKApB,mBAAe,oBAAUoB,IAhSR;;AAkSjB;;;;;AAKAnB,iBAAa,oBAAUmB,IAvSN;;AAySjB;;;;;;;;AAQAvC,wBAAoB,oBAAUuC,IAjTb;;AAmTjB;;;;;;;;;AASA/D,eAAW,oBAAUsD,SAAV,CAAoB,CAC7B,oBAAUC,MADmB,EAE7B,oBAAUC,MAFmB,EAG7B,oBAAUE,MAHmB,EAI7B,oBAAUmB,IAJmB,EAK7B,oBAAUC,OAAV,CAAkB,oBAAUxB,SAAV,CAAoB,CACpC,oBAAUE,MAD0B,EAEpC,oBAAUD,MAF0B,EAGpC,oBAAUG,MAH0B,EAIpC,oBAAUmB,IAJ0B,CAApB,CAAlB,CAL6B,CAApB,CA5TM;;AAyUjB;;;;;;AAMA3E,cAAU,oBAAU2E,IA/UH;;AAiVjB;;;;;AAKA1E,iCAtViB;;AAwVjB;;;;;AAKAC,sCA7ViB;;AA+VjB;;;;;AAKAC,mCApWiB;;AAsWjB;;;;;AAKAC,qCA3WiB;;AA6WjB;;;;;AAKAC,eAAW,oBAAUqD,IAlXJ;;AAoXjB;;;;;AAKAnD,qBAAiB,oBAAU8C,MAzXV;;AA2XjB;;;;;AAKA/C,0CAhYiB;;AAkYjB;;;;;;AAMAE,eAAW,oBAAUkD,IAxYJ;;AA0YjB;;;;;AAKAjD,WAAO,oBAAUiD,IA/YA;;AAiZjB;;;;;AAKAhD,cAAU,oBAAUgD,IAtZH;;AAwZjB;;;;;AAKA/C,eAAW,oBAAU+C,IA7ZJ;;AA+ZjB;;;AAGA5C,gBAAY,oBAAUuC,MAlaL;;AAoajB;;;AAGAtC,gBAAY,oBAAUsC,MAvaL;;AAyajB;;;;;AAKArC,yBAAqB,oBAAU0C,IA9ad;;AAgbjB;;;;;AAKAzC,oBAAgB,oBAAUqC,MArbT;;AAubjB;;;;;AAKApC,4BAAwB,oBAAUmC,MA5bjB;;AA8bjB;;;;;AAKAlC,4BAAwB,oBAAUkC,MAncjB;;AAqcjB;;;;;;AAMAzC,wBAAoB,oBAAU8C,IA3cb;;AA6cjB;;;;;;AAMA7C,wBAAoB,oBAAU6C,IAndb;;AAqdjB;;;;;;;AAOAnC,oBAAgB,oBAAUmC,IA5dT;;AA8djB;;;AAGAlC,aAAS,uBAAa2B,SAAb,CAAuB3B,OAjef;;AAmejB;;;AAGAC,cAAU,uBAAa0B,SAAb,CAAuB3B,OAtehB;;AAwejB;;;AAGAE,eAAW,uBAAayB,SAAb,CAAuBzB,SA3ejB;;AA6ejB;;;AAGAC,uBAAmB,oBAAU+B,IAhfZ;;AAkfjB;;;AAGA9B,wBAAoB,oBAAU8B,IArfb;;AAufjB3D,oBAAgB,0BACd,oBAAU4E,IADI,EAEd,+GAFc,CAvfC;AA2fjB9B,kBAAc,0BAAW,oBAAUa,IAArB,EAA2B,kCAA3B,CA3fG;AA4fjBf,YAAQ,0BAAW,oBAAUe,IAArB,EAA2B,uBAA3B,CA5fS;AA6fjBd,iBAAa,0BAAW,oBAAUc,IAArB,EAA2B,8BAA3B;AA7fI,C;AAJAzE,U,CAogBZ4F,Y,GAAe;AACpBxD,oBAAgB,KADI;AAEpBT,wBAAoB,IAFA;AAGpBC,wBAAoB;AAHA,C;kBApgBH5B,U","file":"MenuButton.js","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport deprecated from 'react-prop-types/lib/deprecated';\r\n\r\nimport controlled from '../utils/PropTypes/controlled';\r\nimport anchorShape from '../Helpers/anchorShape';\r\nimport fixedToShape from '../Helpers/fixedToShape';\r\nimport positionShape from '../Helpers/positionShape';\r\nimport Button from '../Buttons/Button';\r\nimport DropdownMenu from './DropdownMenu';\r\n\r\n/**\r\n * The `MenuButton` is a simple wrapper / combination of the `Button` and the `Menu`\r\n * components that can be uncontrolled.\r\n */\r\nexport default class MenuButton extends PureComponent {\r\n  static Positions = DropdownMenu.Positions;\r\n  static HorizontalAnchors = DropdownMenu.HorizontalAnchors;\r\n  static VerticalAnchors = DropdownMenu.VerticalAnchors;\r\n  static propTypes = {\r\n    /**\r\n     * An id to use for the menu button. This is required for accessibility.\r\n     *\r\n     * @see {@link Menus/Menu#id}\r\n     */\r\n    id: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * An optional id to provide to the menu's list.\r\n     *\r\n     * @see {@link Menus/Menu#listId}\r\n     */\r\n    listId: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * An optional id to provide to the button. If this is omitted, the button will automatically\r\n     * gain an id of `${id}-toggle`.\r\n     */\r\n    buttonId: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n\r\n    /**\r\n     * An optional style to apply to the button.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the button.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the surrounding menu.\r\n     */\r\n    menuStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the surrounding menu.\r\n     */\r\n    menuClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the list.\r\n     */\r\n    listStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional class name to apply to the list.\r\n     */\r\n    listClassName: PropTypes.string,\r\n\r\n    /**\r\n     * Any additional props to provide to the list.\r\n     *\r\n     * @see {@link Menus/Menu#listProps}\r\n     */\r\n    listProps: PropTypes.object,\r\n\r\n    /**\r\n     * The z-depth to use for the list.\r\n     *\r\n     * @see {@link Menus/Menu/listZDepth}\r\n     */\r\n    listZDepth: PropTypes.number,\r\n\r\n    /**\r\n     * Boolean if the list should be displayed inline.\r\n     *\r\n     * @see {@link Lists/List#inline}\r\n     */\r\n    listInline: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the list's height should be restricted.\r\n     *\r\n     * @see {@link Menus/Menu#listHeightRestricted}\r\n     */\r\n    listHeightRestricted: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the menu's list is currently visible. If this is defined, it will\r\n     * require the `onVisibilityChange` function to be defined since it will become\r\n     * a controlled component.\r\n     */\r\n    visible: controlled(PropTypes.bool, 'onVisibilityChange', 'defaultVisible'),\r\n\r\n    /**\r\n     * Boolean if the menu's list should be visible by default.\r\n     */\r\n    defaultVisible: PropTypes.bool.isRequired,\r\n\r\n    /**\r\n     * An optional function to call when the button is clicked.\r\n     *\r\n     * @see {@link #onMenuClick}\r\n     */\r\n    onClick: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `mousedown` event is triggered by the button.\r\n     *\r\n     * @see {@link #onMenuMouseDown}\r\n     */\r\n    onMouseDown: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `mouseup` event is triggered by the button.\r\n     *\r\n     * @see {@link #onMenuMouseUp}\r\n     */\r\n    onMouseUp: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `mouseenter` event is triggered by the button.\r\n     *\r\n     * @see {@link #onMenuMouseEnter}\r\n     */\r\n    onMouseEnter: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `mousemove` event is triggered by the button.\r\n     *\r\n     * @see {@link #onMenuMouseMove}\r\n     */\r\n    onMouseMove: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `mouseleave` event is triggered by the button.\r\n     *\r\n     * @see {@link #onMenuMouseLeave}\r\n     */\r\n    onMouseLeave: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `touchstart` event is triggered by the button.\r\n     *\r\n     * @see {@link #onMenuTouchStart}\r\n     */\r\n    onTouchStart: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `touchmove` event is triggered by the button.\r\n     *\r\n     * @see {@link #onMenuTouchMove}\r\n     */\r\n    onTouchMove: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `touchend` event is triggered by the button.\r\n     *\r\n     * @see {@link #onMenuTouchEnd}\r\n     */\r\n    onTouchEnd: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `touchcancel` event is triggered by the button.\r\n     *\r\n     * @see {@link #onMenuTouchCancel}\r\n     */\r\n    onTouchCancel: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `focus` event is triggered by the button.\r\n     *\r\n     * @see {@link #onMenuFocus}\r\n     */\r\n    onFocus: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `blur` event is triggered by the button.\r\n     *\r\n     * @see {@link #onMenuBlur}\r\n     */\r\n    onBlur: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `keydown` event is triggered by the button.\r\n     *\r\n     * @see {@link #onMenuKeyDown}\r\n     */\r\n    onKeyDown: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the `keyup` event is triggered by the button.\r\n     *\r\n     * @see {@link #onMenuKeyUp}\r\n     */\r\n    onKeyUp: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when any element in the entire `MenuButton` is clicked. This can be triggered\r\n     * by clicking the button or any list item that appears in the menu list.\r\n     *\r\n     * @see {@link #onClick}\r\n     */\r\n    onMenuClick: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when any element in the `MenuButton` triggers the `mousedown` event.\r\n     *\r\n     * @see {@link #onMouseDown}\r\n     */\r\n    onMenuMouseDown: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when any element in the `MenuButton` triggers the `mouseup` event.\r\n     *\r\n     * @see {@link #onMouseUp}\r\n     */\r\n    onMenuMouseUp: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when any element in the `MenuButton` triggers the `mouseenter` event.\r\n     *\r\n     * @see {@link #onMouseEnter}\r\n     */\r\n    onMenuMouseEnter: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when any element in the `MenuButton` triggers the `mousemove` event.\r\n     *\r\n     * @see {@link #onMouseMove}\r\n     */\r\n    onMenuMouseMove: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when any element in the `MenuButton` triggers the `mouseleave` event.\r\n     *\r\n     * @see {@link #onMouseLeave}\r\n     */\r\n    onMenuMouseLeave: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when any element in the `MenuButton` triggers the `touchstart` event.\r\n     *\r\n     * @see {@link @onTouchStart}\r\n     */\r\n    onMenuTouchStart: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when any element in the `MenuButton` triggers the `touchmove` event.\r\n     *\r\n     * @see {@link @onTouchMove}\r\n     */\r\n    onMenuTouchMove: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when any element in the `MenuButton` triggers the `touchend` event.\r\n     *\r\n     * @see {@link @onTouchEnd}\r\n     */\r\n    onMenuTouchEnd: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when any element in the `MenuButton` triggers the `touchcancel` event.\r\n     *\r\n     * @see {@link @onTouchCancel}\r\n     */\r\n    onMenuTouchCancel: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when any element in the `MenuButton` triggers the `focus` event.\r\n     *\r\n     * @see {@link #onFocus}\r\n     */\r\n    onMenuFocus: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when any element in the `MenuButton` triggers the `blur` event.\r\n     *\r\n     * @see {@link #onBlur}\r\n     */\r\n    onMenuBlur: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when any element in the `MenuButton` triggers the `keydown` event.\r\n     *\r\n     * @see {@link #onKeyDown}\r\n     */\r\n    onMenuKeyDown: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when any element in the `MenuButton` triggers the `keyup` event.\r\n     *\r\n     * @see {@link #onKeyUp}\r\n     */\r\n    onMenuKeyUp: PropTypes.func,\r\n\r\n    /**\r\n     * An optional function to call when the visibility changes for the menu. The callback will\r\n     * include the next visibility state and the event that triggered the change.\r\n     *\r\n     * ```js\r\n     * onVisibilityChange(visible, event);\r\n     * ```\r\n     */\r\n    onVisibilityChange: PropTypes.func,\r\n\r\n    /**\r\n     * This is a 0 to many relationship of `ListItem` to display in the menu's `List`. If the type\r\n     * of the item is a number or string, it will be passed to the `ListItem` as the `primaryText`.\r\n     * If it is an object, it should be the shape of the `ListItem` props. If it is a node, it will\r\n     * just be rendered in the `List`.\r\n     *\r\n     * @see {@link Lists/ListItem}\r\n     * @see {@link Menus/Menu#children}\r\n     */\r\n    menuItems: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n      PropTypes.object,\r\n      PropTypes.node,\r\n      PropTypes.arrayOf(PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number,\r\n        PropTypes.object,\r\n        PropTypes.node,\r\n      ])),\r\n    ]),\r\n\r\n    /**\r\n     * This should be the children to use in the `Button` that gets created as the menu's toggle.\r\n     *\r\n     * @see {@link Buttons/Button}\r\n     * @see {@link Menus/Menu#toggle}\r\n     */\r\n    children: PropTypes.node,\r\n\r\n    /**\r\n     * The anchor position of the menu's list.\r\n     *\r\n     * @see {@link Helpers/Layover#anchor}\r\n     */\r\n    anchor: anchorShape,\r\n\r\n    /**\r\n     * This is the anchor to use when the `position` is set to `Autocomplete.Positions.BELOW`.\r\n     *\r\n     * @see {@link Helpers/Layover#belowAnchor}\r\n     */\r\n    belowAnchor: anchorShape,\r\n\r\n    /**\r\n     * This is how the menu's list is fixed to the toggle.\r\n     *\r\n     * @see {@link Menus/Menu#fixedTo}\r\n     */\r\n    fixedTo: fixedToShape,\r\n\r\n    /**\r\n     * This is the animation position for the menu's list.\r\n     *\r\n     * @see {@link Menus/Menu#position}\r\n     */\r\n    position: positionShape,\r\n\r\n    /**\r\n     * Boolean if the menu's list should gain the cascading styles.\r\n     *\r\n     * @see {@link Menus/Menu#cascading}\r\n     */\r\n    cascading: PropTypes.bool,\r\n\r\n    /**\r\n     * The zDepth to use for the lists that appear in cascading menus.\r\n     *\r\n     * @see {@link Menus/Menu#cascadingZDepth}\r\n     */\r\n    cascadingZDepth: PropTypes.number,\r\n\r\n    /**\r\n     * The anchor position for the cascading lists.\r\n     *\r\n     * @see {@link Menus/Menu#cascadingAnchor}\r\n     */\r\n    cascadingAnchor: anchorShape,\r\n\r\n    /**\r\n     * Boolean if the menu should display as a full width container. This will *not* update the button\r\n     * to be full width as well.\r\n     *\r\n     * @see {@link Menus/Menu#fullWidth}\r\n     */\r\n    fullWidth: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the menu's container should display as `block` instead of `inline-block`.\r\n     *\r\n     * @see {@link Menus/Menu#block}\r\n     */\r\n    block: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the list should appear centered related to the button.\r\n     *\r\n     * @see {@link Menus/Menu#centered}\r\n     */\r\n    centered: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the menu's list should be the same width as the button.\r\n     *\r\n     * @see {@link Menus/Menu#sameWidth}\r\n     */\r\n    sameWidth: PropTypes.bool,\r\n\r\n    /**\r\n     * @see {@link Menus/Menu#xThreshold}\r\n     */\r\n    xThreshold: PropTypes.number,\r\n\r\n    /**\r\n     * @see {@link Menus/Menu#yThreshold}\r\n     */\r\n    yThreshold: PropTypes.number,\r\n\r\n    /**\r\n     * Boolean if the menu's list should be closed when an element outside of the menu has been clicked.\r\n     *\r\n     * @see {@link Menus/Menu#closeOnOutsideClick}\r\n     */\r\n    closeOnOutsideClick: PropTypes.bool,\r\n\r\n    /**\r\n     * The transition name to use for the menu's list visibility changes.\r\n     *\r\n     * @see {@link Menus/Menu#transitionName}\r\n     */\r\n    transitionName: PropTypes.string,\r\n\r\n    /**\r\n     * The transition name to use when the menu's list gains visibility.\r\n     *\r\n     * @see {@link Menus/Menu#transitionEnterTimeout}\r\n     */\r\n    transitionEnterTimeout: PropTypes.number,\r\n\r\n    /**\r\n     * The transition timeout to use when the menu's list loses visibility.\r\n     *\r\n     * @see {@link Menus/Menu#transitionLeaveTimeout}\r\n     */\r\n    transitionLeaveTimeout: PropTypes.number,\r\n\r\n    /**\r\n     * Boolean if the menu should automatically try to reposition itself to stay within\r\n     * the viewport when the `fixedTo` element scrolls.\r\n     *\r\n     * @see {@link Helpers/Layover#repositionOnScroll}\r\n     */\r\n    repositionOnScroll: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the menu should automatically try to reposition itself to stay within\r\n     * the viewport when the window resizes.\r\n     *\r\n     * @see {@link Helpers/Layover#repositionOnResize}\r\n     */\r\n    repositionOnResize: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the menu logic should be simplified without any viewport logic and position\r\n     * based on the relative position of the menu. This will most like require some additional\r\n     * styles applied to the menu.\r\n     *\r\n     * @see {@link Helpers/Layover#simplified}\r\n     */\r\n    simplifiedMenu: PropTypes.bool,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#minLeft}\r\n     */\r\n    minLeft: DropdownMenu.propTypes.minLeft,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#minRight}\r\n     */\r\n    minRight: DropdownMenu.propTypes.minLeft,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#minBottom}\r\n     */\r\n    minBottom: DropdownMenu.propTypes.minBottom,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#fillViewportWidth}\r\n     */\r\n    fillViewportWidth: PropTypes.bool,\r\n\r\n    /**\r\n     * @see {@link Helpers/Layover#fillViewportHeight}\r\n     */\r\n    fillViewportHeight: PropTypes.bool,\r\n\r\n    buttonChildren: deprecated(\r\n      PropTypes.node,\r\n      'To build a button, put any elements in the `children`. The `ListItem` have been moved to the `menuItems` prop'\r\n    ),\r\n    onMenuToggle: deprecated(PropTypes.bool, 'Use `onVisibilityChange` instead'),\r\n    isOpen: deprecated(PropTypes.bool, 'Use `visible` instead'),\r\n    defaultOpen: deprecated(PropTypes.bool, 'Use `defaultVisible` instead'),\r\n  };\r\n\r\n  static defaultProps = {\r\n    defaultVisible: false,\r\n    repositionOnScroll: true,\r\n    repositionOnResize: false,\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      listId,\r\n      buttonId,\r\n      menuStyle,\r\n      menuClassName,\r\n      listStyle,\r\n      listClassName,\r\n      listProps,\r\n      listZDepth,\r\n      listInline,\r\n      listHeightRestricted,\r\n      menuItems,\r\n      buttonChildren,\r\n      children,\r\n      anchor,\r\n      belowAnchor,\r\n      fixedTo,\r\n      position,\r\n      cascading,\r\n      cascadingAnchor,\r\n      cascadingZDepth,\r\n      fullWidth,\r\n      block,\r\n      centered,\r\n      sameWidth,\r\n      repositionOnScroll,\r\n      repositionOnResize,\r\n      xThreshold,\r\n      yThreshold,\r\n      closeOnOutsideClick,\r\n      transitionName,\r\n      transitionEnterTimeout,\r\n      transitionLeaveTimeout,\r\n      visible,\r\n      defaultVisible,\r\n      onVisibilityChange,\r\n      simplifiedMenu,\r\n      minLeft,\r\n      minRight,\r\n      minBottom,\r\n      fillViewportWidth,\r\n      fillViewportHeight,\r\n      onMenuClick,\r\n      onMenuMouseDown,\r\n      onMenuMouseUp,\r\n      onMenuMouseEnter,\r\n      onMenuMouseMove,\r\n      onMenuMouseLeave,\r\n      onMenuTouchStart,\r\n      onMenuTouchMove,\r\n      onMenuTouchCancel,\r\n      onMenuTouchEnd,\r\n      onMenuFocus,\r\n      onMenuBlur,\r\n      onMenuKeyDown,\r\n      onMenuKeyUp,\r\n      isOpen, // deprecated\r\n      defaultOpen, // deprecated\r\n      onMenuToggle, // deprecated\r\n      ...props\r\n    } = this.props;\r\n\r\n    let items = children;\r\n    let toggleChildren = buttonChildren;\r\n    if (typeof menuItems !== 'undefined') {\r\n      toggleChildren = children;\r\n      items = menuItems;\r\n    }\r\n\r\n    return (\r\n      <DropdownMenu\r\n        id={id}\r\n        listId={listId}\r\n        style={menuStyle}\r\n        className={menuClassName}\r\n        listStyle={listStyle}\r\n        listClassName={listClassName}\r\n        listProps={listProps}\r\n        listInline={listInline}\r\n        listZDepth={listZDepth}\r\n        listHeightRestricted={listHeightRestricted}\r\n        visible={typeof isOpen !== 'undefined' ? isOpen : visible}\r\n        defaultVisible={typeof defaultOpen !== 'undefined' ? defaultOpen : defaultVisible}\r\n        menuItems={items}\r\n        simplifiedMenu={simplifiedMenu}\r\n        anchor={anchor}\r\n        belowAnchor={belowAnchor}\r\n        fixedTo={fixedTo}\r\n        position={position}\r\n        cascading={cascading}\r\n        cascadingAnchor={cascadingAnchor}\r\n        cascadingZDepth={cascadingZDepth}\r\n        fullWidth={fullWidth}\r\n        block={block}\r\n        centered={centered}\r\n        sameWidth={sameWidth}\r\n        minLeft={minLeft}\r\n        minRight={minRight}\r\n        minBottom={minBottom}\r\n        fillViewportWidth={fillViewportWidth}\r\n        fillViewportHeight={fillViewportHeight}\r\n        repositionOnScroll={repositionOnScroll}\r\n        repositionOnResize={repositionOnResize}\r\n        xThreshold={xThreshold}\r\n        yThreshold={yThreshold}\r\n        closeOnOutsideClick={closeOnOutsideClick}\r\n        transitionName={transitionName}\r\n        transitionEnterTimeout={transitionEnterTimeout}\r\n        transitionLeaveTimeout={transitionLeaveTimeout}\r\n        onVisibilityChange={onMenuToggle || onVisibilityChange}\r\n        onClick={onMenuClick}\r\n        onMouseDown={onMenuMouseDown}\r\n        onMouseUp={onMenuMouseUp}\r\n        onMouseEnter={onMenuMouseEnter}\r\n        onMouseMove={onMenuMouseMove}\r\n        onMouseLeave={onMenuMouseLeave}\r\n        onTouchStart={onMenuTouchStart}\r\n        onTouchMove={onMenuTouchMove}\r\n        onTouchCancel={onMenuTouchCancel}\r\n        onTouchEnd={onMenuTouchEnd}\r\n        onFocus={onMenuFocus}\r\n        onBlur={onMenuBlur}\r\n        onKeyDown={onMenuKeyDown}\r\n        onKeyUp={onMenuKeyUp}\r\n      >\r\n        <Button {...props} id={buttonId}>\r\n          {toggleChildren}\r\n        </Button>\r\n      </DropdownMenu>\r\n    );\r\n  }\r\n}\r\n"]}