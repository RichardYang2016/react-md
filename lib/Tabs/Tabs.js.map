{"version":3,"sources":["../../src/js/Tabs/Tabs.js"],"names":["MOBILE_PADDING","DESKTOP_PADDING","MOBILE_TAB_MIN_WIDTH","DESKTOP_TAB_MIN_WIDTH","Tabs","props","_setContainer","container","_container","_positionElements","initialRender","centered","overflowMenu","mobile","paddingLeft","_shouldAlign","_calcPaddingLeft","overflowAtIndex","_calcOverflowIndex","indicatorPosition","_calcIndicatorPosition","setState","_scrollActiveIntoView","state","active","querySelector","allTabs","Array","prototype","slice","call","querySelectorAll","scrollLeft","containerWidth","offsetWidth","activeWidth","activeOffset","offsetLeft","inFullViewLeft","inFullViewRight","offset","some","tab","i","activeTabIndex","_handleTabChange","index","tabId","tabControlsId","tabChildren","event","onTabChange","_mapToOverflowTabProps","tabEl","only","handleTabChange","primaryText","label","onClick","handleClick","id","controlsId","children","_nextIndexes","increment","overflowIndex","visibleAmt","_showNextTabs","_showPreviousTabs","defaultTabIndex","indicatorWidth","indicatorOffset","indicatorVisible","nextProps","prevProps","prevState","labels","map","toArray","prevLabels","length","filter","_","alignToKeyline","child","mediaPadding","labelOffset","menu","scrollWidth","tabs","totalWidth","Math","max","activeItem","Component","component","style","className","activeTabClassName","inactiveTabClassName","colored","overflowMenuLabel","nextIcon","previousIcon","overflowMenuIcon","overflowMenuIconChildren","overflowMenuIconClassName","nextIconChildren","nextIconClassName","previousIconChildren","previousIconClassName","propActiveIndex","defaultMedia","desktopMinWidth","icon","handleOnClick","tabIndex","activeClassName","inactiveClassName","overflow","nextControl","previousControl","propTypes","oneOfType","number","string","object","func","isRequired","element","arrayOf","bool","node","oneOf","defaultProps"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;AAEA,IAAMA,iBAAiB,EAAvB;AACA,IAAMC,kBAAkB,EAAxB;AACA,IAAMC,uBAAuB,EAA7B;AACA,IAAMC,wBAAwB,GAA9B;;AAGA;;;;IAGqBC,I;;;AAiKnB,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA,4GACXA,KADW;;AAAA,UAmGnBC,aAnGmB,GAmGH,UAACC,SAAD,EAAe;AAC7B,YAAKC,UAAL,GAAkBD,SAAlB;AACA,YAAKE,iBAAL,CAAuB,MAAKD,UAAL,KAAoB,IAA3C;AACD,KAtGkB;;AAAA,UAwGnBC,iBAxGmB,GAwGC,UAACC,aAAD,EAAmB;AACrCA,sBAAgB,OAAOA,aAAP,KAAyB,SAAzB,IAAsCA,aAAtD;AACA,UAAI,CAAC,MAAKF,UAAV,EAAsB;AACpB;AACD;;AAJoC,wBAMF,MAAKH,KANH;AAAA,UAM7BM,QAN6B,eAM7BA,QAN6B;AAAA,UAMnBC,YANmB,eAMnBA,YANmB;AAAA,UAO7BC,MAP6B,GAOlB,MAAKR,KAPa,CAO7BQ,MAP6B;;;AASrC,UAAIC,oBAAJ;AACA,UAAI,CAACH,QAAD,IAAa,MAAKI,YAAL,CAAkB,MAAKV,KAAvB,CAAjB,EAAgD;AAC9CS,sBAAc,MAAKE,gBAAL,CAAsB,MAAKR,UAA3B,EAAuCK,MAAvC,CAAd;AACD;;AAED,UAAII,wBAAJ;AACA,UAAI,CAACJ,MAAL,EAAa;AACXI,0BAAkB,MAAKC,kBAAL,CAAwB,MAAKV,UAA7B,EAAyCM,WAAzC,EAAsDF,YAAtD,CAAlB;AACD;;AAED,UAAMO,oBAAoB,MAAKC,sBAAL,CAA4B,MAAKZ,UAAjC,EAA6CE,gBAAgBI,WAAhB,GAA8B,CAA3E,CAA1B;;AAEA,YAAKO,QAAL,YAAgBR,cAAhB,EAAwBC,wBAAxB,EAAqCG,gCAArC,IAAyDE,iBAAzD,GAA8E,MAAKG,qBAAnF;AACD,KA9HkB;;AAAA,UAgInBA,qBAhImB,GAgIK,YAAM;AAC5B,UAAI,CAAC,MAAKd,UAAN,IAAoB,CAAC,MAAKe,KAAL,CAAWV,MAApC,EAA4C;AAC1C;AACD;;AAED,UAAMW,SAAS,MAAKhB,UAAL,CAAgBiB,aAAhB,CAA8B,iBAA9B,CAAf;AACA,UAAI,CAACD,MAAL,EAAa;AACX;AACD;;AAED,UAAME,UAAUC,MAAMC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2B,MAAKtB,UAAL,CAAgBuB,gBAAhB,CAAiC,SAAjC,CAA3B,CAAhB;AACA,UAAIL,QAAQ,CAAR,MAAeF,MAAnB,EAA2B;AACzB,cAAKhB,UAAL,CAAgBwB,UAAhB,GAA6B,CAA7B;AACA;AACD;;AAd2B,6BAgBwB,MAAKxB,UAhB7B;AAAA,UAgBPyB,cAhBO,oBAgBpBC,WAhBoB;AAAA,UAgBSF,UAhBT,oBAgBSA,UAhBT;AAAA,UAiBPG,WAjBO,GAiBmCX,MAjBnC,CAiBpBU,WAjBoB;AAAA,UAiBkBE,YAjBlB,GAiBmCZ,MAjBnC,CAiBMa,UAjBN;;AAkB5B,UAAMC,iBAAiBF,eAAeJ,UAAf,IAA6B,CAApD;AACA,UAAMO,kBAAmBH,eAAeD,WAAhB,IAAgCF,iBAAiBD,UAAjD,KAAgE,CAAxF;AACA,UAAIM,kBAAkBC,eAAtB,EAAuC;AACrC;AACD;;AAED,UAAIC,SAAS,CAAb;AACAd,cAAQe,IAAR,CAAa,UAACC,GAAD,EAAMC,CAAN,EAAY;AACvB,YAAIA,IAAI,MAAKtC,KAAL,CAAWuC,cAAnB,EAAmC;AACjCJ,oBAAUE,IAAIR,WAAd;AACD;;AAED,eAAOS,IAAI,MAAKpB,KAAL,CAAWqB,cAAtB;AACD,OAND;;AAQA,YAAKpC,UAAL,CAAgBwB,UAAhB,GAA6BQ,MAA7B;AACD,KAlKkB;;AAAA,UAoKnBK,gBApKmB,GAoKA,UAACC,KAAD,EAAQC,KAAR,EAAeC,aAAf,EAA8BC,WAA9B,EAA2CC,KAA3C,EAAqD;AACtE,UAAI,MAAK7C,KAAL,CAAW8C,WAAf,EAA4B;AAC1B,cAAK9C,KAAL,CAAW8C,WAAX,CAAuBL,KAAvB,EAA8BC,KAA9B,EAAqCC,aAArC,EAAoDC,WAApD,EAAiEC,KAAjE;AACD;;AAED,UAAI,OAAO,MAAK7C,KAAL,CAAWuC,cAAlB,KAAqC,WAAzC,EAAsD;AACpD,cAAKvB,QAAL;AACEuB,0BAAgBE;AADlB,WAEK,MAAK1B,sBAAL,CAA4B,MAAKZ,UAAjC,EAA6C,CAA7C,EAAgDsC,KAAhD,EAAuD,MAAKvB,KAAL,CAAWN,eAAlE,CAFL;AAID;AACF,KA/KkB;;AAAA,UAiLnBmC,sBAjLmB,GAiLM,UAACV,GAAD,EAAMC,CAAN,EAAY;AACnC,UAAMG,QAAQH,IAAI,MAAKpB,KAAL,CAAWN,eAA7B;AACA,UAAMO,SAAS,wBAAS,MAAKnB,KAAd,EAAqB,MAAKkB,KAA1B,EAAiC,gBAAjC,MAAuDuB,KAAtE;AACA,UAAMO,QAAQ,gBAASC,IAAT,CAAcZ,GAAd,CAAd;AACA,UAAMa,kBAAkB,MAAKV,gBAA7B;;AAEA,aAAO;AACLrB,sBADK;AAELgC,qBAAaH,MAAMhD,KAAN,CAAYoD,KAFpB;AAGLC,iBAAS,SAASC,WAAT,CAAqBT,KAArB,EAA4B;AAAA,6BACWG,MAAMhD,KADjB;AAAA,cAC3BqD,OAD2B,gBAC3BA,OAD2B;AAAA,cAClBE,EADkB,gBAClBA,EADkB;AAAA,cACdC,UADc,gBACdA,UADc;AAAA,cACFC,QADE,gBACFA,QADE;;AAEnC,cAAIJ,OAAJ,EAAa;AACXA,oBAAQZ,KAAR,EAAeI,KAAf;AACD;;AAEDK,0BAAgBT,KAAhB,EAAuBc,EAAvB,EAA2BC,UAA3B,EAAuCC,QAAvC,EAAiDZ,KAAjD;AACD;AAVI,OAAP;AAYD,KAnMkB;;AAAA,UAqMnBa,YArMmB,GAqMJ,UAACC,SAAD,EAAe;AAAA,wBACe,MAAKzC,KADpB;AAAA,UACpB0C,aADoB,eACpBA,aADoB;AAAA,UACLhD,eADK,eACLA,eADK;;AAE5B,UAAMiD,aAAa,CAACjD,kBAAkBgD,aAAnB,KAAqCD,YAAY,CAAZ,GAAgB,CAAC,CAAtD,CAAnB;;AAEA,YAAK3C,QAAL,CAAc;AACZ4C,uBAAeA,gBAAgBC,UADnB;AAEZjD,yBAAiBA,kBAAkBiD;AAFvB,OAAd;AAID,KA7MkB;;AAAA,UA+MnBC,aA/MmB,GA+MH,YAAM;AACpB,YAAKJ,YAAL,CAAkB,IAAlB;AACD,KAjNkB;;AAAA,UAmNnBK,iBAnNmB,GAmNC,YAAM;AACxB,YAAKL,YAAL,CAAkB,KAAlB;AACD,KArNkB;;AAGjB,QAAMM,kBAAkB,OAAOhE,MAAMuC,cAAb,KAAgC,WAAhC,GAA8CvC,MAAMgE,eAApD,GAAsEhE,MAAMuC,cAApG;AACA,QAAM0B,iBAAiBjE,MAAMQ,MAAN,GAAeX,oBAAf,GAAsCC,qBAA7D;AACA,UAAKoB,KAAL,GAAa;AACX+C,oCADW;AAEXC,uBAAiBD,iBAAiBD,eAFvB;AAGXG,wBAAkB,IAHP;AAIXP,qBAAe;AAJJ,KAAb;;AAOA,QAAI,OAAO5D,MAAMuC,cAAb,KAAgC,WAApC,EAAiD;AAC/C,YAAKrB,KAAL,CAAWqB,cAAX,GAA4ByB,eAA5B;AACD;AAdgB;AAelB;;;;8CAEyBI,S,EAAW;AACnC,UAAI,KAAKpE,KAAL,CAAWuC,cAAX,KAA8B6B,UAAU7B,cAA5C,EAA4D;AAC1D,aAAKvB,QAAL,cACK,KAAKD,sBAAL,CAA4B,KAAKZ,UAAjC,EAA6C,CAA7C,EAAgDiE,UAAU7B,cAA1D,EAA0E,KAAKrB,KAAL,CAAWN,eAArF,CADL,GAEG,KAAKK,qBAFR;AAGD,OAJD,MAIO,IAAI,CAAC,KAAKP,YAAL,CAAkB0D,SAAlB,CAAD,IAAiC,KAAK1D,YAAL,CAAkB,KAAKV,KAAvB,CAArC,EAAoE;AACzE,aAAKgB,QAAL,CAAc,EAAEP,aAAa,IAAf,EAAd;AACD;AACF;;;uCAEkB4D,S,EAAWC,S,EAAW;AACvC,UAAI,KAAK5D,YAAL,CAAkB,KAAKV,KAAvB,KAAiC,KAAKkB,KAAL,CAAWN,eAAX,KAA+B0D,UAAU1D,eAA9E,EAA+F;AAC7F,YAAMH,cAAc,KAAKE,gBAAL,CAAsB,KAAKR,UAA3B,EAAuC,KAAKe,KAAL,CAAWV,MAAlD,CAApB;AACA;AACA;AACA,aAAKQ,QAAL,CAAc,EAAEP,wBAAF,EAAd;AACD,OALD,MAKO;AACL,YAAM8D,SAAS,gBAASC,GAAT,CAAa,gBAASC,OAAT,CAAiB,KAAKzE,KAAL,CAAWyD,QAA5B,CAAb,EAAoD;AAAA,cAAYL,KAAZ,QAAGpD,KAAH,CAAYoD,KAAZ;AAAA,iBAA0BA,KAA1B;AAAA,SAApD,CAAf;AACA,YAAMsB,aAAa,gBAASF,GAAT,CAAa,gBAASC,OAAT,CAAiBJ,UAAUZ,QAA3B,CAAb,EAAmD;AAAA,cAAYL,KAAZ,SAAGpD,KAAH,CAAYoD,KAAZ;AAAA,iBAA0BA,KAA1B;AAAA,SAAnD,CAAnB;AACA,YAAImB,OAAOI,MAAP,KAAkBD,WAAWC,MAA7B,IAAuCJ,OAAOK,MAAP,CAAc,UAACC,CAAD,EAAIvC,CAAJ;AAAA,iBAAUiC,OAAOjC,CAAP,MAAcoC,WAAWpC,CAAX,CAAxB;AAAA,SAAd,EAAqDqC,MAAhG,EAAwG;AACtG,eAAK3D,QAAL,cACK,KAAKD,sBAAL,CAA4B,KAAKZ,UAAjC,EAA6C,CAA7C,EAAgD,KAAKH,KAAL,CAAWuC,cAA3D,EAA2E,KAAKrB,KAAL,CAAWN,eAAtF,CADL,GAEG,KAAKK,qBAFR;AAGD;AACF;AACF;;;iCAEYjB,K,EAAO;AAClB,aAAO,OAAOA,MAAM8E,cAAb,KAAgC,SAAhC,GACH9E,MAAM8E,cADH,GAEH,gBAASL,OAAT,CAAiBzE,MAAMyD,QAAvB,EAAiCmB,MAAjC,CAAwC;AAAA,eAAS,CAAC,CAACG,KAAX;AAAA,OAAxC,EAA0DJ,MAA1D,GAAmE,CAFvE;AAGD;;;qCAEgBzE,S,EAAWM,M,EAAQ;AAClC,UAAMwE,eAAexE,SAASb,cAAT,GAA0BC,eAA/C;AACA,UAAMyC,MAAMnC,UAAUkB,aAAV,CAAwB,SAAxB,CAAZ;;AAFkC,+BAGEiB,IAAIjB,aAAJ,CAAkB,eAAlB,CAHF;AAAA,UAGd6D,WAHc,sBAG1BjD,UAH0B;;AAKlC,aAAOgD,eAAeC,WAAtB;AACD;;;uCAEkB/E,S,EAAkC;AAAA,UAAvBO,WAAuB,uEAAT,CAAS;AAAA,UAANyE,IAAM;;AACnD,UAAMtD,iBAAiB1B,UAAU2B,WAAjC;AACA,UAAI+B,gBAAgB,CAApB;AACA,UAAIhC,iBAAiB1B,UAAUiF,WAA/B,EAA4C;AAC1C,YAAMC,OAAO9D,MAAMC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BvB,UAAUwB,gBAAV,CAA2B,SAA3B,CAA3B,CAAb;AACA,YAAI2D,aAAa,CAAjB;AACAD,aAAKhD,IAAL,CAAU,UAACC,GAAD,EAAMC,CAAN,EAAY;AACpBsB,0BAAgBtB,CAAhB;AACA+C,wBAAchD,IAAIR,WAAlB;;AAEA,iBAAOwD,aAAazD,cAApB;AACD,SALD;AAMD;;AAED,aAAO0D,KAAKC,GAAL,CAAS,CAAT,EAAY3B,iBAAiBsB,OAAO,CAAP,GAAW,CAA5B,CAAZ,CAAP;AACD;;;2CAEsBhF,S,EAA6D;AAAA,UAAlDO,WAAkD,uEAApC,CAAoC;AAAA,UAAjC8B,cAAiC;AAAA,UAAjB3B,eAAiB;;AAClF,UAAI4E,mBAAJ;AACA,UAAI,OAAOjD,cAAP,KAA0B,QAA9B,EAAwC;AACtC,YAAI3B,kBAAkB,CAAlB,IAAuB2B,kBAAkB3B,eAA7C,EAA8D;AAC5D4E,uBAAatF,UAAUkB,aAAV,CAAwB,eAAxB,CAAb;AACD,SAFD,MAEO;AACLoE,uBAAatF,UAAUwB,gBAAV,CAA2B,SAA3B,EAAsCa,cAAtC,CAAb;AACD;AACF,OAND,MAMO;AACLiD,qBAAatF,UAAUkB,aAAV,CAAwB,iBAAxB,CAAb;AACD;;AAED,UAAI,CAACoE,UAAL,EAAiB;AACf,eAAO,EAAErB,kBAAkB,KAApB,EAAP;AACD;;AAdiF,wBAgBbqB,UAhBa;AAAA,UAgB7DvB,cAhB6D,eAgB1EpC,WAhB0E;AAAA,UAgBjCqC,eAhBiC,eAgB7ClC,UAhB6C;;AAiBlF,aAAO;AACLiC,sCADK;AAELC,yBAAiBA,kBAAkBzD,WAF9B;AAGL0D,0BAAkB,CAACvD,eAAD,IAAoBA,kBAAkB2B;AAHnD,OAAP;AAKD;;;6BAsHQ;AAAA;;AAAA,mBAQH,KAAKrB,KARF;AAAA,UAELgD,eAFK,UAELA,eAFK;AAAA,UAGLD,cAHK,UAGLA,cAHK;AAAA,UAILE,gBAJK,UAILA,gBAJK;AAAA,UAKLP,aALK,UAKLA,aALK;AAAA,UAMLhD,eANK,UAMLA,eANK;AAAA,UAOLH,WAPK,UAOLA,WAPK;;AAAA,mBA4CH,KAAKT,KA5CF;AAAA,UAWMyF,SAXN,UAWLC,SAXK;AAAA,UAYLC,KAZK,UAYLA,KAZK;AAAA,UAaLC,SAbK,UAaLA,SAbK;AAAA,UAcLC,kBAdK,UAcLA,kBAdK;AAAA,UAeLC,oBAfK,UAeLA,oBAfK;AAAA,UAgBLC,OAhBK,UAgBLA,OAhBK;AAAA,UAiBLzF,QAjBK,UAiBLA,QAjBK;AAAA,UAkBLoC,KAlBK,UAkBLA,KAlBK;AAAA,UAmBLnC,YAnBK,UAmBLA,YAnBK;AAAA,UAoBLyF,iBApBK,UAoBLA,iBApBK;AAAA,UAqBLC,QArBK,UAqBLA,QArBK;AAAA,UAsBLC,YAtBK,UAsBLA,YAtBK;AAAA,UAuBLC,gBAvBK,UAuBLA,gBAvBK;AAAA,UA0BLC,wBA1BK,UA0BLA,wBA1BK;AAAA,UA2BLC,yBA3BK,UA2BLA,yBA3BK;AAAA,UA4BLC,gBA5BK,UA4BLA,gBA5BK;AAAA,UA6BLC,iBA7BK,UA6BLA,iBA7BK;AAAA,UA8BLC,oBA9BK,UA8BLA,oBA9BK;AAAA,UA+BLC,qBA/BK,UA+BLA,qBA/BK;AAAA,UAiCWC,eAjCX,UAiCLnE,cAjCK;AAAA,UAkCLyB,eAlCK,UAkCLA,eAlCK;AAAA,UAmCLlB,WAnCK,UAmCLA,WAnCK;AAAA,UAoCLgC,cApCK,UAoCLA,cApCK;AAAA,UAqCLtE,MArCK,UAqCLA,MArCK;AAAA,UAwCLmG,YAxCK,UAwCLA,YAxCK;AAAA,UAyCLC,eAzCK,UAyCLA,eAzCK;AAAA,UA2CF5G,KA3CE;;AA8CP,UAAMuC,iBAAiB,wBAAS,KAAKvC,KAAd,EAAqB,KAAKkB,KAA1B,EAAiC,gBAAjC,CAAvB;;AAEA,UAAI2F,OAAO,KAAX;AACA,UAAIpD,WAAW,gBAASe,GAAT,CAAa,gBAASC,OAAT,CAAiB,KAAKzE,KAAL,CAAWyD,QAA5B,CAAb,EAAoD,UAACpB,GAAD,EAAMI,KAAN,EAAgB;AACjF,YAAMqE,gBAAgB,SAAhBA,aAAgB,CAACC,QAAD,EAAWxD,EAAX,EAAeZ,aAAf,EAA8BC,WAA9B,EAA2CC,KAA3C,EAAqD;AACzE,cAAIR,IAAIrC,KAAJ,CAAUqD,OAAd,EAAuB;AACrBhB,gBAAIrC,KAAJ,CAAUqD,OAAV,CAAkBX,KAAlB,EAAyBa,EAAzB,EAA6BZ,aAA7B,EAA4CC,WAA5C,EAAyDC,KAAzD;AACD;;AAED,iBAAKL,gBAAL,CAAsBuE,QAAtB,EAAgCxD,EAAhC,EAAoCZ,aAApC,EAAmDC,WAAnD,EAAgEC,KAAhE;AACD,SAND;;AAQA,YAAIR,IAAIrC,KAAJ,CAAU6G,IAAd,EAAoB;AAClBA,iBAAO,IAAP;AACD;;AAED,eAAO,yBAAaxE,GAAb,EAAkB;AACvBI,sBADuB;AAEvBuE,2BAAiBnB,kBAFM;AAGvBoB,6BAAmBnB,oBAHI;AAIvBvC,cAAIlB,IAAIrC,KAAJ,CAAUuD,EAAV,IAAmBb,KAAnB,SAA4BD,KAJT;AAKvBe,sBAAYnB,IAAIrC,KAAJ,CAAUwD,UAAV,IAA2Bd,KAA3B,eAA0CD,KAL/B;AAMvBtB,kBAAQsB,UAAUF,cANK;AAOvBc,mBAASyD;AAPc,SAAlB,CAAP;AASD,OAtBc,CAAf;;AAwBA,UAAII,iBAAJ;AACA,UAAIC,oBAAJ;AACA,UAAIC,wBAAJ;AACA,UAAIxG,eAAJ,EAAqB;AACnB,YAAM+D,SAASlB,SAASkB,MAAxB;AACA,YAAIpE,YAAJ,EAAkB;AAChB2G,qBACE;AACE,gBAAOxE,KAAP,mBADF;AAEE,4BAAgBH,cAFlB;AAGE,6BAAiB3B,eAHnB;AAIE,mBACE;AAAA;AAAA,gBAAe,OAAOoF,iBAAtB;AACG,+CAAkBK,yBAAlB,EAA6CD,wBAA7C,EAAuED,gBAAvE;AADH,aALJ;AASE,kBAAM1C,SAASjC,KAAT,CAAeZ,eAAf,EAAgC6C,SAASkB,MAAzC,EAAiDH,GAAjD,CAAqD,KAAKzB,sBAA1D;AATR,YADF;AAaD;;AAEDU,mBAAWA,SAASjC,KAAT,CAAeoC,aAAf,EAA8BhD,eAA9B,CAAX;;AAEA,YAAI,CAACL,YAAD,IAAiBqD,gBAAgB,CAArC,EAAwC;AACtCwD,4BACE;AACE,sBADF;AAEE,kBAAMP,IAFR;AAGE,oBAAQ,iCAAkBJ,qBAAlB,EAAyCD,oBAAzC,EAA+DN,YAA/D,CAHV;AAIE,qBAAS,KAAKnC;AAJhB,YADF;AAQD;;AAED,YAAI,CAACxD,YAAD,IAAiBoE,SAAS,CAA1B,IAA+B/D,kBAAkBgD,aAAlB,IAAmCe,MAAtE,EAA8E;AAC5EwC,wBACE;AACE,kBAAMN,IADR;AAEE,qBAAS,KAAK/C,aAFhB;AAGE,oBAAQ,iCAAkByC,iBAAlB,EAAqCD,gBAArC,EAAuDL,QAAvD;AAHV,YADF;AAOD;AACF;;AAED,aACE;AAAC,iBAAD;AAAA,qBACMjG,KADN;AAEE,8BAAY2F,KAAZ,IAAmBlF,wBAAnB,GAFF;AAGE,qBAAW,0BAAG,SAAH,EAAc;AACvB,mCAAuBG,mBAAmB,CAACL,YADpB;AAEvB,iCAAqBD,QAFE;AAGvB,sCAA0ByF;AAHH,WAAd,EAIRH,SAJQ,CAHb;AAQE,gBAAK;AARP;AAUE,kEAAgB,gBAAhB,EAA2B,iBAA3B,EAAuC,UAAU,KAAKxF,iBAAtD,EAAyE,OAAO,KAAKH,aAArF,GAVF;AAWGmH,uBAXH;AAYG3D,gBAZH;AAaG0D,mBAbH;AAcGD,gBAdH;AAeE,gEAAc,QAAQhD,eAAtB,EAAuC,OAAOD,cAA9C,EAA8D,SAASE,gBAAvE;AAfF,OADF;AAmBD;;;;;;AAjgBkBpE,I,CACZsH,S,GAAY;AACjB;;;;;AAKA3E,SAAO,iCAAkB,oBAAU4E,SAAV,CAAoB,CAC3C,oBAAUC,MADiC,EAE3C,oBAAUC,MAFiC,CAApB,CAAlB,CANU;;AAWjB;;;AAGA7B,SAAO,oBAAU8B,MAdA;;AAgBjB;;;AAGA7B,aAAW,oBAAU4B,MAnBJ;;AAqBjB;;;;;;;;;;AAUA3B,sBAAoB,oBAAU2B,MA/Bb;;AAiCjB;;;;;;;;;;;;;AAaA1B,wBAAsB,oBAAU0B,MA9Cf;;AAgDjB;;;AAGA9B,aAAW,oBAAU4B,SAAV,CAAoB,CAC7B,oBAAUI,IADmB,EAE7B,oBAAUF,MAFmB,CAApB,EAGRG,UAtDc;;AAwDjB;;;;;AAKAlE,YAAU,oBAAU6D,SAAV,CAAoB,CAC5B,oBAAUM,OADkB,EAE5B,oBAAUC,OAAV,CAAkB,oBAAUD,OAA5B,CAF4B,CAApB,EAGPD,UAhEc;;AAkEjB;;;;;AAKArH,YAAU,oBAAUwH,IAvEH;;AAyEjB;;;;AAIAhD,kBAAgB,oBAAUgD,IA7ET;;AA+EjB;;;;AAIA/B,WAAS,oBAAU+B,IAnFF;;AAqFjB;;;;AAIAvH,gBAAc,oBAAUuH,IAzFP;;AA2FjB;;;;;;;;AAQAhF,eAAa,oBAAU4E,IAnGN;;AAqGjB;;;;AAIAnF,kBAAgB,0BAAW,oBAAUgF,MAArB,EAA6B,aAA7B,EAA4C,iBAA5C,CAzGC;;AA2GjB;;;AAGAvD,mBAAiB,oBAAUuD,MAAV,CAAiBI,UA9GjB;;AAgHjB;;;;AAIA1B,YAAU,oBAAU2B,OApHH;;AAsHjB;;;;AAIA1B,gBAAc,oBAAU0B,OA1HP;;AA4HjB;;;;AAIAzB,oBAAkB,oBAAUyB,OAhIX;;AAkIjB;;;;AAIA5B,qBAAmB,oBAAU+B,IAAV,CAAeJ,UAtIjB;;AAwIjB;;;;AAIAnH,UAAQ,oBAAUsH,IA5ID;AA6IjBnB,gBAAc,0BAAW,oBAAUqB,KAAV,CAAgB,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,CAAhB,CAAX,EAA6D,sBAA7D,CA7IG;AA8IjBpB,mBAAiB,0BAAW,oBAAUW,MAArB,EAA6B,sBAA7B,CA9IA;AA+IjBjB,oBAAkB,0BAAW,oBAAUyB,IAArB,EAA2B,iCAA3B,CA/ID;AAgJjBxB,qBAAmB,0BAAW,oBAAUiB,MAArB,EAA6B,iCAA7B,CAhJF;AAiJjBhB,wBAAsB,0BAAW,oBAAUuB,IAArB,EAA2B,qCAA3B,CAjJL;AAkJjBtB,yBAAuB,0BAAW,oBAAUe,MAArB,EAA6B,qCAA7B,CAlJN;AAmJjBpB,4BAA0B,0BAAW,oBAAU2B,IAArB,EAA2B,yCAA3B,CAnJT;AAoJjB1B,6BAA2B,0BAAW,oBAAUmB,MAArB,EAA6B,yCAA7B;AApJV,C;AADAzH,I,CAwJZkI,Y,GAAe;AACpBvC,aAAW,IADS;AAEpB1B,mBAAiB,CAFG;AAGpBiC,YAAU;AAAA;AAAA;AAAA;AAAA,GAHU;AAIpBC,gBAAc;AAAA;AAAA;AAAA;AAAA,GAJM;AAKpBF,qBAAmB,MALC;AAMpBG,oBAAkB;AAAA;AAAA;AAAA;AAAA;AANE,C;kBAxJHpG,I","file":"Tabs.js","sourcesContent":["import React, { PureComponent, Children, cloneElement } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cn from 'classnames';\r\nimport deprecated from 'react-prop-types/lib/deprecated';\r\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\r\n\r\nimport getField from '../utils/getField';\r\nimport controlled from '../utils/PropTypes/controlled';\r\nimport TabIndicator from './TabIndicator';\r\nimport IconSeparator from '../Helpers/IconSeparator';\r\nimport ResizeObserver from '../Helpers/ResizeObserver';\r\nimport FontIcon from '../FontIcons/FontIcon';\r\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\r\nimport MenuTab from './MenuTab';\r\nimport TabOverflowButton from './TabOverflowButton';\r\n\r\nconst MOBILE_PADDING = 72;\r\nconst DESKTOP_PADDING = 80;\r\nconst MOBILE_TAB_MIN_WIDTH = 72;\r\nconst DESKTOP_TAB_MIN_WIDTH = 160;\r\n\r\n\r\n/**\r\n * The `Tabs` component is used to manage the state of which tab is currently active.\r\n */\r\nexport default class Tabs extends PureComponent {\r\n  static propTypes = {\r\n    /**\r\n     * A base id to use for each `Tab`. When the child tabs are created, they are cloned\r\n     * with some additional accessibility props. Each tab will get a prop with this and the\r\n     * current index of the tab.\r\n     */\r\n    tabId: isRequiredForA11y(PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ])),\r\n\r\n    /**\r\n     * An optional style to apply.\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply.\r\n     */\r\n    className: PropTypes.string,\r\n\r\n    /**\r\n     * The className to use when a tab is currently active. The default className does not\r\n     * actually apply any styles.\r\n     *\r\n     * If this prop is set, it will override any `activeClassName` props applied to the child\r\n     * `Tab`s. Either set a custom `activeClassName` on each `Tab`, or use this prop to apply\r\n     * the same `activeClassName` to each `Tab`.\r\n     *\r\n     * @see {@link Tabs/Tab#activeClassName}\r\n     */\r\n    activeTabClassName: PropTypes.string,\r\n\r\n    /**\r\n     * The className to use when the tab is not active and not selected. By default,\r\n     * this will set inactive tabs' color to `$md-white-base`. This works great\r\n     * if the tabs are placed on a colored toolbar but fails when the tabs are not colored\r\n     * or on a white background. In these cases, it is recommended to change this value\r\n     * to `md-text--secondary` or some other class name.\r\n     *\r\n     * If this prop is set, it will override any `inactiveClassName` props applied to the child\r\n     * `Tab`s. Either set a custom `inactiveClassName` on each `Tab`, or use this prop to apply\r\n     * the same `inactiveClassName` to each `Tab`.\r\n     *\r\n     * @see {@link Tabs/Tab#inactiveClassName}\r\n     */\r\n    inactiveTabClassName: PropTypes.string,\r\n\r\n    /**\r\n     * The component to render the tabs in.\r\n     */\r\n    component: PropTypes.oneOfType([\r\n      PropTypes.func,\r\n      PropTypes.string,\r\n    ]).isRequired,\r\n\r\n    /**\r\n     * This should either be a single `Tab` component or a list of `Tab` components. Unfortunately,\r\n     * the child *must* be exactly a `Tab` component because this is unable to extract the correct\r\n     * `label` and `children` from a custom `Tab` component.\r\n     */\r\n    children: PropTypes.oneOfType([\r\n      PropTypes.element,\r\n      PropTypes.arrayOf(PropTypes.element),\r\n    ]).isRequired,\r\n\r\n    /**\r\n     * Boolean if the tabs should be centered instead of aligned to the keyline. The tabs will\r\n     * only be aligned to the keyline when there are more than 3 tabs and the `alignToKeyline`\r\n     * prop is `false`.\r\n     */\r\n    centered: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the tabs should align to a toolbar's title keyline. If this is undefined,\r\n     * the tabs will try to align to the keyline when there are more than 3 tabs.\r\n     */\r\n    alignToKeyline: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if the tabs should be colored with the primary color. If this is false or undefined,\r\n     * the tabs will be colored for the light or dark theme.\r\n     */\r\n    colored: PropTypes.bool,\r\n\r\n    /**\r\n     * A boolean if the overflow tabs on desktop displays should appear in a menu. If this is false,\r\n     * the additional tabs will be available by using pagination buttons.\r\n     */\r\n    overflowMenu: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional function to call when the active tab is changed. The callback will include\r\n     * the new active tab index and a click event.\r\n     *\r\n     * ```js\r\n     * onTabChange(newTabIndex, event);\r\n     * ```\r\n     */\r\n    onTabChange: PropTypes.func,\r\n\r\n    /**\r\n     * An optional active tab index to use. If this is defined, it will make the component controlled\r\n     * and require the `onTabChange` prop to be defined.\r\n     */\r\n    activeTabIndex: controlled(PropTypes.number, 'onTabChange', 'defaultTabIndex'),\r\n\r\n    /**\r\n     * The default tab index to use when the component is uncontrolled.\r\n     */\r\n    defaultTabIndex: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * When the `overflowMenu` prop is false, this will be used to render the \"next slice of tabs\"\r\n     * when there are too many tabs to display at once on desktop screens.\r\n     */\r\n    nextIcon: PropTypes.element,\r\n\r\n    /**\r\n     * When the `overflowMenu` prop is false, this will be used to render the \"previous slice of tabs\"\r\n     * when there are too many tabs to display at once on desktop screens.\r\n     */\r\n    previousIcon: PropTypes.element,\r\n\r\n    /**\r\n     * When the `overflowMenu` prop is true, this will be used to render the `MenuTab` overflow menu.\r\n     * This will be to render the icon to the right of the label.\r\n     */\r\n    overflowMenuIcon: PropTypes.element,\r\n\r\n    /**\r\n     * When the `overflowMenu` prop is true, this will be used to render the `MenuTab` overflow menu.\r\n     * This will be the text that displays as a tab.\r\n     */\r\n    overflowMenuLabel: PropTypes.node.isRequired,\r\n\r\n    /**\r\n     * Boolean if the tabs are currently rendered on a mobile or tablet device. This is used to calculate\r\n     * overflow/padding on the tabs.\r\n     */\r\n    mobile: PropTypes.bool,\r\n    defaultMedia: deprecated(PropTypes.oneOf(['mobile', 'tablet', 'desktop']), 'Use `mobile` instead'),\r\n    desktopMinWidth: deprecated(PropTypes.number, 'Use `mobile` instead'),\r\n    nextIconChildren: deprecated(PropTypes.node, 'Use the `nextIcon` prop instead'),\r\n    nextIconClassName: deprecated(PropTypes.string, 'Use the `nextIcon` prop instead'),\r\n    previousIconChildren: deprecated(PropTypes.node, 'Use the `previousIcon` prop instead'),\r\n    previousIconClassName: deprecated(PropTypes.string, 'Use the `previousIcon` prop instead'),\r\n    overflowMenuIconChildren: deprecated(PropTypes.node, 'Use the `overflowMenuIcon` prop instead'),\r\n    overflowMenuIconClassName: deprecated(PropTypes.string, 'Use the `overflowMenuIcon` prop instead'),\r\n  };\r\n\r\n  static defaultProps = {\r\n    component: 'ul',\r\n    defaultTabIndex: 0,\r\n    nextIcon: <FontIcon>keyboard_arrow_right</FontIcon>,\r\n    previousIcon: <FontIcon>keyboard_arrow_left</FontIcon>,\r\n    overflowMenuLabel: 'More',\r\n    overflowMenuIcon: <FontIcon>arrow_drop_down</FontIcon>,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const defaultTabIndex = typeof props.activeTabIndex === 'undefined' ? props.defaultTabIndex : props.activeTabIndex;\r\n    const indicatorWidth = props.mobile ? MOBILE_TAB_MIN_WIDTH : DESKTOP_TAB_MIN_WIDTH;\r\n    this.state = {\r\n      indicatorWidth,\r\n      indicatorOffset: indicatorWidth * defaultTabIndex,\r\n      indicatorVisible: true,\r\n      overflowIndex: 0,\r\n    };\r\n\r\n    if (typeof props.activeTabIndex === 'undefined') {\r\n      this.state.activeTabIndex = defaultTabIndex;\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (this.props.activeTabIndex !== nextProps.activeTabIndex) {\r\n      this.setState({\r\n        ...this._calcIndicatorPosition(this._container, 0, nextProps.activeTabIndex, this.state.overflowAtIndex),\r\n      }, this._scrollActiveIntoView);\r\n    } else if (!this._shouldAlign(nextProps) && this._shouldAlign(this.props)) {\r\n      this.setState({ paddingLeft: null });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this._shouldAlign(this.props) && this.state.overflowAtIndex !== prevState.overflowAtIndex) {\r\n      const paddingLeft = this._calcPaddingLeft(this._container, this.state.mobile);\r\n      // Have to wait for the overflow menus to appear, then wop\r\n      /* eslint-disable react/no-did-update-set-state */\r\n      this.setState({ paddingLeft });\r\n    } else {\r\n      const labels = Children.map(Children.toArray(this.props.children), ({ props: { label } }) => label);\r\n      const prevLabels = Children.map(Children.toArray(prevProps.children), ({ props: { label } }) => label);\r\n      if (labels.length !== prevLabels.length || labels.filter((_, i) => labels[i] !== prevLabels[i]).length) {\r\n        this.setState({\r\n          ...this._calcIndicatorPosition(this._container, 0, this.props.activeTabIndex, this.state.overflowAtIndex),\r\n        }, this._scrollActiveIntoView);\r\n      }\r\n    }\r\n  }\r\n\r\n  _shouldAlign(props) {\r\n    return typeof props.alignToKeyline === 'boolean'\r\n      ? props.alignToKeyline\r\n      : Children.toArray(props.children).filter(child => !!child).length > 3;\r\n  }\r\n\r\n  _calcPaddingLeft(container, mobile) {\r\n    const mediaPadding = mobile ? MOBILE_PADDING : DESKTOP_PADDING;\r\n    const tab = container.querySelector('.md-tab');\r\n    const { offsetLeft: labelOffset } = tab.querySelector('.md-tab-label');\r\n\r\n    return mediaPadding - labelOffset;\r\n  }\r\n\r\n  _calcOverflowIndex(container, paddingLeft = 0, menu) {\r\n    const containerWidth = container.offsetWidth;\r\n    let overflowIndex = 0;\r\n    if (containerWidth < container.scrollWidth) {\r\n      const tabs = Array.prototype.slice.call(container.querySelectorAll('.md-tab'));\r\n      let totalWidth = 0;\r\n      tabs.some((tab, i) => {\r\n        overflowIndex = i;\r\n        totalWidth += tab.offsetWidth;\r\n\r\n        return totalWidth > containerWidth;\r\n      });\r\n    }\r\n\r\n    return Math.max(0, overflowIndex - (menu ? 1 : 0));\r\n  }\r\n\r\n  _calcIndicatorPosition(container, paddingLeft = 0, activeTabIndex, overflowAtIndex) {\r\n    let activeItem;\r\n    if (typeof activeTabIndex === 'number') {\r\n      if (overflowAtIndex > 0 && activeTabIndex >= overflowAtIndex) {\r\n        activeItem = container.querySelector('.md-menu--tab');\r\n      } else {\r\n        activeItem = container.querySelectorAll('.md-tab')[activeTabIndex];\r\n      }\r\n    } else {\r\n      activeItem = container.querySelector('.md-tab--active');\r\n    }\r\n\r\n    if (!activeItem) {\r\n      return { indicatorVisible: false };\r\n    }\r\n\r\n    const { offsetWidth: indicatorWidth, offsetLeft: indicatorOffset } = activeItem;\r\n    return {\r\n      indicatorWidth,\r\n      indicatorOffset: indicatorOffset + paddingLeft,\r\n      indicatorVisible: !overflowAtIndex || overflowAtIndex > activeTabIndex,\r\n    };\r\n  }\r\n\r\n  _setContainer = (container) => {\r\n    this._container = container;\r\n    this._positionElements(this._container !== null);\r\n  };\r\n\r\n  _positionElements = (initialRender) => {\r\n    initialRender = typeof initialRender === 'boolean' && initialRender;\r\n    if (!this._container) {\r\n      return;\r\n    }\r\n\r\n    const { centered, overflowMenu } = this.props;\r\n    const { mobile } = this.props;\r\n\r\n    let paddingLeft;\r\n    if (!centered && this._shouldAlign(this.props)) {\r\n      paddingLeft = this._calcPaddingLeft(this._container, mobile);\r\n    }\r\n\r\n    let overflowAtIndex;\r\n    if (!mobile) {\r\n      overflowAtIndex = this._calcOverflowIndex(this._container, paddingLeft, overflowMenu);\r\n    }\r\n\r\n    const indicatorPosition = this._calcIndicatorPosition(this._container, initialRender ? paddingLeft : 0);\r\n\r\n    this.setState({ mobile, paddingLeft, overflowAtIndex, ...indicatorPosition }, this._scrollActiveIntoView);\r\n  };\r\n\r\n  _scrollActiveIntoView = () => {\r\n    if (!this._container || !this.state.mobile) {\r\n      return;\r\n    }\r\n\r\n    const active = this._container.querySelector('.md-tab--active');\r\n    if (!active) {\r\n      return;\r\n    }\r\n\r\n    const allTabs = Array.prototype.slice.call(this._container.querySelectorAll('.md-tab'));\r\n    if (allTabs[0] === active) {\r\n      this._container.scrollLeft = 0;\r\n      return;\r\n    }\r\n\r\n    const { offsetWidth: containerWidth, scrollLeft } = this._container;\r\n    const { offsetWidth: activeWidth, offsetLeft: activeOffset } = active;\r\n    const inFullViewLeft = activeOffset - scrollLeft >= 0;\r\n    const inFullViewRight = (activeOffset + activeWidth) - (containerWidth + scrollLeft) <= 0;\r\n    if (inFullViewLeft && inFullViewRight) {\r\n      return;\r\n    }\r\n\r\n    let offset = 0;\r\n    allTabs.some((tab, i) => {\r\n      if (i < this.props.activeTabIndex) {\r\n        offset += tab.offsetWidth;\r\n      }\r\n\r\n      return i < this.state.activeTabIndex;\r\n    });\r\n\r\n    this._container.scrollLeft = offset;\r\n  };\r\n\r\n  _handleTabChange = (index, tabId, tabControlsId, tabChildren, event) => {\r\n    if (this.props.onTabChange) {\r\n      this.props.onTabChange(index, tabId, tabControlsId, tabChildren, event);\r\n    }\r\n\r\n    if (typeof this.props.activeTabIndex === 'undefined') {\r\n      this.setState({\r\n        activeTabIndex: index,\r\n        ...this._calcIndicatorPosition(this._container, 0, index, this.state.overflowAtIndex),\r\n      });\r\n    }\r\n  };\r\n\r\n  _mapToOverflowTabProps = (tab, i) => {\r\n    const index = i + this.state.overflowAtIndex;\r\n    const active = getField(this.props, this.state, 'activeTabIndex') === index;\r\n    const tabEl = Children.only(tab);\r\n    const handleTabChange = this._handleTabChange;\r\n\r\n    return {\r\n      active,\r\n      primaryText: tabEl.props.label,\r\n      onClick: function handleClick(event) {\r\n        const { onClick, id, controlsId, children } = tabEl.props;\r\n        if (onClick) {\r\n          onClick(index, event);\r\n        }\r\n\r\n        handleTabChange(index, id, controlsId, children, event);\r\n      },\r\n    };\r\n  };\r\n\r\n  _nextIndexes = (increment) => {\r\n    const { overflowIndex, overflowAtIndex } = this.state;\r\n    const visibleAmt = (overflowAtIndex - overflowIndex) * (increment ? 1 : -1);\r\n\r\n    this.setState({\r\n      overflowIndex: overflowIndex + visibleAmt,\r\n      overflowAtIndex: overflowAtIndex + visibleAmt,\r\n    });\r\n  };\r\n\r\n  _showNextTabs = () => {\r\n    this._nextIndexes(true);\r\n  };\r\n\r\n  _showPreviousTabs = () => {\r\n    this._nextIndexes(false);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      indicatorOffset,\r\n      indicatorWidth,\r\n      indicatorVisible,\r\n      overflowIndex,\r\n      overflowAtIndex,\r\n      paddingLeft,\r\n    } = this.state;\r\n\r\n    const {\r\n      component: Component,\r\n      style,\r\n      className,\r\n      activeTabClassName,\r\n      inactiveTabClassName,\r\n      colored,\r\n      centered,\r\n      tabId,\r\n      overflowMenu,\r\n      overflowMenuLabel,\r\n      nextIcon,\r\n      previousIcon,\r\n      overflowMenuIcon,\r\n\r\n      // deprecated\r\n      overflowMenuIconChildren,\r\n      overflowMenuIconClassName,\r\n      nextIconChildren,\r\n      nextIconClassName,\r\n      previousIconChildren,\r\n      previousIconClassName,\r\n      /* eslint-disable no-unused-vars */\r\n      activeTabIndex: propActiveIndex,\r\n      defaultTabIndex,\r\n      onTabChange,\r\n      alignToKeyline,\r\n      mobile,\r\n\r\n      // Deprecated\r\n      defaultMedia,\r\n      desktopMinWidth,\r\n      /* eslint-enable no-unused-vars */\r\n      ...props\r\n    } = this.props;\r\n\r\n    const activeTabIndex = getField(this.props, this.state, 'activeTabIndex');\r\n\r\n    let icon = false;\r\n    let children = Children.map(Children.toArray(this.props.children), (tab, index) => {\r\n      const handleOnClick = (tabIndex, id, tabControlsId, tabChildren, event) => {\r\n        if (tab.props.onClick) {\r\n          tab.props.onClick(tabId, id, tabControlsId, tabChildren, event);\r\n        }\r\n\r\n        this._handleTabChange(tabIndex, id, tabControlsId, tabChildren, event);\r\n      };\r\n\r\n      if (tab.props.icon) {\r\n        icon = true;\r\n      }\r\n\r\n      return cloneElement(tab, {\r\n        index,\r\n        activeClassName: activeTabClassName,\r\n        inactiveClassName: inactiveTabClassName,\r\n        id: tab.props.id || `${tabId}-${index}`,\r\n        controlsId: tab.props.controlsId || `${tabId}-panel-${index}`,\r\n        active: index === activeTabIndex,\r\n        onClick: handleOnClick,\r\n      });\r\n    });\r\n\r\n    let overflow;\r\n    let nextControl;\r\n    let previousControl;\r\n    if (overflowAtIndex) {\r\n      const length = children.length;\r\n      if (overflowMenu) {\r\n        overflow = (\r\n          <MenuTab\r\n            id={`${tabId}-overflow-menu`}\r\n            activeTabIndex={activeTabIndex}\r\n            overflowAtIndex={overflowAtIndex}\r\n            label={(\r\n              <IconSeparator label={overflowMenuLabel}>\r\n                {getDeprecatedIcon(overflowMenuIconClassName, overflowMenuIconChildren, overflowMenuIcon)}\r\n              </IconSeparator>\r\n            )}\r\n            tabs={children.slice(overflowAtIndex, children.length).map(this._mapToOverflowTabProps)}\r\n          />\r\n        );\r\n      }\r\n\r\n      children = children.slice(overflowIndex, overflowAtIndex);\r\n\r\n      if (!overflowMenu && overflowIndex > 0) {\r\n        previousControl = (\r\n          <TabOverflowButton\r\n            left\r\n            icon={icon}\r\n            iconEl={getDeprecatedIcon(previousIconClassName, previousIconChildren, previousIcon)}\r\n            onClick={this._showPreviousTabs}\r\n          />\r\n        );\r\n      }\r\n\r\n      if (!overflowMenu && length > 3 && overflowAtIndex + overflowIndex <= length) {\r\n        nextControl = (\r\n          <TabOverflowButton\r\n            icon={icon}\r\n            onClick={this._showNextTabs}\r\n            iconEl={getDeprecatedIcon(nextIconClassName, nextIconChildren, nextIcon)}\r\n          />\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Component\r\n        {...props}\r\n        style={{ ...style, paddingLeft }}\r\n        className={cn('md-tabs', {\r\n          'md-tabs--pagination': overflowAtIndex && !overflowMenu,\r\n          'md-tabs--centered': centered,\r\n          'md-background--primary': colored,\r\n        }, className)}\r\n        role=\"tablist\"\r\n      >\r\n        <ResizeObserver watchWidth watchHeight onResize={this._positionElements} elRef={this._setContainer} />\r\n        {previousControl}\r\n        {children}\r\n        {nextControl}\r\n        {overflow}\r\n        <TabIndicator offset={indicatorOffset} width={indicatorWidth} visible={indicatorVisible} />\r\n      </Component>\r\n    );\r\n  }\r\n}\r\n"]}