{"version":3,"sources":["../../src/js/Inks/injectInk.js"],"names":["createInk","pageX","pageY","_inkContainer","props","disabled","inkDisabled","focus","composed","_composed","getComposedComponent","_setInkRef","inkContainer","_setComposedComponent","component","ref","__SUPER_SECRET_REF__","transitionOverlap","inkTransitionOverlap","transitionEnterTimeout","inkTransitionEnterTimeout","transitionLeaveTimeout","inkTransitionLeaveTimeout","inkStyle","inkClassName","inkContainerStyle","inkContainerClassName","waitForInkTransition","disabledInteractions","pulse","propInkDisabled","context","inkDisabledInteractions","ink","displayName","ComposedComponent","propTypes","object","string","bool","number","isRequired","arrayOf","oneOf","func","defaultProps","contextTypes"],"mappings":"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","file":"injectInk.js","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport { findDOMNode } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport getField from '../utils/getField';\r\nimport getDisplayName from '../utils/StringUtils/getDisplayName';\r\n\r\nimport InkContainer from './InkContainer';\r\nimport inkContextTypes from './inkContextTypes';\r\n\r\n/**\r\n * Takes any component and injects an ink container for having the Material Design Ink effect.\r\n *\r\n * The default triggers for an ink are:\r\n * - mouse down event\r\n * - touch start event\r\n * - keyboard focus\r\n * - form submit\r\n *\r\n * The form submit ink will only be triggered if the `ComposedComponent` has the attribute\r\n * `type=\"submit\"`, the `ComposedComponent` is in a form, and the user hits the `enter` key\r\n * while not actively focusing the `ComposedComponent`.\r\n *\r\n * ```js\r\n * @param {function} ComposedComponent - The React Component to inject an `ink` prop into.\r\n * @return {function} a new React class rendering the `ComposedComponent` and adding an\r\n *    `ink` pop.\r\n * ```\r\n */\r\nexport default ComposedComponent => class InkedComponent extends PureComponent {\r\n  static displayName = getDisplayName(ComposedComponent, 'Ink');\r\n  static propTypes = {\r\n    /**\r\n     * An optional style to apply to each ink that gets generated.\r\n     */\r\n    inkStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to each ink that gets generated.\r\n     */\r\n    inkClassName: PropTypes.string,\r\n\r\n    /**\r\n     * An optional style to apply to the ink's container.\r\n     */\r\n    inkContainerStyle: PropTypes.object,\r\n\r\n    /**\r\n     * An optional className to apply to the ink's container.\r\n     */\r\n    inkContainerClassName: PropTypes.string,\r\n\r\n    /**\r\n     * Boolean if the composed component or the ink is disabled.\r\n     */\r\n    disabled: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean if only the ink is disabled for the composed component.\r\n     */\r\n    inkDisabled: PropTypes.bool,\r\n\r\n    /**\r\n     * The time (in ms) that the enter and leave transitions for the ink should overlap.\r\n     * This really just allows for a more _fluid_ looking ink when something is quickly\r\n     * touched or clicked by having it fade out while growing.\r\n     */\r\n    inkTransitionOverlap: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * The transition time for the ink to be considered fully entered. This should really\r\n     * map up to whatever value you set for `$md-ink-enter-transition-time`.\r\n     */\r\n    inkTransitionEnterTimeout: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * The transition time for the ink to be considered fully leaved (left?). This should really\r\n     * map up to whatever value you set for `$md-ink-leave-transition-time`.\r\n     */\r\n    inkTransitionLeaveTimeout: PropTypes.number.isRequired,\r\n\r\n    /**\r\n     * Boolean if the `ComposedComponent`'s click event only after the ink has finished transitioning\r\n     * in and out. This is really only to get a more _fluid_ looking click event when clicking on\r\n     * the `ComposedComponent` ends up taking it out of the view. (ex: Closing a Dialog).\r\n     */\r\n    waitForInkTransition: PropTypes.bool,\r\n\r\n    /**\r\n     * An optional array of interactions that can be disabled for the ink. This is a *very* limited\r\n     * use case where `Switches` needed the ink disabled only when using a mouse.\r\n     */\r\n    disabledInteractions: PropTypes.arrayOf(PropTypes.oneOf(['keyboard', 'mouse', 'touch'])),\r\n\r\n    /**\r\n     * Boolean if the ink should do a pulse animation while focused. This was enabled by default in\r\n     * previous versions.\r\n     */\r\n    pulse: PropTypes.bool,\r\n\r\n    /**\r\n     * When using inked components in a `TransitionGroup`, the ref callback is not actually invoked.\r\n     * This is a little _hack_ to get it to work by not using `ref`, but this name.\r\n     */\r\n    __SUPER_SECRET_REF__: PropTypes.func,\r\n  };\r\n\r\n  static defaultProps = {\r\n    inkTransitionOverlap: 150,\r\n    inkTransitionEnterTimeout: 450,\r\n    inkTransitionLeaveTimeout: 300,\r\n  };\r\n\r\n  static contextTypes = inkContextTypes;\r\n\r\n  componentDidMount() {\r\n    const { __SUPER_SECRET_REF__: ref } = this.props;\r\n    // Emulate the ref callback...\r\n    if (ref) {\r\n      ref(this);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { __SUPER_SECRET_REF__: ref } = this.props;\r\n    // Emulate the ref callback...\r\n    if (ref) {\r\n      ref(null);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A publicly accessible way to manually create an ink. This can be used with the `refs`.\r\n   * The ink can either be created by using the `pageX` and `pageY` from a click/touch event\r\n   * or it will be created in the center of the `ComposedComponent`.\r\n   *\r\n   * ```js\r\n   * <SomeInkedComponent ref={inkHOC => inkHOC.createInk()} />\r\n   * ```\r\n   *\r\n   * @param {number=} pageX - An optional pageX of the click or touch event.\r\n   * @param {number=} pageY - An optional pageY of the click or touch event.\r\n   */\r\n  createInk = (pageX, pageY) => {\r\n    if (this._inkContainer && !this.props.disabled && !this.props.inkDisabled) {\r\n      this._inkContainer.createInk(pageX, pageY);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * This will attempt to focus the composed component. If the component is disabled, nothing\r\n   * will happen. If the `disabled` and `inkDisabled` props are not set to `true`, an ink will\r\n   * also be created.\r\n   *\r\n   * ```js\r\n   * <SomeInkedComponent ref={inkHOC => inkHOC.focus()} />\r\n   * ```\r\n   */\r\n  focus = () => {\r\n    if (this.props.inkDisabled) {\r\n      const composed = findDOMNode(this._composed);\r\n      if (composed) {\r\n        composed.focus();\r\n      }\r\n    } else if (this._inkContainer) {\r\n      this._inkContainer.focus();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Gets the composed component as a ref. This is useful if you need to access the ref of the\r\n   * composed component instead of the `injectInk` HOC to use some publicly accessible methods.\r\n   *\r\n   * ```js\r\n   * <SomeInkedComponent\r\n   *   ref={inkHOC => {\r\n   *     inkHOC.getComposedComponent().focus();\r\n   *   }}\r\n   * />\r\n   * ```\r\n   */\r\n  getComposedComponent = () => this._composed;\r\n\r\n  _setInkRef= (inkContainer) => {\r\n    if (inkContainer) {\r\n      this._inkContainer = inkContainer;\r\n    }\r\n  };\r\n\r\n  _setComposedComponent = (component) => {\r\n    this._composed = component;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      inkTransitionOverlap: transitionOverlap,\r\n      inkTransitionEnterTimeout: transitionEnterTimeout,\r\n      inkTransitionLeaveTimeout: transitionLeaveTimeout,\r\n      inkStyle,\r\n      inkClassName,\r\n      inkContainerStyle,\r\n      inkContainerClassName,\r\n      waitForInkTransition,\r\n      disabledInteractions,\r\n      pulse,\r\n      inkDisabled: propInkDisabled, // eslint-disable-line no-unused-vars\r\n      __SUPER_SECRET_REF__, // eslint-disable-line no-unused-vars\r\n      ...props\r\n    } = this.props;\r\n\r\n    const inkDisabled = getField(this.props, this.context, 'inkDisabled');\r\n    const inkDisabledInteractions = typeof disabledInteractions !== 'undefined'\r\n      ? disabledInteractions\r\n      : this.context.inkDisabledInteractions;\r\n\r\n    if (!(props.disabled || inkDisabled)) {\r\n      props.ink = (\r\n        <InkContainer\r\n          ref={this._setInkRef}\r\n          key=\"ink-container\"\r\n          pulse={pulse}\r\n          style={inkContainerStyle}\r\n          className={inkContainerClassName}\r\n          inkStyle={inkStyle}\r\n          inkClassName={inkClassName}\r\n          disabledInteractions={inkDisabledInteractions}\r\n          transitionOverlap={transitionOverlap}\r\n          transitionEnterTimeout={transitionEnterTimeout}\r\n          transitionLeaveTimeout={transitionLeaveTimeout}\r\n          waitForInkTransition={waitForInkTransition}\r\n        />\r\n      );\r\n    }\r\n\r\n    props.ref = this._setComposedComponent;\r\n\r\n    return <ComposedComponent {...props} />;\r\n  }\r\n};\r\n"]}